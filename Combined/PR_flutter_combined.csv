pr_number,created_at,merged_at,author,number_of_comments,number_of_review_comments,number_of_commits,lines_of_code_changed,number_of_files_changed,number_of_reviewers,number_of_approvals,labels,time_to_first_response,number_of_assignees,review_duration,number_of_changes_requested,number_of_build_runs,number_of_build_failures,number_of_linked_issues,time_since_last_commit,test_coverage,number_of_reviews_requested,number_of_revisions,number_of_milestones,dependency_changes,comment_authors,issue_comments_text,reviews_text,issue_text,review_comments
160822,2024-12-24T16:54:20Z,2024-12-26T18:31:41Z,AbdeMohlbi,1,0,1,1,1,2,2,[],170761.0,0,178644.0,0,0,0,0,-1351.953536,,1,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160822, due to This PR has not met approval requirements for merging. The PR author is not a member of flutter-hackers and needs 1 more review(s) in order to merge this PR.

- Merge guidelines: A PR needs at least one approved review if the author is already part of flutter-hackers or two member reviews if the author is not a flutter-hacker before re-applying the autosubmit label. __Reviewers__: If you left a comment approving, please use the ""approve"" review action instead.",,"## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160549,2024-12-18T22:59:32Z,2024-12-23T22:13:16Z,matanlurey,2,4,10,399,5,2,1,[],160764.0,0,429227.0,0,0,0,0,244553.413794,,0,10,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160549, due to - The status or check suite [Mac mac_ios_engine](https://cr-buildbucket.appspot.com/build/8728006551132927105) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160549, due to - The status or check suite [Merge Queue Guard](https://flutter-dashboard.appspot.com) has failed. Please fix the issues identified (or deflake) before re-applying this label.
One nit",One nit,"Closes https://github.com/flutter/flutter/issues/160527.

We don't use the Dart script anyway, and the shell script could be simplified to the single use in g3 (cl/688973229).","Is FLUTTER_ROOT set already? Simplified further, and fixed, and tested :) This needs to be origin/master if the google3 script is running from a fresh checkout. Done."
160695,2024-12-20T23:29:33Z,2024-12-24T00:58:04Z,matanlurey,1,2,8,1834,169,3,1,"['platform-ios', 'tool', 'engine', 'a: desktop']",3512.0,0,323301.0,0,0,0,0,175878.451567,,0,8,0,False,['matanlurey'],"Some hardcoded-test assumptions still need to be updated. I'll fix those up Monday.Looks good from my end but I would let @andrewkolos take a look when he is available. Implementation LGTM. Feel free to re-request if tests end up needing significant re-writes Yes, this is what I was thinking.","Looks good from my end but I would let @andrewkolos take a look when he is available. Implementation LGTM. Feel free to re-request if tests end up needing significant re-writes Yes, this is what I was thinking.","Closes https://github.com/flutter/flutter/issues/160673.

Does the following:

- Renames `FlutterProjectType` to `FlutterTemplateType`; did some enhanced enum cleanups while at it
- Creates a hierarchy of `RemovedFlutterTemplateType` from `ParsedFlutterTemplateType`
- Removes the `skeleton` directory
- Merges `app_shared` back into `app` (no longer required now that `skeleton` is removed)

Final cleanups are tracked in https://github.com/flutter/flutter/issues/160692.

(Added @zanderso just to spot check this is what he meant by https://github.com/flutter/flutter/issues/160673#issuecomment-2557742347)","nit: external -> ""community"" or ""third-party"". @ericwindmill sgty?"
160788,2024-12-23T16:13:50Z,2024-12-23T21:11:21Z,eyebrowsoffire,4,0,2,1,1,1,1,['engine'],3020.0,0,17854.0,0,0,0,0,248270.210743,,0,2,0,False,"['jtmcdole', 'eyebrowsoffire']","> We should make this a blocking CI step ASAP.

Blocking presubumits or blocking Mq? > > We should make this a blocking CI step ASAP.
> 
> Blocking presubumits or blocking Mq?

Blocking presubmits, not MQ. MQ has the `linux_web_engine` builder which just builds the web engine artifacts. This runs the tests, but we should make sure that these actually run in presubmit and postsubmit. It's an important signal, especially for dart SDK rolls and skia rolls. I believe we're deciding that all presubmits must pass; so we'll have to update Cocoon to record multiple stages _before_ completing the MQG. Good thing for the new year. Sorry, maybe I'm being confusing. I think just removing `bringup: true` should be fine for this change. It just needs to be another presubmit check that should pass before PRs are merged, it doesn't need to be part of the MQ guard (unless there's some other thing I'm misunderstanding).",,We should make this a blocking CI step ASAP.,
160351,2024-12-16T15:01:53Z,2024-12-16T19:50:50Z,engine-flutter-autoroll,0,0,6,2,1,1,1,[],,0,605888.0,0,0,0,0,269353.58217,,0,6,0,False,[],,,"
https://github.com/flutter/packages/compare/56886ffe11ad...eb7358231e43

2024-12-16 49699333+dependabot[bot]@users.noreply.github.com [dependabot]: Bump org.jetbrains.kotlin:kotlin-gradle-plugin from 1.7.10 to 2.1.0 in /packages/shared_preferences/shared_preferences_android/example/android/app (flutter/packages#8306)
2024-12-14 engine-flutter-autoroll@skia.org Manual roll Flutter from 6966a2eef1e9 to 29a6c648ca4d (16 revisions) (flutter/packages#8295)
2024-12-13 jessiewong401@gmail.com Bump Camera Example Plugin Apps Targetsdk Versions (flutter/packages#8193)
2024-12-13 astivi@users.noreply.github.com [google_adsense] Adds H5 Games Ads support to package. (flutter/packages#7747)
2024-12-13 cepadilla@google.com [camera_android_camerax] Remove nonnull annotation from getDefaultPointSize (flutter/packages#8292)
2024-12-13 tarrinneal@gmail.com [shared_preferences] Adds Shared preferences as option in shared preferences async android (flutter/packages#7994)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158219,2024-11-05T23:58:44Z,2024-11-21T17:13:50Z,elliette,3,24,16,797,5,3,1,"['framework', 'f: material design', 'f: cupertino']",66402.0,0,4113217.0,0,0,0,0,272214.34057,,0,16,0,False,"['kenzieschmoll', 'elliette']","Edge case: what if the widget a user wants to select is under the button? > Edge case: what if the widget a user wants to select is under the button?

Good point, modified the PR to add a button next to the ""exit selection mode"" button that will let the user move the controls from the left to the right of their device (see gif in PR description). FYI I tweaked the colors of the buttons so they would be visible against both dark/light backgrounds.

Material (dark and light)
<img width=""113"" alt=""Screenshot 2024-11-20 at 1 54 43 PM"" src=""https://github.com/user-attachments/assets/28908653-7c77-4c3d-948f-eb885a4534db"">

<img width=""101"" alt=""Screenshot 2024-11-20 at 1 54 25 PM"" src=""https://github.com/user-attachments/assets/7112c35b-ee75-4dfe-8f64-350fe5cf06be"">

Cupertino (dark and light)
<img width=""132"" alt=""Screenshot 2024-11-20 at 2 09 29 PM"" src=""https://github.com/user-attachments/assets/0d45b561-21e6-469c-aa36-8841bd148cea"">
<img width=""121"" alt=""Screenshot 2024-11-20 at 2 07 43 PM"" src=""https://github.com/user-attachments/assets/55ccb0ba-9759-42b8-8e4a-aaf9282d22e3"">

",,"Fixes https://github.com/flutter/devtools/issues/8155

Previously after enabling Widget Selection mode from DevTools and selecting a widget to inspect, a user would then have to click the on-device ""Select widget"" button before being able to select another widget. This was very confusing to users; we got multiple comments on our latest DevTools Survey that widget selection mode only worked the first time and was broken on subsequent selections.

Now, once ""Select widget mode"" is enabled from DevTools, any subsequent click is treated as a selection until the user exits from select widget mode either via DevTools or via the Exit Selection mode button. 

The user can re-position the Exit Selection button to either the left or the right of their device (this way they can select a widget beneath it).

![exit_select_mode_button](https://github.com/user-attachments/assets/e1170753-ade7-4226-baca-8f07667f0587)


Note: Previously this button was behind any widget selection overlays. This PR also updates the order of the `Stack` so that exit selection button is on top. 
","this is a breaking change, so we'll need to follow the flutter breaking change policy for this should this be on a short delay like the default tooltip behavior? formatting formatting Good point, done! Done! Done! Pinged on Flutter discord to get guidance on the process for this consider using `padding: EdgeInsets.zero` instead.  nit: can we put 32 and 40 into named consts? nit: this can be condensed
```
padding: const EdgeInsets.only(
  left: _leftAligned ? _kExitWidgetSelectionButtonPadding : 0.0,
  right: _leftAligned ? 0.0 : _kExitWidgetSelectionButtonPadding,
),
``` nit: this can be condensed
```
Positioned(
  left: _leftAligned ? _kExitWidgetSelectionButtonMargin :  null,
  right: _leftAligned ? null : _kExitWidgetSelectionButtonMargin,
  bottom: _kExitWidgetSelectionButtonMargin,
  child: buttonGroup,
)
``` cancel both of these timers in the dispose method and set them back to null. nit: we could check kIsWeb before adding the MouseRegion widget. e.g.

```dart
Widget child = GestureDetector(
  ...
  child: widget.button,
);
if (kIsWeb) {
  child = MouseRegion(
    ...
    child: child,
  );
}
``` can we add a test case for moving the button left and right using the arrow button? It seems this isn't considered a breaking change: https://discord.com/channels/608014603317936148/608018585025118217/1306392838224875621

But we should probably announce it after it has landed Done, thanks!
 Yes, done! Ooh thank you! Thanks, done! Done! I think my concern with that is we also want the MouseRegion for desktop apps, and I don't think there is a nice check for that like there is for web Yes, added! This broke https://pub.dev/packages/wiredash. Even if it is not considered a breaking change by the flutter policy, it still breaks user code.
Adding a deprecation next time would have been appreciated"
160645,2024-12-20T06:59:18Z,2024-12-22T19:03:27Z,jonahwilliams,4,2,6,8,1,2,1,['engine'],61461.0,0,216252.0,0,0,0,0,342346.817369,,0,6,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","auto label is removed for flutter/flutter/160645, due to - The status or check suite [Linux linux_unopt](https://cr-buildbucket.appspot.com/build/8727989349245286833) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/160645, due to - The status or check suite [Linux mac_android_aot_engine](https://cr-buildbucket.appspot.com/build/8727987355652147985) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160645, due to - The status or check suite [Merge Queue Guard](https://flutter-dashboard.appspot.com) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/5881cd56-3948-42ca-9128-a7b64e7ba93f)",![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/5881cd56-3948-42ca-9128-a7b64e7ba93f),"Fixes https://github.com/flutter/flutter/issues/159278

macOS intel devices uses MTLResourceStorageModeManaged which is still host visible ",Should this be `&&`? Doh
159962,2024-12-09T04:09:17Z,2024-12-20T10:02:06Z,AlexV525,0,29,3,92,2,2,1,"['framework', 'f: gestures']",,0,1239643.0,0,0,0,0,279557.210489,,1,3,0,False,[],"Mostly LGTM, with some last small nits. Mostly LGTM, with some last small nits. Mostly LGTM, with some last small nits. LGTM modulo nits, thank you for your contribution!","Mostly LGTM, with some last small nits. Mostly LGTM, with some last small nits. Mostly LGTM, with some last small nits. LGTM modulo nits, thank you for your contribution!","Resolves #159961

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","This ensures that the corrected (dragged delta) only gets cleared after the end event has been dispatched. nit: prefer the shorter result on the left if possible. good catch! nit: prefer the shorter result on the left if possible. Sorry you mean `? null : Matrix4` is preferred? Is it necessary to calculate the drag update delta here? Can we use `event.position`, and `event.localPosition` directly instead? Yeah I think the original way this was written is preferred. Sure. Updated Not sure if the positions are valid for the details, but I'll double-check if your suggestion works. This looks like what `LongPressEndDetails` and `DragEndDetails` do for the most part. Further question about the transform: What is the initial idea about the transform calculation to the event? Are you referring to the logic in `_acceptDrag`? Yep, it used to be the only one that corrects the positions. I think that one can remain. It's mainly to handle `DragStartBehavior` iirc. Done update I think in all cases when `_acceptDrag` is called `_dragState == _DragState.accepted` will always be `true`. We should probably add an assert at the top of this method to verify that `assert(_dragState == _DragState.accepted)`. I'm leaning towards just leaving this logic inline instead of in a method since it is only called in one place. I think this case was originally only meant for cases when `DragStartBehavior.down` is set, see: https://github.com/flutter/flutter/blob/dd437c7a604ba2180ff6fba40f52613593af4f04/packages/flutter/lib/src/gestures/monodrag.dart#L775-L795 . When the behavior is set to `DragStartBehavior.down` we send a `start` event with the initial position from the down event and a `update` event with the delta since the down event vs when the behavior is set to `DragStartBehavior.start` we only send the `start` event with the initial position offset by the delta since the down event and no `update` event. nit: maybe this should say `The global position at which the pointer lifted from the screen.` similar to `LongPressEndDetails`.
 nit: maybe this should say `The local position in the coordinate system of the event receiver at which the pointer lifted from the screen.` Oh these are just copy-paste. Should I update them or keep them as previous? Thanks for the catch. It used to have multiple callers and now remains one only. Added the assertion. nit: I think we should add the comment back regarding only adding the delta for down behavior. This should be `= _getDeltaForDetails(event.localDelta);`. I'm leaning towards the updated version being more descriptive. It doesn't seem so. This is written as it originally was. There is another calculation right below which will transform the delta. Updating this will lead to unexpected behavior such as the moving delta being shorter than expected. https://ci.chromium.org/ui/p/flutter/builders/try/Mac%20framework_tests_impeller/16753/overview Thanks for catching that, let's leave it as is for now then. You can remove the line mentioning `LongPressEndDetails`, sorry if that was unclear."
160444,2024-12-17T15:58:32Z,2024-12-22T03:18:16Z,DanTup,0,5,5,38,2,3,1,['tool'],,0,416394.0,0,0,0,0,369051.725427,,0,5,0,False,[],LGTM,LGTM,"There have been some reports of the Flutter daemon not starting up properly (for ex. https://github.com/flutter/flutter/issues/143625), but it turns out that when starting successfully, it just prints ""Starting device daemon..."" and then nothing more. This is confusing and can lead users to think other issues are because the daemon hasn't started properly.

There's not a great hook to print that this ""finished"" starting up (because it does async polling in the background), so I just updated the message of the text and moved it to after the creation of the daemon.

Fixes https://github.com/flutter/flutter/issues/143625

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [N/A] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Uber nit: I'd prefer for this to end with a period.
```suggestion
    globals.printStatus('Device daemon started.');
``` I can't believe I can finally say this, but we're going to need to run the formatter on this. ... I think we will, anyway? This line seems super long, but none of the checks are failing yet. Ah, I formatted this but noticed the rest of the file was not formatted. I last rebased this _before_ the formatter was enabled.

However, I can't currently sync with master because of https://github.com/flutter/flutter/issues/160704 (I can't run Flutter at all locally), so I'll rebase and fix this up once that is resolved. Looks like I didn't need to do this myself, as this passed here (because formatting wasn't enforced), and then the merge queue applied it to latest code and it passed there anyway :-)"
160700,2024-12-21T00:01:28Z,2024-12-22T04:07:16Z,eyebrowsoffire,2,0,4,20,2,1,1,['engine'],3.0,0,101150.0,0,0,0,0,396120.953549,,0,4,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/160700, due to - The status or check suite [Windows build_tests_6_9](https://cr-buildbucket.appspot.com/build/8727967301651525025) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"We no longer pass `web_tests/artifacts` via CAS, so we need to remove it as a dependency.",
160683,2024-12-20T21:29:15Z,2024-12-22T03:35:58Z,jonahwilliams,1,1,5,155,12,2,1,['engine'],9264.0,0,108405.0,0,0,0,0,397999.364786,,0,5,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160683, due to - The status or check suite [Linux linux_unopt](https://cr-buildbucket.appspot.com/build/8727989418569769713) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"Fixes https://github.com/flutter/flutter/issues/160593

Primitive Restart cannot be used on some (All?) Adreno's because it causes a dramatic performance regression. Opt out and use the GLES strategy. Refactors the batch submit command buffer capability into workarounds_vk","While we're at it, the original issue shows a lot of overhead from us re-computing this value, but we don't need to."
160698,2024-12-20T23:46:30Z,2024-12-22T03:16:36Z,yjbanov,1,0,1,135,2,1,1,['engine'],2422.0,0,99008.0,0,0,0,0,399161.720682,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160698, due to - The status or check suite [Mac mac_clang_tidy](https://cr-buildbucket.appspot.com/build/8727986907476039553) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),Fixes https://github.com/flutter/flutter/issues/160405,
160705,2024-12-21T01:02:31Z,2024-12-22T01:26:44Z,jtmcdole,1,0,2,10,1,1,1,['tool'],84966.0,0,87854.0,0,0,0,0,405755.901702,,1,2,0,False,['jtmcdole'],All tests pass; pushing this for the Queue and to run new builds with Cocoon's rescheduler updated. ,,Fixes the bash integration test missing a file.,
160674,2024-12-20T18:52:19Z,2024-12-21T06:51:08Z,goderbauer,0,0,1,21,4,1,1,"['framework', 'f: material design']",,0,43133.0,0,0,0,0,472689.486644,,1,1,0,False,[],,,Only observation: It forces a type on `_` parameters.,
160693,2024-12-20T23:00:31Z,2024-12-21T06:19:35Z,jonahwilliams,1,0,1,21,2,1,1,['engine'],3.0,0,27795.0,0,0,0,0,473135.77772,,0,1,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.",,"Refactoring to make sure that we're always tracking the correct layout state.
",
160677,2024-12-20T19:13:38Z,2024-12-21T06:32:18Z,goderbauer,0,3,2,4,1,3,1,['engine'],,0,40722.0,0,0,0,0,473823.158924,,0,2,0,False,[],![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),,I would also link to <https://github.com/flutter/flutter/blob/master/engine/src/flutter/docs/rbe/rbe.md>. googlers could also replace the url with git@github link? Added the link to RBE.
160682,2024-12-20T21:11:00Z,2024-12-21T06:30:09Z,christopherfujino,0,0,1,6,1,1,1,['engine'],,0,33551.0,0,0,0,0,473952.787298,,0,1,0,False,[],LGTM!,LGTM!,"This is no longer working after the monorepo merge: https://github.com/flutter/flutter/issues/160670.

That issue tracks instead teaching the `Linux ci_yaml flutter roller` to roll both sets of configurations.",
160643,2024-12-20T06:27:22Z,2024-12-21T06:19:35Z,bleroux,0,0,1,111,2,1,1,"['framework', 'f: material design']",,0,85936.0,0,0,0,0,474585.963273,,0,1,0,False,[],"Who would have thought that the single request from https://github.com/flutter/flutter/issues/155660 would result in 3 PRs in total?

Thanks for all the work you've put into this!","Who would have thought that the single request from https://github.com/flutter/flutter/issues/155660 would result in 3 PRs in total?

Thanks for all the work you've put into this!","## Description

This PR reverts `DropdownMenu` changes from  https://github.com/flutter/flutter/pull/155757.
Automatically rematching the `initialSelection` breaks some use cases.
It is more flexible to let users manipulate the text field content using the TextEditingController.

## Related Issue

Fixes [Dropdown Menu Creates Infinite Build Loop](https://github.com/flutter/flutter/issues/160196)
Fixes [Can no longer initialize non selectable value in DropdownMenu as of flutter version 3.27.1](https://github.com/flutter/flutter/issues/160555) 

## Tests

Removes 2 regression tests from https://github.com/flutter/flutter/pull/155757.
Keeps 2 tests from the original PR (missing test for the initialSelection behavior).
Adds 1 tests to avoid regressing this revert.",
160680,2024-12-20T20:47:42Z,2024-12-21T05:24:36Z,aam,2,0,2,6,2,1,1,['engine'],14755.0,0,31015.0,0,0,0,0,477888.244023,,0,2,0,False,['matanlurey'],Removed from queue due to tree outage (https://github.com/flutter/flutter/issues/160702). Alright good to go. You might want to merge the fix forward first.lgtm,lgtm,"Changes since last roll:
```
fc5db8ea927 Version 3.7.0-267.0.dev
601e85438f3 [tests] Cascade tests for static member and constructor enum shorthands.
4093bdaf5a8 [vm] Change try-catch IL representation.
b3ab7e274c5 Elements. Migrate lib/src/generated/ffi_verifier.dart
6e5fb8baa16 [dart2wasm] Add support for dynamic module options.
7bea7d185d4 [dart2wasm] Add indirection for struct initialization.
```
",
160694,2024-12-20T23:03:36Z,2024-12-21T04:02:08Z,derekxu16,3,0,1,3,1,1,1,['tool'],3.0,0,17912.0,0,0,0,0,482838.095771,,1,1,0,False,"['jtmcdole', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. For later: is there something we can add to test ahead of putting this in the queue? Was this just a lack of presubmit coverage that we're working on fixing now? Matan's change has landed.lgtm",lgtm,This fixes the test timeouts (https://ci.chromium.org/ui/p/flutter/builders/prod/Mac%20tool_integration_tests_2_5/1951/overview) introduced by the most recent Dart SDK roll (https://github.com/flutter/flutter/commit/895f0e291af00c3d45df0d931900bbad3061b681).,
160706,2024-12-21T01:11:35Z,2024-12-21T02:31:15Z,matanlurey,1,0,2,286,1,1,1,[],263.0,0,4781.0,0,0,0,0,488290.408502,,0,2,0,False,['jtmcdole'],So we just searched for `- .ci/yaml` and added the engine and deps? That should trigger all the presubmits.![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"This was done with `sed` and some manual massaging.

Closes https://github.com/flutter/flutter/issues/160703.

/cc @aam, after this lands we can resume Dart SDK rolls.",
160690,2024-12-20T22:34:13Z,2024-12-21T00:31:36Z,christopherfujino,1,0,1,2,1,2,2,"['tool', 'warning: land on red to fix tree breakage']",431.0,0,7709.0,0,0,0,0,494805.633201,,0,1,0,False,['jtmcdole'],I will look at the integration tests and make sure they copy the right data. Sorry about that!,,"Work around: https://github.com/flutter/flutter/issues/160689.

I locally verified that we have not regressed what this was testing (that just invoking `//flutter/bin/dart` will not build the flutter tool).",
160614,2024-12-19T19:53:44Z,2024-12-20T21:39:28Z,cbracken,0,0,1,13,2,1,1,"['a: tests', 'framework', 'f: integration_test']",,0,92746.0,0,0,0,0,505798.316034,,0,1,0,False,[],,,"This is a temporary directory created by Swift Package Manager and
should not be checked in.

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160668,2024-12-20T17:22:42Z,2024-12-20T21:39:28Z,jtmcdole,2,0,4,194,7,1,1,[],4.0,0,15406.0,0,0,0,0,505800.722356,,1,4,0,False,"['jtmcdole', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Pre submits ftw - going to figure out why the windows bots are failingI still need to regain a thorough understanding of the tool startup scripts, but I'm willing to LGTM since 1) this is P0 and 2) this PR just moves the existing operation of writing engine.version to be earlier","I still need to regain a thorough understanding of the tool startup scripts, but I'm willing to LGTM since 1) this is P0 and 2) this PR just moves the existing operation of writing engine.version to be earlier","`update_dart_sdk.(ps1|sh)` is called too late and needs to be called from `shared.(bat|sh)`.

Fixes #160640 ",
160634,2024-12-20T01:11:53Z,2024-12-20T21:39:28Z,jonahwilliams,2,0,3,85,10,1,1,"['a: text input', 'engine']",2.0,0,73655.0,0,0,0,0,505801.885696,,0,3,0,False,"['jonahwilliams', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. I believe this will also fix https://github.com/flutter/flutter/issues/159851",,"Fixes https://github.com/flutter/flutter/issues/160480

Both The Impeller and Skia variant of the OES texture rendering use the same shared code path, so the Impeller code must match the weird 1x1 texture behavior of Skia. In addition, we have to add back the TiledTextureContents support, since we need to render a texture with a transform. I had previously tested this but neglected to force the SurfaceTexture path, so I only tested the ImageReader path which does not use a transform.
",
160623,2024-12-19T22:22:21Z,2024-12-20T20:17:43Z,jonahwilliams,1,0,2,107,27,1,1,"['a: text input', 'engine']",70801.0,0,78922.0,0,0,0,0,510707.436955,,0,2,0,False,['jonahwilliams'],Get back in there buddylgtm!,lgtm!,The TransientsAllocator argument to BlitPass::EncodeCommands is completely unused. Delete it (and add a missing IFDEF around the GLES debug labels.).,
160436,2024-12-17T13:20:46Z,2024-12-20T20:03:07Z,mkustermann,1,0,4,28,4,2,2,['tool'],81990.0,0,283342.0,0,0,0,0,511583.210792,,0,4,0,False,['mkustermann'],"Thanks, @dcharkes !",,"In the future a hook may be invoked multiple times with different `supportedAssetTypes` (soon to be renamed to `buildAssetTypes`).

The hook should only emit those asset types that are in `supportedAssetTypes` - anything else is an error. Right now flutter happens to invoke hooks only with `Code` asset types, but more asset types are coming, for which this PR is a preparation for.",
160661,2024-12-20T15:41:00Z,2024-12-20T19:51:15Z,reidbaker,0,0,2,4,1,1,1,['d: docs/'],,0,15017.0,0,0,0,0,512294.985979,,1,2,0,False,[],Nice!,Nice!,"No issue
Related to https://github.com/flutter/packages/pull/7985#issuecomment-2557237025

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
",
160624,2024-12-19T22:25:49Z,2024-12-20T19:43:19Z,aam,2,0,3,1879,7,1,2,['engine'],4.0,0,76651.0,0,0,0,0,512772.765678,,0,3,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/160624, due to - The status or check suite [Mac mac_host_engine](https://cr-buildbucket.appspot.com/build/8728015442833115137) has failed. Please fix the issues identified (or deflake) before re-applying this label.
lgtm",lgtm,"Changes since last roll:

```
85569ab5b39 Version 3.7.0-266.0.dev
8c1fa6d05b8 [tfa,aot,dart2wasm] Allow tree-shaking of extension type members independently of their tear-offs
5078a20a6d5 [cfe] Use OffsetMap for BodyBuilder.finishFields
a6b0fced839 [tfa,aot,dart2wasm] Retain libraries which only have extensions and extension types
4bcb4b10443 (tag: 3.7.0-265.0.dev) Version 3.7.0-265.0.dev
982b9fad444 [vm] Turn on entry point checking in JIT mode.
04530d578ff Roll dart_style 3.0.1 into the SDK.
c2abea31557 [deps] Roll dart-lang/native
3b056e1d500 [dart2wasm] Fix deferred loading tests on optimized configs.
ca668b701c3 (tag: 3.7.0-264.0.dev) Version 3.7.0-264.0.dev
54af9b3a39a (tag: 3.7.0-263.0.dev) Version 3.7.0-263.0.dev
72acd9d0ff3 [dart:svg] Add value->newLength parameter name change to templates
57c4da6911d Make Driver.instrumentationService private and final
f934e392f2d analyzer: Remove unnecessary Driver.httpServer
c5c3544b71f Fix Fuchsia build error.
2f857baba7e [dart2js] Make  an  check.
b3e7e027380 (tag: 3.7.0-262.0.dev) Version 3.7.0-262.0.dev
08252fc9e91 [dartdev] Use VmInteropHandler for invoking sub commands
96c4e4c81f8 [dart2wasm] Use field type instead of global type for static field type.
e3e7ca846a8 [gardening] Fix service/uri_mappings_lookup_test.
580107f8474 Migrate generic_type_alias.test
0a5a8f17af8 [vm] Remove BaseIsolate as it serves no purposes anymore.
9820487a3c4 [analyzer] Support enclosingFragments that are local variables
dbf60082974 DAS: Support monospaced text (eg code snippets) in generated doc comments
59499d362a2 [dart2wasm] Add support for declaring functions as module elements.
a0e1bce4b27 (tag: 3.7.0-261.0.dev) Version 3.7.0-261.0.dev
96fbc264ca1 [dart2wasm] Add indirection for dispatch table calls.
d261ded4c72 Bump tools to febccb92d228e678196aa90c109c708ed7ad6ea8
54d62b478d8 [analysis_server] Move Type Hierarchy off ElementLocation to its own internal uri/name encoding
b67f61a66c3 [tests] Additional tests for ?? with enum shorthands.
e1be04c4704 Implement element and fragment for generic function types
a9c3991a7a6 [analysis_server] Migrate LSP Find References to new element model
11904ed3871 [analyzer] Add LinterContext.currentUnit and use it for content in eol_at_end_of_file
38bce3f507d Elements. Migrate test/generated/simple_resolver_test.dart
34cf29701be Elements. Migrate test/src/dart/analysis/search_test.dart
e70a91d8e38 [analyzer/linter] Simplify implementation of rule State
ee5c4b00840 Roll BoringSSL from 57f525e425a9 to ee0c13ad1808 (22 revisions)
42f0e9aa15b analyzer: Report bad type arg on implicit call
8cc449ac8c1 [dart2wasm] Add utils for pragma reading and updating.
04d70b9fb40 analyzer: Make ResolutionVisitor._libraryElement final
d0f34d918f2 [dynamic_modules] Fix multiple_classes/dynamic_interfaces.yaml for vm.
3fba5fb4633 DAS: Seal TypeDecl for simpler switches
946f3287b46 [dart2wasm] Clean up some dead or unnecessary code.
231b463e8fc Roll Fuchsia SDK from 26.20241210.5.1 to 26.20241211.4.1
4e4fec1830b DAS: Correct some broken comment references
69fef4b123c Elements. Use impl types in a few places to avoid casts.
```
",
160437,2024-12-17T13:32:21Z,2024-12-20T19:31:21Z,mkustermann,0,10,4,55,3,3,2,['tool'],,0,280740.0,0,0,0,0,513492.559113,,0,4,0,False,[],"> => This makes tests simpler as they don't have to know about the exact padding of progres bar etc. Those may be irrelevant for the purpose of the integration test and only complicate it.

The goal LGTM 👍 

The implementation could be simpler, left comments. @dcharkes Please let me know if my comments make sense.","> => This makes tests simpler as they don't have to know about the exact padding of progres bar etc. Those may be irrelevant for the purpose of the integration test and only complicate it.

The goal LGTM 👍 

The implementation could be simpler, left comments. @dcharkes Please let me know if my comments make sense.","The integration test framework that waits for transitions and (optionally) takes actions on transitions allows to match patterns.

If one uses a RegExp pattern than the framework only checks whether a line contains the given RegExp pattern.

If one uses a String pattern it matches it exactly.

=> We add a `Barrier.contains()` and `Multiple.contains()` that allow matching a line with if it contains the String (just like in RegExp)

=> This makes tests simpler as they don't have to know about the exact padding of progres bar etc. Those may be irrelevant for the purpose of the integration test and only complicate it.","I'd expect this to be part of `pattern`, and `pattern` is a parameter in methods here and a field in the `Barrier` subclass. Why is the `contains` field here? A `Pattern` can already express ""contains"" by using a regex. Why not take the existing pattern and nest it in a regex, e.g. `(.*)($origRegex)(.*)`. (Assuming that substring matching gets compiled efficiently by the regex compiler.) The current code uses `Pattern pattern`, which means the pattern can be `String` or `RegExp`.

The `String` cannot encode an orthogonal concept (whether it should check for equality or contains)
 A simple `String.contains(String)` shouldn't turn into a complex `RegExp` match. Also using existing `RegExp` (which uses ""contains"") for matching a string would require me to escape all regexp-using characters in the string - which is complicated &  error prone (it would make this PR much more complicated) and it would still leave this inconsistency in behavior.

The root cause here is that the *existing code is problematic*: When you give it a `RegExp` it uses ""contains"" logic when you give it a `String` it uses ""equality"" logic.

Now by adding a `.contains()` method it actually will perform ""contains"" operation whether it's given a `RegExp` or a `String` - which seems like a good thing. So the method I add is much cleaner.

(Yes, it still leaves the inconsistency in the old API as it was before - because I don't want to break the API - just extend it with ""String contains"" functionality. One could clean that existing part up by making it consistently match for equality - also requiring the `RegExp` to match the entire string). All parameters take `Pattern` not `String` so it's not orthogonal. But I do agree that upgrading a string to a pattern and doing the escaping is a bit iffy. However, I do think the field should live inside `class Barrier extends Transition` where the field `final Pattern pattern;` lives to have the symmetry of `pattern` and `contains`. > The root cause here is that the _existing code is problematic_: When you give it a `RegExp` it uses ""contains"" logic when you give it a `String` it uses ""equality"" logic.

This is smelly indeed. 💩 

> One could clean that existing part up by making it consistently match for equality

Maybe leave a TODO or consider doing a search-replace on all current uses to make the regex ones use the `contains` constructor. ""contains"" vs ""equality"" is an orthogonal concept to whether to `Pattern` (aka `RegExp` or `String`):

One can
* *contains*: via `string.contains(RegExp(...))` and `string.contains(string)`
* *equality*: via  `string.firstMatch(RegExp(...))?.group(0) == string` and `string == other`

It's just that the existing code has these inconsistencies in and doesn't do it like this. Don't regexes include `^` and `$` to signal whether they are contains or equality? It would feel rather weird to pass in a regex with `^` and `$` and pass `contains: true` or a regex without `^` and `$` and pass `contains: false`. I guess I was expecting what you call `* equality` to be the implementation, and it isn't. And then we wouldn't need a contains because I could simply express that in the regex itself.

Anyway, my real comment is mostly about moving `final bool contains;` next to `final Pattern pattern;`, these two belong together, in the same class. > Don't regexes include ^ and $ to signal whether they are contains or equality? 

The meaning of those characters depend on how they are used. They can mean the start and end of a line or start and end of a string.

> Anyway, my real comment is mostly about moving final bool contains; next to final Pattern pattern;, these two belong together, in the same class.

:+1: If you prefer, I can duplicate the field in the subclasses instead and then pass it up in all the method calls I don't want to change all existing usages (otherwise I'd fixed the inconsistency). I added a note (not a TODO because a TODO requires a name and I'm not signing up for it)."
159996,2024-12-09T21:31:33Z,2024-12-20T05:17:03Z,jmagman,0,0,1,3,1,2,1,[],,1,931573.0,0,0,0,0,525108.0822,,0,1,0,False,[],LGTM Upload ,LGTM Upload ,"Ignore patch versions for this GitHub dependency (https://github.com/flutter/flutter/pull/159440) from dependabot.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160245,2024-12-13T15:01:04Z,2024-12-13T15:46:18Z,engine-flutter-autoroll,0,0,6,2,1,1,1,[],,0,605434.0,0,0,0,0,529077.032,,0,6,0,False,[],,,"
https://github.com/flutter/packages/compare/cbdb48a0bcee...56886ffe11ad

2024-12-13 rjs580@usask.ca [webview_flutter_android] Allow configuration of WebView file access through `setAllowFileAccess` (flutter/packages#8228)
2024-12-13 32538273+ValentinVignal@users.noreply.github.com [go_router_builder] Activate leak testing (flutter/packages#8059)
2024-12-12 ultraon83@gmail.com [go_router] Fix a typo in a comment in the shell_route.dart (flutter/packages#8235)
2024-12-12 stuartmorgan@google.com [ci] Update for 3.27 stable release (flutter/packages#8284)
2024-12-12 engine-flutter-autoroll@skia.org Manual roll Flutter from f559e16010a0 to 6966a2eef1e9 (5 revisions) (flutter/packages#8283)
2024-12-12 engine-flutter-autoroll@skia.org Roll Flutter (stable) from dec2ee5c1f98 to 8495dee1fd4a (1318 revisions) (flutter/packages#8280)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160633,2024-12-20T01:06:55Z,2024-12-20T07:54:23Z,flar,0,0,1,936,16,1,1,['engine'],,0,24450.0,0,0,0,0,555310.655299,,0,1,0,False,[],LGTM!,LGTM!,"DlVertices was already half migrated onto the DL geometry classes, this completes the conversion.",
160635,2024-12-20T01:41:33Z,2024-12-20T04:32:50Z,robert-ancell,1,0,1,1155,17,1,1,"['a: text input', 'engine', 'f: scrolling', 'a: desktop']",263.0,0,10277.0,0,0,0,0,567406.423,,0,1,0,False,['robert-ancell'],"@cbracken - was approved in https://github.com/flutter/engine/pull/57215, should be exactly the same.![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/4269309d-a357-40ef-944d-54b263fc2360)",![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/4269309d-a357-40ef-944d-54b263fc2360),"Test consistency achieved.
",
160627,2024-12-19T23:09:58Z,2024-12-20T00:39:09Z,jonahwilliams,0,0,1,1,1,3,3,['engine'],,0,5352.0,0,0,0,0,581427.309347,,0,1,0,False,[],,,"These tests are slightly flakey due to the macos cache issue. These aren't actually tests, instead the prepopulate an RBE cache - so the failure shouldn't close the tree, because cold caches isn't a failure state (its just unfortunate).
",
160550,2024-12-18T23:14:57Z,2024-12-20T00:00:45Z,eyebrowsoffire,0,7,14,645,9,2,1,['engine'],,0,89149.0,0,0,0,0,583732.125363,,0,14,0,False,[],,,"This splits the web engine into a build phase and a test phase. This requires a few changes:
* Modify the `generate_builder_json.dart` command to produce two separate json builder files, `linux_web_engine_build.json` and `linux_web_engine_test.json`. The former is left as the existing builder with `release_build: true` (which will run in the merge queue) and the latter is added as a new builder that runs in the second CI phase.
* Change the `copy_artifacts_step.dart` to pull built artifacts from the GCS bucket when on LUCI, instead of relying on the CAS bucket. This is necessary to do the tests separately from the build.
* Move the `felt test --copy-artifacts` command from the build steps to the test steps, since the test steps themselves need to pull from GCS instead of relying on the artifacts being populated by CAS.","licenses and analysis eat up a couple of minutes. Can we move them into the test builder too? I'm confused about which one we're supposed to have. This is what we currently have in flutter/engine: https://github.com/flutter/engine/blob/5b8e9f5fa58706748c9109cc4526fdb1ed281e0a/lib/web_ui/dev/generate_builder_json.dart#L72 Does this include CAS artifacts? We're supposed to have `--no-rbe`, we can't use rbe with emscripten. Jason made this change recently: https://github.com/flutter/engine/pull/57204

But I realized now he didn't change the generator, and it was overwritten when you regenerated the builder json files in this PR: https://github.com/flutter/flutter/pull/160573

So I'm modifying the generator here, we should definitely pass `--no-rbe` No, this step has never consumed this from CAS artifacts. Previously, the `--copy-artifacts` step was used to *populate* the `web_tests/artifacts` directory in CAS. Now, the artifacts are just uploaded directly to GCS by the build builder and downloaded from GCS by the test builder. CAS is no longer used at all to pass these artifacts around, although it is still used in the test step to pass the compiled unit tests to the test runners (but this is unrelated to the artifacts in this step) And in presubmit this goes through the presubmit GCS realm or something? Yes exactly"
160548,2024-12-18T22:37:22Z,2024-12-20T00:00:45Z,matanlurey,0,0,1,1,1,1,1,['engine'],,0,91404.0,0,0,0,0,583732.522341,,0,1,0,False,[],"Lets make sure https://github.com/flutter/flutter/pull/160541 lands first so we can unbork post submits.

![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)","Lets make sure https://github.com/flutter/flutter/pull/160541 lands first so we can unbork post submits.

![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",... which is [now merged into the monorepo](https://github.com/flutter/flutter/tree/master/engine/src). Yay!,
160609,2024-12-19T18:08:48Z,2024-12-19T22:44:54Z,jonahwilliams,0,0,4,38,1,2,2,[],,0,16567.0,0,0,0,0,588284.605676,,1,4,0,False,[],![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"* delete null safety stuff since everything is migrated
* Filter out engine subdirectory on listing of framework fies.
",
160545,2024-12-18T22:20:56Z,2024-12-19T21:04:57Z,goderbauer,1,0,20,872513,4411,2,2,"['a: text input', 'framework', 'a: animation', 'f: material design', 'a: accessibility', 'f: scrolling', 'f: cupertino', 'd: api docs', 'd: examples', 'f: routes', 'f: gestures', 'f: focus']",67794.0,0,81842.0,0,0,0,0,594282.183477,,1,20,0,False,['goderbauer'],"About ""google testing"": Looks like frob is broken in some way and we decided to sort this out with the next roll into google3.Let there be formatting in flutter/flutter, and let it begin with me!
LGTM","Let there be formatting in flutter/flutter, and let it begin with me!
LGTM","This auto-formats all *.dart files in the repository outside of the `engine` subdirectory and enforces that these files stay formatted with a presubmit check.

**Reviewers:** Please carefully review all the commits except for the one titled ""formatted"". The ""formatted"" commit was auto-generated by running `dev/tools/format.sh -a -f`. The other commits were hand-crafted to prepare the repo for the formatting change. I recommend reviewing the commits one-by-one via the ""Commits"" tab and avoiding Github's ""Files changed"" tab as it will likely slow down your browser because of the size of this PR.",
160576,2024-12-19T05:36:53Z,2024-12-19T17:55:33Z,goderbauer,1,0,2,136453,721,1,1,"['a: text input', 'engine', 'a: accessibility', 'f: scrolling', 'f: routes', 'a: desktop', 'f: focus']",41553.0,0,44320.0,0,0,0,0,605647.643609,,0,2,0,False,['goderbauer'],"About ""google testing"": Looks like frob is broken in some way and we decided to sort this out with the next roll into google3.![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),This auto-formats all *.dart files in the `engine` subdirectory and enforces that these files stay formatted with a presubmit check.,
160186,2024-12-12T18:17:20Z,2024-12-12T20:34:16Z,mdebbar,0,0,2,10,1,1,1,[],,0,603087.0,0,0,0,0,606054.759902,,0,2,0,False,[],"Awesome, thank you for enabling these!","Awesome, thank you for enabling these!",Skwasm has support for platform views already. Let's enable those benchmarks.,
160170,2024-12-12T15:01:28Z,2024-12-12T16:54:00Z,engine-flutter-autoroll,0,0,4,2,1,1,1,[],,0,608032.0,0,0,0,0,612862.291055,,0,4,0,False,[],,,"
https://github.com/flutter/packages/compare/16616ad588d7...cbdb48a0bcee

2024-12-12 engine-flutter-autoroll@skia.org Manual roll Flutter from 918b2b9ddb43 to f559e16010a0 (4 revisions) (flutter/packages#8277)
2024-12-12 tarrinneal@gmail.com disable maps test and manual roll (flutter/packages#8275)
2024-12-11 sinyuper@gmail.com [quick_actions] add localizedSubtitle for iOS  (flutter/packages#8038)
2024-12-11 napoleon.na1120@gmail.com [video_player_avfoundation] Support the audio-only HLS (.m3u8) on iOS (flutter/packages#7890)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160557,2024-12-19T00:37:39Z,2024-12-19T15:47:19Z,matanlurey,1,0,1,80,1,3,3,['engine'],3.0,0,54583.0,0,0,0,0,613340.698568,,0,1,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.",,Closes https://github.com/flutter/flutter/issues/160529.,
160573,2024-12-19T03:36:00Z,2024-12-19T07:49:25Z,yjbanov,0,0,2,154,2,1,2,['engine'],,0,15206.0,0,0,0,0,642017.685517,,0,2,0,False,[],![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"It takes 30 minutes while all other bots are done in 10-20 minutes. The old Windows build used to test in IE11 and old Edge. Since we stopped testing on those we switched to Chromium, but that doesn't provide any extra signal in addition to what we get from Linux Chromium already.",
160574,2024-12-19T03:44:35Z,2024-12-19T06:18:09Z,jtmcdole,1,0,2,22,2,3,3,[],3.0,0,9215.0,0,0,0,0,647494.432312,,0,2,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.LGTM",LGTM,"Several use cases for `origin` as default:

* Some github actions checkout the tree
* Some users download from flutter.dev and then use `master`

Fixes #160558

",
160541,2024-12-18T21:58:35Z,2024-12-19T03:37:38Z,jtmcdole,1,5,2,34,4,4,3,[],3.0,0,20344.0,0,0,0,0,657126.032583,,0,2,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.LGTM ![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",LGTM ![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"- only set it when the environment FLUTTER_REALM is present
","Would this leave user's checkouts dirty? did you mean to leave the `-x` here? I think this would break things. Only if the user has FLUTTER_REALM set. I did not. oh wait, nvm, i guess we'd only write this on CI?"
160117,2024-12-11T21:44:33Z,2024-12-11T22:39:11Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607183.0,0,0,0,0,675929.64554,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3cdd84160baa...ba7ad8719733

2024-12-11 jonahwilliams@google.com [Impeller] avoid expensive texture labeling w/ no validation layers. (flutter/engine#57130)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160481,2024-12-17T23:24:47Z,2024-12-18T21:07:29Z,jtmcdole,1,0,7,251,11,1,1,['engine'],4643.0,0,78163.0,0,0,0,0,680536.404955,,0,7,0,False,['jtmcdole'],"Last push - updated with the un-submitted ""remove engine.version"" from Flaux: flutter/flaux/pull/62LGTM",LGTM,"Hello, Monorepo Part Deux - after adding commit to datastore.",
160110,2024-12-11T19:31:32Z,2024-12-11T20:31:45Z,engine-flutter-autoroll,0,0,5,4,2,1,1,['engine'],,0,607964.0,0,0,0,0,683131.088071,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/7941d7801b08...3cdd84160baa

2024-12-11 jonahwilliams@google.com [Impeller] set UniformBlockBinding once. (flutter/engine#57094)
2024-12-11 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 5taAI9-tnFN84ZJvr... to HJ57Y3zxqDamI8qkY... (flutter/engine#57125)
2024-12-11 30870216+gaaclarke@users.noreply.github.com Removed linear gradient heap allocation for color conversions between dart and display list (flutter/engine#57108)
2024-12-11 jason-simmons@users.noreply.github.com Dispose pictures created in HtmlViewEmbedder.submitFrame (flutter/engine#57102)
2024-12-11 skia-flutter-autoroll@skia.org Roll Dart SDK from 4789a86f4d3f to be9c98daf9df (1 revision) (flutter/engine#57124)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 5taAI9-tnFN8 to HJ57Y3zxqDam

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157151,2024-10-18T08:03:00Z,2024-10-29T10:25:20Z,syedaniq,3,21,18,81,2,4,2,"['framework', 'f: material design', 'autosubmit']",120901.0,0,5314285.0,2,0,0,0,683723.34548,,0,18,0,False,"['syedaniq', 'MichalNemec', 'nate-thegrate']","Thanks for your time and the helpful suggestions @navaronbracke, really appreciate it.
The checks were all sucessfull this time 🥳 when this will get on stable? waiting for it since 3.19.5 (March 28, 2024) It looks like [the issue](https://github.com/flutter/flutter/issues/156942) was filed on October 16 and then this contribution was merged on October 29.
The current stable branch contains all contributions prior to October 9, so this change missed the cutoff by a few weeks.

Feel free to check out https://docs.flutter.dev/release/archive to get an idea of how often stable releases generally take place. The next one will likely be in about 3 months from now.This looks good to me. The failing CI task seems unrelated to your PR, though.

Seems like it is also failing for other PR's. LGTM

Thanks for the contribution! Almost there! LGTM","This looks good to me. The failing CI task seems unrelated to your PR, though.

Seems like it is also failing for other PR's. LGTM

Thanks for the contribution! Almost there! LGTM","This PR adds two new properties to the Material Design `TimePicker`: `switchToInputEntryModeIcon` and `switchToTimerEntryModeIcon`. These allow developers to customize the icons for toggling between dial and input modes, with default icons (`Icons.keyboard_outlined` and `Icons.access_time`) used if none are provided.

Fixes #156942 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Since the default is a const icon, can we instead make these non-null and provide them as default arguments in the constructor?

I like that we provide an `Icon` widget; users can then tweak the icon, size, and color, too. Same idea as above ```suggestion
/// The [switchToInputEntryModeIcon] argument can be used to customize
/// the input method icon that is shown when the [TimePickerEntryMode] is [TimePickerEntryMode.dial].
///
/// Defaults to an [Icon] widget with [Icons.keyboard_outlined] as icon.
``` ```suggestion
/// The [switchToTimerEntryModeIcon] argument can be used to customize
/// the input method icon that is shown when the [TimePickerEntryMode] is [TimePickerEntryMode.input].
///
/// Defaults to an [Icon] widget with [Icons.access_time] as icon.
``` Same idea as above for the non-null defaults.

Also, was making these `final` a mistake? The others are not final either, and we do not enforce that arguments in constructors are final, so I think that the `final` keywords can be removed here? This test will need to be reformatted. The indentation looks off. Hi, thanks for your time. The approach you're suggesting makes much more sense. I initially coded it that way because it was done similarly in `date_picker.dart`
https://github.com/flutter/flutter/blob/0500af2b5f750925e355266360307ff4e69c0954/packages/flutter/lib/src/material/date_picker.dart#L441-L442 I was again inspired by the approach done in `date_picker.dart`, maybe we can also use default arguments there in a new issue 
https://github.com/flutter/flutter/blob/0500af2b5f750925e355266360307ff4e69c0954/packages/flutter/lib/src/material/date_picker.dart#L1152-L1155 I was going to leave a suggestion here, but since this is set up to mirror the date picker, it's probably best to leave as-is for consistency. +1 to having it be non-nullable, cause why not?

Thanks for changing it here! Could we make these properties nullable? Revert this change to restore the defaults and just override them here

<img width=""887"" alt=""image"" src=""https://github.com/user-attachments/assets/257bd564-ed2d-46d4-8068-0d4513f2d5e2"">
 



This way we don't have to provide multiple parameter with defaults values 

<img width=""550"" alt=""image"" src=""https://github.com/user-attachments/assets/3908b1c2-8880-48fc-b729-0459895f9804"">

<img width=""562"" alt=""image"" src=""https://github.com/user-attachments/assets/e89809d9-ea8f-4342-bc23-3babd68e9c3a"">

<img width=""582"" alt=""image"" src=""https://github.com/user-attachments/assets/50dfee68-8a16-460e-bb86-202a13005a33"">


 I would suggest nullable props so we can define defaults once instead of 3 times at three difference places.  That's a good point—a single source of truth is easier to maintain, plus being nullable would make it parallel with date_picker.dart 👍 ```suggestion
      testWidgets('TimePicker default entry icons', (WidgetTester tester) async {
``` ```suggestion
      testWidgets('Can override TimePicker entry icons', (WidgetTester tester) async {
``` ```suggestion
        // Check that the default icon for the dial mode is displayed.
``` ```suggestion
        // Tap the icon to switch to input mode.
``` ```suggestion
        // Check that the icon for the input mode is displayed.
``` ```suggestion
        // Check that the custom icons are displayed.
``` ```suggestion
        // Tap the custom icon to switch to input mode.
``` ```suggestion
        // Check that the custom icon for the input mode is displayed.
```"
160099,2024-12-11T17:24:28Z,2024-12-11T19:18:34Z,engine-flutter-autoroll,0,0,2,2,1,1,1,[],,0,606787.0,0,0,0,0,691933.453833,,0,2,0,False,[],,,"
https://github.com/flutter/packages/compare/0f1fd493b893...16616ad588d7

2024-12-10 engine-flutter-autoroll@skia.org Manual roll Flutter from ab5b20c16d56 to 456366232af9 (10 revisions) (flutter/packages#8264)
2024-12-10 sinyuper@gmail.com [quick_action_ios] add localizedSubtitle for iOS (flutter/packages#8149)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160092,2024-12-11T15:48:32Z,2024-12-11T19:18:34Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608949.0,0,0,0,0,695529.36676,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/e4316b8bc5f2...7941d7801b08

2024-12-11 skia-flutter-autoroll@skia.org Roll Skia from 830bc24e0b98 to 79a7b95e32fe (2 revisions) (flutter/engine#57122)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160085,2024-12-11T11:22:00Z,2024-12-11T12:14:18Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,607937.0,0,0,0,0,712533.386239,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/4f6180a2a577...e4316b8bc5f2

2024-12-11 skia-flutter-autoroll@skia.org Roll Dart SDK from d87b2f6d2b03 to 4789a86f4d3f (1 revision) (flutter/engine#57119)
2024-12-11 skia-flutter-autoroll@skia.org Roll Skia from b2f13d9a5678 to 830bc24e0b98 (1 revision) (flutter/engine#57118)
2024-12-11 skia-flutter-autoroll@skia.org Roll Dart SDK from f863f0b43625 to d87b2f6d2b03 (2 revisions) (flutter/engine#57110)
2024-12-11 skia-flutter-autoroll@skia.org Roll Skia from 854eb19c722e to b2f13d9a5678 (1 revision) (flutter/engine#57114)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157755,2024-10-28T21:55:23Z,2024-11-28T01:17:48Z,harryterkelsen,27,30,33,1213,11,4,0,"['framework', 'a: images']",1324376.0,0,4390236.0,0,0,0,0,693831.494614,,0,33,0,False,"['iapicca', 'jezell', 'dkwingsmt', 'harryterkelsen', 'Levi-Lesches', 'slavap', 'gochev', 'yjbanov']","@harryterkelsen Please consider adding
```dart
final String? cssFilter;
final bool? forcedCors;
```
It could be useful for real-life scenarios. @slavap Something like `forcedCors` is a good idea, but I think we'll want to design the feature in a way that allows more flexibility. Multiple reasonable strategies are possible around deciding whether to render an image as cross-origin or not:

- Try an XHR, fallback to `<img>` (like this PR does).
- Always render as `<img>` (like `forcedCors`).
- Always load into `<img>`, then attempt to create a WebGL texture, if not possible render as `<img>` (removes an extra HTTP call, but doesn't support animated images).

There may be other options, like deciding based on URL patterns, falling back to a different URL, different caching strategies, etc.

I suggest we do not include `forcedCors` in this MVP of the feature, and then think a little bit about how to make this all customizable. Or perhaps we don't need anything fancy built into the framework. Maybe other use-cases can be satisfied using pub packages. @yjbanov allow to make it customizable somehow is enough, then no need to add “direct” property like forcedCors. Thanks for the reviews, everyone! PTAL Thanks! PTAL Hi reviewers! Thanks so much for your interest in this PR. After some feedback from the framework team and some reviewers on this PR, I scrapped the `WebImage` widget and made it so that `Image.network` ""just works"" with cross-origin images. This means I no longer have to duplicate the code for ImageCache, ImageProvider, etc (and now the PR is several thousand lines shorter).

Please take another look! Thanks! PTAL Thanks for the major revision. It looks great! I've provided some comments for the current design, which I'm ok with, but I have some more ideas on whether this can be further simplified.

The core goal of your design is to make `NetworkImage.loadBuffer` provide a `WebImageInfo`. You wanted keep the current pipeline of `MultiFrameImageStreamCompleter`'s implementation, therefore you made the web element disguise as an image frame and slip through the pipeline doing nothing but returning the image info at the last step. In order to do this, you created two abstract class for each intermediate step during `MultiFrameImageStreamCompleter`.

My concern comes from the fact that `WebImageInfo` may not have needed to go through the `MultiFrameImageStreamCompleter` pipeline in the first place. `NetworkImage.loadBuffer` only requires the returned class is an `ImageStreamCompleter`. I wonder if you've considered the following design:
* Create a new class, tentatively named `_DelegatedImageStreamCompleter`. This new class's constructor can perform an async operation, after which all of its operations are delegated to either `ImageStreamCompleter a`, or `ImageStreamCompleter b`.
* `ImageStreamCompleter a` will be the original `MultiFrameImageStreamCompleter`.
* `ImageStreamCompleter b` will be a new `_WebImageStreamCompleter`, which feeds the `ImageStreamListener.onImage` with a `WebImageInfo`.

This way, `MultiFrameImageStreamCompleter`'s scaffold won't need any changes at all, and both new `ImageStreamCompleter` classes might be private as well. This LGTM, but leaving it up to @dkwingsmt to assess the overall fit within the framework. Re: https://github.com/flutter/flutter/pull/157755#issuecomment-2502108051

I did consider creating a `ForwardingImageStreamCompleter` which takes a `Future<ImageStreamCompleter>` but it quickly got messy because I had to keep a list of all the listeners which were registered so you can register with the delegate `ImageStreamCompleter` but there were complications because it was unclear what to do if `setImage` or `reportError` was called before the delegate `ImageStreamCompleter` had loaded (should you keep 2 lists of listeners, one for listeners which were added before `setImage` or `reportError` were called and another list for listeners that were added afterward?) I implemented this using the `ForwardingImageStreamCompleter` idea from @dkwingsmt . PTAL! Thanks for the review! This is a very bad idea. I think this will cause many crashes, perf issues, and much harder to solve problems than turning on cors. @jezell the problem isn't as simple as turning on CORS, but rather that not everyone can control CORS for their images in every situation. In fact there are many situations where your images are hosted on a CDN that does not have proper CORS. In these cases it's impossible to work around this issue without using the web renderer for everything, so this is a nice way to continue using the canvas with images > This is a very bad idea. I think this will cause many crashes, perf issues, and much harder to solve problems than turning on cors.

Can you explain more? I suppose this is just an add-on, i.e. <img> is only used when fetching is not available , this will not regress existing apps but only allow what was impossible before the PR. I believe there will always be two camps of people.

Camp 1 wanting to just work even if it fallbacks to img tag even with worse performance since they wont care and can ship it and then its the client issue.

Camp 2  who prefer to not work, have a big cors error and they can figure out a solution, download the files on their own, have a proxy server or use another location that has a proper cors or at least dont have cors for get requests since this is dumb anyway.

Now making any decision to fulfil any of the two camps will make the other people unhappy, so I believe the fallback should either be behind a flag OR there should be a huge big “Warning” printed each time the fallback happens. I think your analysis is correct but your conclusion is not. You're right then some people care more about performance than others, but that does not automatically make it a client issue. Rather, one camp says they are okay with performance while another chooses to work harder to improve it. 

The problem with cores is that sometimes the only answer is to build a CDN yourself, which can be prohibitively expensive and time consuming to many developers. 

Making everything Just Work™ by default makes both sides happy: you get a functioning app (which is strictly better than no app), and performance becomes a result of the extra work you put in from there. Some developers will say ""good enough"" and others will keep going and make a proxy server. At least this way you get a choice between focusing on cors and focusing on other perhaps more important issues
 @Levi-Lesches I'm not sure Flutter needs in the box support for loading images from sources that have blacklisted cross domain requests in the first place, but the objection here is that making it transparent is killing a gnat with a sledgehammer. Platform views have consistently been a nightmare for us since the day we started using Flutter. As recently as flutter 3.24 they were totally broken even when marked as hidden platform views and would cause your app to go OOM and go into an unrecoverable crash. Transparently forcing that pain on developers in the name of fixing CORS, along with perf issues, braking shaders and filters, screenshot widgets, limitations on the number of platform views breaking the renderer, etc. is not a good plan. Platform views are so problematic that at the very least this should be opt in, since it introduces more problems than it fixes.

Other alternatives that I can think of to do this without a huge footgun:

1) Move this behind something like Image.platform / PlatformImage so it is explicit and you know what you are signing up for. Then document the downsides of using this approach, including that your app might just be totally unstable and crash every few minutes.

2) Add a flutter deploy command that can setup CORS headers properly for you on common CDNs. 

3) Ship a built in shelf server with flutter, would solve a host of problems like url path routing working properly out of the box, CORS header configuration, and potentially could also serve as a CORS proxy if you really, really need one.

4) All of the above Also note that anyone that wants to do this in the current stable release of flutter already can with a few lines of code, an if statement, and HtmlElementView. > I'm not sure Flutter needs in the box support for loading images from sources that have blacklisted cross domain requests in the first place

This seems like a fundamental misunderstanding of CORS. It blocks everything by default, and servers have to whitelist you. Servers don't care to whitelist images since browsers don't use cors for image tags. So, images are more likely to be blocked by CORS than not, and 100% of the web apps I build in fact need the HTML renderer for this reason alone. 

> Platform views have consistently been a nightmare for us since the day we started using Flutter.

Right now, the only viable workaround is to use the HTML renderer. That means missing out on skia and wasm, which is worse than a little drop in performance. If there are issues with platform views we should definitely try to identify and file issues for them, but there's a difference between non optimal and non functional. 

> Move this behind something like Image.platform

Whether a specific server uses cors or not may not be known at compile time. For example, when integrating with almost any 3rd party service, you'll get a URL of the image, and in my case they come from almost any CDN, most of which do not configure cors for images. Whether all of them or some of them do now or in the future isn't in my control nor should I have to care

> Add a flutter deploy command that can setup CORS headers properly for you on common CDNs.

Making a tool to manage different types of CDNs seems massively out of scope for flutter to me

> Ship a built in shelf server with flutter

Again, seems like a misunderstanding of what cors is for. Anyone can make a proxy server, the point is that it becomes your new bottleneck. A potentially expensive one at that, since you're routing the heaviest requests through one server, whereas before, the requests were being handled by devices around the world and a CDN to match. That's why cors is only a browser thing -- proxy servers are not seen as a threat because they put the expenses and maintenance burden on you rather than the cdn (and you can be easily blocked if needed, but that's besides the point). It's impractical to assume every web developer can have their own scalable cdn when browsers offer a built in workaround for images already > Whether a specific server uses cors or not may not be known at compile time. 

Doesn't have to be known at compile time. It's easy enough to detect if an image is on another domain at runtime. However, whether or not platform views are going to be ""safe"" is only something you can know at compile time. Inserting a random number of platform views at sometimes at runtime is exactly what gets people into trouble. Someone may think this change is a silver bullet that is going to solve all of their problems, but if they load a grid of images, and get 20 platform views because 20 of them were cross domain, the renderer can't guarantee that it will even render their app properly. In our experience, for 2 years now it's been different issues across different stable releases, but it's consistently been leading to either the renderer breaking, or the app deadlocking when it goes OOM. Both of those are way worse than an image failing to load because they kill your entire app, sometimes in unrecoverable ways that force you to kill the browser. For this reason we have a very strict policy against ever using platform views and we've gone so far as to patch the flutter web engine itself and run forks of any pub.dev and flutter packages that insert platform views to avoid them because it's such a big problem.

> Right now, the only viable workaround is to use the HTML renderer. 

This is just not true at all. You can insert a platform view on the stable release right now without any changes if you really want to what this change is doing. If you really want a platform view and there are no issues with platform views, you can already replace all your images with platform views today on web. You don't need this change to do that.

> If there are issues with platform views we should definitely try to identify and file issues for them, but there's a difference between non optimal and non functional.

I have filed issues. For 2 years running. They remain unfixed. Platform views have been our number 1 source of stability issues and crashes since the day we started using Flutter web. 

You might think this fix is a silver bullet to your issues, but it's definitely not.

  @jezell 

We initially wanted to do a separate widget (`WebImage`), so that it's clear that you are using a single origin aware widget, that not all features are available (e.g. you cannot read and process image file bytes or pixels), and you have to opt into using it. This way you would not accidentally step onto footguns, such as multiplying platform views in the app.

In the end, we decided to go with the approach of enabling CORS in `Image.network` directly. The benefit there is that the API is familiar and backwards-compatible. Importantly, platform views have seen some significant optimizations recently (e.g. https://github.com/flutter/engine/pull/54878), making this approach more viable.

Now, the performance concern continues to be real, so I think we should look into possible solutions. A few ideas:

- `Image.network` does not automatically enable cross-origin images, but has a parameter (e.g. `enableCors`) that's `false` by default.
- Add tooling that would watch cross-origin image usage and report performance cliffs, e.g. when multiple images cause multiple canvas overlays.
- See if we can use Canvas 2D as a target surface (instead of WebGL or `bitmaprenderer`). This would allow us to draw cross-origin images into the canvas directly without having to split it. We'd probably need to introduce a new kind of platform view (let's call it ""drawable platform view""). Such platform views could be drawn into the canvas, but they would (necessarily) taint it (which is nothing new; that's what happens in normal HTML, including Flutter Web's HTML renderer).
 > * `Image.network` does not automatically enable cross-origin images, but has a parameter (e.g. `enableCors`) that's `false` by default.

@yjbanov this seems a low hanging fruit, shouldn't this be the case for the current implementation?
 That is definitely low hanging fruit, but I do think enableCors is a bit misleading. If people only look at this from the cors angle, they miss what's actually happening when they turn it on and why it's problematic. If all that was happening is cors is being bypassed, this would be awesome. But of course, you can't just turn if off in this codepath. What is happening is a platform view is being used to render the image, which has all sorts of negative consequences that aren't being relayed to the user like:

- Filters and blurs not working
- Rendering glitches due to platform view limitations
- Screen shot widgets breaking since the content can no longer be rendered and captured
- Performance problems
- Crashing due to platform view limitations (historically an issue)

Image.platform would be a better way to call out exactly what is happening. Or Image.network(usePlatformViewOnWeb: true). I'm working on a PR https://github.com/flutter/flutter/pull/159917 that change this feature to be opt-in. Comments are welcome! @harryterkelsen, I switched to the `main` branch, ran `flutter upgrade`, and confirmed that your changes are in my Flutter installation. I even inserted print statements into your code to confirm that it was running. I can confirm I'm in the following section of your code: 

```dart
      } catch (e) {
        // If we failed to fetch the bytes, try to load the image in an <img>
        // element instead.
        final web.HTMLImageElement imageElement = imgElementFactory();
        imageElement.src = key.url;
        // Decode the <img> element before creating the ImageStreamCompleter
        // to avoid double reporting the error.
        await imageElement.decode().toDart;
        return OneFrameImageStreamCompleter(
          Future<ImageInfo>.value(
            WebImageInfo(
              imageElement,
              debugLabel: key.url,
            ),
          ),
          informationCollector: _imageStreamInformationCollector(key),
        )..debugLabel = key.url;
      }
```

However, when I load my page, I get these errors: 

```console
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following UnsupportedError was thrown during paint():
Unsupported operation: Could not create image data for this image because access to it is restricted
by the Same-Origin Policy.
See https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy
```

and not a single `<img>` tag is seen in my DOM when using DevTools. Am I missing something here?  @Levi-Lesches 
I can try to repro the issue, could you share the sample (not just try/catch snippet)
Left some feedback. It's good to see this change!",Left some feedback. It's good to see this change!,"When using `Image.network`, if the given URL points to an image that is cross-origin and not set up to allow CORS access, then we are unable to make a [ui.Image] from it. In this case, render the image using a platform view.

This is the last remaining checklist item for https://github.com/flutter/flutter/issues/145954

Fixes https://github.com/flutter/flutter/issues/149843

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","What does `[url]` point to? Avoid ""we"": https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple

I think in this case we should probably talk about the HTTP HEAD request. It's not exactly an implementation detail as the developer may have to be aware of the server capabilities of the source of the image. ```suggestion
  // On mobile and desktop there are no cross-origin restrictions.
``` Could we instead throw an `UnsupportedError` with a message indicating that this is only supported on the web? All public members need dartdocs. I think in this case you can use the dartdoc template/macro syntax to copy the docs from the `Image` widget. Should this be `createImageElementWidget`, per https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-abbreviations

Just a suggestion, since `ImgElement` probably aligns with the `<img>` tag. Should we add a `mounted` check here, just in case? `_registeredViewType` isn't ever set to anything else than null? I wonder, since we already have https://api.flutter.dev/flutter/painting/ImageCache-class.html
can we use that in some way? Or is that irrelevant here? ""from the web"" does not seem to capture what this widget does. For example, same origin policy protects resources from your local network (e.g. a random website cannot fetch images from your home server's photo albums). I would lead with something like this:

```
/// A substitute for [Image.network] that follows the web's [same origin policy][].
///
/// On mobile this widget delegates to [Image.network]. On the web this widget
/// delegates to [Image.network] if the server allows fetching the image using
/// a XHR. Otherwise, it uses an `<img>` element to display the image.
///
/// [same origin policy]: https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy
```

The doc could then go into more details:

- Explain how it checks if the image can be fetched.
- Discuss the performance implications of having too many platform views as a result of using this widget, and strategies that can be used to deal with that (e.g. reduce overlaps with flutter UI).
- Provide usage guidance, such as recommending that the developer first try using `Image.network`, and configuring the image server to allow the app access images, before falling back to this widget. Consider using a `SizedBox`, per https://dart.dev/tools/linter-rules/avoid_unnecessary_containers Do we need a separate function for this? Or can we just inline the single use of ` HtmlElementView()` ?

I don't feel strongly about it, though. This ValueNotifier is never disposed. This means we are always paying the cost of two HTTP requests per image. Maybe it's fine with the cache? We need an io test too that checks that WebImage correctly delegates to Image.network. nit: a comma after `errorBuilder` would help dartfmt doa better job, I think The getters isLoading and isSuccess aren't used? Also, the hasError getter _could_ be inlined? nit: this type name does not link back to anything in this file. Maybe `Flutter__ImgElementImage`? The formatting of the parameter list is a bit off, due to a missing trailing comma. You might also want to use a block body?  Is this field used for anything? Are we planning on supporting multi-frame images? We might need to mention this in the docs. Shouldn't we call `super.dispose()` last?

Per https://api.flutter.dev/flutter/widgets/State/dispose.html
`Implementations of this method should end with a call to the inherited method, as in super.dispose().` Can we return a `SynchronousFuture` in this case, so that in case of this ""technically"" synchronous check, the widget does not have to wait one frame for the event loop to resolve the result? Both `natural*` fields seem to be shadowed by the local variables below, so they are unused? I wonder about the discoverability of this new widget. I'm not sure if we could have a named constructor on `Image` instead? (that no-op's on native platforms; `Image.file` does the opposite, for web).

If this is possible, then we could get ImageCache integration out-of-the-box? We should have a mounted check here. See some context in https://github.com/dart-lang/linter/issues/4892
The widget _could_ be unmounted when the then call runs. This may not actually remove the listener, because `_onCachedImageStateChange` creates a new tear-off and it's not equal to the previous tear-off. You may have to turn `_onCachedImageStateChange` into a closure, like this:

```dart
Function _onCachedImageStateChange = () { ... }; You can avoid the else if/else here. Early returns are sufficient. This does not pass through the provided loading/frame/error builders. Instead of returning an empty container (see my comment above), can we call the loading builder or fall back to a SizedBox?"
160061,2024-12-11T02:14:33Z,2024-12-11T03:05:30Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,606097.0,0,0,0,0,747222.382388,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/3a641b680edb...a8f755647275

2024-12-11 goderbauer@google.com Add support for dart formatter (flutter/engine#57075)
2024-12-10 skia-flutter-autoroll@skia.org Roll Skia from d541f1aa0c9b to e4d2c3dbb848 (2 revisions) (flutter/engine#57106)
2024-12-10 skia-flutter-autoroll@skia.org Roll Dart SDK from dd92932823d1 to f863f0b43625 (1 revision) (flutter/engine#57104)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160063,2024-12-11T05:18:33Z,2024-12-11T06:07:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608144.0,0,0,0,0,734135.403331,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/a8f755647275...4f6180a2a577

2024-12-11 skia-flutter-autoroll@skia.org Roll Skia from e4d2c3dbb848 to 854eb19c722e (1 revision) (flutter/engine#57111)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160476,2024-12-17T22:17:38Z,2024-12-17T22:30:31Z,jtmcdole,3,0,1,0,0,1,1,[],437.0,0,12976.0,0,0,0,0,749758.450467,,0,1,0,False,"['jtmcdole', 'dickermoshe']","CI Yaml is failing because the merge was done without a PR. Cocoon is looking in a datastore for tip of tree, which points to the pre-fusion commit. 

We believe committing this will update some stores. God, I'm gonna pray for y'all.
Hopefully the ""Trigger CI for the 54th time, this better work or I'm gonna sell my computer and become a painter"" PR works. The problem with this one not triggering the build was the commit wasn't present in the datastore. Not all of our DBs were moved over to firestore. This is something we ran into on Flaux and just forgot - a chicken and the egg problem. I hope we get there wayyyy before 54th time.LGTM",LGTM,Hello Monorepo.,
160044,2024-12-10T20:19:13Z,2024-12-10T21:31:42Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,613550.0,0,0,0,0,761091.476095,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/58e5f9b3df54...23fc43d5e61f

2024-12-10 chris@bracken.jp iOS: Add null checks on shell dereference (flutter/engine#57099)
2024-12-10 Breakthrough@users.noreply.github.com [engine] Migrate fuchsia.io Open functions to Open3 (flutter/engine#56818)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160457,2024-12-17T19:11:36Z,2024-12-17T19:29:47Z,yjbanov,0,0,2,34,3,1,2,[],,0,1092.0,0,0,0,0,772806.479653,,0,2,0,False,[],![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png) ![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png) ![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),This needs to work entirely differently in the monorepo world.,
160052,2024-12-10T23:07:14Z,2024-12-11T02:02:25Z,engine-flutter-autoroll,1,0,3,2,1,1,1,"['engine', 'will affect goldens']",2338.0,0,609393.0,0,0,0,0,755167.545378,,0,3,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/160052) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #160052 at sha 2f706492c529332c7ebf4bfbe8274cd1dce6dd03_

",,"
https://github.com/flutter/engine/compare/23fc43d5e61f...3a641b680edb

2024-12-10 robert.ancell@canonical.com Clean up key embedder responder tests (flutter/engine#57054)
2024-12-10 jonahwilliams@google.com [Impeller] reland:  switch Pipeline to use raw ptr instead of shared ptr for recorded references. (flutter/engine#57086)
2024-12-10 skia-flutter-autoroll@skia.org Roll Skia from bd7d952398d5 to d541f1aa0c9b (3 revisions) (flutter/engine#57098)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160042,2024-12-10T18:52:19Z,2024-12-10T19:43:50Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606279.0,0,0,0,0,773578.396714,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4d001245329b...58e5f9b3df54

2024-12-10 skia-flutter-autoroll@skia.org Roll Dart SDK from 1a28e6c86b09 to dd92932823d1 (1 revision) (flutter/engine#57096)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160450,2024-12-17T17:27:04Z,2024-12-17T18:05:45Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2323.0,0,0,0,0,777849.445468,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/8535ce3c9e5e...6a75cb6a6a57

2024-12-17 mdebbar@google.com [web] Reland: (Add `crossOrigin` property to `<img>` tag used for decoding)++ (flutter/engine#57228)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jacksongardner@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
136303,2023-10-11T00:48:15Z,2023-10-11T02:29:42Z,XilaiZhang,1,0,2,3,2,1,1,['engine'],3.0,0,37475141.0,0,0,0,0,776160.577507,,2,2,0,False,['flutter-dashboard[bot]'],"This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/wiki/Release-process). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/wiki/Tree-hygiene) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed.",,"# Flutter beta 3.16.0-0.1.pre Framework

## Scheduled Cherrypicks

",
160447,2024-12-17T16:20:03Z,2024-12-17T17:14:00Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,3240.0,0,0,0,0,780955.458868,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/cda6630c8e53...8535ce3c9e5e

2024-12-17 skia-flutter-autoroll@skia.org Roll Skia from 804042d75299 to dca47129cf2e (1 revision) (flutter/engine#57241)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jacksongardner@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160381,2024-12-16T20:52:29Z,2024-12-16T21:40:44Z,reidbaker,0,0,1,1,1,1,1,[],,0,70010.0,0,0,0,0,784239.488768,,0,1,0,False,[],,,"Related to https://github.com/flutter/flutter/issues/160372


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
",
144958,2024-03-11T21:14:34Z,2024-04-22T15:46:13Z,andrewkolos,3,0,3,97,18,1,1,"['tool', 'autosubmit']",10637.0,0,24259568.0,0,0,0,0,785356.772807,,0,3,0,False,"['auto-submit[bot]', 'christopherfujino', 'Hixie']","Not a big deal but for the future, please bear in mind this part of the [Tree Hygiene](https://github.com/flutter/flutter/wiki/Tree-hygiene#avoid-revert-revert-revert-revert-fix-foo-commit-messages) doc:

> Also avoid using ""Reland"" in the commit message. When you later revert the revert, just land the PR afresh with the original commit message, possibly updated with the information since collected, and include a link to the original PR and to the revert PR so that people can follow the breadcrumbs later.

Otherwise when doing code archeology later (e.g. walking through git blame) it gets quite confusing because the commit that actually stuck doesn't have the actual information that's useful. auto label is removed for flutter/flutter/144958, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=144958) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 @andrewkolos is this ready to be submitted?RSLGTM",RSLGTM,"In service of https://github.com/flutter/flutter/issues/143348

When invoking a package to transform an asset, we set FLUTTER_BUILD_MODE to the CLI name of the build mode being used. Inspired by https://github.com/flutter/flutter/issues/101077#issuecomment-1890379501:

> Do transformers know whether they get executed in debug or release mode? I kinda imagine that being useful. Ex: There's a transformer that optimizes the file size of images. Depending on the amount and size of the images, that could take a significant amount of time. Therefore, I might want to only execute it in release builds.

Note for the reviewer: the interesting part of this change can be found in the commit [set environment variable to build mode when running asset transformer…](https://github.com/flutter/flutter/pull/144752/commits/579912d470b6f6eb036fd6b23a128fa3942f6282). The rest of the change is updating call sites with a new argument.


________

**Boring stuff**: Reland of  https://github.com/flutter/flutter/pull/144752, which had to be reverted because the branch was stale. The original branch branched off `master` before https://github.com/flutter/flutter/pull/144734 landed. That PR introduced a new `AssetTransformer` call site.

This PR branch is identical to the original but with a new commit that addresses the new call site, [update new call sites](https://github.com/flutter/flutter/commit/6bb5296a6102df6e9db274267895681974efdf3d).

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
",
160438,2024-12-17T14:55:09Z,2024-12-17T15:49:17Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,3250.0,0,0,0,0,786041.535709,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/5a7ccbc4f6fa...cda6630c8e53

2024-12-17 skia-flutter-autoroll@skia.org Roll Dart SDK from 58fb2704f28a to a74650e32880 (1 revision) (flutter/engine#57240)
2024-12-17 skia-flutter-autoroll@skia.org Roll Dart SDK from 930f66fab234 to 58fb2704f28a (1 revision) (flutter/engine#57239)
2024-12-17 skia-flutter-autoroll@skia.org Roll Skia from 2422a3fc829a to 804042d75299 (1 revision) (flutter/engine#57238)
2024-12-17 skia-flutter-autoroll@skia.org Roll Skia from fbc41b0b55a1 to 2422a3fc829a (1 revision) (flutter/engine#57236)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jacksongardner@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160028,2024-12-10T15:01:16Z,2024-12-10T15:53:07Z,engine-flutter-autoroll,0,0,4,2,1,1,1,[],,0,605754.0,0,0,0,0,787970.556645,,0,4,0,False,[],,,"
https://github.com/flutter/packages/compare/45bcc3210fcc...0f1fd493b893

2024-12-09 43054281+camsim99@users.noreply.github.com [dependabot] Generalizes dependabot commit message prefix  (flutter/packages#8255)
2024-12-09 ditman@gmail.com [google_adsense] Tighten exports and docs. (flutter/packages#8233)
2024-12-09 stuartmorgan@google.com [path_provider] Clean up Java code (flutter/packages#8240)
2024-12-09 stuartmorgan@google.com [google_sign_in] Clean up Java code (flutter/packages#8241)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160027,2024-12-10T14:23:19Z,2024-12-10T17:11:05Z,engine-flutter-autoroll,2,0,6,4,2,1,1,['engine'],2326.0,0,608019.0,0,0,0,0,787982.791867,,0,6,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160027, due to - The status or check suite [Mac_arm64 run_debug_test_macos](https://cr-buildbucket.appspot.com/build/8728929979529333521) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160027, due to - The status or check suite [Mac_arm64 run_debug_test_macos](https://cr-buildbucket.appspot.com/build/8728929979529333521) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/0338d1c7d7fe...4d001245329b

2024-12-10 skia-flutter-autoroll@skia.org Roll Dart SDK from d3a963b2f237 to 1a28e6c86b09 (3 revisions) (flutter/engine#57091)
2024-12-10 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from tVShMDVFeKJFcDFHJ... to 5taAI9-tnFN84ZJvr... (flutter/engine#57090)
2024-12-10 skia-flutter-autoroll@skia.org Roll Dart SDK from 9694974b6d41 to d3a963b2f237 (1 revision) (flutter/engine#57072)
2024-12-10 skia-flutter-autoroll@skia.org Roll Skia from 949557697922 to bd7d952398d5 (3 revisions) (flutter/engine#57087)
2024-12-10 skia-flutter-autoroll@skia.org Roll Skia from e11d70745224 to 949557697922 (1 revision) (flutter/engine#57084)
2024-12-10 skia-flutter-autoroll@skia.org Roll Skia from 3a58be4817a8 to e11d70745224 (2 revisions) (flutter/engine#57082)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from tVShMDVFeKJF to 5taAI9-tnFN8

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160408,2024-12-17T06:10:37Z,2024-12-17T06:56:10Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2735.0,0,0,0,0,818030.626759,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/23731d6a967d...5a7ccbc4f6fa

2024-12-17 skia-flutter-autoroll@skia.org Roll Dart SDK from 7ed58b3c462a to 930f66fab234 (1 revision) (flutter/engine#57235)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160421,2024-12-17T11:03:39Z,2024-12-17T11:42:05Z,sstrickl,2,0,1,7,7,1,1,"['framework', 'd: api docs', 'd: examples', 'f: routes']",21.0,0,2306.0,0,0,0,0,800877.695274,,0,1,0,False,"['flutter-dashboard[bot]', 'sstrickl']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. The examples where the annotations are added are used in separately written tests under `examples/api/test`, which is why no tests were directly touched by this commit. I've verified with a local run of `dev/bots/test.dart` that these pragmas allow the tests to run to completion successfully when the `--verify-entry-points` flag is enabled by default in JIT mode.",,"This change adds entry-point annotations to methods and classes accessed by native code during Flutter tests. Currently, entry point annotations are not checked by the Dart VM when running in JIT mode, only in AOT mode. In order to also enforce entry point annotations in JIT mode, first tests in Flutter must be appropriately annotated to avoid roll failures.

Related issues:
* https://github.com/flutter/flutter/issues/118608
* https://github.com/dart-lang/sdk/issues/50649

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160011,2024-12-10T04:32:17Z,2024-12-10T05:32:58Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606196.0,0,0,0,0,825269.945952,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/2069db895c62...0338d1c7d7fe

2024-12-10 30870216+gaaclarke@users.noreply.github.com Revert ""[Impeller] switch Pipeline to use raw ptr instead of shared ptr for recorded references."" (flutter/engine#57079)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160403,2024-12-17T02:10:20Z,2024-12-17T03:16:58Z,matanlurey,0,0,1,218,1,1,1,['tool'],,0,4000.0,0,0,0,0,831184.670001,,1,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/dad2339f-34b0-4878-b514-27e28fe05fb1),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/dad2339f-34b0-4878-b514-27e28fe05fb1),"Without this change, the order that tests run matter and it's easy to add tests without remembering this flag.

(There are existing tests that forgot it too, they just happen to work if shuffled in a way that, well, works)

",
160401,2024-12-17T01:58:33Z,2024-12-17T04:31:06Z,matanlurey,1,0,7,156,8,1,1,['tool'],9011.0,0,9154.0,0,0,0,0,826737.861659,,1,7,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160401, due to - The status or check suite [Mac dart_plugin_registry_test](https://cr-buildbucket.appspot.com/build/8728335750447899537) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/31f41f90-4437-45f0-b33b-64377bd667fc)

lgtm modulo the trailing whitespace complaints from CI.","![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/31f41f90-4437-45f0-b33b-64377bd667fc)

lgtm modulo the trailing whitespace complaints from CI.","Part of https://github.com/flutter/flutter/issues/102983.

`<FlutterManifest>.generateSyntheticPackage` _never_ meant generate a synthetic package 😒, it only meant ""we _might_ need to generate a synthetic package because localizations are being generated and the default, unless otherwise specified, is to generate a synthetic package"".

Renamed as `generateLocalizations` and added some strategic TODOs in places where removing the `package:flutter_gen` feature (https://github.com/flutter/flutter/issues/102983) will allow us to cleanup this erroneous code and technical debt. 

Simplified a bit code (just a refactor) in the process, and fixes a bug that `flutter packages get` would generate internationalization files even if `flutter: generate: true` was not present in `pubspec.yaml` that was revealed as part of fixing this up.

/cc @sigurdm.",
160400,2024-12-17T01:41:36Z,2024-12-17T03:12:56Z,matanlurey,0,0,2,35,4,1,1,['tool'],,0,5482.0,0,0,0,0,831426.951191,,1,2,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/27736ab2-f769-4995-9ed5-a0cb4ef22779),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/27736ab2-f769-4995-9ed5-a0cb4ef22779),"This was a mistake, and should have already been removed and cleaned up.

Part of https://github.com/flutter/flutter/issues/160257.",
160404,2024-12-17T02:25:40Z,2024-12-17T03:09:22Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,2624.0,0,0,0,0,831642.677428,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/90c9185be6a5...23731d6a967d

2024-12-17 skia-flutter-autoroll@skia.org Roll Skia from 2c5159518cf2 to fbc41b0b55a1 (1 revision) (flutter/engine#57231)
2024-12-17 skia-flutter-autoroll@skia.org Roll Dart SDK from 4bfbad776c1a to 7ed58b3c462a (1 revision) (flutter/engine#57230)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160008,2024-12-10T02:13:18Z,2024-12-10T04:19:25Z,engine-flutter-autoroll,1,0,3,2,1,1,1,"['engine', 'will affect goldens']",2393.0,0,607335.0,0,0,0,0,832473.989334,,0,3,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/160008) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #160008 at sha e95d3b7c6974c276b50bf21f8c4872fcc6e83c66_

",,"
https://github.com/flutter/engine/compare/4d0e9ac8f5ae...2069db895c62

2024-12-10 jonahwilliams@google.com [Impeller] simplify render target size rounding up heuristics. (flutter/engine#57043)
2024-12-09 30870216+gaaclarke@users.noreply.github.com moved device buffer to an untracked handle (flutter/engine#57021)
2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from 14f8f6d984ff to 3a58be4817a8 (3 revisions) (flutter/engine#57073)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160399,2024-12-17T01:31:39Z,2024-12-17T02:13:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2498.0,0,0,0,0,835009.996204,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/1d2eb3f6ac5f...90c9185be6a5

2024-12-17 goderbauer@google.com Pre-format licenses script (flutter/engine#57219)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160396,2024-12-17T00:28:41Z,2024-12-17T01:18:56Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,3018.0,0,0,0,0,838269.655757,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/4944aebc5015...1d2eb3f6ac5f

2024-12-16 goderbauer@google.com Properly report `dart format` errors (flutter/engine#57206)
2024-12-16 skia-flutter-autoroll@skia.org Roll Skia from 7fc6934b2034 to 2c5159518cf2 (1 revision) (flutter/engine#57229)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160382,2024-12-16T21:07:11Z,2024-12-16T22:03:15Z,goderbauer,0,0,1,383,30,1,1,"['a: tests', 'tool', 'framework', 'f: material design', 'a: accessibility', 'a: internationalization', 'f: scrolling', 'f: gestures', 'platform-web']",,0,14119.0,0,0,0,0,839258.976198,,0,1,0,False,[],"> When running dart format over these lines the // ignore ended up on a line where it wasn't properly ignoring the lint.

Holy moly, yes! Thanks for thinking of this! LGTM","> When running dart format over these lines the // ignore ended up on a line where it wasn't properly ignoring the lint.

Holy moly, yes! Thanks for thinking of this! LGTM","When running `dart format` over these lines the `// ignore` ended up on a line where it wasn't properly ignoring the lint. This adjusts the placement of `// ignore`s so they will continue to ignore the right thing even after the code is auto formatted.

I am hoping that if we do this now the large PR that formats the entire repo will go in smoother without manual intervention.",
160395,2024-12-17T00:25:49Z,2024-12-17T01:09:06Z,goderbauer,0,0,1,24,2,1,1,[],,0,2599.0,0,0,0,0,838861.115552,,1,1,0,False,[],LGTM,LGTM,Makes the presubmit check independent of whether the files in the repo are dartfmt formatted or not.,
160393,2024-12-16T23:31:31Z,2024-12-17T00:35:23Z,goderbauer,0,0,2,17,5,1,1,['tool'],,0,3834.0,0,0,0,0,840885.774494,,0,2,0,False,[],LGTM,LGTM,These tests depend on line numbers that `dart format` is changing. Pre-format the files in question and adjust the tests so they continue to pass when the entire repo is formatted.,
160392,2024-12-16T23:29:40Z,2024-12-17T00:16:02Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2785.0,0,0,0,0,842046.105516,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/eac3180b2366...4944aebc5015

2024-12-16 skia-flutter-autoroll@skia.org Roll Skia from 8054b098b5cd to 7fc6934b2034 (14 revisions) (flutter/engine#57227)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160389,2024-12-16T23:02:30Z,2024-12-17T00:31:43Z,goderbauer,2,0,3,5418,2,1,1,"['framework', 'a: accessibility']",2050.0,0,5356.0,0,0,0,0,841105.347619,,0,3,0,False,['goderbauer'],"Yeah, looks like we will have to adjust the script that checks for the skip reason first before this can land :( `Linux analyze` is happy now. :)The analyzer is le sad, - looks like some test skips in widget_inspector_test.dart LGTM","The analyzer is le sad, - looks like some test skips in widget_inspector_test.dart LGTM",These tests are dependent on line numbers. This formats them and updates the line number to take them off the critical path.,
160000,2024-12-09T22:59:17Z,2024-12-09T23:39:12Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,608176.0,0,0,0,0,843279.848219,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/37a7a144b864...4d0e9ac8f5ae

2024-12-09 jonahwilliams@google.com [Impeller] switch Pipeline to use raw ptr instead of shared ptr for recorded references. (flutter/engine#57015)
2024-12-09 jonahwilliams@google.com [Impeller] disable all Adrenos older than 630 (flutter/engine#57069)
2024-12-09 bdero@google.com Roll Skia to 14f8f6d984ff (flutter/engine#57068)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160364,2024-12-16T18:16:07Z,2024-12-16T23:36:49Z,goderbauer,1,0,3,52,2,1,1,[],983.0,0,19244.0,0,0,0,0,844402.107782,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160364, due to - The status or check suite [Linux_android_emu_34 android views](https://cr-buildbucket.appspot.com/build/8728371444306625297) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)",![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png),"This applied the improvements from https://github.com/flutter/engine/pull/57206 to the flutter/flutter version of that script (hopefully, we can deduplicate this soon with the repo merge).",
160386,2024-12-16T22:30:40Z,2024-12-16T23:17:12Z,engine-flutter-autoroll,0,0,3,4,2,1,1,['engine'],,0,2794.0,0,0,0,0,845579.460927,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/61616ace5fa8...eac3180b2366

2024-12-16 skia-flutter-autoroll@skia.org Manual roll Dart SDK from 02aa27c6a075 to 4bfbad776c1a (12 revisions) (flutter/engine#57226)
2024-12-16 skia-flutter-autoroll@skia.org Roll Dart SDK from 02aa27c6a075 to 4bfbad776c1a (12 revisions) (flutter/engine#57224)
2024-12-16 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from iYz_WkWk1uPr8BLSZ... to zvsXvTuk-Z1Mgtn34... (flutter/engine#57222)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from iYz_WkWk1uPr to zvsXvTuk-Z1M

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160375,2024-12-16T20:02:32Z,2024-12-16T23:01:05Z,matanlurey,0,0,1,11,1,1,1,['tool'],,0,10716.0,0,0,0,0,846546.955768,,1,1,0,False,[],LGTM,LGTM,Fixes forward <https://github.com/flutter/flutter/issues/160257> that will happen when this flag is enabled ([example](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8728366579836767153/+/u/run_test.dart_for_tool_tests_shard_and_subshard_general/stdout)).,
160288,2024-12-14T00:52:55Z,2024-12-16T23:01:05Z,matanlurey,0,0,1,74,4,1,1,['tool'],,0,252493.0,0,0,0,0,846547.243677,,2,1,0,False,[],LGTM,LGTM,"Towards https://github.com/flutter/flutter/issues/160257.

I intentionally skipped `create_test.dart`, as that requires updating the generated template which uses l10n, a feature changing. I'll do that in the ""big bang"" PR that finally enables the feature to avoid getting us into a bad state.",
160284,2024-12-13T23:22:43Z,2024-12-16T22:51:01Z,itsjustkevin,0,0,3,11,1,1,1,[],,0,257299.0,0,0,0,0,847153.643271,,0,3,0,False,[],LGTM,LGTM,Merges changes to master to match stable.,
160385,2024-12-16T21:30:40Z,2024-12-16T22:17:54Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,2837.0,0,0,0,0,849140.58978,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/0dfbd04106ed...61616ace5fa8

2024-12-16 robert.ancell@canonical.com Migrate FlBinaryMessenger using embedder API instead of mock engine. (flutter/engine#57214)
2024-12-16 brett.morgan@gmail.com Flutter-GPU.md: Fix spelling (flutter/engine#57216)
2024-12-16 mdebbar@google.com [web] Don't close image source too early (flutter/engine#57200)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160215,2024-12-13T01:54:10Z,2024-12-16T22:10:44Z,matanlurey,2,0,4,773,7,1,1,['tool'],328113.0,0,332197.0,0,0,0,0,849570.838936,,1,4,0,False,['matanlurey'],"Ping @andrewkolos @jonahwilliams :) @andrewkolos Your feedback is still welcome, and I'm happy to make adjustments in a follow-up PR.LGTM",LGTM,"Part of https://github.com/flutter/flutter/issues/160043, makes it easier to add https://github.com/flutter/flutter/pull/160131.

This PR has no functional changes to any of the code, but does refactor both the code and tests:

- Makes a number of always non-null but not migrated to non-null properties, well, not-null
- Creates two concrete methods (`update` and `compare` versus a positional nullable boolean)
- Uses type signatures instead of `String?` to explain the possible results of the methods
- Renames the mysterious `shellPath` variable to `flutterTesterBinPath`
- Expands and rewrites internally-facing doc comments
- Moves `WebRenderer` environment variable setting to `flutter_web_platform.dart`
- Makes the tests have less duplication, and check for update/compare cases

After this PR, I can use it in the non-web branch of the Flutter tool without any hacks or TODOS :)

/cc @eyebrowsoffire (trivial web refactoring), @camsim99 (changes being made to tool).",
160380,2024-12-16T20:49:46Z,2024-12-16T22:43:50Z,matanlurey,2,0,3,127,14,2,2,"['a: tests', 'framework', 'd: api docs', 'd: examples', 'f: integration_test']",3561.0,0,6847.0,0,0,0,0,847585.424982,,1,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160380, due to Pull request flutter/flutter/160380 is not in a mergeable state. auto label is removed for flutter/flutter/160380, due to - The status or check suite [Mac web_tool_tests](https://cr-buildbucket.appspot.com/build/8728358376105854049) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_tests_general](https://cr-buildbucket.appspot.com/build/8728358376105854065) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 tool_tests_commands](https://cr-buildbucket.appspot.com/build/8728358376105854081) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8728358376195683425) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_integration_tests_4_5](https://cr-buildbucket.appspot.com/build/8728358376195683441) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_integration_tests_3_5](https://cr-buildbucket.appspot.com/build/8728358376195683457) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_integration_tests_2_5](https://cr-buildbucket.appspot.com/build/8728358376195683473) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac tool_integration_tests_1_5](https://cr-buildbucket.appspot.com/build/8728358376273675553) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 tool_host_cross_arch_tests](https://cr-buildbucket.appspot.com/build/8728358376273675569) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac framework_tests_widgets](https://cr-buildbucket.appspot.com/build/8728358376319577969) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 framework_tests_misc](https://cr-buildbucket.appspot.com/build/8728358376319577985) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac framework_tests_libraries](https://cr-buildbucket.appspot.com/build/8728358376326953793) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 build_tests_4_4](https://cr-buildbucket.appspot.com/build/8728358376326953825) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 build_tests_3_4](https://cr-buildbucket.appspot.com/build/8728358376398060769) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac_arm64 build_tests_2_4](https://cr-buildbucket.appspot.com/build/8728358376398060785) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac customer_testing](https://cr-buildbucket.appspot.com/build/8728358377094268881) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM Non blocking nit: I would prefer if all of these sections did not start with a new line. It helps my brain understand that the comment and parts below it are part of ""dependencies"" and not a new section. ","LGTM Non blocking nit: I would prefer if all of these sections did not start with a new line. It helps my brain understand that the comment and parts below it are part of ""dependencies"" and not a new section. ","First part of https://github.com/flutter/flutter/issues/160379.

This should be a NOP, because without the `explicit-package-dependencies` feature flag, all dependencies (including dev_dependencies) are considered, for the purposes of plugins, non-dev dependencies.

This change prepares for flipping that flag, so when the flip occurs, it is _also_ a NOP for these tests.

",
160174,2024-12-12T16:13:26Z,2024-12-16T21:43:42Z,bkonyi,2,0,9,1159,71,1,2,"['a: tests', 'tool', 'framework', 'a: internationalization', 'd: api docs', 'd: examples', 'platform-web', 'f: integration_test']",5005.0,0,365419.0,0,0,0,0,851194.787968,,1,9,0,False,['christopherfujino'],"More errors, however:

```
warning • Unnecessary cast • dev/bots/suite_runners/run_framework_tests.dart:117:39 • unnecessary_cast
warning • Unnecessary cast • dev/devicelab/bin/tasks/build_android_host_app_with_module_aar.dart:398:40 • unnecessary_cast
warning • Unnecessary cast • dev/devicelab/bin/tasks/build_android_host_app_with_module_source.dart:373:40 • unnecessary_cast
   info • Use 'const' with the constructor to improve performance • packages/flutter_tools/lib/src/base/os.dart:539:7 • prefer_const_constructors
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/android/android_gradle_builder_test.dart:690:56 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/base/analyze_size_test.dart:79:54 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/base/analyze_size_test.dart:163:54 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/base/analyze_size_test.dart:253:98 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/base/os_test.dart:578:61 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:41:42 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:52:45 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:83:49 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:90:53 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:119:49 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:129:53 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_test.dart:177:42 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_validator_test.dart:531:59 • unnecessary_non_null_assertion
warning • The '!' will have no effect because the receiver can't be null • packages/flutter_tools/test/general.shard/intellij/intellij_validator_test.dart:567:56 • unnecessary_non_null_assertion
``` To fix the gradle lockfiles, you'll have to run this script:

https://github.com/flutter/flutter/blob/master/dev/tools/bin/generate_gradle_lockfiles.dart

With the invocation `dart generate_gradle_lockfiles.dart --no-gradle-generation --no-exclusion`.LGTM LGTM",LGTM LGTM,Fixes: https://github.com/flutter/flutter/issues/160055,
160376,2024-12-16T20:03:40Z,2024-12-16T21:18:10Z,engine-flutter-autoroll,0,0,5,2,1,1,1,['engine'],,0,4472.0,0,0,0,0,852728.018765,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/d373a934d413...0dfbd04106ed

2024-12-16 skia-flutter-autoroll@skia.org Roll Skia from 8c1e2bf9492c to 8054b098b5cd (5 revisions) (flutter/engine#57197)
2024-12-16 goderbauer@google.com Reland 'Delete stale package_config.json in gclient sync hook' (flutter/engine#57218)
2024-12-16 MyriadSoft@users.noreply.github.com docs: Fix RGB565 format documentation and bit masks (flutter/engine#57210)
2024-12-16 jonahwilliams@google.com [Impeller] disable AHB swapchains on all platforms. (flutter/engine#57213)
2024-12-16 jonahwilliams@google.com [Impeller] fix Adreno precision issue in gaussian downsample. (flutter/engine#57212)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159993,2024-12-09T20:52:18Z,2024-12-09T21:44:11Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,604995.0,0,0,0,0,854087.473808,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/a8c08bc9b909...37a7a144b864

2024-12-09 robert.ancell@canonical.com Make fl_key_channel_responder_handle_event async (flutter/engine#56959)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160266,2024-12-13T21:01:33Z,2024-12-16T19:53:15Z,christopherfujino,0,0,1,1,1,1,1,[],,0,256558.0,0,0,0,0,856370.929064,,1,1,0,False,[],,,"I fixed the autoroller in https://github.com/flutter/flutter/pull/160059 but forgot to mark the shard non-bring-up. Note, it's currently failing in post-submit, but only because bringUp shards run in the staging pool, which does not have access to the GitHub access token necessary for the roller to operate.",
160369,2024-12-16T19:10:20Z,2024-12-16T20:41:33Z,andrewkolos,2,2,3,241,4,2,1,['tool'],748.0,0,5476.0,0,0,0,0,854926.093543,,0,3,0,False,"['andrewkolos', 'flutter-dashboard[bot]']","Oops, I missed some things. I will re-request review when this is actually ready This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

",,"Helps https://github.com/flutter/flutter/issues/150575

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I don't know if anyone ever looked for these events, but they are sure gone by now if they ever existed 🤷  I don't immediately see any tests that make sure we actually do show the analytics consent message when we should. I filed and self-assigned https://github.com/flutter/flutter/issues/160374 as a follow-up item."
159538,2024-11-27T09:20:11Z,2024-12-16T20:13:53Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: tech-debt', 'c: flake']",,0,1680824.0,0,0,0,0,856587.549822,,0,1,0,False,[],LGTM,LGTM,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux_android_emu android_defines_test""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Linux_android_emu%20android_defines_test%22).
This test can be marked as unflaky.
",
160108,2024-12-11T19:03:11Z,2024-12-16T20:00:37Z,gmackall,2,1,4,6,2,2,1,['tool'],790.0,0,435449.0,0,0,0,0,857384.14308,,0,4,0,False,"['matanlurey', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: This class of change is _not_ test-exempt. On the condition that the product team feels this fix is critical to hot-fix today/tomorrow, it is test-exempt barring that we file an issue (and immediately follow-up, i.e. the _next_ immediate task).",,"https://github.com/flutter/flutter/pull/159770 regressed the module templates to use a hardcoded `8.7.0` and `1.8.22` as the AGP and Kotlin versions respectively. This PR returns them to using the template context values.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","The [template rendering is skipped](https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/template.dart#L324) for `.copy.tmpl` files, which is why this file is renamed (we need to render the AGP and Kotlin version now).

"
159990,2024-12-09T19:24:18Z,2024-12-09T20:18:23Z,engine-flutter-autoroll,0,0,5,2,1,1,1,['engine'],,0,606675.0,0,0,0,0,857691.719516,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/7dd1cffaad06...a8c08bc9b909

2024-12-09 jonahwilliams@google.com [Impeller] use ES3 extension for external images. (flutter/engine#57018)
2024-12-09 skia-flutter-autoroll@skia.org Roll Dart SDK from 264c0c6f5894 to 9694974b6d41 (1 revision) (flutter/engine#57066)
2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from afa77852dcde to e78dd0265002 (1 revision) (flutter/engine#57063)
2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from 0971c208bb9f to afa77852dcde (1 revision) (flutter/engine#57061)
2024-12-09 skia-flutter-autoroll@skia.org Roll Dart SDK from c7e47c6c5df6 to 264c0c6f5894 (1 revision) (flutter/engine#57060)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160223,2024-12-13T03:32:25Z,2024-12-16T19:56:52Z,AlexV525,8,2,7,70,2,2,1,['tool'],21728.0,1,318269.0,0,0,0,0,857610.724877,,2,7,0,False,"['AlexV525', 'jonahwilliams', 'sigurdm', 'bkonyi']","The ""historical reason"" is a huge barrier to me in the first place. :( > The ""historical reason"" is a huge barrier to me in the first place. :(

Not sure I follow? Do you depend on the historical behavior?


 > Not sure I follow? Do you depend on the historical behavior?

The comment says path segments were handled due to the historical reason so I've kept it and added the extra path. I'd love to get rid of it but also would like hear more thoughts. Yeah - I propose we get rid of it now. We have printed that warning so long, that it should be ok - there is an alternative (the --directory flag).

So - if the flutter tool owners are happy, then we from the pub team propose to remove all that special casing > So - if the flutter tool owners are happy, then we from the pub team propose to remove all that special casing

cc @christopherfujino @andrewkolos  I think it's reasonable remove the special casing.

I lack historical context here, but I'm wondering why we even need these wrappers around `pub` in the tool in the first place? It feels like for most cases (not including l10n handling), it would be sufficient to just use `pub`'s arg parser for the help message and forward invocations directly to `package:pub` like we do in the Dart CLI. For pub get I believe flutter generates some additional data for plugins, so the wrapper does have some value. But it should just pass all the args though. I think we've done this in other places too. The additional directory wrapper condition has been removed other than `get`.I would prefer removing all the special casing, and just pass the arguments to pub.

We have warned about this for a long time now.

@bkonyi might be the one to decide.","I would prefer removing all the special casing, and just pass the arguments to pub.

We have warned about this for a long time now.

@bkonyi might be the one to decide.","- Resolves https://github.com/flutter/flutter/issues/144898
- Resolves https://github.com/flutter/flutter/issues/160145

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Not sure why `add` will evaluate the Android embedding. Let's remove the entire then-branch here:
```dart
target = findProjectRoot(globals.fs, rest.single);
if (target == null) {
  throwToolExit('Expected to find project root in ${rest.single}.');
}

rootProject = FlutterProject.fromDirectory(globals.fs.directory(target));
```"
160371,2024-12-16T19:20:40Z,2024-12-16T19:52:14Z,goderbauer,0,0,1,206,4,1,1,"['framework', 'f: material design', 'c: tech-debt']",,0,1897.0,0,0,0,0,857889.150398,,0,1,0,False,[],LGTM,LGTM,"* removes an extra `)` in `app_bar.dart`
* Moves class definitions and getter definition out of the `main` method in `widget_state.dart` (defining classes/getters inside of methods is not allowed in Dart)

The formatter was stumbling over these syntax errors.",
160356,2024-12-16T16:49:43Z,2024-12-16T19:50:50Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,10869.0,0,0,0,0,857974.698574,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/330210f44aa6...d373a934d413

2024-12-16 jason-simmons@users.noreply.github.com Disable RBE in the GN flags for wasm_release builds in the linux_web_engine builder (flutter/engine#57204)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160367,2024-12-16T18:47:34Z,2024-12-16T19:35:25Z,matanlurey,0,0,1,46,2,1,1,['tool'],,0,2876.0,0,0,0,0,858896.785972,,0,1,0,False,[],,,"Without this bug fix, when flipping the flag a lot of things blow up :)

(https://github.com/flutter/flutter/pull/160289 as an example of needing this)",
160260,2024-12-13T18:41:11Z,2024-12-13T20:29:12Z,gmackall,2,0,3,401,43,1,1,"['a: tests', 'platform-android', 'tool', 'framework', 'd: examples', 'f: integration_test']",4613.0,0,261898.0,0,0,0,0,859459.336517,,0,3,0,False,['reidbaker'],"approved % test failures which I think are unrelated I think we need a follow up pr here to exclude .cxx folders from git in our templates. 
** /.cxx
https://stackoverflow.com/questions/66129837/about-the-gitignore-question-cxx-folder-in-the-android-project
",,"Relands https://github.com/flutter/flutter/pull/159756.

The original caused some stderr because
1. the configurable `ndkVersion` value that AGP provides used to be null by default.
2. Now it is not, instead it has a default value
3. `integration_test` doesn't actually use the NDK, but default for `integration_test` was higher that `flutter.ndkVersion`
4. We have code that checks if a plugin uses a higher ndk version and tells you to consider upgrading  https://github.com/flutter/flutter/blob/master/packages/flutter_tools/gradle/src/main/groovy/flutter.groovy#L921

This reverts the revert, and then aligns `integration_test`'s NDK version (which again, it doesn't actually use, so I'm not too concerned about the downgrade) with `flutter.ndkVersion`.

It also starts using the `flutter.min/compile/ndkVersion` values in `integration_test`, which was unrelated to the original pr. Can remove if you think it should land separately.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160368,2024-12-16T19:07:26Z,2024-12-16T19:16:47Z,matanlurey,0,0,1,13,1,1,1,"['tool', 'warning: land on red to fix tree breakage']",,0,562.0,0,0,0,0,860020.681599,,1,1,0,False,[],👍 ,👍 ,"Towards https://github.com/flutter/flutter/issues/157640.

As far as I can tell, these test cases add no value to be running specifically on Windows (they are testing general tool functionality), and it's on [Windows specifically that the tests have the most problems with OOM and timeout](https://ci.chromium.org/ui/p/flutter/builders/luci.flutter.prod/Windows%20tool_integration_tests_2_9).",
160293,2024-12-14T02:15:13Z,2024-12-16T18:23:09Z,itsjustkevin,1,2,5,8,2,3,3,"['engine', 'autosubmit']",3.0,0,230876.0,0,0,0,0,863240.178825,,0,5,0,False,['flutter-dashboard[bot]'],"This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed.nit question, but LGTM still lgtm","nit question, but LGTM still lgtm","# Flutter stable 3.27.1 Framework

## Scheduled Cherrypicks

","is the link on 32 and 33 correct, or should they have the issue number in the text? thanks for the catch, fixed. "
159978,2024-12-09T15:01:20Z,2024-12-09T15:48:00Z,engine-flutter-autoroll,0,0,20,2,1,1,1,[],,0,608063.0,0,0,0,0,872087.329285,,0,20,0,False,[],,,"
https://github.com/flutter/packages/compare/bc0c22d57910...45bcc3210fcc

2024-12-05 737941+loic-sharma@users.noreply.github.com [various] Add Swift Package Manager integration to Google sign in example apps (flutter/packages#8230)
2024-12-05 engine-flutter-autoroll@skia.org Roll Flutter from e1e4ee9a016e to ab5b20c16d56 (7 revisions) (flutter/packages#8236)
2024-12-05 stuartmorgan@google.com [various] Update iOS/macOS Pigeon versions (flutter/packages#8226)
2024-12-05 ditman@gmail.com [ci] Adds google_adsense to labeler.yml (flutter/packages#8231)
2024-12-05 tarrinneal@gmail.com [pigeon] adds event channel support for kotlin and swift (flutter/packages#7892)
2024-12-04 50541317+sokoloff06@users.noreply.github.com [google_adsense] (Experimental) AdSense plugin for Flutter Web (flutter/packages#6871)
2024-12-04 737941+loic-sharma@users.noreply.github.com [various] Add Swift Package Manager integration to image picker examp… (flutter/packages#8227)
2024-12-04 737941+loic-sharma@users.noreply.github.com [pigeon] Add Swift Package Manager integration to example app (flutter/packages#8225)
2024-12-04 pawel.jakubowski@leancode.pl [video_player_avfoundation] Split iOS native code into multiple files (flutter/packages#8171)
2024-12-04 engine-flutter-autoroll@skia.org Roll Flutter from e64ee5de7cdd to e1e4ee9a016e (18 revisions) (flutter/packages#8224)
2024-12-04 737941+loic-sharma@users.noreply.github.com [various] Add Swift Package Manager integration to example apps (flutter/packages#8219)
2024-12-04 stuartmorgan@google.com [google_maps_flutter] Annotate deprecated member usage (flutter/packages#8214)
2024-12-04 10687576+bparrishMines@users.noreply.github.com [pigeon] Fixes channel names of the named constructors of ProxyApis.  (flutter/packages#8201)
2024-12-03 stuartmorgan@google.com [local_auth] Add compatibility with intl 0.20 (flutter/packages#8217)
2024-12-03 stuartmorgan@google.com [various] Replaces deprecated `whereNotNull()` (flutter/packages#8215)
2024-12-03 engine-flutter-autoroll@skia.org Roll Flutter from 08e26a3ffcd7 to e64ee5de7cdd (20 revisions) (flutter/packages#8213)
2024-12-02 stuartmorgan@google.com [shared_preferences] Limit Android decoding (flutter/packages#8187)
2024-12-02 49699333+dependabot[bot]@users.noreply.github.com [camera_android]: Bump androidx.annotation:annotation from 1.9.0 to 1.9.1 in /packages/camera/camera_android/android (flutter/packages#8164)
2024-12-02 49699333+dependabot[bot]@users.noreply.github.com [gradle]: Bump org.jetbrains.kotlin:kotlin-gradle-plugin from 2.0.21 to 2.1.0 in /packages/pigeon/platform_tests/test_plugin/android (flutter/packages#8205)
2024-11-28 engine-flutter-autoroll@skia.org Roll Flutter from fae695ed6198 to 08e26a3ffcd7 (19 revisions) (flutter/packages#8197)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159976,2024-12-09T14:36:18Z,2024-12-09T15:18:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605955.0,0,0,0,0,875697.745793,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/6b2794ee581e...7dd1cffaad06

2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from 477c83cf10f8 to 0971c208bb9f (1 revision) (flutter/engine#57059)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159970,2024-12-09T12:36:17Z,2024-12-09T13:20:01Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,605956.0,0,0,0,0,882898.117908,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/28d9aec2e024...6b2794ee581e

2024-12-09 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from BFJjwUVtBDA2mqqpH... to tVShMDVFeKJFcDFHJ... (flutter/engine#57058)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from BFJjwUVtBDA2 to tVShMDVFeKJF

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159968,2024-12-09T10:38:18Z,2024-12-09T11:20:55Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,605835.0,0,0,0,0,890099.661859,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/13231e3e48d5...28d9aec2e024

2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from ac432c094232 to 477c83cf10f8 (1 revision) (flutter/engine#57057)
2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from c80d6609b95b to ac432c094232 (1 revision) (flutter/engine#57056)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
154675,2024-09-05T16:37:03Z,2024-09-24T22:12:32Z,nick9822,4,5,3,47,2,3,3,"['framework', 'f: scrolling', 'autosubmit']",451916.0,0,8798893.0,1,0,0,0,883516.684568,,1,3,0,False,"['nick9822', 'priyankabambharoliya-official', 'goderbauer']","(triage): Could you please take a look at the analyzer check and fix what it is complaining about? Thank you! @goderbauer fixed it, now `Linux analyze` is passing. But `Windows build_tests_6_7` is failing but doesn't seem to be related to the newline commit. @victorsanni did the formatting changes as suggested. After this update, the issue occurs when we use keyboard dismiss behaviour on drag
`keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag`

how to fix this issue? 

see this video

https://github.com/user-attachments/assets/583417ea-4def-4da0-bad2-cf2bf59b4b9c

This PR is identical to https://github.com/flutter/flutter/pull/150317. While that PR was created earlier, the author of that PR has not responded in a while, and we'd like to go forward with this change (as per the conversation in the other PR).

cc @justinmc  LGTM pending formatting nits. ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)","This PR is identical to https://github.com/flutter/flutter/pull/150317. While that PR was created earlier, the author of that PR has not responded in a while, and we'd like to go forward with this change (as per the conversation in the other PR).

cc @justinmc  LGTM pending formatting nits. ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)","fixes #154515, #150048 and other similar issues where user non-draggable scrolls (mouse wheel, two-fingers) should behave same as draggable ones.

In this PR, scrollUpdateNotification.dragDetails check is removed and it has a supporting test which simulates a scroll which does not produce a drag.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","My understanding of what's happening here is that the widget is now always unfocused when it is being scrolled? If that's correct, might there be cases where that behavior is undesired? @victorsanni Correct it will be unfocused. I am not aware of any scenario where this is undesired, now it is as good as scroll with a drag which removes focus from the field when scrollbar is dragged. `huycozy` pointed to another issue #150048 which is similar to this and there is a discussion on this. ```suggestion
  testWidgets('keyboardDismissBehavior on scroll without a drag test', (WidgetTester tester) async {
``` ```suggestion
                const SizedBox(height: 2000),
``` ```suggestion
    await tester.sendEventToBinding(testPointer.scroll(Offset(scrollStart.dx, scrollStart.dy - 100)));
```"
159964,2024-12-09T06:58:17Z,2024-12-09T07:51:23Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608236.0,0,0,0,0,900900.385773,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/292146ab2fda...13231e3e48d5

2024-12-09 skia-flutter-autoroll@skia.org Roll Skia from 96b018c1088a to c80d6609b95b (1 revision) (flutter/engine#57055)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160323,2024-12-15T23:35:34Z,2024-12-16T00:57:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,4903.0,0,0,0,0,925997.620184,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/159090f6f40f...330210f44aa6

2024-12-15 robert.ancell@canonical.com Migrate FlEventChannel tests to FlMockBinaryMessenger (flutter/engine#57150)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160321,2024-12-15T22:26:36Z,2024-12-15T23:20:21Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,3227.0,0,0,0,0,931811.722762,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/a9f7fa8ca613...159090f6f40f

2024-12-15 robert.ancell@canonical.com Migrate FlMethodChannel tests to FlMockBinaryMessenger (flutter/engine#57146)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159959,2024-12-08T21:47:17Z,2024-12-08T22:31:22Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,607932.0,0,0,0,0,934266.405693,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/82d7c1b2c268...292146ab2fda

2024-12-08 robert.ancell@canonical.com Cleanup refactoring in FlKeyboardManager (flutter/engine#56956)
2024-12-08 skia-flutter-autoroll@skia.org Roll Skia from 76c51c6e13df to 96b018c1088a (2 revisions) (flutter/engine#57052)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160311,2024-12-14T22:59:17Z,2024-12-15T17:48:07Z,M97Chahboun,1,0,1,1,1,2,2,[],46051.0,0,67732.0,0,0,0,0,951747.675192,,0,1,0,False,['M97Chahboun'],"@nate-thegrate 
Thanks for your support 👍🏾Thanks for your contributions! LGTM, thank you for your contributions","Thanks for your contributions! LGTM, thank you for your contributions",Adds [Mohammed Chahboun](https://github.com/flutter/flutter/pulls/M97Chahboun) to authors,
160193,2024-12-12T20:18:07Z,2024-12-13T16:28:16Z,nate-thegrate,0,5,4,89,2,2,1,"['framework', 'f: material design']",,0,251389.0,0,0,0,0,950561.036277,,0,4,0,False,[],LGTM with nits,LGTM with nits,"@ayyoub-coder gave a fantastic summary of the problem in #160177: if a `Container` doesn't have a child or unbounded constraints, it will expand to fill its parent, whereas a `ColoredBox` defaults to zero size.

I also noticed that in the main branch, the `PositionedDirectional` widget has an unused `width` parameter, and instead builds a `SizedBox` child for it.

This pull request cleans up the `Stepper` subtree a bit and allows the connector to display properly.

fixes #160156","```suggestion
    }
  });
``` 
Is this required after `pumpWidget`? It's not, thanks for catching this! It's weird—GitHub isn't showing that any suggestion is being made, despite how the comment is attached to a blank line.

![invalid](https://github.com/user-attachments/assets/17f503f5-5fdc-4d99-be87-07c991f5df23)

(should be fixed in https://github.com/flutter/flutter/pull/160193/commits/d70a6b5f552222336cb6e7ee42b76e33fd2b24c8) That's weird. "
159950,2024-12-08T14:48:19Z,2024-12-08T15:33:20Z,engine-flutter-autoroll,0,0,2,4,2,1,1,['engine'],,0,607870.0,0,0,0,0,959468.458132,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/2ed05f0068e2...82d7c1b2c268

2024-12-08 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from __h1RRphItwU5H0tL... to BFJjwUVtBDA2mqqpH... (flutter/engine#57050)
2024-12-07 skia-flutter-autoroll@skia.org Roll Skia from d1e261ca7f6f to 76c51c6e13df (3 revisions) (flutter/engine#57042)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from __h1RRphItwU to BFJjwUVtBDA2

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159312,2024-11-22T00:42:10Z,2024-11-27T00:01:04Z,MitchellGoodwin,1,3,2,108,4,2,1,"['framework', 'f: material design', 'f: cupertino', 'f: routes']",2031660.0,0,2031661.0,0,0,0,0,968848.01018,,0,2,0,False,['RepliedSage11'],"@justinmc Hi, is there a timeline to get this as a hot fix for 3.27 stable?LGTM 👍 

Thanks for the quick fix for this.","LGTM 👍 

Thanks for the quick fix for this.","Fixes #159289

Cupertino and Material routes were looking to see if the next route was a full screen dialog route, and not transitioning accordingly. However with the updates to allow [mixed transitions in an app](https://github.com/flutter/flutter/pull/150031), any route will try and transition if a delegatedTransition is available. This PR makes it so that Cupertino and Material routes that are fullscreen dialogs will use `canTransitionFrom` to tell the previous route not to transition.

Before:
[388677067-d301238d-6615-42a7-b60a-611c61136d88.webm](https://github.com/user-attachments/assets/eea99ee9-0bc8-4981-a950-08f99a7fdb3e)

After:

https://github.com/user-attachments/assets/7deb5143-cd67-4696-95ec-9d7df329dfa4



## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Nit: [Avoid anonymous parameter names](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-anonymous-parameter-names), though I know we don't always follow this in tests...

Also a few other instances below. Why are two `pump`s needed here? Sorry if this is just copying another test that I already asked about, this looks familiar but I can't remember. An extra pump before a pump with a duration is necessary to push the route and begin the animation."
159929,2024-12-07T16:52:18Z,2024-12-07T17:50:28Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,607222.0,0,0,0,0,1039079.076344,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/fd41747c23a9...2ed05f0068e2

2024-12-07 skia-flutter-autoroll@skia.org Roll Skia from b37f1430f87a to d1e261ca7f6f (1 revision) (flutter/engine#57039)
2024-12-07 skia-flutter-autoroll@skia.org Roll Dart SDK from 838ed940b056 to c7e47c6c5df6 (1 revision) (flutter/engine#57038)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159920,2024-12-07T03:44:18Z,2024-12-07T04:35:33Z,engine-flutter-autoroll,0,0,3,4,2,1,1,['engine'],,0,609018.0,0,0,0,0,1084563.434779,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/1e63abec8faf...fd41747c23a9

2024-12-07 skia-flutter-autoroll@skia.org Roll Dart SDK from 67ce49b905f7 to 838ed940b056 (2 revisions) (flutter/engine#57037)
2024-12-07 skia-flutter-autoroll@skia.org Roll Skia from c9e9ce277b80 to b37f1430f87a (1 revision) (flutter/engine#57033)
2024-12-07 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from DDdLABVLcqOv_axv-... to __h1RRphItwU5H0tL... (flutter/engine#57028)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from DDdLABVLcqOv to __h1RRphItwU

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159918,2024-12-07T00:56:17Z,2024-12-07T01:44:16Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,613887.0,0,0,0,0,1089777.474303,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/de53ed532619...1e63abec8faf

2024-12-06 bdero@google.com Cover offset+bounds wrapping in the APNG frame region check. (flutter/engine#57025)
2024-12-06 skia-flutter-autoroll@skia.org Roll Skia from 0d94e966268b to c9e9ce277b80 (3 revisions) (flutter/engine#57024)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160291,2024-12-14T02:02:50Z,2024-12-14T02:49:30Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,2803.0,0,0,0,0,1092068.567352,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/c4e3cc27afef...4e4a430bcd0d

2024-12-14 goderbauer@google.com Fix include path in fuchsia's analysis_options.yaml files (flutter/engine#57203)
2024-12-13 goderbauer@google.com Delete stale package_config.json in gclient sync hook (flutter/engine#57195)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160294,2024-12-14T03:01:50Z,2024-12-14T03:47:57Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2769.0,0,0,0,0,1088562.59757,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4e4a430bcd0d...a9f7fa8ca613

2024-12-14 goderbauer@google.com Adjust some ignores for 'dart format' (flutter/engine#57208)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160290,2024-12-14T01:05:00Z,2024-12-14T01:49:14Z,engine-flutter-autoroll,0,0,5,4,2,1,1,['engine'],,0,2657.0,0,0,0,0,1095686.6712,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/f0ff4f25bda8...c4e3cc27afef

2024-12-13 jason-simmons@users.noreply.github.com [skwasm] Fix implementation of SkwasmPath.relativeLineTo (flutter/engine#57201)
2024-12-13 30870216+gaaclarke@users.noreply.github.com Made compilation error colors come through et. (flutter/engine#57174)
2024-12-13 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from iWMEbVYaNdH8RJmXZ... to iYz_WkWk1uPr8BLSZ... (flutter/engine#57198)
2024-12-13 yjbanov@google.com [web] allow imports to line-break (flutter/engine#57170)
2024-12-13 41930132+hellohuanlin@users.noreply.github.com [ios]limit web view not tappable workaround to a limited depth (flutter/engine#57193)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from iWMEbVYaNdH8 to iYz_WkWk1uPr

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159913,2024-12-06T23:53:19Z,2024-12-07T00:43:17Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,606628.0,0,0,0,0,1100816.807891,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/d42645f3ecde...de53ed532619

2024-12-06 jonahwilliams@google.com [Impeller] store vertex buffers in render pass for gles. (flutter/engine#56991)
2024-12-06 jonahwilliams@google.com [Impeller] Add keep alive for 4 frames in render target cache. (flutter/engine#57020)
2024-12-06 41930132+hellohuanlin@users.noreply.github.com [ios][platform_view] workaround for non-tappable webview (flutter/engine#56804)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160274,2024-12-13T21:22:05Z,2024-12-14T00:10:16Z,matanlurey,4,0,1,16,1,2,2,['tool'],3613.0,0,10094.0,0,0,0,0,1101624.832913,,1,1,0,False,"['auto-submit[bot]', 'matanlurey', 'cbracken']","LGTM, but looks like presubmit is failing.

```
[2024-12-13 13:38:58.319658] [STDOUT] stderr: Package url_launcher:windows references url_laucher_windows:windows as the default plugin, but the package does not exist, or is not a plugin package.
[2024-12-13 13:38:58.319669] [STDOUT] stderr: Ask the maintainers of url_launcher to either avoid referencing a default implementation via `platforms: windows: default_package: url_laucher_windows` or create a plugin named url_laucher_windows.
[2024-12-13 13:38:58.319677] [STDOUT] stderr: 
... etc. ...
```

![Animated GIF of a delivery truck approaching a highway overpass, then failing to meet the height clearance requirement and crashing into it](https://cloud.githubusercontent.com/assets/351029/21152183/2240878e-c11a-11e6-8b55-555e696df8a4.gif) > LGTM, but looks like presubmit is failing.
> 
> ```
> [2024-12-13 13:38:58.319658] [STDOUT] stderr: Package url_launcher:windows references url_laucher_windows:windows as the default plugin, but the package does not exist, or is not a plugin package.
> [2024-12-13 13:38:58.319669] [STDOUT] stderr: Ask the maintainers of url_launcher to either avoid referencing a default implementation via `platforms: windows: default_package: url_laucher_windows` or create a plugin named url_laucher_windows.
> [2024-12-13 13:38:58.319677] [STDOUT] stderr: 
> ... etc. ...
> ```
> 
> ![Animated GIF of a delivery truck approaching a highway overpass, then failing to meet the height clearance requirement and crashing into it](https://cloud.githubusercontent.com/assets/351029/21152183/2240878e-c11a-11e6-8b55-555e696df8a4.gif) [ ![Animated GIF of a delivery truck approaching a highway overpass, then failing to meet the height clearance requirement and crashing into it](https://cloud.githubusercontent.com/assets/351029/21152183/2240878e-c11a-11e6-8b55-555e696df8a4.gif) ](https://cloud.githubusercontent.com/assets/351029/21152183/2240878e-c11a-11e6-8b55-555e696df8a4.gif) [ ](https://cloud.githubusercontent.com/assets/351029/21152183/2240878e-c11a-11e6-8b55-555e696df8a4.gif)

I'm guessing it's a flake, let's try a re-run. auto label is removed for flutter/flutter/160274, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8728631847601900001) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160274, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8728627326584113857) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,Work towards https://github.com/flutter/flutter/issues/160257.,
159909,2024-12-06T22:41:18Z,2024-12-06T23:40:58Z,engine-flutter-autoroll,0,0,7,2,1,1,1,['engine'],,0,607349.0,0,0,0,0,1104418.894329,,0,7,0,False,[],,,"
https://github.com/flutter/engine/compare/31ba1e093a07...d42645f3ecde

2024-12-06 30870216+gaaclarke@users.noreply.github.com Reland: Replaces bespoke call captures from mock gles with gmock (flutter/engine#57019)
2024-12-06 skia-flutter-autoroll@skia.org Roll Skia from c9647f13cded to 0d94e966268b (36 revisions) (flutter/engine#57023)
2024-12-06 chris@bracken.jp iOS: add null check on create impeller context (flutter/engine#56952)
2024-12-06 skia-flutter-autoroll@skia.org Roll Dart SDK from 9c9a333c496c to 67ce49b905f7 (2 revisions) (flutter/engine#57013)
2024-12-06 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""Replaces bespoke call captures from mock gles with gmock (#56995)"" (flutter/engine#57016)
2024-12-06 30870216+gaaclarke@users.noreply.github.com Replaces bespoke call captures from mock gles with gmock (flutter/engine#56995)
2024-12-06 jason-simmons@users.noreply.github.com [Impeller] Require the GLES multisampled_render_to_texture2 extension for offscreen MSAA (flutter/engine#56997)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160280,2024-12-13T22:06:41Z,2024-12-13T23:16:11Z,matanlurey,0,0,1,24,2,1,1,['tool'],,0,4172.0,0,0,0,0,1104872.978527,,1,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/7a5faca0-a701-4e69-bfd2-3d5a66382df9),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/7a5faca0-a701-4e69-bfd2-3d5a66382df9),Towards https://github.com/flutter/flutter/issues/160257.,
160279,2024-12-13T21:59:55Z,2024-12-13T23:19:54Z,matanlurey,1,1,1,129,2,1,1,['tool'],3029.0,0,4801.0,0,0,0,0,1104650.272371,,1,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160279, due to - The status or check suite [Mac tool_integration_tests_3_5](https://cr-buildbucket.appspot.com/build/8728629462042212193) has failed. Please fix the issues identified (or deflake) before re-applying this label.
![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/0a835f74-434e-4cfd-ad26-3921aad711a0)",![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/0a835f74-434e-4cfd-ad26-3921aad711a0),Towards https://github.com/flutter/flutter/issues/160257.,"TIL. Well, more like years ago IL, but forgot about it, and TIL it again."
160278,2024-12-13T21:43:28Z,2024-12-13T22:57:53Z,matanlurey,0,0,1,69,1,1,1,['tool'],,0,4467.0,0,0,0,0,1105973.003731,,1,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/118adb63-cacd-477a-9ab7-355f66e39d4c),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/118adb63-cacd-477a-9ab7-355f66e39d4c),Work towards https://github.com/flutter/flutter/issues/160257.,
160277,2024-12-13T21:33:30Z,2024-12-13T22:45:10Z,matanlurey,0,0,1,15,1,1,1,['tool'],,0,4303.0,0,0,0,0,1106735.358651,,1,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/814533c8-e321-440d-9513-b5c0caf475e6),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/814533c8-e321-440d-9513-b5c0caf475e6),Work towards https://github.com/flutter/flutter/issues/160257.,
160264,2024-12-13T20:57:28Z,2024-12-13T22:38:57Z,matanlurey,0,0,1,10,1,1,1,"['tool', 'a: desktop']",,0,6091.0,0,0,0,0,1107109.521398,,2,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/bfa6ac13-af00-4137-92b5-23593b32e46b),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/bfa6ac13-af00-4137-92b5-23593b32e46b),Work towards https://github.com/flutter/flutter/issues/160257.,
160275,2024-12-13T21:30:30Z,2024-12-13T22:32:26Z,matanlurey,0,0,1,48,2,1,1,['tool'],,0,3719.0,0,0,0,0,1107501.408666,,2,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/b5950ac9-4bd4-4a16-a81c-f4c6bc7e40d4),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/b5950ac9-4bd4-4a16-a81c-f4c6bc7e40d4),Work towards https://github.com/flutter/flutter/issues/160257.,
160273,2024-12-13T21:16:57Z,2024-12-13T22:23:47Z,matanlurey,0,0,1,40,2,1,1,['tool'],,0,4011.0,0,0,0,0,1108022.609695,,2,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/a60d11e1-9bc6-4da1-8766-2d76d735c5a6),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/a60d11e1-9bc6-4da1-8766-2d76d735c5a6),Work towards https://github.com/flutter/flutter/issues/160257.,
160267,2024-12-13T21:06:00Z,2024-12-13T22:23:47Z,matanlurey,0,0,1,17,1,1,1,['tool'],,0,4668.0,0,0,0,0,1108022.690956,,2,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/4eefe414-5e5f-4917-82ff-b9c086ac2778),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/4eefe414-5e5f-4917-82ff-b9c086ac2778),"Work towards https://github.com/flutter/flutter/issues/160257.

Unlike some of the other PRs, this test explicitly _opts-out_ of the flag, as the test itself is testing whether the now deprecated feature works.",
160265,2024-12-13T21:01:06Z,2024-12-13T22:23:47Z,matanlurey,0,0,1,22,1,1,1,['tool'],,0,4961.0,0,0,0,0,1108025.712227,,2,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/517ceb75-f645-494e-9c58-1fd7d4c9deb2),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/517ceb75-f645-494e-9c58-1fd7d4c9deb2),Work towards https://github.com/flutter/flutter/issues/160257.,
160258,2024-12-13T18:22:30Z,2024-12-13T21:16:10Z,matanlurey,0,2,2,19,1,2,1,['tool'],,0,10422.0,0,0,0,0,1112081.230925,,0,2,0,False,[],,,Example of option (2) for https://github.com/flutter/flutter/issues/160257.,s/Depdendencies/Dependencies/ Thanks!
155575,2024-09-23T21:37:40Z,2024-12-12T21:58:00Z,dkwingsmt,4,22,36,543,8,2,1,"['framework', 'a: animation', 'f: cupertino', 'f: routes', 'will affect goldens']",4915672.0,0,6999502.0,0,0,0,0,1109691.506143,,0,36,0,False,"['Piinks', 'dkwingsmt', 'flutter-dashboard[bot]', 'MitchellGoodwin']","(PR Triage): Flyby comment, there are a bunch of failing tests here. 🙃  > I guess the original curve is good enough.

Flyby comment. We've done a good job of matching the curves for most transitions in Cupertino when they are predictable. It becomes fuzzy when a transition is caused by a user gesture, like swiping, or dragging and releasing a page. Spring simulations will really shine in those situations. While fixing the bugs I made some nontrivial changes:
- Added `_kStandardTolerance` so that the animation duration is calculated in a similar way as SwiftUI.
- Added parameter `bool snapToEnd` to `SpringSimulation` so that the position is exactly `end` at the end of transition. A corresponding test is also added

(Also I'm aware that I haven't fix the method name `debugIsDisposed` since I still need your opinion on its name.) Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/155575) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #155575 at sha bf0b62fbf5b08d35af5e4ee0c5b13124e86e009f_

The change and API mostly looks good, left some questions. left some questions LGTM","The change and API mostly looks good, left some questions. left some questions LGTM","This PR makes `TransitionRoute` support driving the animation with `Simulation`. This is needed for Cupertino widgets, since iOS use ""spring simulations"" for a majority of their animations.

This PR also applies the standard spring animation to `CupertinoDialogRoute` (alert dialogs) and `CupertinoModalPopupRoute` (action sheets). (This PR does not yet support customizing the spring parameters or conveniently using the springs for custom routes, which are left for future PRs.)

### Comparison

I tried to create a comparison video for action sheets, however the difference is far less noticeable than I expected. (All clips are precisely aligned at the moment the pointer is lifted.) I guess the original curve _is_ good enough. Nevertheless, the spring simulation is the correct one and we should support it.

Edit: [The comment](https://github.com/flutter/flutter/pull/155575#issuecomment-2489303282) below also mentioned that supporting spring animation will improve the fidelity when the animation is caused by a user gesture. I assume this requires initial speed, which is not supported by this PR but we can add it in the future.

https://github.com/user-attachments/assets/06d2f684-ad1c-4a4d-8663-a561895f45e9

Also, Flutter's response seems to be always a moment slower than SwiftUI, possibly because Flutter requiring two frames to start the animation (one frame to add the transition widget, one frame for the animation to actually progress.) We probably want to solve it in the future.

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","should mention it is in reverse consider use template to dedup it is weird that we provide an end without given them start. Either we give them all the property from animation controller or give them something like animationStatus direction and the subclass can infer these property from animationcontroller I don't think we need to have a explicit getter. We can provide a empty `createSimulation` that returns null, and if subclass's `createSimulation` returns non null, we know they want to use simulation. We will have to document that though. These assert really won't do much as subclass will not call super because the base class implementation will throw. Why do we not applying the curve now? why no super? this seems to be a weird way to determine dispose. Should this be in the base route class and based on the value _disposeCompleter.isCompleted ? Seems a bit weird that we expose this property. Can we avoid this? The curve is now driven by the simulation. `Curves.easeInOut` is basically an approximation of the `SpringSimulation`. The super's buildTransition is:
```dart
  Widget buildTransitions(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation, Widget child) {
    if (_transitionBuilder == null) {
      // Some default transition.
      return FadeTransition(
        opacity: animation,
        child: child,
      );
    }
    return _transitionBuilder(context, animation, secondaryAnimation, child);
  }
```
It's some default fading transition, and should not be applied on top of what we have here for cupertino route. (In fact I kind of think the 
```dart
    if (transitionBuilder != null) {
      return super.buildTransitions(context, animation, secondaryAnimation, child);
    }
```
part should not use super's buildTransitions either, but it's not the focus of this PR.) This is simply a refactor, see `createAnimationController` before the PR (the left column) and other methods. I refactored this because `_transitionCompleter` isn't public and I wanted this extra check in my overridden `createSimulation`. We can, but I don't find it especially weird. If a route is driven by a simulation, then it's very reasonable for query the current simulation in progress. In fact, some cases might even need to the simulation object to access its status such as `isDone` for when the animation is considered completed (since it might have a very long tail) or `dx` to smoothly connect simulations.

I can remove this parameter until we really need it, if you insist. What do you think? oh I see, this is some weird code structure. If you don't call super, 
CupertinoDialogRoute.transitionBuilder will get ignored no? I am fine with having this extra public method, but my concern is that disposed should be mapped to _disposeCompleter not _transitionCompleter. If you really meant to use transitionCompleter, I think this method needs a better name I am worry about exposing transient state, this may be error prone if developer calls this at the wrong time. If this is useful in some callback, we should consider it as a pass in parameter to those call back. I vote for removing this now and expose it in the future once we have more use cases. further looking at the code, is the intention that the CupertinoDialogRoute.transitionbuilder will override all transition in this class?

 > further looking at the code, is the intention that the CupertinoDialogRoute.transitionbuilder will override all transition in this class?

Yeah, that's how I comprehend the current code. The case where `transitionBuilder` has been processed at the beginning of the method. The reason why I chose this name mostly comes from its assert message:
```dart
assert(!_transitionCompleter.isCompleted, 'Cannot reuse a $runtimeType after disposing it.');
```
I'm happy to accept other names, but then I think this assertion message would be wrong.

Considering the completer's Future has the following comment:
```dart
  /// This future completes only once the transition itself has finished, after
  /// the overlay entries have been removed from the navigator's overlay.
  ///
  /// This future completes once the animation has been dismissed. That will be
  /// after [popped], because [popped] typically completes before the animation
  /// even starts, as soon as the route is popped.
```

What do you think of  the name `debugTransitionFinished`? (We might still want to change the assert message though...) the debugTransitionFinished sounds good to me sg"
160253,2024-12-13T17:42:52Z,2024-12-13T20:59:42Z,itsjustkevin,1,4,2,14,1,3,2,['autosubmit'],48.0,0,11811.0,0,0,0,0,1113072.090796,,0,2,0,False,['itsjustkevin'],@jmagman and @reidbaker could you check the changelog entries for 3.24.5 to make sure they make sense?LGTM with nit,LGTM with nit,Updates changelog on stable.  Updates here will be merged to master. ,"```suggestion
- [flutter/158125](https://github.com/flutter/flutter/pull/158125) - [iOS] Fixed a tool issue causing failures when `flutter build ios-framework --xcframework` copies Flutter debug symbols.
```
 It is probably more helpful to link to https://github.com/flutter/engine/pull/55277  The already included pull request includes more information than the one you linked.  

We typically link the pull request or issue that matches the template.  Would you suggest replacing the link with the one you provided? Merging this in the current state, will update further next week if necessary."
160059,2024-12-11T01:09:05Z,2024-12-13T19:45:15Z,christopherfujino,2,0,2,119,3,1,1,[],64799.0,0,240278.0,0,0,0,0,1117032.328063,,1,2,0,False,['christopherfujino'],"Tested with https://ci.chromium.org/ui/p/flutter/builders/prod.shadow/Linux%20packages_autoroller/10/infra

Oops, this failed. Added `dart pub get`, and another LED build: https://ci.chromium.org/ui/p/flutter/builders/prod.shadow/Linux%20packages_autoroller/11/infra

Which succeeded: https://ci.chromium.org/ui/p/flutter/builders/prod.shadow/Linux%20packages_autoroller/11/infra

And created: https://github.com/flutter/flutter/pull/160212

The fact that the PR has failures is expected, it means we need to manually make code changes for the new pub packages. These failures, before this PR, would cause the roller to fail however.",,Avoid situations like https://github.com/flutter/flutter/issues/160055,
159452,2024-11-25T23:02:30Z,2024-12-13T18:53:09Z,chunhtai,1,10,5,405,2,5,3,['tool'],20.0,0,1540243.0,0,0,0,0,1120663.152221,,0,5,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.This looks great to me, thanks for following up on the suggestion! Sorry for the distraction on retries. thank you for refactoring this code!","This looks great to me, thanks for following up on the suggestion! Sorry for the distraction on retries. thank you for refactoring this code!","fixes https://github.com/flutter/flutter/issues/153893

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I was talking to @johnmccutchan and he indicated we should be removing retries from our system not adding in layers of retries.  I think there is merit to the rest of this pr without the retry logic. 

Are we hitting the network or something else here that would cause us to expect flakey connnections.  I am mostly copying code over from other gradle builder. Should I remove the retry logic and directly throw for all the gradle builder in this file? The gradle error handlers are defined in https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/android/gradle_errors.dart. Retries are triggered for the handlers that return `GradleBuildStatus.retry`. It looks like there might be a couple that are not network related, but the file seems to have comments with context that would help a deeper audit. 1. networkErrorHandler <- network failure
2. zipExceptionHandler <- corrupted local cache
3. sslExceptionHandler <- network failure
4. remoteTerminatedHandshakeHandler <- network failure
5. couldNotOpenCacheDirectoryHandler <- cache folder busy

These are the handlers that will retry. They all sound valid for me, except for (2) maybe we can do a pre clean up Question (because I haven't used `ProcessUtils.stream`

The docs say
```
  /// If [filter] is null, no lines are removed.
  ///
  /// If [filter] is non-null, all lines that do not match it are removed. If
  /// [mapFunction] is present, all lines that match [filter] are also forwarded
  /// to [mapFunction] for further processing.
```

I'm assuming that if `filter` is null, all lines get passed to `mapFunction` (i.e., not just that no lines are removed, but that they are all forwarded?) Is that correct? (I noticed afterwards that this was just copied over, so if you happen to know feel free to reply but I'll assume yes because it was already written this way) On closer look, we will need to move the handling of the `configOnly` flag to keep the behavior identical.

Before, this early return would happen after `_gradleUtils.getExecutable(project),`, but now it happens before, which impacts the creation of the `gradlew` file.  > zipExceptionHandler <- corrupted local cache

I suspect this is due to a failed download (we unzip right after downloading) I think it makes sense to keep the call to `_gradleUtils.getExecutable(project)` that was before the `if (configOnly)...`, but keep the returned path in a variable and then modify `_runGradleTask` to take that path to the gradle executable as an argument (and then remove the call to `_gradleUtils.getExecutable(project)` that currently exists in `_runGradleTask` Did this via the github ui in https://github.com/flutter/flutter/pull/159452/commits/5d6ed9221f8d559f788bee58f6b7ccce053a0034, will keep an eye on tests 🙏 "
160254,2024-12-13T17:47:26Z,2024-12-13T18:33:18Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2754.0,0,0,0,0,1121857.147515,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3c263a38f56b...f0ff4f25bda8

2024-12-13 sstrickl@google.com Add entry-point annotations for test-only code. (flutter/engine#57158)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160239,2024-12-13T08:35:51Z,2024-12-13T12:08:18Z,bleroux,0,0,1,111,2,1,1,"['framework', 'f: material design']",,0,26695.0,0,0,0,0,1131011.429736,,0,1,0,False,[],LGTM!,LGTM!,"## Description

This PR fixes `NavigationDrawerDestination.backgroundColor` obscuring ink well splashes and overlay.
Before this PR the destination background color was renderer in a `ColoredBox` which hides the ink well effects. This PR replaces the `ColorsBox` with an `Ink`.

## Related Issue

Fixes [NavigationDrawerDestination backgroundColor obscures interaction states](https://github.com/flutter/flutter/issues/160109)

## Tests

Updates 1 test.",
136359,2023-10-11T13:02:51Z,2023-10-16T08:48:13Z,TahaTesser,2,0,1,68,2,1,1,"['framework', 'f: material design', 'autosubmit']",407818.0,0,37066962.0,0,0,0,0,1140325.3603,,0,1,0,False,"['auto-submit[bot]', 'lucasjinreal']","auto label is removed for flutter/flutter/136359, due to - The status or check suite [Linux android views](https://ci.chromium.org/b/8767102164518723137) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 <img width=""210"" alt=""image"" src=""https://github.com/user-attachments/assets/d76d5679-44b0-4365-89f1-c06f35ffb8f6"" />

the hover color still, can not be set...LGTM",LGTM,"fixes [NavigationRail can't have a transparent Hover color because there is always opacity set](https://github.com/flutter/flutter/issues/135866)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.green).copyWith(
          primary: Colors.transparent,
        ),
      ),
      home: const Example(),
    );
  }
}

class Example extends StatefulWidget {
  const Example({Key? key}) : super(key: key);

  @override
  State<StatefulWidget> createState() => _ExampleState();
}

class _ExampleState extends State<Example> {
  int _selectedIndex = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('NavigationRail Example'),
      ),
      body: Row(
        children: <Widget>[
          NavigationRail(
            selectedIndex: _selectedIndex,
            onDestinationSelected: (int index) {
              setState(() {
                _selectedIndex = index;
              });
            },
            labelType: NavigationRailLabelType.all,
            destinations: const <NavigationRailDestination>[
              NavigationRailDestination(
                icon: Icon(Icons.favorite_border),
                selectedIcon: Icon(Icons.favorite),
                label: Text('First'),
              ),
              NavigationRailDestination(
                icon: Icon(Icons.bookmark_border),
                selectedIcon: Icon(Icons.book),
                label: Text('Second'),
              ),
              NavigationRailDestination(
                icon: Icon(Icons.star_border),
                selectedIcon: Icon(Icons.star),
                label: Text('Third'),
              ),
            ],
          ),
          const VerticalDivider(thickness: 1, width: 1),
          Expanded(
            child: Center(
              child: Text('Selected Index: $_selectedIndex'),
            ),
          )
        ],
      ),
    );
  }
}
```

</details>

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
",
159880,2024-12-06T11:01:18Z,2024-12-06T12:00:14Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607143.0,0,0,0,0,1146638.211592,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/91f216d1c172...31ba1e093a07

2024-12-06 skia-flutter-autoroll@skia.org Roll Dart SDK from d7903a0fedc5 to 9c9a333c496c (1 revision) (flutter/engine#57006)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160238,2024-12-13T08:33:28Z,2024-12-13T09:28:16Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,3290.0,0,0,0,0,1154561.697005,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b9df033311cc...3c263a38f56b

2024-12-13 skia-flutter-autoroll@skia.org Roll Skia from 0aec6f7bfbc8 to 8c1e2bf9492c (26 revisions) (flutter/engine#57183)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160233,2024-12-13T05:57:47Z,2024-12-13T06:43:13Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,2728.0,0,0,0,0,1164465.304634,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/5eedfefe38c1...b9df033311cc

2024-12-13 flar@google.com Migrate DlRTree and DlRegion to DisplayList/Impeller geometry classes (flutter/engine#57175)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159874,2024-12-06T05:54:17Z,2024-12-06T06:39:24Z,engine-flutter-autoroll,0,0,4,4,2,1,1,['engine'],,0,605484.0,0,0,0,0,1166720.350341,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/bbe33f2d8df2...91f216d1c172

2024-12-06 skia-flutter-autoroll@skia.org Roll Dart SDK from 56bbedca60f9 to d7903a0fedc5 (2 revisions) (flutter/engine#56998)
2024-12-06 goderbauer@google.com Bump Dart SDK to 3.7 (flutter/engine#56989)
2024-12-05 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from CCKZcL47N_2_vxAtS... to DDdLABVLcqOv_axv-... (flutter/engine#56988)
2024-12-05 goderbauer@google.com Configure Page Width (flutter/engine#56987)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from CCKZcL47N_2_ to DDdLABVLcqOv

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160220,2024-12-13T02:59:47Z,2024-12-13T03:55:14Z,engine-flutter-autoroll,0,0,12,4,2,1,1,['engine'],,0,3329.0,0,0,0,0,1174545.71213,,0,12,0,False,[],,,"
https://github.com/flutter/engine/compare/9b51e30a4d37...5eedfefe38c1

2024-12-13 flar@google.com Normalize round rect bounds when coming from Flutter (flutter/engine#57171)
2024-12-13 41930132+hellohuanlin@users.noreply.github.com [ios]enable the webview non tappable workaround by checking subviews recursively (flutter/engine#57168)
2024-12-12 30870216+gaaclarke@users.noreply.github.com removed c style casts and enabled the lint (flutter/engine#57162)
2024-12-12 jonahwilliams@google.com [Impeller] exploit perfect hash for SamplerDescriptor. (flutter/engine#57036)
2024-12-12 30870216+gaaclarke@users.noreply.github.com Reenabled labelling test with a capabilities check. (flutter/engine#57160)
2024-12-12 jonahwilliams@google.com [Impeller] dont print format strings for blend filter and snapshots. (flutter/engine#57105)
2024-12-12 robert.ancell@canonical.com Make fl_engine_send_key_event into a standard async function. (flutter/engine#57112)
2024-12-12 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from HJ57Y3zxqDamI8qkY... to iWMEbVYaNdH8RJmXZ... (flutter/engine#57163)
2024-12-12 robert.ancell@canonical.com Migrate FlPlatformChannel tests to FlMockBinaryMessenger (flutter/engine#57140)
2024-12-12 robert.ancell@canonical.com Migrate FlBasicMessageChannel tests to FlMockBinaryMessenger (flutter/engine#57115)
2024-12-12 flar@google.com Migrate layers and layer_tree to DisplayList/Impeller geometry classes (flutter/engine#57153)
2024-12-12 mdebbar@google.com [web] Use CanvasKit to run tests under engine/ (flutter/engine#54786)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from HJ57Y3zxqDam to iWMEbVYaNdH8

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160046,2024-12-10T21:22:28Z,2024-12-12T23:54:08Z,M97Chahboun,1,10,8,68,3,2,2,"['framework', 'f: material design']",141212.0,0,181902.0,0,0,0,0,1189012.818876,,0,8,0,False,['M97Chahboun'],"@nate-thegrate Thank you for your review! I’ve addressed your feedback and made the necessary adjustments.@M97Chahboun thanks for the contribution! Left some feedback below :)

I also saw a few things relating to whitespace & trailing commas. Fortunately, if we get this merged in before the 19th, it'll all be fixed by the autoformatter sweep! (And if not, we'll just rebase and run `dart format`.) Thanks very much for the updates!

Just a few more random suggestions from me :) ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the contribution! LGTM! Thanks a lot for your contribution!","@M97Chahboun thanks for the contribution! Left some feedback below :)

I also saw a few things relating to whitespace & trailing commas. Fortunately, if we get this merged in before the 19th, it'll all be fixed by the autoformatter sweep! (And if not, we'll just rebase and run `dart format`.) Thanks very much for the updates!

Just a few more random suggestions from me :) ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the contribution! LGTM! Thanks a lot for your contribution!","Adds splashBorderRadius property to TabBarTheme

Fix #159845 


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Do you think we could add this property to the `TabBarThemeData` without introducing an obsolete field in `TabBarTheme`? It'd be nice to avoid introducing references to the deprecated `MaterialStateProperty` type, and IMO it'd be great to use a map here to be a bit more concise! :)

```suggestion
              child: const TabBar(
                overlayColor: WidgetStateMapper<Color>(
                  <WidgetStatesConstraint, Color>{
                    WidgetState.hovered: hoverColor,
                    WidgetState.any: Colors.black54,
                  },
                ),

                tabs: <Widget>[
``` Could we get rid of the `element.runtimeType.toString() == '_RenderInkFeatures'` here?

```suggestion
    final Finder findInkWell = find.byType(InkWell);
    final BuildContext context = tester.element(findInkWell);
    expect(
      Material.of(context),
      paints..rrect(
        color: hoverColor,
        rrect: RRect.fromRectAndRadius(
          tester.getRect(findInkWell),
          const Radius.circular(radius),
        ),
      ),
    );
``` IMO adding to this constructor isn't necessary, given that our goal is to transition these properties to `TabBarThemeData`. Looks like this one still needs to be removed:

```suggestion
``` nit: could we remove this `pumpAndSettle` call here? I believe the test should run fine without it.

```suggestion

``` optional nit: blank line for readability

```suggestion
    await tester.pumpAndSettle();

    final Finder findInkWell = find.byType(InkWell);
``` Great job with the paint pattern here btw! optional wording suggestion:

```suggestion
  testWidgets('TabBar inherits splashBorderRadius from theme', (WidgetTester tester) async {
``` ```suggestion
    properties.add(DiagnosticsProperty<BorderRadius?>('splashBorderRadius', splashBorderRadius, defaultValue: null));
```"
160205,2024-12-12T23:43:27Z,2024-12-12T23:46:14Z,auto-submit[bot],0,0,1,396,42,1,1,"['a: tests', 'platform-android', 'tool', 'framework', 'd: examples', 'f: integration_test', 'revert of']",,1,168.0,0,0,0,0,1189488.390116,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#159756
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: gmackall
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: Made the tree red due to some std out.
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: gmackall
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {reidbaker}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
In preparation for changing engine builds to be unstripped by default https://github.com/flutter/engine/pull/52852, which will allow us to make progress towards resolving https://github.com/flutter/flutter/issues/60240.

Tricks AGP in to downloading the NDK when building a flutter app (that uses the FGP, which to my knowledge is all ways of building flutter apk/aab/aar).

I want to follow this up by modifying the tool to search for the log line that the NDK is missing (making it throw an error in that case) as a safeguard, because that would be the last line of defense before we accidentally build a bloated app. The safeguard won't work for add to app, from what I understand, because while they use the FGP (so they should be forced to be download the NDK) they don't invoke the flutter tool, and therefore won't invoke the custom error handling of [`gradle_errors.dart`](https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/android/gradle_errors.dart)

Some details

1. Respects existing values for `externalNativeBuild.cmake.path` for apps that actually use it.
2. Silences some warnings that would otherwise appear for add to app builds or builds that manually invoke gradle:
```
C/C++: CMake Warning (dev) in CMakeLists.txt:
C/C++:   No project() command is present.  The top-level CMakeLists.txt file must
C/C++:   contain a literal, direct call to the project() command.  Add a line of
C/C++:   code such as
C/C++:     project(ProjectName)
C/C++:   near the top of the file, but after cmake_minimum_required().
C/C++:   CMake is pretending there is a ""project(Project)"" command on the first
C/C++:   line.
C/C++: This warning is for project developers.  Use -Wno-dev to suppress it.
C/C++: CMake Warning:
C/C++:   Manually-specified variables were not used by the project:
C/C++:     CMAKE_EXPORT_COMPILE_COMMANDS
C/C++:     CMAKE_LIBRARY_OUTPUT_DIRECTORY
C/C++:     CMAKE_RUNTIME_OUTPUT_DIRECTORY
```
3. Our ci installs the NDK at an abnormal place that AGP can't find without help. I've modified all the `build.gradle`s that we have checked in to point to the pre-installed path. **But some of our tests make a new app from the templates, and those tests will now start downloading the NDK** (as they won't be able to find it at it's current path from templates). We could resolve this by actually fixing https://github.com/flutter/flutter/issues/136666. This would be a very significant lift from what I understand - we rely on this hardcoding in a lot of places in our infra.


Fixes https://github.com/flutter/flutter/issues/155576

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md

<!-- end_revert_body -->
",
159756,2024-12-03T22:43:45Z,2024-12-12T23:25:18Z,gmackall,5,16,19,396,42,3,1,"['a: tests', 'platform-android', 'tool', 'framework', 'd: examples', 'f: integration_test']",663867.0,0,781206.0,0,0,0,0,1189633.498225,,2,19,0,False,"['reidbaker', 'gmackall']","Does this fix https://github.com/flutter/flutter/issues/155576?  @gmackall can you also link this pull request to the internal bug tracking allowing ndk download for symbol stripping?  > Does this fix #155576?

Yes, thanks - added > @gmackall can you also link this pull request to the internal bug tracking allowing ndk download for symbol stripping?

If you mean link the bug here, then it is b/152075797. But do you mean to put a link to the PR on the bug? Can do that too if desired Reason for revert: Made the tree red due to some std err.. .",. .,"In preparation for changing engine builds to be unstripped by default https://github.com/flutter/engine/pull/52852, which will allow us to make progress towards resolving https://github.com/flutter/flutter/issues/60240.

Tricks AGP in to downloading the NDK when building a flutter app (that uses the FGP, which to my knowledge is all ways of building flutter apk/aab/aar).

I want to follow this up by modifying the tool to search for the log line that the NDK is missing (making it throw an error in that case) as a safeguard, because that would be the last line of defense before we accidentally build a bloated app. The safeguard won't work for add to app, from what I understand, because while they use the FGP (so they should be forced to be download the NDK) they don't invoke the flutter tool, and therefore won't invoke the custom error handling of [`gradle_errors.dart`](https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/android/gradle_errors.dart)

Some details

1. Respects existing values for `externalNativeBuild.cmake.path` for apps that actually use it.
2. Silences some warnings that would otherwise appear for add to app builds or builds that manually invoke gradle:
```
C/C++: CMake Warning (dev) in CMakeLists.txt:
C/C++:   No project() command is present.  The top-level CMakeLists.txt file must
C/C++:   contain a literal, direct call to the project() command.  Add a line of
C/C++:   code such as
C/C++:     project(ProjectName)
C/C++:   near the top of the file, but after cmake_minimum_required().
C/C++:   CMake is pretending there is a ""project(Project)"" command on the first
C/C++:   line.
C/C++: This warning is for project developers.  Use -Wno-dev to suppress it.
C/C++: CMake Warning:
C/C++:   Manually-specified variables were not used by the project:
C/C++:     CMAKE_EXPORT_COMPILE_COMMANDS
C/C++:     CMAKE_LIBRARY_OUTPUT_DIRECTORY
C/C++:     CMAKE_RUNTIME_OUTPUT_DIRECTORY
```
3. Our ci installs the NDK at an abnormal place that AGP can't find without help. I've modified all the `build.gradle`s that we have checked in to point to the pre-installed path. **But some of our tests make a new app from the templates, and those tests will now start downloading the NDK** (as they won't be able to find it at it's current path from templates). We could resolve this by actually fixing https://github.com/flutter/flutter/issues/136666. This would be a very significant lift from what I understand - we rely on this hardcoding in a lot of places in our infra.


Fixes https://github.com/flutter/flutter/issues/155576

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Include a link (go or direct) that points to where that system install is configured.  Please include a comment indicating why this version and why not flutter.ndkVersion and when it should be updated?  delete comment?  add a comment explaining why these flags and what would cause them to change.  Also if there is a way we can share these flags with some other code where we define similar flags lets consider that.  I can add a comment if you think I should, but the comment would also apply to things like `targetSdk`, `minSdk`, `compileSdk` here and in other places - the reason is just that the Flutter Gradle plugin isn't applied here.

Do you still think it warrants adding a comment? deleted thanks > add a comment explaining why these flags and what would cause them to change.

Added a comment explaining their purpose

> Also if there is a way we can share these flags with some other code where we define similar flags lets consider that.

I think this will be possible after the `kt` conversion.  added a direct link I'd prefer a link that is not dynamic (e.g. refer to a git tag?). Sooner or later it'll probably break. Changed to referencing the `3.27.0` tag Did you mean to downgrade this version?  Yes specifically there is still value in articulating when the value should be updated for all of the manually defined version comments.  Even though the `vX` goes down this is actually an upgrade (33->35) 🤦 I was reviewing too quickly.  This is actually enforced now anyways (if the version is wrong the build will fail). But I added a comment indicating that it must exactly match the CIPD hosted ndk version that we are pulling."
159865,2024-12-05T22:29:18Z,2024-12-05T23:32:08Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,606085.0,0,0,0,0,1192821.925974,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/3a8204a0ab41...bbe33f2d8df2

2024-12-05 flar@google.com [DisplayList] Disable group opacity when a RuntimeEffect is in use (flutter/engine#56936)
2024-12-05 30870216+gaaclarke@users.noreply.github.com Removes ReactorGLES::Ref (flutter/engine#56981)
2024-12-05 jonahwilliams@google.com [Impeller] create a 300 es variant of all GLES shaders to support UBO binding. (flutter/engine#56960)
2024-12-05 dkwingsmt@users.noreply.github.com [Impeller] Add rounded superellipse (flutter/engine#56726)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159858,2024-12-05T20:14:18Z,2024-12-05T21:01:43Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,606985.0,0,0,0,0,1200022.467236,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/b4f52b275535...3a8204a0ab41

2024-12-05 30870216+gaaclarke@users.noreply.github.com Moved gles pipelines to untracked handles. (flutter/engine#56955)
2024-12-05 skia-flutter-autoroll@skia.org Roll Dart SDK from a2a9428e761f to 56bbedca60f9 (7 revisions) (flutter/engine#56980)
2024-12-05 mdebbar@google.com [web] Use `eventTarget` when computing pointer offset (flutter/engine#56949)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160190,2024-12-12T19:28:50Z,2024-12-12T20:21:45Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,3178.0,0,0,0,0,1201758.626803,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/0bcea845cd31...9b51e30a4d37

2024-12-12 chris@bracken.jp iOS: Reduce engine/view controller coupling (flutter/engine#57151)
2024-12-12 skia-flutter-autoroll@skia.org Roll Dart SDK from 770ff2b085fc to 02aa27c6a075 (1 revision) (flutter/engine#57161)
2024-12-12 goderbauer@google.com Format _empty.dart (flutter/engine#57144)
2024-12-12 jason-simmons@users.noreply.github.com [Impeller] Fix a race in the ReactorGLES.PerThreadOperationQueues test (flutter/engine#57147)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160060,2024-12-11T01:43:35Z,2024-12-12T20:01:39Z,andrewkolos,0,0,2,123,2,1,1,['tool'],,0,152286.0,0,0,0,0,1202966.083652,,0,2,0,False,[],,,"Fixes https://github.com/flutter/flutter/issues/160058.

In addition, only send an event when the enabled-state of analytics actually gets flipped.


<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
160105,2024-12-11T18:57:18Z,2024-12-11T19:41:48Z,christopherfujino,0,0,1,6,1,1,1,[],,0,81686.0,0,0,0,0,1211543.562507,,0,1,0,False,[],,,,
160054,2024-12-10T23:44:41Z,2024-12-11T19:17:01Z,christopherfujino,0,0,4,32,4,1,1,[],,0,150638.0,0,0,0,0,1211749.54071,,0,4,0,False,[],,,"Update some outdated, obsolete text output from the conductor.",
160171,2024-12-12T15:09:55Z,2024-12-12T16:46:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,5783.0,0,0,0,0,1214691.227827,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4d8488f02cd8...0bcea845cd31

2024-12-12 skia-flutter-autoroll@skia.org Roll Dart SDK from 70062c353404 to 770ff2b085fc (2 revisions) (flutter/engine#57159)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160158,2024-12-12T11:00:49Z,2024-12-12T13:48:30Z,sstrickl,0,2,1,7,7,2,1,"['framework', 'f: material design', 'f: cupertino', 'f: routes']",,0,10062.0,0,0,0,0,1225358.771114,,0,1,0,False,[],lgtm with comments,lgtm with comments,"This change adds entry-point annotations to methods and classes accessed by native code during Flutter tests. Currently, entry point annotations are not checked by the Dart VM when running in JIT mode, only in AOT mode. In order to also enforce entry point annotations in JIT mode, first tests in Flutter must be appropriately annotated to avoid roll failures.

Related issues:
* https://github.com/flutter/flutter/issues/118608
* https://github.com/dart-lang/sdk/issues/50649

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Is that because we have a member we look up by name in C so we also need to be able to lookup the class by name (and it's not automatically made an entrypoint)? IIRC, at some point the class gets looked up by name as a type and then used as a target for the method lookup, so yeah, it's a class access in native code, and no there's no automatic entrypoint created (though if we want to automatically annotate classes if static methods or generative constructors are annotated, we could consider that as future work)."
160165,2024-12-12T13:01:55Z,2024-12-12T13:46:54Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,2702.0,0,0,0,0,1225453.804777,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/847deb2089a3...4d8488f02cd8

2024-12-12 skia-flutter-autoroll@skia.org Roll Dart SDK from 96022397c58d to 70062c353404 (1 revision) (flutter/engine#57155)
2024-12-12 skia-flutter-autoroll@skia.org Roll Dart SDK from aa03dca5beb2 to 96022397c58d (2 revisions) (flutter/engine#57149)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159842,2024-12-05T11:14:17Z,2024-12-05T16:32:09Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605193.0,0,0,0,0,1234221.303466,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/05e2d6597cb2...b4f52b275535

2024-12-05 bdero@google.com Drop APNG frames that don't fit entirely within the destination surface. (flutter/engine#56928)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159836,2024-12-05T08:00:17Z,2024-12-05T09:10:26Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,606033.0,0,0,0,0,1245021.933766,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/8d3c71840069...05e2d6597cb2

2024-12-05 jonahwilliams@google.com [Impeller] store GLES bindings on render pass w/ offsets instead of per-command. (flutter/engine#56910)
2024-12-05 jonahwilliams@google.com [Impeller] avoid re-binding winding order and cull mode. (flutter/engine#56943)
2024-12-05 30870216+gaaclarke@users.noreply.github.com Implements the naming of untracked gles handles (flutter/engine#56948)
2024-12-05 skia-flutter-autoroll@skia.org Roll Fuchsia Test Scripts from VilXq4eGH5A24wRWA... to r9Dc5VRF6sE3pJH20... (flutter/engine#56953)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160086,2024-12-11T11:47:12Z,2024-12-11T19:11:40Z,TahaTesser,3,1,2,283,4,1,1,"['framework', 'f: material design']",2877.0,0,73663.0,0,0,0,0,1245378.105871,,0,2,0,False,"['bleroux', 'TahaTesser']","@gspencergoog 
This PR adds `submenuIcon`  property to the `MenuThemeData` based on your feedback and discussion in [here](https://github.com/flutter/flutter/pull/132899#issuecomment-1692080077)  Thanks so much for the quick review!  @davidhicks980 Sorry to ping you again. This is a change that will impact the RawMenuAnchor PR. Let me know if you have time to include it. If you prefer, I will be able to push a commit on your PR on Monday.![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)",![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png),"Fixes [https://github.com/flutter/flutter/issues/132898](https://github.com/flutter/flutter/issues/132898)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: SafeArea(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              MenuBar(
                children: [
                  SubmenuButton(
                    menuChildren: <Widget>[
                      SubmenuButton(
                        menuChildren: <Widget>[
                          MenuItemButton(
                            onPressed: () {},
                            child: const Text('Menu '),
                          ),
                        ],
                        child:
                            const Text('SubmenuButton with default arrow icon'),
                      ),
                      SubmenuButton(
                        submenuIcon: const WidgetStateProperty<Widget?>.fromMap(
                          <WidgetStatesConstraint, Widget?>{
                            WidgetState.disabled: Icon(Icons.close),
                            WidgetState.hovered: Icon(Icons.favorite),
                            WidgetState.focused: Icon(Icons.add),
                            WidgetState.any: Icon(Icons.arrow_forward_ios),
                          },
                        ),
                        menuChildren: <Widget>[
                          MenuItemButton(
                            onPressed: () {},
                            child: const Text('Menu '),
                          ),
                        ],
                        child:
                            const Text('SubmenuButton with custom Icon widget'),
                      ),
                      SubmenuButton(
                        submenuIcon: WidgetStatePropertyAll(Image.network(
                            'https://i.imgur.com/SF3mSOY.png',
                            width: 28,
                            height: 28)),
                        menuChildren: <Widget>[
                          MenuItemButton(
                            onPressed: () {},
                            child: const Text('Menu '),
                          ),
                        ],
                        child:
                            const Text('SubmenuButton with network image icon'),
                      ),
                    ],
                    child: const Text('Menu'),
                  ),
                ],
              )
            ],
          ),
        ),
      ),
    );
  }
}
```

</details>

### Preview

<img width=""803"" alt=""Screenshot 2024-12-11 at 14 04 57"" src=""https://github.com/user-attachments/assets/4b330020-28c6-4af9-967b-630c0d43b01a"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
  /// If that is also null, then defaults to a right arrow icon with the size
```"
160134,2024-12-12T02:18:27Z,2024-12-12T03:15:28Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,3424.0,0,0,0,0,1263342.633121,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/92de3d0f8830...847deb2089a3

2024-12-12 bryanoltman@gmail.com Cast ::GetLastError to int (flutter/engine#57113)
2024-12-12 jonahwilliams@google.com Manual Skia roll from 79a7b95e32fe to 0aec6f7bfbc8 (flutter/engine#57134)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159818,2024-12-05T00:16:19Z,2024-12-05T01:01:13Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,611699.0,0,0,0,0,1267196.070069,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/9e8fcad4eaf6...8d3c71840069

2024-12-04 jonahwilliams@google.com [Impeller] remove extra validation checks in GLES backend. (flutter/engine#56944)
2024-12-04 robert.ancell@canonical.com Remove LSAN supressions for Linux embedder (flutter/engine#56913)
2024-12-04 mdebbar@google.com [web] Start with a smaller memory allocation for CanvasKit (flutter/engine#56900)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160132,2024-12-12T01:01:11Z,2024-12-12T02:06:15Z,engine-flutter-autoroll,1,0,1,2,1,1,1,['engine'],1269.0,0,3907.0,0,0,0,0,1267497.103636,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160132, due to - The status or check suite [Mac channels_integration_test](https://cr-buildbucket.appspot.com/build/8728799252293599185) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/e3524615fb69...92de3d0f8830

2024-12-11 30870216+gaaclarke@users.noreply.github.com Removed heap allocations for conical, radial and sweep gradients (flutter/engine#57143)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160128,2024-12-11T23:55:34Z,2024-12-12T00:48:15Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,3163.0,0,0,0,0,1272178.693732,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/b8034f152711...e3524615fb69

2024-12-11 jonahwilliams@google.com [Impeller] remove std::vector usage in render pass vk. (flutter/engine#57132)
2024-12-11 43723477+RBT22@users.noreply.github.com [Linux] Add Multi-Touch Support for Linux (flutter/engine#54214)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160126,2024-12-11T22:51:34Z,2024-12-11T23:43:19Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,3107.0,0,0,0,0,1276075.198305,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/ba7ad8719733...b8034f152711

2024-12-11 skia-flutter-autoroll@skia.org Roll Dart SDK from be9c98daf9df to aa03dca5beb2 (1 revision) (flutter/engine#57136)
2024-12-11 jason-simmons@users.noreply.github.com Make Felt unzip Chrome into a temporary directory next to the final location of the files (flutter/engine#57109)
2024-12-11 jonahwilliams@google.com [engine] changes to DlVertices::Builder and Stopwatch visualizer. (flutter/engine#57031)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jonahwilliams@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159808,2024-12-04T20:29:19Z,2024-12-04T21:19:26Z,engine-flutter-autoroll,1,0,2,2,1,1,1,['engine'],365.0,0,607989.0,0,0,0,0,1284529.190225,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159808, due to - The status or check suite [Windows tool_integration_tests_9_9](https://cr-buildbucket.appspot.com/build/8729450531604995137) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/1f7f37e264b0...9e8fcad4eaf6

2024-12-04 skia-flutter-autoroll@skia.org Manual roll Dart SDK from 470117150f34 to a2a9428e761f (1 revision) (flutter/engine#56939)
2024-12-04 30870216+gaaclarke@users.noreply.github.com Added the ability to make untracked opengles handles (migrated textures) (flutter/engine#56927)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160112,2024-12-11T19:50:36Z,2024-12-11T20:59:24Z,itsjustkevin,3,0,2,3,2,2,2,['engine'],3.0,0,4128.0,0,0,0,0,1285913.93253,,0,2,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed. auto label is removed for flutter/flutter/160112, Failed to enqueue flutter/flutter/160112 with HTTP 400: GraphQL mutate failed. auto label is removed for flutter/flutter/160112, Failed to enqueue flutter/flutter/160112 with HTTP 400: GraphQL mutate failed.LGTM",LGTM,"# Flutter beta 3.28.0-0.1.pre Framework

## Scheduled Cherrypicks

",
159385,2024-11-24T06:38:06Z,2024-12-11T20:39:49Z,sargntpi,3,1,4,26,2,3,3,"['a: text input', 'framework', 'f: cupertino', 'team-text-input']",24.0,0,1519306.0,0,0,0,0,1287086.314716,,0,4,0,False,"['piedcipher', 'sargntpi', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Thanks for submitting the PR. As the bot says we'll need a test in order to land this. > Thanks for submitting the PR. As the bot says we'll need a test in order to land this.

Thank you, and sorry, it's my first attempt at a PR. I've added a test to ensure it's still present, please let me know if I've missed or need to change anything.LGTM, thank you for the contribution! LGTM too!","LGTM, thank you for the contribution! LGTM too!","Before: No way to set the _spellCheckConfiguration_ property of a CupertinoTextFormFieldRow, meaning no spellcheck/highlighting of incorrect words is present. This can be done on the standard CupertinoTextField widget, but not the CupertinoTextFormFieldRow widget.
![image](https://github.com/user-attachments/assets/891721c4-020b-4a3f-9492-e2ba7a475bd5)

After: Adding this property allows the _spellCheckConfiguration_ to be configured and spellcheck/highlighting of incorrect words working as expected.
![image](https://github.com/user-attachments/assets/7b20692d-9444-4ce6-9b43-54bda7de2552)
![image](https://github.com/user-attachments/assets/3e86c901-4954-4ac2-9f63-bcdddfa3b43c)

Fixes #159382 by adding the _ spellCheckConfiguration_ field to the constructor of CupertinoTextFormFieldRow and passing the value through to CupertinoTextField.borderless internally.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I _would_ do a trailing comma nitpick, but the autoformatter pass on the 19th will take care of it!"
160094,2024-12-11T16:26:53Z,2024-12-11T20:14:39Z,bkonyi,5,0,3,46,3,1,1,"['platform-ios', 'tool']",6099.0,0,13668.0,0,0,0,0,1288598.28706,,1,3,0,False,"['auto-submit[bot]', 'andrewkolos', 'bkonyi']","This is failing:

```
00:15 +2067 ~2 -1: test/general.shard/ios/core_devices_test.dart: Core Device Control list devices Handles file system disposal [E]
  PathNotFoundException: Creation of temporary directory failed, path = '/.tmp_rand0/core_devices.' (OS Error: No such file or directory, errno = 2)
  dart:io                                                       _Directory.createTempSync
  package:file/src/forwarding/forwarding_directory.dart 28:21   ForwardingDirectory.createTempSync
  package:flutter_tools/src/base/error_handling_io.dart 459:27  ErrorHandlingDirectory.createTempSync.<fn>
  package:flutter_tools/src/base/error_handling_io.dart 599:14  _runSync
  package:flutter_tools/src/base/error_handling_io.dart 458:12  ErrorHandlingDirectory.createTempSync
  package:flutter_tools/src/ios/core_devices.dart 65:69         IOSCoreDeviceControl._listCoreDevices
  package:flutter_tools/src/ios/core_devices.dart 136:48        IOSCoreDeviceControl.getCoreDevices
  test/general.shard/ios/core_devices_test.dart 1448:69         main.<fn>.<fn>.<fn>
  dart:async                                                    runZoned
  test/src/common.dart 214:14                                   testWithoutContext.<fn>
  test/src/common.dart 183:18                                   test.<fn>
```

though I can't immediately understand why > This is failing:
> 
> ```
> 00:15 +2067 ~2 -1: test/general.shard/ios/core_devices_test.dart: Core Device Control list devices Handles file system disposal [E]
>   PathNotFoundException: Creation of temporary directory failed, path = '/.tmp_rand0/core_devices.' (OS Error: No such file or directory, errno = 2)
>   dart:io                                                       _Directory.createTempSync
>   package:file/src/forwarding/forwarding_directory.dart 28:21   ForwardingDirectory.createTempSync
>   package:flutter_tools/src/base/error_handling_io.dart 459:27  ErrorHandlingDirectory.createTempSync.<fn>
>   package:flutter_tools/src/base/error_handling_io.dart 599:14  _runSync
>   package:flutter_tools/src/base/error_handling_io.dart 458:12  ErrorHandlingDirectory.createTempSync
>   package:flutter_tools/src/ios/core_devices.dart 65:69         IOSCoreDeviceControl._listCoreDevices
>   package:flutter_tools/src/ios/core_devices.dart 136:48        IOSCoreDeviceControl.getCoreDevices
>   test/general.shard/ios/core_devices_test.dart 1448:69         main.<fn>.<fn>.<fn>
>   dart:async                                                    runZoned
>   test/src/common.dart 214:14                                   testWithoutContext.<fn>
>   test/src/common.dart 183:18                                   test.<fn>
> ```
> 
> though I can't immediately understand why

Must have just pushed the fix as you left your comment :-) auto label is removed for flutter/flutter/160094, due to - The status or check suite [Windows tool_tests_general](https://cr-buildbucket.appspot.com/build/8728825114074720209) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8728825114074720209/+/u/run_test.dart_for_tool_tests_shard_and_subshard_general/stdout

This was failing on Windows with

```
00:57 +2513 ~2 -1: test/general.shard\ios\core_devices_test.dart: Core Device Control list devices Handles file system disposal [E]
  Expected: [
              'xcrun',
              'devicectl',
              'list',
              'devices',
              '--timeout',
              '5',
              '--json-output',
              '/.tmp_rand0/core_devices.rand0/core_device_list.json'
            ]
    Actual: [
              'xcrun',
              'devicectl',
              'list',
              'devices',
              '--timeout',
              '5',
              '--json-output',
              '/.tmp_rand0/core_devices.rand0\\core_device_list.json'
            ]
     Which: at location [7] is '/.tmp_rand0/core_devices.rand0\\core_device_list.json' instead of '/.tmp_rand0/core_devices.rand0/core_device_list.json'
```

One solution is to use a regex pattern to match, but I instead just pushed
[fake LocaleFileSystem implementation rather than extending it](https://github.com/flutter/flutter/pull/160094/commits/f686338601ebfbf46bf97662096918d79e29b572) auto label is removed for flutter/flutter/160094, due to - The status or check suite [Mac_x64 plugin_lint_mac](https://cr-buildbucket.appspot.com/build/8728822357595199729) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,"The previous attempt at this fix was assuming that the tool's file system was a `LocalFileSystem`, but in reality it's a `LocalFileSystem` wrapped in an `ErrorHandlingFileSystem`. This change takes this into account.

Fixes https://github.com/flutter/flutter/issues/160082 
Fixes https://github.com/flutter/flutter/issues/156962",
160007,2024-12-10T01:29:31Z,2024-12-11T19:40:14Z,goderbauer,2,0,13,413,6,1,1,[],144024.0,0,151870.0,0,0,0,0,1290639.079704,,0,13,0,False,['goderbauer'],"@gspencergoog There's an issue with the bat script for windows I am still working out. The Windows batch script works now as well.![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Looks great!","![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Looks great!","The script is modeled after a similar script in the engine (see engine's [format.dart](https://github.com/flutter/engine/blob/main/ci/bin/format.dart)).

It identifies the files that have been changed and checks if their formatting is correct. It also offers an option to correct formatting (`--fix`) and an option to check the formatting of all files in the repro (not just changed ones, `--all-files`).

When we are enforcing dart format this script will be called as part of presubmit.",
159394,2024-11-24T14:34:58Z,2024-12-11T19:22:12Z,Mairramer,1,7,8,55,2,3,2,['framework'],741346.0,0,1486036.0,0,0,0,0,1291746.703514,,0,8,0,False,['nate-thegrate'],"@Mairramer quick heads-up that we've got a merge conflict now.LGTM!

I can confirm the test fails when it runs against the current master branch.

Just have a few tiny suggestions :) LGTM, thanks for another form fix!

I verified that this is actually a bug over on the issue, see my comment: https://github.com/flutter/flutter/issues/159378#issuecomment-2533254278","LGTM!

I can confirm the test fails when it runs against the current master branch.

Just have a few tiny suggestions :) LGTM, thanks for another form fix!

I verified that this is actually a bug over on the issue, see my comment: https://github.com/flutter/flutter/issues/159378#issuecomment-2533254278","Fixes #159378
Resolved an issue where focused TextFormField was bypassed during form validation
when using AutovalidateMode.onUnfocus on mobile devices. Validation is now correctly
triggered for all fields, including those that are focused.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","IMO the comment on the above line explains it nicely 👍

```suggestion
    expect(formKey.currentState!.validate(), isFalse);
``` I don't believe theme data is necessary here:

```suggestion
``` Not often that we see this kind of boolean logic! Perhaps we could clean this up a tiny bit:

```dart
    // Focus on textFormField1.
    await tester.tap(find.byKey(const Key('textFormField1')));
```

alternatively:
```dart
    final GlobalKey<FormState> formKey = GlobalKey<FormState>();
    const Key fieldKey = Key('form field');

    // can be referenced in the pumpWidget call

    await tester.tap(find.byKey(fieldKey));
``` Bonus points for `|=` for sure 👍 . Could this just be `pump` or does that cause it to fail? done!"
159805,2024-12-04T19:05:33Z,2024-12-04T20:16:30Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,605153.0,0,0,0,0,1292395.486814,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/29d66405e6df...1f7f37e264b0

2024-12-04 jonahwilliams@google.com [Impeller] avoid heap allocation in RenderTarget object. (flutter/engine#56829)
2024-12-04 aam@google.com Manual roll dart to 470117150f34d712ee6d8c4558b3c656d973f656 (flutter/engine#56915)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160074,2024-12-11T09:20:12Z,2024-12-11T19:07:57Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: tech-debt', 'c: flake']",,0,35268.0,0,0,0,0,1292602.44713,,0,1,0,False,[],,,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux android_release_builds_exclude_dev_dependencies_test""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Linux%20android_release_builds_exclude_dev_dependencies_test%22).
This test can be marked as unflaky.
",
160056,2024-12-10T23:57:55Z,2024-12-11T00:50:21Z,christopherfujino,1,0,1,1,1,1,1,['warning: land on red to fix tree breakage'],322.0,0,66747.0,0,0,0,0,1294860.927571,,1,1,0,False,['andrewkolos'],(edited description so that https://github.com/flutter/flutter/issues/160055 does not get closed by this merging)LGTM,LGTM,Temporarily mark non-blocking until https://github.com/flutter/flutter/issues/160055 is resolved,
159859,2024-12-05T20:18:37Z,2024-12-10T15:36:22Z,bkonyi,0,4,6,703,7,2,1,['tool'],,0,504747.0,0,0,0,0,1302019.800815,,0,6,0,False,[],"LGTM Oh, I made a follow-up review, but never submitted it. I'll work on a follow-up PR.","LGTM Oh, I made a follow-up review, but never submitted it. I'll work on a follow-up PR.","The generated widget_preview_scaffold project needs to explicitly reference the assets from the parent project's pubspec.yaml. This change updates flutter widget-preview start to read the parent project's pubspec.yaml and add references to the assets listed to the widget_preview_scaffold's pubspec.yaml. If generate: true is set in the parent project, a reference to the autogenerated flutter_gen package is manually added to the widget_preview_scaffold's package_config.json.","Synthetic package output is deprecated ([doc](https://docs.flutter.dev/release/breaking-changes/flutter-generate-i10n-source), [announcement](https://groups.google.com/g/flutter-announce/c/ZWtR2h6QAZk)). I think we shouldn't add a bunch of code to support localization-via-flutter-gen. At the very least, we would benefit from a TODO not here explaining that this can be deleted once localization-via-flutter-gen is deleted. Nit: If we are going to use a named const here, we should use it everywhere, namely

https://github.com/flutter/flutter/blob/6c912ea24fcf1d211fac7dcaaacfa4751c186691/packages/flutter_tools/lib/src/flutter_manifest.dart#L987

and

https://github.com/flutter/flutter/blob/6c912ea24fcf1d211fac7dcaaacfa4751c186691/packages/flutter_tools/lib/src/flutter_manifest.dart#L964-L967

 The main reason I added this is for backwards compatibility as we do want to support this feature in older projects, particularly while this is still supported in the tool. Adding a TODO sounds reasonable. Good catch. I had originally updated all of `flutter_manifest.dart` to use constants rather than raw strings, but broke something somewhere in the 1000 line diff and just reverted it. I'll update these in a follow up."
159770,2024-12-03T23:55:31Z,2024-12-05T21:34:51Z,gmackall,2,0,6,132,8,1,1,"['platform-android', 'tool', 'cp: beta']",67579.0,0,660098.0,0,0,0,0,1306455.683542,,1,6,0,False,"['auto-submit[bot]', 'gmackall']","Looks like this breaks building a module as an aar at the moment, probably because the `pluginManagement` and `plugins` block force that they go first, which is causing them to evaluate before `include_flutter.groovy`. We can probably fix this by making that functionality be a gradle plugin... going to try to see if there is any other way I can get this working auto label is removed for flutter/flutter/159770, due to - The status or check suite [Mac_x64 tool_host_cross_arch_tests](https://cr-buildbucket.appspot.com/build/8729363628608647425) has failed. Please fix the issues identified (or deflake) before re-applying this label.
looks nice!",looks nice!,"Fixes https://github.com/flutter/flutter/issues/159729

Cases to consider:
1. Building the module as a standalone app (`flutter run`)
2. Building the module as an aar (`flutter build aar`) 
3. Doing (2) and then building an android host app that depends on the aar.
4. Building the host app with it depending on the module as source.

Manually tested all 4 and they all are working.

Modified `build_android_host_app_with_module_aar.dart` and `build_android_host_app_with_module_source.dart` to add checks on `stderr` to ensure we don't hit the log.


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
150440,2024-06-18T17:03:47Z,2024-07-09T16:36:20Z,kenzieschmoll,10,6,18,63,5,2,1,['tool'],37.0,0,15177629.0,0,0,0,0,1328829.328818,,0,18,0,False,"['kenzieschmoll', 'sigurdm', 'jakemac53', 'christopherfujino', 'natebosch']","@christopherfujino @natebosch @jakemac53 can you advise on the best way to get the package config URI here? > @christopherfujino @natebosch @jakemac53 can you advise on the best way to get the package config URI here?

Is `Isolate.packageConfig` null? I think flutter tool might be precompiled which could cause that..... although there is likely some way to get one still (in pub we have one even though package:test is also compiled to kernel).

Unfortunately, package:package_config does not expose something to just do the package config lookup for you, see https://github.com/dart-lang/tools/issues/1544 for the feature request which you might want to chime in on. This code is in `flutter_tools` - does that package have any existing code related to finding or using the package config that we can reuse? > > @christopherfujino @natebosch @jakemac53 can you advise on the best way to get the package config URI here?
> 
> Is `Isolate.packageConfig` null? I think flutter tool might be precompiled which could cause that..... although there is likely some way to get one still (in pub we have one even though package:test is also compiled to kernel).

We want the package_config.json for the test app, not the tool, or am I misunderstanding the use case here?
 > We want the package_config.json for the test app, not the tool, or am I misunderstanding the use case here?

We want the one for the app, not the tool. Good point that in the flutter case, these are not the same (in the `dart test` case, they are the same). @sigurdm do you have any insights on the best way to get a test app's package-config.json, since you're doing some similar work in the tool? > do you have any insights on the best way to get a test app's package-config.json,

`flutterProject.packageConfigFile.uri` will probably work.

But I think it would be better to thread a BuildInfo object from:
https://github.com/flutter/flutter/blob/8e4f704abc4576206c3d56e1a430f66457b706f3/packages/flutter_tools/lib/src/commands/test.dart#L358

in to `testRunner.runTests()` https://github.com/flutter/flutter/blob/8e4f704abc4576206c3d56e1a430f66457b706f3/packages/flutter_tools/lib/src/commands/test.dart#L591

in to `loader.installHook()` 
https://github.com/flutter/flutter/blob/0287c225646b59fa4a08cae699bb16fa3ccf5af8/packages/flutter_tools/lib/src/test/runner.dart#L242

to `FlutterPlatform()`
https://github.com/flutter/flutter/blob/4e70bfae2bff2c272af7fb7a870695edd9f8cfb4/packages/flutter_tools/lib/src/test/flutter_platform.dart#L86

And then use `globals.fs.path.toUri(buildInfo.packagesPath)`. (will be `globals.fs.path.toUri(buildInfo.packageConfigPath)` after https://github.com/flutter/flutter/pull/150559)

 Thanks for the suggestion @sigurdm. I have applied the changes you suggested. @christopherfujino This is ready for review now.  I suspect google testing will pass once https://github.com/flutter/flutter/pull/150559 makes it into g3.LGTM",LGTM,Work towards. This is the Flutter companion to https://github.com/dart-lang/test/pull/2245. Work towards https://github.com/dart-lang/test/issues/2246.,"nit spelling is a relative URI here ok? rather than an `IMPORTANT` comment, maybe explicitly denote in the test name we're checking for the constant we rely on, e.g.

""writes a `const packageConfigLocation` string to the test bootstrap"" No, this needs to be a file URI. This is documented in the `generateTestBootstrap` method dart doc I'm saying this *will* be a relative uri, since I believe `buildInfo!.packagesPath` is relative. Is this ok? the `globals.fs.path.toUri` method takes the path and returns a file URI so `generateTestBootstrap` will still get the file URI it needs."
159783,2024-12-04T08:39:17Z,2024-12-04T09:28:08Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,605197.0,0,0,0,0,1329931.771816,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/ee1b6ed65677...29d66405e6df

2024-12-04 skia-flutter-autoroll@skia.org Roll Skia from 4ad05fb042c5 to c9647f13cded (2 revisions) (flutter/engine#56933)
2024-12-04 skia-flutter-autoroll@skia.org Roll Skia from e02d856f86fb to 4ad05fb042c5 (1 revision) (flutter/engine#56931)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159778,2024-12-04T05:42:17Z,2024-12-04T06:27:17Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608617.0,0,0,0,0,1337132.721439,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/1e6864c489c8...ee1b6ed65677

2024-12-04 robert.ancell@canonical.com Remove unused constant (flutter/engine#56929)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159776,2024-12-04T02:01:18Z,2024-12-04T02:46:15Z,engine-flutter-autoroll,0,0,6,2,1,1,1,['engine'],,0,608290.0,0,0,0,0,1350719.417092,,0,6,0,False,[],,,"
https://github.com/flutter/engine/compare/938f8163b526...1e6864c489c8

2024-12-04 34871572+gmackall@users.noreply.github.com [Android] Save back handling state in Activity/Fragment bundle (flutter/engine#56715)
2024-12-03 robert.ancell@canonical.com Split keyevent channel into own class (flutter/engine#56911)
2024-12-03 robert.ancell@canonical.com Add tests for errors encoding message channel request and method calls. (flutter/engine#56914)
2024-12-03 skia-flutter-autoroll@skia.org Roll Skia from 8dc8bdc364f5 to e02d856f86fb (3 revisions) (flutter/engine#56926)
2024-12-03 jonahwilliams@google.com [Impeller] invalidate cached atlas data, take 2. (flutter/engine#56925)
2024-12-03 jason-simmons@users.noreply.github.com Add typeface_proxy dependency to the Skia build script for the Android font manager (flutter/engine#56924)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159406,2024-11-25T06:55:14Z,2024-12-11T01:00:49Z,yiiim,1,0,3,48,4,2,2,"['a: tests', 'a: text input', 'framework', 'f: scrolling', 'd: api docs', 'd: examples']",762964.0,0,1361137.0,0,0,0,0,1357836.807345,,0,3,0,False,['yiiim'],"@victorsanni  Since the text ""1"" is not on the screen but offstage, we should skip offstage elements by default when searching.
for example: 
```dart
import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  testWidgets('my test', (WidgetTester tester) async {
    await tester.pumpWidget(
      MaterialApp(
        home: LayoutBuilder(
          builder: (context, view) {
            return CustomScrollView(
              slivers: [
                SliverToBoxAdapter(child: SizedBox(height: view.maxHeight)),
                const SliverToBoxAdapter(child: Text('1')),
              ],
            );
          },
        ),
      ),
    );
    expect(find.text('1'), findsNothing);
  });
}
```
The test passes without using `SliverMainAxisGroup`. However, when the slivers are placed inside `SliverMainAxisGroup`, the test fails. I believe their results should be consistent.@yiiim I'm wondering what the use case for this PR is. Could you go into a little more detail? LGTM as well thank you!",@yiiim I'm wondering what the use case for this PR is. Could you go into a little more detail? LGTM as well thank you!,"```dart
import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  testWidgets('my test', (WidgetTester tester) async {
    await tester.pumpWidget(
      MaterialApp(
        home: LayoutBuilder(
          builder: (context, view) {
            return CustomScrollView(
              slivers: [
                SliverMainAxisGroup(
                  slivers: [
                    SliverToBoxAdapter(child: SizedBox(height: view.maxHeight)),
                    const SliverToBoxAdapter(child: Text('1')),
                  ],
                )
              ],
            );
          },
        ),
      ),
    );
    expect(find.text('1'), findsNothing);
  });
}
```
The above test should have passed, but it failed. This PR fixes the issue.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157663,2024-10-26T06:04:00Z,2024-12-11T00:55:57Z,yiiim,13,6,14,43,3,4,4,['framework'],244173.0,0,3955920.0,0,0,0,0,1358129.227902,,1,14,0,False,"['dkwingsmt', 'auto-submit[bot]', 'yiiim', 'nate-thegrate', 'justinmc']","> LGTM with a couple of tiny suggestions :)
> 
> Thanks for the fix and the well-structured test!

Thank you for leaving a comment. I am concerned about the changes to `markNeedsPaint`, and we might need someone more familiar with `RenderObject` to review it. @dkwingsmt Is this something you would be up for reviewing? Thanks for the contribution. The change seems reasonable to me. But since this involves a change to `RenderObject`, I think we should add a test for `RenderObject` so that this fix is verified even if `AnimatedOpacity` is gone.

Also cc @jonahwilliams who worked on related code 3 years ago and should be more knowledgeable than me.


### Side note

It took me a while to understand the relationship between `markNeedsCompositedLayerUpdate` and `markNeedsPaint`:

|  | `markNeedsPaint` | `markNeedsCompositedLayerUpdate` | 
|----|----|----|
| First few lines | Skip if `_needsPaint`, then set `_needsPaint` | Skip if `_needsCompositedLayerUpdate \|\| _needsPaint`, then set `_needsCompositedLayerUpdate ` |
| Behavior if it is and was a boundary | Adds itself to `owner!._nodesNeedingPaint` and request visual update | Adds itself to `owner!._nodesNeedingPaint` and request visual update |
| Behavior | (a lot of things) | Same as `markNeedsPaint` |

So basically, other than the first few lines, the rest of the two functions are identical. I suggest we refactor it somehow to indicate it more clearly. (It doesn't have to be done in this PR.) > But since this involves a change to `RenderObject`, I think we should add a test for `RenderObject` so that this fix is verified even if `AnimatedOpacity` is gone.

@dkwingsmt Tests for `RenderObject` have been added, feel free to review.
 auto label is removed for flutter/flutter/157663, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=157663) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 BTW – I've learned that Google testing can have a hard time understanding merge commits, so it might be better to do a rebase here

https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#using-git @dkwingsmt Did the Google testing fail because of this assertion? Yeah it was. But I don't think we can remove this assertion, otherwise it means this change will change the logic of existing apps. Let me see if I can find why it was triggered.

I wonder if it's because `markNeedsPaint` is called after `_nodesNeedingPaint` is used before `_needsCompositedLayerUpdate` is reset.

Edit: I found that a handful of tests are broken and seem to be caused by the exactly same widget. I'll look more into it. I took a look and propose a different fix:

```
// object.dart, L2964
-       owner?._nodesNeedingPaint.remove(this);
+       owner?._nodesNeedingPaint.removeWhere((RenderObject t) => t == this);
```

This fix works for both your unit test and the internal tests.

Analysis: The reason why adding the object to `owner!._nodesNeedingPaint` twice causes the problem is because while `flushCompositingBits` is supposed to clean up all objects that have become non-compositing, the job fails because only  the first encounter is removed. Therefore `flushPaint` unexpectedly encounters non-compositing objects.

And the reason why I think the current approach might not be the best is because the system is so complicated that we can't assume `_needsCompositedLayerUpdate == true` is equivalent to `owner!._nodesNeedingPaint.contains(this)`.

And it seems `_nodesNeedingPaint` is designed to allow duplicates, since `flushPaint` checks whether a node still `_needsPaint` on each iteration afresh.

If you use this approach, maybe we should add a comment to `_nodesNeedingPaint` to explain that there might be duplicate nodes. I have committed the solution you proposed, If `_nodesNeedingPaint` allows duplicates, then we can handle it this way. @jonahwilliams Would you like to take another look, since we've changed the approach? I'll wait until after the US thanksgiving holiday to settle this PR. Thanks for your patience. auto label is removed for flutter/flutter/157663, due to - The status or check suite [Windows build_tests_1_9](https://cr-buildbucket.appspot.com/build/8728895303674743825) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM with a couple of tiny suggestions :)

Thanks for the fix and the well-structured test! Change seems reasonable to me, thank you for tracking this one down

LGTM LGTM LGTM","LGTM with a couple of tiny suggestions :)

Thanks for the fix and the well-structured test! Change seems reasonable to me, thank you for tracking this one down

LGTM LGTM LGTM","Fixes: #157312

A simpler way to reproduce this issue:
```dart
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> with SingleTickerProviderStateMixin {
  late AnimationController controller = AnimationController(
    duration: const Duration(seconds: 2),
    value: 1,
    vsync: this,
  );
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: FadeTransition(
            opacity: controller,
            child: Builder(
              builder: (context) {
                return GestureDetector(
                  onTap: () {
                    controller.value = 0.5;
                    context.findRenderObject()?.markNeedsPaint();
                    controller.value = 0;
                  },
                  child: Text(""Click""),
                );
              },
            ),
          ),
        ),
      ),
    );
  }
}

```
The main reason is that updating the opacity with `markNeedsCompositedLayerUpdate` followed by `markNeedsPaint` causes it to be added to `owner!._nodesNeedingPaint` twice.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","nit: maybe the test name could be a bit more concise?

```suggestion
  testWidgets('No exception when calling markNeedsPaint during opacity changes', (WidgetTester tester) async {
``` I'm guessing this may have been auto-imported… would it be possible to remove it?

```suggestion
``` Maybe add 
```dart
  assert(owner == null || owner!._nodesNeedingPaint.contains(this));
``` Done. (Why does this comment show as 6 hours ago? I've never seen this before.) Well, you caught me forgetting to submit the pending comment. :)  My apology for yet another comment, but I just realized `identical` should be more efficient for not going through `operator ==`.
```suggestion
      owner?._nodesNeedingPaint.removeWhere((RenderObject t) => identical(t, this));
```"
159992,2024-12-09T19:36:37Z,2024-12-10T23:09:50Z,goderbauer,2,1,2,1,1,2,1,['tool'],24.0,0,99195.0,0,0,0,0,1364497.604702,,0,2,0,False,"['goderbauer', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. The pub autoroller failed on rolling the pkg:intl dependency in https://github.com/flutter/flutter/pull/159912 due to the allow list problem that is currently being worked on in https://github.com/flutter/flutter/pull/158555. To ensure that this problem doesn't block other dependency rolls, this PR pins `pkg:intl` to a version that doesn't have the extra dependencies.

@mosuem When you resolve https://github.com/flutter/flutter/pull/158555 you'll also have to remove this pin.LGTM",LGTM,"Version 0.20.0 introduces new transitive dependencies that are not cleared (yet) in our allow list [1]. Work is underway in https://github.com/flutter/flutter/pull/158555 to change that.

[1] https://github.com/flutter/flutter/blob/eabed2381b3f4d155d3f58386e26e1401d4a413f/dev/bots/allowlist.dart
","```suggestion
  'intl': '0.19.0', // 0.20.0 introduces new transitive dependencies that are not (yet) cleared in Flutter's allow list.
```"
160045,2024-12-10T20:52:59Z,2024-12-10T22:23:40Z,christopherfujino,2,0,2,2,1,1,1,['engine'],3.0,0,5443.0,0,0,0,0,1367267.987701,,0,2,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed. auto label is removed for flutter/flutter/160045, Failed to enqueue flutter/flutter/160045 with HTTP 400: GraphQL mutate failed.LGTM",LGTM,# Flutter stable 3.27.0 Framework,
160039,2024-12-10T17:58:50Z,2024-12-10T21:25:58Z,chunhtai,2,0,1,100,5,2,2,"['a: tests', 'framework', 'a: accessibility']",2927.0,0,12431.0,0,0,0,0,1370730.426854,,0,1,0,False,"['chunhtai', 'matanlurey']","> This is a straight revert as we are pivot away from using message channel

Could you link or describe in the PR description what we'll be doing instead? > > This is a straight revert as we are pivot away from using message channel
> 
> Could you link or describe in the PR description what we'll be doing instead?

Done",,"This reverts commit 1a2d6a30bca2476c91dd01cd67405443cfc251d3.

This is a straight revert as we are pivot away from using message channel, instead we will be adding api to dart:ui.
See https://github.com/flutter/engine/pull/56691

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159943,2024-12-08T08:11:49Z,2024-12-10T20:34:34Z,hgraceb,2,2,2,72,2,3,2,"['framework', 'f: material design', 'will affect goldens']",2243.0,0,217368.0,0,0,0,0,1373814.908721,,0,2,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/159943) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159943 at sha 6dd48dc3bbc2e87e2a2b296296a5e5dd5f7c7521_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/159943).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159943 at sha 9ef6002ea5db58def9173bd9a42ee5573d3f4a5e_

LGTM! Nice fix the rendering looks better now. Thank you for following up on https://github.com/flutter/flutter/pull/158440 and splitting this out! A very clear improvement from the screenshots. LGTM :+1: 

Many Google tests were broken, but they were all expected visual diff tests.

flutter-gold also seems to be the same, I've approved them all. If it doesn't go green soon can you push a merge commit?","LGTM! Nice fix the rendering looks better now. Thank you for following up on https://github.com/flutter/flutter/pull/158440 and splitting this out! A very clear improvement from the screenshots. LGTM :+1: 

Many Google tests were broken, but they were all expected visual diff tests.

flutter-gold also seems to be the same, I've approved them all. If it doesn't go green soon can you push a merge commit?","Fixes #159942

Related Discussion: [#158440 (comment)](https://github.com/flutter/flutter/pull/158440#discussion_r1844902638)

## Temporary code

- Change the background color of the label container.

https://github.com/flutter/flutter/blob/3f08b617848e26b462560601c4a8b89a93515e77/packages/flutter/lib/src/material/input_decorator.dart#L2216-L2220

```diff
+  child: Container(
+    color: Colors.red.withOpacity(0.2),
     child: decoration.label ?? Text( 
       decoration.labelText!, 
       overflow: TextOverflow.ellipsis, 
       textAlign: textAlign, 
     ),
+  ),
```

- Change border width.

https://github.com/flutter/flutter/blob/3f08b617848e26b462560601c4a8b89a93515e77/packages/flutter/lib/src/material/input_decorator.dart#L4838

```diff
- return BorderSide(color: _colors.primary, width: 2.0);
+ return BorderSide(color: _colors.primary, width: 6.0);
 ```

## Example code

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(
    MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Directionality(
                textDirection: TextDirection.ltr,
                child: RepaintBoundary(
                  child: InputDecorator(
                    isFocused: true,
                    isEmpty: true,
                    decoration: InputDecoration(
                      hintText: 'TextDirection.ltr with BorderSide(width: 2.0)',
                      labelText: 'ABCDEFGGFEDCBAABCDEFGGFEDCBAABCDEFGGFEDCBAABCDEFGGFEDCBA',
                      border: OutlineInputBorder(
                        gapPadding: 0.0,
                      ),
                    ),
                  ),
                ),
              ),
              Directionality(
                textDirection: TextDirection.rtl,
                child: RepaintBoundary(
                  child: InputDecorator(
                    isFocused: true,
                    isEmpty: true,
                    decoration: InputDecoration(
                      hintText: 'TextDirection.rtl with BorderSide(width: 2.0)',
                      labelText: 'ABCDEFGGFEDCBAABCDEFGGFEDCBAABCDEFGGFEDCBAABCDEFGGFEDCBA',
                      border: OutlineInputBorder(
                        gapPadding: 0.0,
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    ),
  );
}
```

| Before | After |
| ------ | ----- |
|    ![before1](https://github.com/user-attachments/assets/c4b5ee75-f9f8-4ec0-baa4-7a51430893e6)    |   ![after1](https://github.com/user-attachments/assets/234b16c5-5a9a-4a1c-9f7e-d58e507533a6)    |
|    ![before2](https://github.com/user-attachments/assets/3afc7668-1a3f-49de-8c61-b839a120a950)    |   ![after2](https://github.com/user-attachments/assets/fd9e7f13-9da4-4639-9839-a293c77a76cf)    |

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","The reason there are no variables stored here is to enhance the readability of the code. If needed, I will store them as `labelCenterLeftLocalToBorder` and `labelCenterRightLocalToBorder`. This looks fine as-is, thanks."
159823,2024-12-05T03:04:02Z,2024-12-10T20:34:34Z,Renzo-Olivares,1,0,1,34,2,1,1,"['a: text input', 'framework', 'f: cupertino']",494812.0,0,495035.0,0,0,0,0,1373815.127684,,0,1,0,False,['Renzo-Olivares'],"I think that's a great idea! I had that same thought when catching this. I'll try to investigate how possible that is, and also see what else we can move down to `EditableText` safely so we can avoid this problem of applying changes to both styled `TextField`s as much as possible.LGTM, good catch!

Do you think it would be possible to define this Semantics stuff at the EditableText level so it's not duplicated across TextField and CupertinoTextField? That's the real core of the problem here. Not for this PR but I'm just curious for the future.","LGTM, good catch!

Do you think it would be possible to define this Semantics stuff at the EditableText level so it's not duplicated across TextField and CupertinoTextField? That's the real core of the problem here. Not for this PR but I'm just curious for the future.","While going through `TextField` and `CupertinoTextField` I noticed https://github.com/flutter/flutter/pull/94898 and https://github.com/flutter/flutter/pull/129652 did not make it over to `CupertinoTextField`. This PR brings over those changes to `CupertinoTextField`. On Linux after this change the `CupertinoTextField` now focuses when gaining a11y focus, and unfocuses when losing a11y focus.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.",
159742,2024-12-03T18:54:17Z,2024-12-03T20:44:48Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,605575.0,0,0,0,0,1379061.389248,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/c7f553eb6a30...938f8163b526

2024-12-03 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from j424tGVlulTUzBtPj... to CCKZcL47N_2_vxAtS... (flutter/engine#56921)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from j424tGVlulTU to CCKZcL47N_2_

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159436,2024-11-25T20:27:53Z,2024-12-10T18:55:03Z,flutteractionsbot,8,0,1,42,2,1,1,"['framework', 'f: material design', 'cp: review']",2.0,0,1291097.0,0,0,0,0,1379124.06849,,0,1,0,False,"['flutteractionsbot', 'auto-submit[bot]', 'bleroux', 'Piinks', 'christopherfujino']"," @justinmc please fill out the PR description above, afterwards the release team will review this request. @bleroux can you help fill out the above form with context from your change for the cherry pick? Thanks! @Piinks I filed the form, I don't know what to answer to the last question. Not sure what 'validation' is referring to? This change is covered by tests but that's true with all changes. > Not sure what 'validation' is referring to? This change is covered by tests but that's true with all changes.

Good question! This is typically like ""Run this sample code and observe there is no issue."" So for this, I might provide the code from the original issue to run and show scrolling to the end is now possible. :) @Piinks does this critically need to be in the next release (or can it be in a follow-up cherry-pick release)? If so, can you (or whoever is most appropriate) review it? Thanks. @justinmc has more context on this, do you think this is critical to CP now? Or later as a hotfix?
This does fix a pretty bad regression in the usability of the widget. auto label is removed for flutter/flutter/159436, Failed to enqueue flutter/flutter/159436 with HTTP 400: GraphQL mutate failed. > However it's not critical, as the issues it fixes have not gained tons of attention on GitHub or from critical customers.

Just to make it clear, that this issue was not in the previous stable. The commit which introduces this regression is only on the beta channel now and was on master for maybe one month, that might explain why it did not gained attention.CPLGTM :+1: 

This PR (original https://github.com/flutter/flutter/pull/158930) is a good cherry pick candidate because it's a revert, so very low risk, and there is some complexity around the regressions that it fixed and landing follow-up fixes.

However it's not critical, as the issues it fixes have not gained tons of attention on GitHub or from critical customers. If it's easier to wait for a follow up release then I think that's ok.","CPLGTM :+1: 

This PR (original https://github.com/flutter/flutter/pull/158930) is a good cherry pick candidate because it's a revert, so very low risk, and there is some complexity around the regressions that it fixed and landing follow-up fixes.

However it's not critical, as the issues it fixes have not gained tons of attention on GitHub or from critical customers. If it's easier to wait for a follow up release then I think that's ok.","This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/157916 and https://github.com/flutter/flutter/issues/158924

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Restore the previous dropdown menu positioning logic.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

DropdownMenu menu is misplaced and can be fully or partially hidden.
See https://github.com/flutter/flutter/pull/158930#issuecomment-2492120497 for more context.

### Workaround:
Is there a workaround for this issue?

No

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

< Replace with validation steps here >
",
159847,2024-12-05T15:37:52Z,2024-12-10T18:56:24Z,flutteractionsbot,2,0,1,96,3,1,1,"['tool', 'cp: review']",3.0,0,443912.0,0,0,0,0,1379710.225433,,0,1,0,False,"['auto-submit[bot]', 'flutteractionsbot']"," @bkonyi please fill out the PR description above, afterwards the release team will review this request. auto label is removed for flutter/flutter/159847, Failed to enqueue flutter/flutter/159847 with HTTP 400: GraphQL mutate failed.LGTM",LGTM,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/157543

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Add deprecation notice for Android x86 support, which will be removed in next stable release after 3.27.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

A deprecation notice will be printed when users build or run an x86 Android application.

### Workaround:
Is there a workaround for this issue?

No, this is simply a deprecation notice.

### Risk:
What is the risk level of this cherry-pick?

  - [X] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [X] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

Run `flutter build apk --target-platform=android-x86` and observe a deprecation notice is printed.
",
158950,2024-11-14T21:20:58Z,2024-12-10T18:56:07Z,flutteractionsbot,2,0,1,57,2,1,1,"['tool', 'cp: review']",2.0,0,2237709.0,0,0,0,0,1379728.46759,,0,1,0,False,"['auto-submit[bot]', 'flutteractionsbot']"," @LouiseHsu please fill out the PR description above, afterwards the release team will review this request. auto label is removed for flutter/flutter/158950, Failed to enqueue flutter/flutter/158950 with HTTP 400: GraphQL mutate failed.",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/150131

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Suggest macOS Sequoia Local Network permissions instead of CLI tool SocketException crash.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

The app fatally crashes on `flutter run ios` with a non-actionable error. 

### Workaround:
Is there a workaround for this issue?

The potential workarounds are listed in the error message added by this PR. 

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

It's hard to validate this PR because the original issue is hard to reproduce, but you can manually add a socket exception here https://github.com/flutter/flutter/blob/4b818b56c2607ed0f952db48613e0704b77a238f/packages/flutter_tools/lib/src/mdns_discovery.dart#L235-L239 and `flutter run ios`, and inspect the output.
",
159396,2024-11-24T15:45:35Z,2024-12-10T14:21:17Z,Sameri11,4,0,1,58,2,2,2,['tool'],1057053.0,0,1377345.0,0,0,0,0,1396216.175279,,0,1,0,False,"['Sameri11', 'auto-submit[bot]', 'bkonyi']","@Sameri11 is there an issue filed for this by any chance? @bkonyi there's not, unfortunately. Or maybe I failed to find one. I decided to not create one, because changes are relatively small and motivation is clear (to fix wrong behavior). But since you asked - maybe I'm wrong and I should create issue on that matter? @gmackall thanks for review! I changed title as you suggested.  auto label is removed for flutter/flutter/159396, due to This PR has not met approval requirements for merging. The PR author is not a member of flutter-hackers and needs 1 more review(s) in order to merge this PR.

- Merge guidelines: A PR needs at least one approved review if the author is already part of flutter-hackers or two member reviews if the author is not a flutter-hacker before re-applying the autosubmit label. __Reviewers__: If you left a comment approving, please use the ""approve"" review action instead.This LGTM, thanks for updating these tests. Can you change the PR title to be a bit more descriptive before merging? Something like ""Fix android tests using outdated regexs to modify templates"".

Not in this pr, but: these string modifications that we make on the template outputs are all really fragile. Perhaps it would be good in the future to expose some common `@visibileForTesting` constructor of a fake `AndroidProject` with unified methods for the common actions we do, like changing the AGP version. ","This LGTM, thanks for updating these tests. Can you change the PR title to be a bit more descriptive before merging? Something like ""Fix android tests using outdated regexs to modify templates"".

Not in this pr, but: these string modifications that we make on the template outputs are all really fragile. Perhaps it would be good in the future to expose some common `@visibileForTesting` constructor of a fake `AndroidProject` with unified methods for the common actions we do, like changing the AGP version. ","<!--
Thanks for filing a pull request!
Reviewers are typically assigned within a week of filing a request.
To learn more about code review, see our documentation on Tree Hygiene: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
-->

**Description**

While exploring some semi-related stuff, found these 2 tests using outdated regex which does not work because AGP version in modern templates is set in `settings.gradle.kts` and in form of `com.android.application` instead of `com.android.tools.build:gradle`.

Apart from that, in `android_plugin_example_app_build_test.dart` deleted all lines regarding version change (instead of comply with new way of declaring plugin) because for a long time it's didn't work anyway: `replaceAll` haven't find any matches and test ran on latest AGP from template. More than that, attempt to adapt this test to modern AGP setup failed because build is not working with AGP < 8 (I lost logs with actual error for this case, but I believe I can reproduce if anyone wants)

in `native_assets_agp_version_test`: 

- Fixed version to comply with AGP versioning format, which is `major.minor.patch`.
- Updated regex and version changing logic to work with `com.android.application` format and `settings.gradle.kts` file. I believe that version updating is desired behavior here, unlike in `android_plugin_example_app_build_test.dart`. 
- Updated `kts` syntax for declaring flavors in `build.gradle.kts` and updated regex-based updating of this file (didn't work previously because there wasn't actual writing to file)

didn't list any issues because there're not any regarding these tests (or maybe I just failed to find). In any case, I think that this doesn't require issue because fix is kinda trivial and motivation is clear.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159722,2024-12-03T13:22:18Z,2024-12-03T15:49:18Z,engine-flutter-autoroll,2,0,1,2,1,1,1,['engine'],2484.0,0,607915.0,0,0,0,0,1396643.393914,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159722, due to - The status or check suite [Linux_android_emu_34 android views](https://cr-buildbucket.appspot.com/build/8729567997547146049) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/159722, due to - The status or check suite [Linux_android_emu_34 android views](https://cr-buildbucket.appspot.com/build/8729567997547146049) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/f9d4f744e088...c7f553eb6a30

2024-12-03 skia-flutter-autoroll@skia.org Roll Skia from d6d1feba94d9 to 8dc8bdc364f5 (1 revision) (flutter/engine#56918)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC bdero@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159713,2024-12-03T08:05:17Z,2024-12-03T08:47:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605335.0,0,0,0,0,1418245.453937,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/089071a726d5...f9d4f744e088

2024-12-03 skia-flutter-autoroll@skia.org Roll Skia from 3db026d62805 to d6d1feba94d9 (2 revisions) (flutter/engine#56917)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
155539,2024-09-23T13:38:52Z,2024-09-27T07:18:35Z,bleroux,3,0,1,73,2,1,1,"['framework', 'f: material design', 'autosubmit']",6628614.0,0,6714743.0,0,0,0,0,1423223.33295,,1,1,0,False,"['bleroux', 'davidhicks980']","@davidhicks980 This change was reverted due to https://github.com/flutter/flutter/issues/159906 (unfortunately we don't have more details as this is a Google internal report). For the moment, the best option is to remove the corresponding code from https://github.com/flutter/flutter/pull/158255.
Do you think adding a property such as useRootNavigator would makes sense? Howdy @bleroux. Yes! Yeah, I see the utility of being able to use both. I need to integrate the changes you suggested some time this week -- sorry for the delay. My only suggestion would be to change useRootNavigator -> useRootOverlay, since a navigator doesn't necessarily need to be present... I think. I'm also a bit allergic to the ""use"" syntax because of React hooks, but I think it's for the best (also, I believe Navigator.push uses the same wording). Hey @davidhicks980 :wave: , good catch, I meant `useRootOverlay` and not `useRootNavigator` (I was working on an issue involving useRootNavigrator just before writing this comment :sweat_smile: ).
I do not have a strong opinion about the naming. `Overlay.of` has a `rootOverlay` parameter for instance.
And absolutely no worry about the delay.![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Thanks!","![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Thanks!","## Description

This PR changes the `MenuAnchor` implementation in order to always show the menu on the root overlay. Doing so menus can't be hidden by other widgets especially when using go_router.

See [[go_router] DropdownMenu behind NavigationBar](https://github.com/flutter/flutter/issues/155034) where the DropdownMenu menu was displayed behind the navigation bar.

I did not make this configurable for the moment to avoid introducing a new parameter until there is a clear use case for it.

## Related Issue

Fixes [[go_router] DropdownMenu behind NavigationBar](https://github.com/flutter/flutter/issues/155034).

## Tests

Adds 1 test.
",
159708,2024-12-03T03:56:17Z,2024-12-03T04:39:24Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605876.0,0,0,0,0,1432645.550148,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/349ad277b574...089071a726d5

2024-12-03 30870216+gaaclarke@users.noreply.github.com Moved font glyph atlas to flat_hash_map (flutter/engine#56847)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159706,2024-12-03T02:20:18Z,2024-12-03T03:04:31Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,608035.0,0,0,0,0,1436246.783073,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/5001e2a490db...349ad277b574

2024-12-03 jonahwilliams@google.com [Impeller] set GLES viewport once, remove extra unbind/validation. (flutter/engine#56902)
2024-12-03 robert.ancell@canonical.com Make a mock messenger that can easily mock channels (flutter/engine#56867)
2024-12-03 skia-flutter-autoroll@skia.org Manual roll Dart SDK from c579d193341d to 61bfa9bbb91d (1 revision) (flutter/engine#56909)
2024-12-03 robert.ancell@canonical.com Fix GTask reference counting (flutter/engine#56866)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159698,2024-12-02T22:34:57Z,2024-12-10T01:27:46Z,Renzo-Olivares,0,2,2,154,2,1,1,['framework'],,0,615171.0,0,0,0,0,1442632.510985,,0,2,0,False,[],LGTM :+1: ,LGTM :+1: ,"There are some cases where selection behavior varies on a given platform by the pointer device, for example dragging to select changes on mobile platforms depending on whether a mouse or a touch is used. When a mouse is used a user can drag to select normally, when a touch is used the selection does not change on mobile platforms when dragging.

Before this change at the end of a touch drag users would still be notified the selection was finalized even though nothing changed and they had not previously received a `changing` notification. After this change the selection is no longer finalized unless the `SelectableRegionSelectionStatus` was previously in a `changing` state.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","There is still a risk that someone will edit this class in the future and directly set the status to `finalized` without realizing that they should have used this method instead. However, I can't think of a better way to do it right now :shrug:  I take that back, you have that covered with the assert in the setter below, nice!"
159922,2024-12-07T07:53:04Z,2024-12-10T00:27:08Z,ValentinVignal,0,1,3,43,2,2,2,"['framework', 'f: material design']",,0,232446.0,0,0,0,0,1446270.884394,,0,3,0,False,[],LGTM! with one small nit,LGTM! with one small nit,"Part of https://github.com/flutter/flutter/issues/58192

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
    expect(
      RendererBinding.instance.mouseTracker.debugDeviceActiveCursor(1),
      SystemMouseCursors.basic,
    );
```"
159702,2024-12-03T00:05:18Z,2024-12-03T00:49:17Z,engine-flutter-autoroll,0,0,6,2,1,1,1,['engine'],,0,605335.0,0,0,0,0,1447048.802704,,0,6,0,False,[],,,"
https://github.com/flutter/engine/compare/05fdaa6edc12...5001e2a490db

2024-12-02 skia-flutter-autoroll@skia.org Roll Skia from ac934b9e9df9 to 3db026d62805 (2 revisions) (flutter/engine#56908)
2024-12-02 skia-flutter-autoroll@skia.org Roll Dart SDK from 46630dbefbbd to c579d193341d (1 revision) (flutter/engine#56907)
2024-12-02 31859944+LongCatIsLooong@users.noreply.github.com Reland ""[iOS] Full keyboard access scrolling (#56606)"" (flutter/engine#56842)
2024-12-02 robert.ancell@canonical.com Always check for errors when propagating task values. (flutter/engine#56856)
2024-12-02 skia-flutter-autoroll@skia.org Roll Skia from 2c4ce1d953ba to ac934b9e9df9 (1 revision) (flutter/engine#56904)
2024-12-02 94012149+richardexfo@users.noreply.github.com Fix linux on vivante drivers. (flutter/engine#56862)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159995,2024-12-09T21:18:27Z,2024-12-09T22:05:11Z,dependabot[bot],0,0,1,2,1,1,1,[],,0,2806.0,0,0,0,0,1454789.415606,,2,1,0,False,[],,,"Bumps the all-github-actions group with 1 update in the / directory: [codecov/codecov-action](https://github.com/codecov/codecov-action).

Updates `codecov/codecov-action` from 5.0.2 to 5.1.1
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/codecov/codecov-action/releases"">codecov/codecov-action's releases</a>.</em></p>
<blockquote>
<h2>v5.1.1</h2>
<h2>What's Changed</h2>
<ul>
<li>chore(release): wrapper-0.0.30 by <a href=""https://github.com/codecov-releaser-app""><code>@​codecov-releaser-app</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1715"">codecov/codecov-action#1715</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.1.0...v5.1.1"">https://github.com/codecov/codecov-action/compare/v5.1.0...v5.1.1</a></p>
<h2>v5.1.0</h2>
<h2>What's Changed</h2>
<ul>
<li>build(deps): bump github/codeql-action from 3.27.4 to 3.27.5 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1701"">codecov/codecov-action#1701</a></li>
<li>fix: hide unnecessary error on shasum by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1692"">codecov/codecov-action#1692</a></li>
<li>chore(release): wrapper-0.0.29 by <a href=""https://github.com/codecov-releaser-app""><code>@​codecov-releaser-app</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1713"">codecov/codecov-action#1713</a></li>
<li>chore(release): 5.1.0 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1714"">codecov/codecov-action#1714</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.7...v5.1.0"">https://github.com/codecov/codecov-action/compare/v5.0.7...v5.1.0</a></p>
<h2>v5.0.7</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: use HEAD_REPO by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1690"">codecov/codecov-action#1690</a></li>
<li>chore(release): 5.0.7 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1691"">codecov/codecov-action#1691</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.6...v5.0.7"">https://github.com/codecov/codecov-action/compare/v5.0.6...v5.0.7</a></p>
<h2>v5.0.6</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: update CODECOV_TOKEN and fix tokenless by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1688"">codecov/codecov-action#1688</a></li>
<li>chore(release): 5.0.6 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1689"">codecov/codecov-action#1689</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.5...v5.0.6"">https://github.com/codecov/codecov-action/compare/v5.0.5...v5.0.6</a></p>
<h2>v5.0.5</h2>
<h2>What's Changed</h2>
<ul>
<li>chore(release): wrapper-0.0.27 by <a href=""https://github.com/codecov-releaser-app""><code>@​codecov-releaser-app</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1685"">codecov/codecov-action#1685</a></li>
<li>chore(release): 5.0.5 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1686"">codecov/codecov-action#1686</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/codecov-releaser-app""><code>@​codecov-releaser-app</code></a> made their first contribution in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1685"">codecov/codecov-action#1685</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.4...v5.0.5"">https://github.com/codecov/codecov-action/compare/v5.0.4...v5.0.5</a></p>
<h2>v5.0.4</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: add action version by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1678"">codecov/codecov-action#1678</a></li>
<li>fix: strip out a trailing /n from input tokens by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1679"">codecov/codecov-action#1679</a></li>
<li>chore(deps): bump wrapper to 0.0.26 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1681"">codecov/codecov-action#1681</a></li>
<li>chore(release): 5.0.4 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1682"">codecov/codecov-action#1682</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md"">codecov/codecov-action's changelog</a>.</em></p>
<blockquote>
<h2>v5.1.1</h2>
<h3>What's Changed</h3>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.1.0..v5.1.1"">https://github.com/codecov/codecov-action/compare/v5.1.0..v5.1.1</a></p>
<h2>v5.1.0</h2>
<h3>What's Changed</h3>
<ul>
<li>fix: hide unnecessary error on shasum by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1692"">codecov/codecov-action#1692</a></li>
<li>build(deps): bump github/codeql-action from 3.27.4 to 3.27.5 by <code>@​app/dependabot</code> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1701"">codecov/codecov-action#1701</a></li>
<li>chore(release): wrapper-0.0.29 by <code>@​app/codecov-releaser-app</code> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1713"">codecov/codecov-action#1713</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.7..v5.1.0"">https://github.com/codecov/codecov-action/compare/v5.0.7..v5.1.0</a></p>
<h2>v5.0.7</h2>
<h3>What's Changed</h3>
<ul>
<li>fix: use HEAD_REPO by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1690"">codecov/codecov-action#1690</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.6..v5.0.7"">https://github.com/codecov/codecov-action/compare/v5.0.6..v5.0.7</a></p>
<h2>v5.0.6</h2>
<h3>What's Changed</h3>
<ul>
<li>fix: update CODECOV_TOKEN and fix tokenless by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1688"">codecov/codecov-action#1688</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.5..v5.0.6"">https://github.com/codecov/codecov-action/compare/v5.0.5..v5.0.6</a></p>
<h2>v5.0.5</h2>
<h3>What's Changed</h3>
<ul>
<li>chore(release): wrapper-0.0.27 by <code>@​app/codecov-releaser-app</code> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1685"">codecov/codecov-action#1685</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.4..v5.0.5"">https://github.com/codecov/codecov-action/compare/v5.0.4..v5.0.5</a></p>
<h2>v5.0.4</h2>
<h3>What's Changed</h3>
<ul>
<li>chore(deps): bump wrapper to 0.0.26 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1681"">codecov/codecov-action#1681</a></li>
<li>fix: strip out a trailing /n from input tokens by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1679"">codecov/codecov-action#1679</a></li>
<li>fix: add action version by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1678"">codecov/codecov-action#1678</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.3..v5.0.4"">https://github.com/codecov/codecov-action/compare/v5.0.3..v5.0.4</a></p>
<h2>v5.0.3</h2>
<h3>What's Changed</h3>
<ul>
<li>fix: update OIDC audience by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1675"">codecov/codecov-action#1675</a></li>
<li>fix: use double-quotes for OIDC by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1669"">codecov/codecov-action#1669</a></li>
<li>fix: prevent always setting tokenless to be true by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1673"">codecov/codecov-action#1673</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/codecov/codecov-action/commit/7f8b4b4bde536c465e797be725718b88c5d95e0e""><code>7f8b4b4</code></a> chore(release): wrapper-0.0.30 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1715"">#1715</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/c2fcb216de2b0348de0100baa3ea2cad9f100a01""><code>c2fcb21</code></a> chore(release): 5.1.0 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1714"">#1714</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/01924017249ab1f8203e9b66b9d8090e73425ce4""><code>0192401</code></a> chore(release): wrapper-0.0.29 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1713"">#1713</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/cda5e552ba8a6a2081dd405d9658606eec5b869b""><code>cda5e55</code></a> fix: hide unnecessary error on shasum (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1692"">#1692</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/2ed5abcb9f1056e6ab414a1cc0cf9f13272b9d70""><code>2ed5abc</code></a> build(deps): bump github/codeql-action from 3.27.4 to 3.27.5 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1701"">#1701</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/015f24e6818733317a2da2edd6290ab26238649a""><code>015f24e</code></a> chore(release): 5.0.7 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1691"">#1691</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/a76271d95946adc3b90b6bab0bb870368626d618""><code>a76271d</code></a> fix: use HEAD_REPO (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1690"">#1690</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/d168679d447a7d9f9917d4b26caf2cfbf080cfb4""><code>d168679</code></a> chore(release): 5.0.6 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1689"">#1689</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/373fd71a645bc4bb6a527a2225d0db67206bf786""><code>373fd71</code></a> fix: update CODECOV_TOKEN and fix tokenless (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1688"">#1688</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/288befbd1044bd1756afb0bdae077549e0ddb31f""><code>288befb</code></a> chore(release): 5.0.5 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1686"">#1686</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/codecov/codecov-action/compare/5c47607acb93fed5485fdbf7232e8a31425f672a...7f8b4b4bde536c465e797be725718b88c5d95e0e"">compare view</a></li>
</ul>
</details>
<br />

<details>
<summary>Most Recent Ignore Conditions Applied to This Pull Request</summary>

| Dependency Name | Ignore Conditions |
| --- | --- |
| codecov/codecov-action | [>= 5.0.7.a, < 5.0.8] |
</details>


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=5.0.2&new-version=5.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)
- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)
- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)
- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency
- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions


</details>",
159811,2024-12-04T21:25:58Z,2024-12-09T21:49:26Z,LongCatIsLooong,0,11,6,247,17,2,1,"['a: tests', 'a: text input', 'framework', 'f: material design', 'a: accessibility', 'f: scrolling']",,0,433409.0,0,0,0,0,1455736.541334,,0,6,0,False,[],LGTM,LGTM,"Also closes https://github.com/flutter/flutter/issues/159515

~Looking at the google testing failures~ cl/703169955

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","isn't the animation controlled by flutter? how does the caller (I assume iOS) animate the scrollable? nvm will there be cases where dx and dy both none zero? UIKit would create a display link that calls `setContentOffset` every frame with different scroll offsets. So the animation / curve is determined by UIKIt. (should I rephrase somehow to make this clear?) hmm if I apply the suggested change, is `_physics` going to be up to date for the expression before `??` yes, some rephrasing can help

Do we translate all the setContentOffset to scrollToOffset call? oh I didn't realize the applyTo uses _physics, in that case no, the suggestion is wrong, the original code is fine Not currently. In the iOS implementation, every semantics node is only scrollable in one axis I think, so iOS won't issue commands that would scroll both axes. If it does then I think we can't do anything other than just ignoring the unscrollable axis? oh ok, just want to double check there isn't any surprise. Yeah. Made some minor adjustments to the last sentence."
159694,2024-12-02T21:04:18Z,2024-12-02T21:47:00Z,engine-flutter-autoroll,0,0,9,2,1,1,1,['engine'],,0,605395.0,0,0,0,0,1457851.011907,,0,9,0,False,[],,,"
https://github.com/flutter/engine/compare/e0900f83a0c8...05fdaa6edc12

2024-12-02 skia-flutter-autoroll@skia.org Roll Skia from d7751d3d6ff4 to 2c4ce1d953ba (5 revisions) (flutter/engine#56901)
2024-12-02 tristan.ross@midstall.com [ci] use env for format and support arm64 hosts (flutter/engine#56268)
2024-12-02 lauren@selfisekai.rocks Replace outdated wiki URLs in pull request template (flutter/engine#56824)
2024-12-02 30870216+gaaclarke@users.noreply.github.com [impeller] makes UniformBindData 15% faster and adds unit test (flutter/engine#56844)
2024-12-02 skia-flutter-autoroll@skia.org Roll Skia from dd70c8e1c38f to d7751d3d6ff4 (36 revisions) (flutter/engine#56898)
2024-12-02 skia-flutter-autoroll@skia.org Roll Dart SDK from 5785058c9bb1 to 46630dbefbbd (12 revisions) (flutter/engine#56897)
2024-12-02 30870216+gaaclarke@users.noreply.github.com switched reactor to absl::flat_hash_map (flutter/engine#56845)
2024-12-02 30870216+gaaclarke@users.noreply.github.com Sped up SubpixelGlyph::Equal (flutter/engine#56851)
2024-12-02 jonahwilliams@google.com [Impeller] dont cache glyph layout if atlas is invalid. (flutter/engine#56879)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157815,2024-10-29T17:32:23Z,2024-12-09T20:55:54Z,Renzo-Olivares,8,19,24,213,8,2,3,"['a: text input', 'framework', 'f: cupertino', 'will affect goldens']",69328.0,0,3554616.0,0,0,0,0,1458946.348674,,0,24,0,False,"['justinmc', 'Renzo-Olivares', 'Piinks', 'flutter-dashboard[bot]', 'MaherSafadii']","the iOS one has this hero like animation when tapping on one of the handles which makes the handle expand to the magnifying glass, can you pull this off? @MaherSafadii That's pretty cool, I didn't realize that:

<img width=""400"" src=""https://github.com/user-attachments/assets/7dbc5665-0d41-4fa1-aa57-1b4a93f8a38e"" />

It's actually not too far away with @Renzo-Olivares's changes. It's probably doable. No pressure in this PR though! @MaherSafadii, that is a cool behavior. I probably won't get to it in this PR, but will definitely add it to my radar. (Triage flyby comment) @Renzo-Olivares it looks like some checks are failing. :) This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 The tests are fixed, but thinking about this more I wonder if this is the correct behavior. After this PR on iOS devices when providing any selection handles, whether Cupertino or Material, swapping handles is enabled. On other platforms selection handles does not allow for handle swapping at all.

Just taking into account native behavior, I'm leaning towards only `CupertinoTextSelectionHandleControls` having the ability to swap handles. Native Android material selection handles do not allow for order swapping. Maybe we can add to `TextSelectionControls` the ability to control whether the handles can swap. This way a user can provide their own `TextSelectionControls` that swap if they want them to regardless of the platform, and we can use this flag to control the default behavior of the cupertino and material handles. For example a user can provide a `MaterialTextSelectionControls`, with `canSwap` set to `true`, to allow the material handles to swap. Curious to hear any thoughts on this.

edit: This may be more involved since `SelectableRegion/SelectionArea` also needs a way to prevent the handles from swapping by using the `canSwap`. Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/157815) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157815 at sha 70bb3ab3f7b201e1d89bf0badf30f10a76027aa0_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/157815).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157815 at sha f1fc4763304b9583c5149e5352f7b44e35e71cca_

LGTM with nits :+1: . Can you create an issue for the handle animation (https://github.com/flutter/flutter/pull/157815#issuecomment-2452696733)? We talked offline and I advocated keeping the PR as-is, so that the behavior is dependent on the platform and not on the visual handle style, but I'm open for a way to modify the behavior like `swapHandles` in the future.

Renewing my LGTM 👍  LGTM 👍 

Thanks for doing this, it seems like it will greatly improve the look and feel here.","LGTM with nits :+1: . Can you create an issue for the handle animation (https://github.com/flutter/flutter/pull/157815#issuecomment-2452696733)? We talked offline and I advocated keeping the PR as-is, so that the behavior is dependent on the platform and not on the visual handle style, but I'm open for a way to modify the behavior like `swapHandles` in the future.

Renewing my LGTM 👍  LGTM 👍 

Thanks for doing this, it seems like it will greatly improve the look and feel here.","Fixes #110306 

https://github.com/user-attachments/assets/d0a20ae9-912c-4ddc-bd6a-a21409468078

This change:
* Allows selection handles on iOS to swap with each other when inverting on `TextField`.
* Allows selection handles to visually collapse when inverting on `SelectableRegion`/`SelectionArea`, previously they showed both left and right handles when collapsed, instead of the collapsed handles.
* Adds a border to the CupertinoTextMagnifier, the same color as the selection handles to match native iOS behavior.

`SelectionOverlay`:
* Previously would build an empty end handle when the selection was collapsed. Now it builds an empty end handle when the selection is being collapsed and the start handle is being dragged, and when the selection is collapsed and no handle is being dragged.
* Hides start handle when the selection is being collapsed and the end handle is being dragged.
* Keeps the handles from overlapping.

`TextSelectionOverlay`:
* Removes guards against swapping handles for iOS and macOS.
* Tracks `_oppositeEdge` used to maintain selection as handles invert.

`RenderParagraph`:
* Send collapsed selection handle state in `SelectionGeometry`, previously we wouldn't so the collapsed state would show both start and end handles.

`CupertinoTextMagnifier`:
* Inherit border color from parent `CupertinoTheme.of(context).primaryColor`. Selection handles also uses `primaryColor`.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","@justinmc I'm wondering if this change is worth while, i'm not seeing any issues without it. Previously when the selection was collapsed `SelectionOverlay` would build an empty end handle and `RenderEditable` would only push a layer for the start handle. Now `SelectionOverlay` may build and empty end handle or start handle depending on certain conditions. 

When the selection is collapsed with no handles being dragged, then build an empty end handle, this case would be alright without this code since the end handle is not built.

When the selection is collapsed with the start handle being dragged, then build an empty end handle, this case would also be fine without this code since the end handle is not built.

When the selection is collapsed with the end handle being dragged, then build an empty start handle, this case might not be fine without this code since we are dragging the end handle and its layer won't be there.

This is also the cause of the failing `editable_test.dart` test. My first reaction is to not paint this since it's never going to be visible (it always overlaps the start handle perfectly). There won't be any accessibility implications right?

It looks like the failing test just tests the number of layers painted so it shouldn't affect the decision.

```
00:52 +1212 ~8 -1: /b/s/w/ir/x/w/flutter/packages/flutter/test/rendering/editable_test.dart: RenderEditable.paint respects offset argument [E]
  Expected: an object with length of <1>
    Actual: [
              LeaderLayer:LeaderLayer#e5a4a DETACHED(handles: 2, offset: Offset(100.0, 220.0), link: LayerLink#9f416(<linked>)),
              LeaderLayer:LeaderLayer#8743c DETACHED(handles: 1, offset: Offset(100.0, 220.0), link: LayerLink#d0324(<linked>))
            ]
     Which: has length of <2>
  _paintHandleLayers will paint a LeaderLayer
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 480:18  expect
  test/rendering/editable_test.dart 200:5             main.<fn>
``` Nit: Maybe pivotPoint or something? Not sure if that's any more understandable, up to you... Or rather than being an integer, should it just indicate whether the start or end handle is being dragged? I feel like the indicator contains information that's duplicated in _selection. Should this run only on non-Apple platforms? And macOS too? I set it to run on iOS only since:
* There are no touch devices running macOS afaik, and selection handles can only be dragged with a touch pointer device.
* https://github.com/flutter/flutter/blob/74669e4bf1352a5134ad68398a6bf7fac0a6473b/packages/flutter/lib/src/cupertino/text_field.dart#L1121-L1127 This case triggers when we drag selection handles on macOS and immediately causes the handles to hide when dragging them, causing the test to fail after the handle is dragged initially since the handle disappears. I think we need to revisit how handles behave on desktop devices, there is a related issue open https://github.com/flutter/flutter/issues/108668. By default desktop platforms do not render selection handles right now, their `TextSelectionControls` explicitly block this. Right now you can provide a `TextSelectionControls` to `TextField` that allows the selection handles to render on desktop platforms, but using a mouse to manipulate them does not work since they only except touch pointer events. The case pointed out in https://github.com/flutter/flutter/pull/157815#discussion_r1870444296 also prevents selection handles from working properly on desktop platforms since they disappear immediately. Ok got it. Similarly I think we messed up mouse input on mobile devices for awhile, but it should work just like it does natively on those devices. So macOS is no big deal, but we should solve https://github.com/flutter/flutter/issues/108668 for Windows and Linux. I'm leaning towards keeping this in for the case of:
> When the selection is collapsed with the end handle being dragged, then without the code only the start handle layer is pushed. This seems wrong since the end handle is being dragged and its layer will not be there.

`RenderParagraph` does something similar (pushes both layers when collapsed). https://github.com/flutter/flutter/blob/ae736e2cc325998df328595e039208d545128265/packages/flutter/lib/src/rendering/paragraph.dart#L3086C1-L3105C6 Thinking about this some more I think you're right. I think instead of having `_oppositeEdge` and `_dragStartSelectionIsCollapsed`, I can just store `_dragStartSelection` and use it directly. I think we know what handle is being dragged depending on what method we are in `_handleSelectionEndHandleDragUpdate` and `_handleSelectionStartHandleDragUpdate`.

Thinking out loud about some of the behaviors:

End handle:
When the selection is normalized and we drag the end handle, for the duration of the drag we can hold the baseOffset in place at the base.
When the selection is inverted and we drag the end handle, for the duration of the drag we can hold the extentOffset in place at the base.

Start handle:
When the selection is normalized and we drag the start handle, for the duration of the drag we can hold the extentOffset in place at the base.
When the selection is inverted and we drag the start handle, for the duration of the drag we can hold the baseOffset in place at the base.

Concrete example:
selection format: (baseOffset, extentOffset)
initial selection (end handle at position 10): (5,10)
drag end handle forward (to position 15): (5, 15)
drag end handle backwards & invert (to position 2) - release drag: (5, 2)
new end handle drag forward (to position 8) (end handle is on position 5 and iOS always sets the new offset as the extentOffset) : (2, 8) since the start handle is on position 2, so that position should be held in place while dragging the end handle. Could you use _dragStartSelection.isNormalized? Here and below. Nit: You could also remove this if/else and just do a ternary for the baseOffset. Either way is fine though. Sounds good. Nit: Would it be easier to read if you indented these two lines? Same for below.

Or you could always do a switch, but I'm not sure if that would help with readability or not here. `isNormalized` seemed to behave a bit strangely to me, maybe `TextSelection` should have an override for it, but the default implementation checks `end >= start`, which will always be `true` with regards to a `TextSelection`, since `TextSelection` passes normalized values to `TextRange` https://github.com/flutter/flutter/blob/5621a5bdc3384f6ca216a143350d9f50f68448a6/packages/flutter/lib/src/services/text_editing.dart#L20-L23. What do you think? Done. I think I like the switch better [`48f01fc` (#157815)](https://github.com/flutter/flutter/pull/157815/commits/48f01fc8b07bb7eae7dc2775691bd126d953f816) . Ah ok, keeping it as-is is fine then. I think I've run into the same thing before. Maybe add a comment to avoid someone else coming in and moving this to _dragStartSelection.isNormalized if you think it might help."
159233,2024-11-21T00:09:40Z,2024-12-09T20:02:15Z,matanlurey,5,0,7,52,5,1,1,"['a: tests', 'framework', 'will affect goldens', 'f: integration_test']",946.0,0,1627113.0,0,0,0,0,1461812.654875,,0,7,0,False,"['joelibaceta', 'matanlurey', 'cbracken', 'Piinks', 'flutter-dashboard[bot]']","```
╔═╡ERROR #1╞════════════════════════════════════════════════════════════════════
║ /b/s/w/ir/x/w/flutter/packages/integration_test/test/golden_screenshot_test.dart: Files containing golden tests must be tagged using @Tags(<String>['reduced-test-set']) at the top of the file before import statements.
║ See: https://github.com/flutter/flutter/blob/main/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md
╚═══════════════════════════════════════════════════════════════════════════════
``` Mean. What means ++ commit description 6708c62132018070b52d9e6cb771db49a74ba57e Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/159233) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159233 at sha 572a69c6e92788b8f5e7275e2e17f436311bd694_

 > if Flutter Gold knows to check based on the files changed.

The flutter-gold check from flutter/cocoon does not consider what files changed, it looks at what test shards are running. It may need to be informed of what test shards package:integration_test runs on for it to guard against PRs landing with images changes.

https://github.com/flutter/cocoon/blob/f12111463c23852d0f83049af985dc43f0f422a4/app_dart/lib/src/request_handlers/push_gold_status_to_github.dart#L126May the force be with you.",May the force be with you.,"Closes https://github.com/flutter/flutter/issues/72045.

Let's see if I wired this correctly and if `Flutter Gold` knows to check based on the files changed.",
159344,2024-11-22T18:38:10Z,2024-12-09T19:55:57Z,nate-thegrate,0,3,3,33,2,2,1,"['framework', 'd: api docs', 'd: examples']",,0,1473475.0,0,0,0,0,1462541.294651,,0,3,0,False,[],LGTM,LGTM,"This pull request fixes a bug I introduced in https://github.com/flutter/flutter/pull/158019.

<br>

<h3 align=""center"">Before</h3>
<p align=""center"">
  <img 
    src=""https://github.com/user-attachments/assets/fcb68fac-9c63-445d-8d2b-afc28c685053""
    alt=""RenderFlex overflowed""
    width=""523px""
  />
</p>

<h3 align=""center"">After</h3>
<p align=""center"">
  <img 
    src=""https://github.com/user-attachments/assets/82091c6a-b3c5-4994-978e-5e76cbb7edfd""
    alt=""RenderFlex overflowed""
    width=""523px""
  />
</p>

<br><br>

- fixes https://github.com/flutter/flutter/issues/159340","why is this needed? I did it to make the testing easier… now that you mention it, I could probably just loop through every slider that the finder returns. Factored this out in https://github.com/flutter/flutter/pull/159344/commits/dfef025ba68c7daff5c0eb3e81855dac8f6fa419!"
159792,2024-12-04T13:46:58Z,2024-12-09T19:26:11Z,TahaTesser,1,0,1,145,4,2,2,"['framework', 'f: material design']",6857.0,0,452682.0,0,0,0,0,1464007.311328,,0,1,0,False,['TahaTesser'],"@Piinks Hey! You reviewed similar PR for Slider so requested review here.  :) LGTM :+1:  This also LGTM! The google testing failures are okay to me too, they are all typical hairline diffs around sliders as expected from this change.","LGTM :+1:  This also LGTM! The google testing failures are okay to me too, they are all typical hairline diffs around sliders as expected from this change.","Fixes [`RangeSlider` thumb's center doesn't align with division's center,  thumb padding,  and  rounded corners don't work as expected](https://github.com/flutter/flutter/issues/159586)

This makes a similar fix as the one for   `Slider` in https://github.com/flutter/flutter/pull/149594. This fix is essential to bring updated Material Design for `RangeSlider`.

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  double _discreetSliderValue = 0.6;
  RangeValues _discreteRangeSliderValues = const RangeValues(0.2, 1.0);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        sliderTheme: const SliderThemeData(
          trackHeight: 32,
          thumbColor: Colors.green,
          activeTrackColor: Colors.deepPurple,
          inactiveTrackColor: Colors.amber,
        ),
      ),
      home: Scaffold(
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                'Discrete Slider',
                style: Theme.of(context).textTheme.titleMedium,
              ),
              Slider(
                  value: _discreetSliderValue,
                  divisions: 5,
                  onChanged: (double newValue) {
                    setState(() {
                      _discreetSliderValue = newValue;
                    });
                  }),
              Text(
                'Discrete Range Slider',
                style: Theme.of(context).textTheme.titleMedium,
              ),
              RangeSlider(
                values: _discreteRangeSliderValues,
                divisions: 5,
                onChanged: (RangeValues newValues) {
                  setState(() {
                    _discreteRangeSliderValues = newValues;
                  });
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}
```

</details>

### Before

<img width=""701"" alt=""Screenshot 2024-12-02 at 18 57 03"" src=""https://github.com/user-attachments/assets/62d85476-87fd-48e9-aaa9-42d7629d4808"">

### After

<img width=""701"" alt=""Screenshot 2024-12-02 at 18 57 21"" src=""https://github.com/user-attachments/assets/36f136d1-a759-4b11-b0a9-8cb6b54b8573"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
155615,2024-09-24T17:11:36Z,2024-12-09T18:51:11Z,nate-thegrate,0,0,1,4,1,1,1,"['team-framework', 'd: docs/']",,0,6572379.0,0,0,0,0,1466432.679233,,1,1,0,False,[],LGTM,LGTM,"Recently I learned that (at least in `team-framework` and `team-design` triage meetings) we'd like to see all incoming issues, even ones that already have an assignee.

This PR removes a filter so that this will happen in the future.

resolves #155700",
159684,2024-12-02T17:18:18Z,2024-12-02T18:14:08Z,engine-flutter-autoroll,0,0,3,4,2,1,1,['engine'],,0,608155.0,0,0,0,0,1468655.34916,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/1f6312df6d75...e0900f83a0c8

2024-12-02 jason-simmons@users.noreply.github.com Roll Dart SDK from 0740ded7b9bf to 5785058c9bb1 (5 revisions) (flutter/engine#56886)
2024-12-02 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from pc49rc4B22IXqigQ-... to j424tGVlulTUzBtPj... (flutter/engine#56889)
2024-12-02 skia-flutter-autoroll@skia.org Roll Skia from f149f852c70a to dd70c8e1c38f (4 revisions) (flutter/engine#56814)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from pc49rc4B22IX to j424tGVlulTU

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159676,2024-12-02T16:10:19Z,2024-12-02T17:05:15Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,605033.0,0,0,0,0,1475857.417211,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/d7be573a5ee5...1f6312df6d75

2024-11-29 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from oJzuSXcrUmaw5Ck2g... to pc49rc4B22IXqigQ-... (flutter/engine#56876)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from oJzuSXcrUmaw to pc49rc4B22IX

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159288,2024-11-21T19:46:07Z,2024-12-07T17:00:58Z,bernaferrari,1,3,2,36,3,1,1,"['framework', 'a: animation']",1222355.0,0,1372859.0,0,0,0,0,1645484.400166,,0,2,0,False,['nate-thegrate'],"I took the same benchmark I used for https://github.com/flutter/flutter/pull/159757 and ran it against this branch. Much to my chagrin, I only saw a performance improvement of 0.1 ms, i.e. within the margin of error.

But after reading through https://github.com/flutter/flutter/pull/138481, it turns out that we had different use cases: I was just checking the ability to send a bunch of notifications whereas @ignatz was repeatedly adding & removing listeners.

So the good news is: this PR vastly improves performance for their use case without making mine any worse!LGTM, and huge thanks to everyone who was working on https://github.com/flutter/flutter/pull/138481!

I just had a couple of tiny nits, which are especially trivial since the new autoformatter will soon take care of whitespace automatically 🙂","LGTM, and huge thanks to everyone who was working on https://github.com/flutter/flutter/pull/138481!

I just had a couple of tiny nits, which are especially trivial since the new autoformatter will soon take care of whitespace automatically 🙂","The following PR (https://github.com/flutter/flutter/pull/138481) got split in 2, this is part 2.

We now have the microbenchmarks to compare this change against (and hopefully see improvements).

Close: https://github.com/flutter/flutter/issues/146211
Part 1: https://github.com/flutter/flutter/pull/153368","```suggestion
    final Iterator<T> iterator = _map.keys.iterator;
    return List<T>.generate(
      _map.length,
      (_) => (iterator..moveNext()).current,
      growable: growable,
    );
```

<br>

Aside from whitespace, we might as well also follow the [**avoid abbreviations**](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-abbreviations) style guideline. 
whitespace nit:

```suggestion
  final HashedObserverList<VoidCallback> _listeners = HashedObserverList<VoidCallback>();
``` I'm looking forward to the new linter rule that would let us just do

```dart
final _listeners = HashedObserverList<VoidCallback>();
```"
158881,2024-11-13T20:26:40Z,2024-12-07T00:58:48Z,QuncCccccc,3,30,41,665,8,4,2,"['framework', 'f: material design', 'd: api docs', 'd: examples']",600209.0,0,2003530.0,0,0,0,0,1703581.093841,,1,41,0,False,"['jonahwilliams', 'QuncCccccc']","The performance problem was due to the scaling factor which is absent from this transition AFAIK. Oh seems the [last commit](https://github.com/flutter/flutter/pull/158881/commits/5c5fa69d889e78b151db8cf92dc4989bf36ade05) caused some test failures related to bottom sheet animation. Taking a look. Created cl/702523710 and cl/702526705 to fix potential failures in google testing.

Edit: Both have been landed.Looks really good on a first pass! I'm wondering about migrating to this new transition being the default though. I think some of the Google testing might be difficult to adjust in one go. overal LGTM,

I also vaguely remember @jonahwilliams mentioned some performance issue with old transition. will the issue still persist after the change? LGTM LGTM!","Looks really good on a first pass! I'm wondering about migrating to this new transition being the default though. I think some of the Google testing might be difficult to adjust in one go. overal LGTM,

I also vaguely remember @jonahwilliams mentioned some performance issue with old transition. will the issue still persist after the change? LGTM LGTM!","This PR is to add a new page transition for Material 3. 

The new builder matches the latest Android page transition behavior; while the new page slides in from right to left, it fades in at the same time and the old page slides out from right to left, fading out at the same time. When both pages are fading in/out, the black background might show up, so I added a `ColoredBox` for the slides-out page whose color defaults to `ColorScheme.surface`. The `backgroundColor` property can be used to customize the default transition color.

This demo shows the forward and backward behaviors.

https://github.com/user-attachments/assets/a806f25d-8564-4cad-8dfc-eb4585294181

Fixes: https://github.com/flutter/flutter/issues/142352

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
","Looks like leftover code. Should the duration be a property of the page transition builders? If we add more transitions, I could see this continuing to be an issue. Should we make this transition the default right away? I'm guessing this is what's breaking Google testing. You are right. The google testing failures are related to the updated behaviors like the duration change and the added ColoredBox. Maybe we can use `useMaterial3` to control the default? But it also defaults to true now so using it won't fix the google testing. A migration guide and an announcement are probably also needed:)  Ah nice catch!! Removed this. Thanks! Could we maybe add the builder as an option in this PR but not make it the default? Then put out an announcement that we are going to transfer over to this new transition being the default, and if they want to opt out ahead of time they can set the zoom transition as their default in their theme. Then they could either, switch to using it early and migrate their tests themselves, explicitly set the zoom transition builder in their themes for all platforms needed, or let it merge later and break their tests, but they'll have warning. in example page_transition_theme.0.dart, there was a comment said the default is `FadeForwardsPageTransitionsBuilder` if not specify, is this override needed? This can use some more explanation. I assume this is to show case the new material transition? Why this change? +1 After I thinking about it more, I think it should be done in TransitionRoute.didPush and didPop() to update the duration and reverseDuration directly right before forward() and reverse() is called.

That way you don't need this logic here Why are we applying  delegatedTransition in here. I thought that is for the route below and is automatically added in the modalroute directly Do we have use case where people want to set a different color other than surface? it seems whichever color they pick will cause a color flash  If we are going to keep the old transition, have we thought about having android version as part of theme? for example

ThemeData.androidVersion, and then based on version we build different default pagetransition The delegatedTransition won't be passed if the route below uses the same delegatedTransition. So setting a default secondary transition is still necessary, and using the delegatedTransition limits code duplication.

It's not passed because some transitions, mainly the old Zoom transition and the Cupertino transition, get messed up in specific cases if they get overwritten by the same transition. If not specify, I think on iOS and macOS platforms, it will default to `CupertinoPageTransitionsBuilder()`, and in this example, I just wanted to show the new page transition, so I just override everything. Do you think if this is necessary? The new page transition also uses SlideTransition, so there are more than one in this example. Yes, just updated! Thanks! Then I think the comment in page_transition_theme.0.dart should be updated as the default may not always be `FadeForwardsPageTransitionsBuilder` when unspecified. Sounds good. I think this can help land the change in a soft breaking manner😄! Let me separate this PR. Updated! Thanks! Updated! Thanks! I think so! If the page has its own color(not `ColorScheme.surface`), changing the `backgroundColor` to the same color can avoid the color flash. I noticed this problem in page_transition_theme.0.dart, the two pages has their own `Scaffold.backgroundColor`, the first page has blueGrey as its background, so if we want to use the new builder and no color flash, we should also set the background color to `Colors.blueGrey`. I actually think we should not encourage users to use the old page transitions and should deprecate those in the future, as they are already outdated:) I noticed this and in some other example are removing this flag, can you explain a bit why we want to remove it? not in this class, I meant in TransitionRoute class directly
https://github.com/flutter/flutter/blob/d7f5547ecd036d80f408935e4dc154a0dbe0b8d8/packages/flutter/lib/src/widgets/routes.dart#L291 This seems a bit weird. So the issue is that due to code dedup, delegateTransition is also used as secondary transition for itself. and because overriding the same animation can cause some weird situations so we have check to make sure the route above won't override the bottom if delegateTransition is the same.

What about cases where a route doesn't use its delegateTransition as its secondary transition? in that case won't the delegateTransition of the route above get ignored? Ah we manually set `useMaterial3` to true when its default value was false. The default value becomes to true since last year so `useMaterial3: true` is redundant.  > What about cases where a route doesn't use its delegateTransition as its secondary transition? in that case won't the delegateTransition of the route above get ignored?

No, it wouldn't get ignored. If a pages' default secondary transition is different from it's delegatedTransition, which can happen, you can set a unique transition for both. But if they are the same, you may as well use the delegatedTransition in the place of the secondary transition. talked offline, this may potentially be an issue, but it is tangential to this pr."
159079,2024-11-18T15:40:13Z,2024-12-07T00:04:51Z,flutteractionsbot,2,0,1,70,2,1,1,"['tool', 'cp: review', 'cp: merge-to-beta']",3.0,0,1585479.0,0,0,0,0,1706819.62775,,0,1,0,False,"['auto-submit[bot]', 'flutteractionsbot']"," @bkonyi please fill out the PR description above, afterwards the release team will review this request. auto label is removed for flutter/flutter/159079, Failed to enqueue flutter/flutter/159079 with HTTP 400: GraphQL mutate failed.",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/158537

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Avoid rethrowing `DartDevelopmentServiceException`s as `StateError`s when the Dart Development Service fails to start due to the target shutting down.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

Currently one of the top tool crashers on the beta branch. The crash is harmless and shouldn't impact user workflows, but causes significant noise.

### Workaround:
Is there a workaround for this issue?

No workaround available.

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

Hard to replicate the original issue consistently, but in theory: start applications and immediately shut them down before DDS can finish starting.",
159907,2024-12-06T21:29:40Z,2024-12-06T22:34:13Z,dkwingsmt,0,0,1,79,2,1,1,"['framework', 'f: material design']",,0,3876.0,0,0,0,0,1712256.722874,,0,1,0,False,[],![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png),![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png),"Reverts https://github.com/flutter/flutter/pull/155539.

The PR was found to have caused regression https://github.com/flutter/flutter/issues/159906.",
159296,2024-11-21T21:59:08Z,2024-12-06T21:31:08Z,AbdeMohlbi,5,1,10,14,1,3,2,"['platform-android', 'tool']",341702.0,0,1294322.0,0,0,0,0,1716043.39727,,1,10,0,False,"['AbdeMohlbi', 'reidbaker', 'jesswrd', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: refactor with no functional change.  @AbdeMohlbi Hey this PR looks really similar to this PR: https://github.com/flutter/flutter/pull/159301. I'm just wondering if there's a reason these PRs need to be split (like some sort of dependency)? > @AbdeMohlbi Hey this PR looks really similar to this PR: #159301. I'm just wondering if there's a reason these PRs need to be split (like some sort of dependency)?

so from a bad experience with gradle it is always best to add stuff gradually to avoid mistakes with these scripts , because some updates to a part can indirectly affect other parts of the code  @jesswrd also I asked @AbdeMohlbi to keep the prs small so we could quickly review (and revert if we needed to). So far I have been happy with the style. LGTM",LGTM,"fix failing lint : `'findByPath' requires a specific ordering of project evaluation`
![Capture d’écran 2024-11-21 230157](https://github.com/user-attachments/assets/61ab84da-4941-4aa4-a42e-fac4c140f4bd)
![Capture d’écran 2024-11-21 230245](https://github.com/user-attachments/assets/417563b7-0416-47bd-9f02-6778d37893ef)

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",`findByPath` does return null if the a task with the specified name does not exist so it's basically the same behavior
159299,2024-11-21T22:44:44Z,2024-12-06T21:19:58Z,AbdeMohlbi,1,0,3,6,1,2,2,['tool'],406241.0,0,1290916.0,0,0,0,0,1716713.706569,,0,3,0,False,['reidbaker'],Test-exempt: Code comments only. ,,"update comments inside `flutter_build_preview_sdk_test.dart` to match the usage of `build.gradle.kts` instead of `build.gradle`
those must've slipped from #157195
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159721,2024-12-03T13:06:55Z,2024-12-06T14:47:38Z,TahaTesser,3,11,2,479,3,2,1,"['framework', 'f: material design']",265403.0,0,270813.0,0,0,0,0,1734687.519113,,0,2,0,False,"['Piinks', 'TahaTesser']","This is weird. This PR is merged before all the tests are done when in merge queue. Shouldn't it wait for all tests to pass before merging? 

**Update:**

Post about this behavior on Discord infra channel.  The autosubmit label should still be used. The button is still the same as if it were squash and merge - you are manually overriding presubmit checks and putting it in the merge queue. > The autosubmit label should still be used. The button is still the same as if it were squash and merge - you are manually overriding presubmit checks and putting it in the merge queue.

Thanks for the info. I will keep using the autosubmit label.Thanks so much for the contribution! Looks good to me. Just left some nits in doc and comments in tests. LGTM! Thanks for the help! Looks like we also have some conflict to fix:)",Thanks so much for the contribution! Looks good to me. Just left some nits in doc and comments in tests. LGTM! Thanks for the help! Looks like we also have some conflict to fix:),"Related to [Introduce Material 3 `year2023` flag to the updated widget themes](https://github.com/flutter/flutter/issues/159484)


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
  /// When true, the [Slider] will use the 2023 Material 3 appearance.
``` ```suggestion
  /// appearance, which was introduced in December 2023.
``` ```suggestion
  /// When true, the [Slider] will use the 2023 Material 3 appearance.
``` ```suggestion
  /// appearance, which was introduced in December 2023.
``` I think we can remove this since the default text direction is ltr Just a question, why do we need this? It's only called once. We can just use pumpWidget so we don't need the parameters to enable/disable or set divisions for the Slider. Just feel it can make tests simpler. Here and the test above:) This was carried over from M2 where the thumb draws shadow. I've removed this from all year2023 tests. Thanks! We can remove this to keep tests simpler:) Same here:)"
159472,2024-11-26T07:59:19Z,2024-12-06T10:13:17Z,bleroux,3,6,2,411,4,3,2,"['framework', 'f: material design']",25886.0,0,883547.0,0,0,0,0,1745209.824578,,0,2,0,False,['bleroux'],"@justinmc 
Can you have a look at this PR? Taha approved it to trigger the Google tests and there are some failures, would be interesting to know more about those failures.

This PR introduced a change of behavior: previously overlay colors were always shown because an InkWell was used. With this PR, the overlay colors are shown only when InputDecoration.filled is true.
I think it is worth making this change because:
- It will comply with the M2 spec: https://m2.material.io/components/menus#dropdown-menu (and M3).
- It will allow users to choose if the overlay color should be visible or not.
- It will fix bad issues related to InkWell overflowing. See the 3 issues I listed in the description.
 > They are all visual diff golden tests, and there aren't too many. I see two types of failures:
> In a few cases, the background color of the field has gone from white or black to grey.

Possibly because something is used from the InputDecorationTheme now. Having DropdownButton respecting the InputDecorationTheme is probably the right behavior but I understand it might be too much of a breaking change.
Or maybe it is has to do with overlays? Do you have a way to check if those tests capture an hovered or focused state?

> In most cases, a few pixels around the corners of the overlay have changed. It doesn't visually look any different to my eye. Do you have idea why that would happen though?

There were some clipping logic added in https://github.com/flutter/flutter/pull/95906 around the InkWell that might explain the change. @justinmc I updated the PR today (replacing MouseRegion.onHover with onEnter as you proposed, and also changing the default color for a filled and focused DropdownButton based on your description of the golden failure).
It would be interesting to know if the golden diff related to ""In a few cases, the background color of the field has gone from white or black to grey."" are still there.

For the other golden diff you mentionned (""In most cases, a few pixels around the corners of the overlay have changed. It doesn't visually look any different to my eye."")

I think it could also be because, previously the InkWell was overflowing the borders for a focused filled DropdownButton, see https://github.com/flutter/flutter/issues/147069 (in the issue the code sample increases the border radius for illustration, but with the default border radius it would be some widgets on each corner).LGTM The change LGTM but as you mentioned we should talk about the Google failures:

They are all visual diff golden tests, and there aren't too many. I see two types of failures:

 * In a few cases, the background color of the field has gone from white or black to grey.
 * In most cases, a few pixels around the corners of the overlay have changed. It doesn't visually look any different to my eye. Do you have idea why that would happen though?

Are both of these expected? LGTM 👍 

Indeed all of the failures related to background color changes are gone! The remaining failures are all the corner overflow that you explained, and all are only a few pixels of difference anyway due to a small border radius.

Good guesswork, thanks!","LGTM The change LGTM but as you mentioned we should talk about the Google failures:

They are all visual diff golden tests, and there aren't too many. I see two types of failures:

 * In a few cases, the background color of the field has gone from white or black to grey.
 * In most cases, a few pixels around the corners of the overlay have changed. It doesn't visually look any different to my eye. Do you have idea why that would happen though?

Are both of these expected? LGTM 👍 

Indeed all of the failures related to background color changes are gone! The remaining failures are all the corner overflow that you explained, and all are only a few pixels of difference anyway due to a small border radius.

Good guesswork, thanks!","## Description

This PR fixes some `DropdownButtonFormField` issues where the overlay color overflows.

Before this PR, `DropdownButtonFormField` was relying on an `InkWell` to display overlay colors. This resulted in several issues related to the `InkWell` overflowing because it is not aware of the inner container inside `InputDecorator`, for instance see https://github.com/flutter/flutter/issues/106659.

With this PR, `DropdownButtonFormField` does not use an `InkWell` but rely on `InputDecorator` to paint overlay colors. `InputDecorator` paints overlay colors only on its internal container, this fixes the color overflowing when using `InkWell`. With this change users can opt-in for overlay colors to be painted by setting InputDecorator.filled to true (similarly to TextField and accordingly to [the Material specification](https://m2.material.io/components/menus#dropdown-menu)).

Code sample from https://github.com/flutter/flutter/issues/106659 with InputDecoration.filled set to true:

<details><summary>Code sample with InputDecoration.filled set to true</summary>

```dart
import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  MyApp({Key? key}) : super(key: key);

  static const String _title = 'Flutter Code Sample';
  final _formKey = GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    var items = [
      'Ayo',
      'This',
      'Don',
      'Look',
      'Right',
    ].map((String val) {
      return DropdownMenuItem(
        value: val,
        child: Text(
          val,
        ),
      );
    }).toList();

    return MaterialApp(
      title: _title,
      theme: ThemeData(
        inputDecorationTheme: const InputDecorationTheme(
          border: OutlineInputBorder(
            borderRadius: BorderRadius.all(Radius.circular(32)),
            borderSide: BorderSide(color: Colors.blue, width: 2),
          ),
        ),
      ),
      home: Scaffold(
        body: Center(
          child: SizedBox(
            width: 500,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Form(
                  key: _formKey,
                  child: DropdownButtonFormField(
                    onTap: () {
                      _formKey.currentState!.validate();
                    },
                    validator: (String? v) => 'Required',
                    onChanged: (String? value) {},
                    items: items,
                    // Set InputDecoration.filled to true if overlays should be visible.
                    // See Material specification for filled vs outlined dropdown button:
                    // https://m2.material.io/components/menus#dropdown-menu.
                    decoration: const InputDecoration(filled: true),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}


``` 
</details> 

Before:

![image](https://github.com/user-attachments/assets/3c22975f-9b8c-4184-8ffe-67f2191bf563)

After:

![image](https://github.com/user-attachments/assets/47ac35c3-b516-454f-bd47-2d35d85f172f)

After (when filled is not set to true):

![image](https://github.com/user-attachments/assets/faf46e40-5817-4d64-9158-7a57d94a9776)


## Related Issue

Fixes [DropdownButtonFormField InkWell spreads to error message](https://github.com/flutter/flutter/issues/106659).
Fixes [DropdownButtonFormField input decorator focus/hover is not clipped and appears behind fill color.](https://github.com/flutter/flutter/issues/147069)
First step for [DropDownButtonFormField hoverColor has no effect in web and desktop platforms](https://github.com/flutter/flutter/issues/151460) 

## Tests

Adds 4 tests.
Updates 2 tests (remove checks specific to InkWell usage and use filled: true when checking for hover/focus colors).
Removes 1 test (test specific to InkWell usage, because this PR removes the InkWell the test is obsolete).
","You're not losing an ink splash effect by doing this? Are you able to use onEnter instead so this isn't called on every movement? Goog point. I saw this pattern (relying on MouseRegion.onHover and MouseRegion.onExit in RawScrollbarState and MenuAnchor and thought it should be done that way. But I see that more widgets are relying on MouseRegion.onExit (especially TextField).
I will kae this change. Yes we do. Splash effect on DropdownButton is not part of the spec and it was not there until https://github.com/flutter/flutter/pull/95906 added the InkWell.

If we want to keep the InkWell, I think the only solution to fix the issues listed in this PR description will be to add an option inside InputDecorator to add an optional InkWell (would be a non-breaking change but adds  more complexity to InputDecorator for a specific use case). Otherwise it is almost impossible to properly positioned and sized the InkWell has the InputDecorator container adjust based on several parameters (border style, content padding, ect). I updated the PR to use MouseRegion.onEnter. I'm on board with removing the InkWell, thanks for explaining. I double checked the spec and you're right that it's not in there."
159856,2024-12-05T19:29:24Z,2024-12-06T02:25:12Z,goderbauer,0,2,1,3,1,2,1,[],,0,24950.0,0,0,0,0,1784801.897891,,0,1,0,False,[],LGTM,LGTM,,"Ooo is this like character width? As in, 100 instead of the usual 80? Yeah, exactly that :)"
159812,2024-12-04T21:51:36Z,2024-12-05T21:41:43Z,goderbauer,0,0,1,234,105,1,1,"['a: tests', 'tool', 'framework', 'a: internationalization', 'd: api docs', 'd: examples', 'platform-web', 'f: integration_test']",,0,85810.0,0,0,0,0,1801811.966499,,1,1,0,False,[],Bump up it! LGTM 🚀 ,Bump up it! LGTM 🚀 ,,
146182,2024-04-03T05:16:25Z,2024-12-06T01:40:56Z,yiiim,4,8,3,160,4,4,2,"['c: new feature', 'framework', 'f: material design']",2285184.0,0,21327873.0,0,0,0,0,1787460.078636,,0,3,0,False,"['chunhtai', 'goderbauer', 'yiiim']","I implemented a generic drag gesture boundary here: #147521. This PR needs to be reimplemented after it. (triage): We are still waiting on https://github.com/flutter/flutter/pull/147521 before we can make progress here. (triage) converting to draft for now until the other pr is merged. Feel free to convert back once this is ready for review  (triage) still waiting for the other pr to mergeHi @yiiim! Thanks for your patience, and thanks for the PR! LGTM LGTM, thank you for the contribution!","Hi @yiiim! Thanks for your patience, and thanks for the PR! LGTM LGTM, thank you for the contribution!","Fixes: #146112

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      body: Center(
        child: Container(
          width: 200,
          color: Colors.green,
          child: DragBoundary(
            child: CustomScrollView(
              shrinkWrap: true,
              slivers: <Widget>[
                SliverReorderableList(
                  itemBuilder: (BuildContext context, int index) {
                    return ReorderableDragStartListener(
                      key: ValueKey<int>(index),
                      index: index,
                      child: Text('$index'),
                    );
                  },
                  itemCount: 5,
                  onReorder: (int fromIndex, int toIndex) {},
                ),
              ],
            ),
          ),
        ),
      ),
    ),
  ));
}

```

</details>

| without `DragBoundary` |  with the `DragBoundary` | 
| ------- | ------- 
| ![Screen Recording 2024-04-03 at 13 01 19](https://github.com/flutter/flutter/assets/12887926/b092e229-5fc6-40a4-acf0-1197ef04c0fb) | ![Screen Recording 2024-04-03 at 13 01 19](https://github.com/flutter/flutter/assets/12887926/561da112-c1ef-48f1-b043-3947f1f0012e) |




## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","This is a really neat concept! I just came across https://github.com/flutter/flutter/issues/146749 and wondered if this might be beneficial as a generic drag gesture bounding widget, not just for ReorderableList. WDYT? This could benefit from typedef-ing the function signature. This feels a bit difficult for users to define. Say the user wants to stick within the bounds of the Viewport, since a Viewport will expand to fill all of the available space, how does the user know what that rect is? What do you think if we make this the default behavior, so that it's opt-out instead of opt-in? I have considered doing this. If the boundary widget is named `ReorderableDragBoundary`, I think it is feasible. `DragBoundary` is not suitable to be provided by default to `SliverReorderableList`, as they do not seem to have any direct connection. Have you considered having `ReorderableList` inherit the drag boundary through `forRectMaybeOf` by default instead of passing it down as a parameter? Or maybe it should do both, inherit by default, and have a parameter that overrides the default inherited provider. I'm also curious if there is any native behavior we have to compare to on other platforms (if a similar component exists). Modified to default to using `DragBoundary.forRectMaybeOf`."
158440,2024-11-11T05:03:43Z,2024-12-06T00:04:27Z,hgraceb,14,5,4,24,2,3,2,"['framework', 'f: material design', 'will affect goldens']",1768.0,0,2142045.0,0,0,0,0,1793251.196125,,0,4,0,False,"['justinmc', 'bleroux', 'hgraceb', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/158440) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158440 at sha cd2c45a052a0ff4b9c3542676dcccf1265f8654c_

 This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158440).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158440 at sha 322322b18cdb1ee6a5f5210be9cd14d7d5e72a19_

 Thanks for the PR :pray: 
It would be great, if you can add screenshots of before and after (probably based on the code sample from https://github.com/flutter/flutter/issues/150109), thanks! > Thanks for the PR 🙏 It would be great, if you can add screenshots of before and after (probably based on the code sample from #150109), thanks!

Of course, you can check it in the description now. > Can you explain why this algorithm should use the outer border? I want to get this right but I'm confused on exactly how this should work. I understand that a thick border could overlap with label text and the current algorithm (before this PR) would not consider that.

I previously mentioned that the original `scaledRRect.width` was based on stroke width. Let me elaborate on my thoughts in more detail.

First, I share your view that the previous algorithm did not take border overlap into account. However, this change is consistent with the previous implementation, the only difference is that it ensures the appearance of `TextDirection.ltr` and `TextDirection.rtl` is the same.

Specifically, the border for `TextDirection.ltr` used a fixed `start` position that does not change with stroke width, while the border for `TextDirection.rtl` does change with stroke width. Therefore, to maintain consistency, I believe we can only choose to modify the algorithm for either `TextDirection.ltr` or `TextDirection.rtl`.

I personally feel that `TextDirection.ltr` is more in line with expectations because, as mentioned earlier, the previous approach did not consider overlap situations. So I ultimately decided to change `TextDirection.rtl` to use the same algorithm as `TextDirection.ltr`, which is independent of stroke width. Of course, we can also calculate the width using `scaledRRect.left + scaledRRect.right`, but considering reliability and readability, I ultimately chose to accept parameters from the outside. Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158440).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158440 at sha 19e0039fb3bfd1caf6a41a6166c782f20ab83af4_

 Thanks for the detailed response and for helping me figure this out.

 > Specifically, the border for TextDirection.ltr used a fixed start position that does not change with stroke width, while the border for TextDirection.rtl does change with stroke width.

Can you explain how the border for TextDirection.rtl changes with stroke width?

At first glance I'm thinking that we should be using the center of the border because that must be how the border radius is measured (`r` in my drawing, `scaledRRect.trRadiusX` in the code).

<details open>

<summary>Drawing of field's top right corner</summary>

<img width=""500"" src=""https://github.com/user-attachments/assets/c40ed08f-a8a8-4c8f-8632-969aa3f0092c"" />

</details> > Can you explain how the border for TextDirection.rtl changes with stroke width?

The ""border for TextDirection.rtl does change with stroke width"" I mentioned earlier refers to the angle, not the radius.

We can look at the specific data by running the example above with an outer width of `400.0`.

------

If the stroke width is set to the [default value of 2.0](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/material/input_decorator.dart#L4839), when `TextDirection.ltr`, the `start` is `12.0`.

```dart
// Top left corner
if (scaledRRect.tlRadius != Radius.zero) {
  final double tlCornerArcSweep = math.acos(clampDouble(1 - start / scaledRRect.tlRadiusX, 0.0, 1.0));
  path.addArc(tlCorner, math.pi, tlCornerArcSweep);
}
```

However, when `TextDirection.rtl`, dx becomes `10.0`, because `scaledRRect.width = 379.0 - 1.0`.

```dart
if (start + extent < scaledRRect.width) {
  final double dx = scaledRRect.width - (start + extent);
  final double sweep = math.asin(clampDouble(1 - dx / scaledRRect.trRadiusX, 0.0, 1.0));
  path.addArc(trCorner, trCornerArcStart + sweep, trCornerArcSweep - sweep);
}
```

------

If we change the stroke width to `4.0`, while `TextDirection.ltr`, the `start` remains `12.0`.

```dart
// Top left corner
if (scaledRRect.tlRadius != Radius.zero) {
  final double tlCornerArcSweep = math.acos(clampDouble(1 - start / scaledRRect.tlRadiusX, 0.0, 1.0));
  path.addArc(tlCorner, math.pi, tlCornerArcSweep);
}
```

But when `TextDirection.rtl`, `dx` changes to `8.0`, because `scaledRRect.width = 378.0 - 2.0`.

```dart
if (start + extent < scaledRRect.width) {
  final double dx = scaledRRect.width - (start + extent);
  final double sweep = math.asin(clampDouble(1 - dx / scaledRRect.trRadiusX, 0.0, 1.0));
  path.addArc(trCorner, trCornerArcStart + sweep, trCornerArcSweep - sweep);
}
```
 > At first glance I'm thinking that we should be using the center of the border because that must be how the border radius is measured (`r` in my drawing, `scaledRRect.trRadiusX` in the code).

I don't know if this approach would be better, but it seems like it should be a separate topic for discussion, as it implies that the entire border may need to be recalculated and redrawn. Thanks for the details, can you tell me how you are changing the stroke width of your border? Then I'll try this out tomorrow. > Thanks for the details, can you tell me how you are changing the stroke width of your border? Then I'll try this out tomorrow.

You can directly modify the corresponding default value in the example above: [default value of 2.0](https://github.com/flutter/flutter/blob/728cedc62a795efa6eadd45a3a5d194fcd76023e/packages/flutter/lib/src/material/input_decorator.dart#L4839). Of course, you can also try overriding it using the theme.

https://github.com/flutter/flutter/blob/728cedc62a795efa6eadd45a3a5d194fcd76023e/packages/flutter/lib/src/material/input_decorator.dart#L4839

 @bleroux @justinmc Hi, is there any update on the Google tests? Sorry for the delay here, I've reviewed all of the Google test failures and they are all expected changes to the border. In fact, the difference in all of them is pretty much imperceptible anyway. I've approved them.

I also approved the golden changes, which were similar. It should go green any minute but let me know if not.Thanks for the PR and for including the screenshots!

Can you explain why this algorithm should use the outer border? I want to get this right but I'm confused on exactly how this should work. I understand that a thick border could overlap with label text and the current algorithm (before this PR) would not consider that. LGTM :+1: 

Thanks for helping me understand this solution. So start and extent are based on the outer width (the bounding box). The center rect shrinks as stroke width increases because it must fit inside of its bounding box including its padding. In this image, the yellow line shows the top is the same for both, but the green lines show that the center of the border has moved downward when the width increased:

![border_width_center](https://github.com/user-attachments/assets/cac26982-87dc-4407-8c01-d475f6a6b4e5)

Given that, the positioning of the top right side gap should be based on the outer width as well, as you've done in this PR.

| Before  this PR | After this PR |
| --- | --- |
| ![border_width](https://github.com/user-attachments/assets/a6fa7129-e1e8-4bbc-ac36-4e26c6ae47a8) | ![border_width_fixed](https://github.com/user-attachments/assets/96e59acf-6fbb-4b03-8d71-5ac07a3a3fed) |
 LGTM!
I'm a huge fan of such drawing fixes. Thanks for the fix and the details explanation. :pray: 

Some internal Google tests are failing. @justinmc thanks in advance for looking at these failures. 
","Thanks for the PR and for including the screenshots!

Can you explain why this algorithm should use the outer border? I want to get this right but I'm confused on exactly how this should work. I understand that a thick border could overlap with label text and the current algorithm (before this PR) would not consider that. LGTM :+1: 

Thanks for helping me understand this solution. So start and extent are based on the outer width (the bounding box). The center rect shrinks as stroke width increases because it must fit inside of its bounding box including its padding. In this image, the yellow line shows the top is the same for both, but the green lines show that the center of the border has moved downward when the width increased:

![border_width_center](https://github.com/user-attachments/assets/cac26982-87dc-4407-8c01-d475f6a6b4e5)

Given that, the positioning of the top right side gap should be based on the outer width as well, as you've done in this PR.

| Before  this PR | After this PR |
| --- | --- |
| ![border_width](https://github.com/user-attachments/assets/a6fa7129-e1e8-4bbc-ac36-4e26c6ae47a8) | ![border_width_fixed](https://github.com/user-attachments/assets/96e59acf-6fbb-4b03-8d71-5ac07a3a3fed) |
 LGTM!
I'm a huge fan of such drawing fixes. Thanks for the fix and the details explanation. :pray: 

Some internal Google tests are failing. @justinmc thanks in advance for looking at these failures. 
","Fixes #150109.

1. There are two golden file tests broken. I have read the document for the golden file test, but I'm not sure if I should do something else.
2. Modify the test because of drawing position changes.

## Changes

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    debugShowCheckedModeBanner: false,
    home: Scaffold(
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          children: [
            Directionality(
              textDirection: TextDirection.ltr,
              child: RepaintBoundary(
                child: InputDecorator(
                  isFocused: true,
                  isEmpty: true,
                  decoration: InputDecoration(
                    labelText: 'label',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(30.0),
                      gapPadding: 0.0,
                    ),
                  ),
                ),
              ),
            ),
            Directionality(
              textDirection: TextDirection.rtl,
              child: RepaintBoundary(
                child: InputDecorator(
                  isFocused: true,
                  isEmpty: true,
                  decoration: InputDecoration(
                    labelText: 'label',
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(30.0),
                      gapPadding: 0.0,
                    ),
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    ),
  ));
}
```

| Before                                   | After                                                  |
| ---------------------------------------- | ------------------------------------------------------ |
| ![Before](https://github.com/user-attachments/assets/98fcda4d-9cfa-4b7a-a68e-f978d4c63481) | ![After](https://github.com/user-attachments/assets/d677e3a8-a88a-44d8-8997-64187537c438) |

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md



## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Because `scaledRRect.width` is based on stroke width, replace it with `outer.width`. Nit: Maybe `outerWidth` instead of `width`? Why did you remove `scaledRRect.left`? In your screenshot, in the LTR field, I see that the line has moved 1 pixel closer to the label. I'm not sure if that's good or not. I changed it. This is just to ensure that the appearance of `TextDirection.ltr` is consistent with that of `TextDirection.rtl`. I have reverted the code here. Perhaps we should open another issue for further discussion."
159857,2024-12-05T19:51:44Z,2024-12-05T20:45:05Z,jonahwilliams,0,0,2,8,4,1,1,['tool'],,0,3204.0,0,0,0,0,1805212.227059,,1,2,0,False,[],,,"Required changes for https://github.com/flutter/engine/pull/56960

This configures an additional shader target for Android devices.",
159827,2024-12-05T04:32:49Z,2024-12-05T21:01:43Z,ditman,0,0,1,1,1,1,1,[],,0,59336.0,0,0,0,0,1804216.10583,,0,1,0,False,[],LGTM,LGTM,"Adds the google_adsense package to the list of 1P packages in the ""9_first_party_packages.yaml"" file.

## Issues

Related: https://github.com/flutter/packages/pull/6871

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159163,2024-11-19T19:34:10Z,2024-11-25T21:22:52Z,chunhtai,5,0,4,100,5,1,1,"['a: tests', 'framework', 'a: accessibility']",101747.0,0,1383139.0,0,0,0,0,1808732.38871,,0,4,0,False,"['auto-submit[bot]', 'chunhtai', 'matanlurey']","auto label is removed for flutter/flutter/159163, due to - The status or check suite [Mac_arm64 framework_tests_misc](https://cr-buildbucket.appspot.com/build/8730707075434840209) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 I am guessing I was added for a file change that no longer exists - if mistaken feel free to add me back. auto label is removed for flutter/flutter/159163, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=159163) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 migrating internal test cl/698906547 Time to revert pull request flutter/flutter/159163 has elapsed.
          You need to open the revert manually and process as a regular pull request.LGTM",LGTM,"fixes https://github.com/flutter/flutter/issues/158399

engine ios https://github.com/flutter/engine/pull/56691

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159595,2024-11-28T18:39:41Z,2024-11-28T19:25:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606872.0,0,0,0,0,1810669.371986,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/d7c0bcfe7a30...d7be573a5ee5

2024-11-28 chris@bracken.jp iOS: Apply nullability annotations to FlutterPlatformViewsController (flutter/engine#56839)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159720,2024-12-03T13:06:33Z,2024-12-05T17:57:50Z,TahaTesser,2,5,3,265,4,2,1,"['framework', 'f: material design', 'will affect goldens']",6531.0,0,190278.0,0,0,0,0,1815252.703678,,0,3,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/159720) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159720 at sha 6e981c30d0b4296b0311ee66573da9bc979b46c0_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/159720).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159720 at sha e5d14988e6fc9c4197672577dc0a29d281d94461_

LGTM! Thanks for the improvement:)",LGTM! Thanks for the improvement:),"Related to [Introduce Material 3 `year2023` flag to the updated widget themes](https://github.com/flutter/flutter/issues/159484)


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","nit: I feel like it's either called Material Design 3 or Material 3:) also a nit here:) ```suggestion
  /// will use the 2023 Material Design 3 appearance. Defaults to true.
``` ```suggestion
  /// [LinearProgressIndicator] will use the latest Material Design 3 appearance,
``` Great catch!"
159795,2024-12-04T14:10:07Z,2024-12-05T17:56:50Z,TahaTesser,0,2,2,285,7,1,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",,0,100004.0,0,0,0,0,1815312.75125,,0,2,0,False,[],Same nits as the progress indicator PR. Thanks for simplifying the sliders' examples!,Same nits as the progress indicator PR. Thanks for simplifying the sliders' examples!,"Fixes [Update `Slider` samples for updated Material 3 Slider spec](https://github.com/flutter/flutter/issues/159794)

### Description

This updates Slider sample to include toggle to opt in to the updated Material 3 appearance . Remove redundant sample an asset diagram. 

### Preview

<img width=""840"" alt=""Screenshot 2024-12-04 at 16 03 47"" src=""https://github.com/user-attachments/assets/b6db9efe-8416-460e-a745-bdf37c97ed61"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Same nits as the [progress indicator PR](https://github.com/flutter/flutter/pull/158925). Just feel it would be nice if we can provide more info in the text.
```suggestion
              title: year2023 ? const Text('Switch to latest M3 style') : const Text('Switch to year2023 M3 style'),
``` ```suggestion
/// The [Slider]s will show the updated ![Material 3 Design appearance](https://m3.material.io/components/sliders/overview),
```"
158925,2024-11-14T14:28:24Z,2024-12-05T17:56:15Z,TahaTesser,0,6,2,214,8,2,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",,0,1826872.0,0,0,0,0,1815348.719163,,0,2,0,False,[],LGTM! Thanks a lot for the update!,LGTM! Thanks a lot for the update!,"Fixes [Update both `ProgressIndicator` for Material 3 redesign](https://github.com/flutter/flutter/issues/141340)

> [!IMPORTANT]  
> ~~This to be merged after https://github.com/flutter/flutter/pull/158104.~~ Merged.

### Description 

This updates progress indicator samples to include toggle to opt in to the updated Material 3 appearance .

### Preview

<img width=""753"" alt=""Screenshot 2024-12-04 at 15 54 50"" src=""https://github.com/user-attachments/assets/285f2803-1a12-470a-9afe-2abcf0548ff4"">

<img width=""753"" alt=""Screenshot 2024-12-04 at 15 58 35"" src=""https://github.com/user-attachments/assets/9caebec9-f65e-4baa-8e39-9a4a4a72b205"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I'm thinking whether we can create a ProgressIndicatorTheme object for year2023 appearance. We can also add a `Switch` to turn on/off the `year2023` flag. It can be useful when we remove this deprecated flag and users want to find a copy+paste way to still keep year2023 look. Sure, that would be good idea. I'll file separate PR for the theme flag.  Filed https://github.com/flutter/flutter/pull/159720 and https://github.com/flutter/flutter/pull/159721 to add the flag in the Slider and progress indicator themes.  Updated the samples here with switch toggle for the year2023 flag and removed added samples.  nit: Maybe we can provide some more info by this switch:) like
`year2023 ? const Text('Switch to latest M3 style') : const Text('Switch to year2023 M3 style');` maybe we can do something like this to avoid the link next line:
```suggestion
/// The [LinearProgressIndicator]s will use the ![updated Material 3 Design appearance](https://m3.material.io/components/progress-indicators/overview)
```"
159705,2024-12-03T01:25:30Z,2024-12-05T17:09:02Z,andrewkolos,0,1,3,81,7,2,1,['tool'],,0,229415.0,0,0,0,0,1818180.893931,,0,3,0,False,[],,,"Split-off from https://github.com/flutter/flutter/pull/151518. Helps https://github.com/flutter/flutter/issues/150575


<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",This is already under test in https://github.com/flutter/flutter/blob/125b4e945e7e9d8bbbd9276b1a2d9162bd09696a/packages/flutter_tools/test/commands.shard/permeable/build_bundle_test.dart#L69
159839,2024-12-05T08:16:44Z,2024-12-05T16:45:57Z,bleroux,0,0,1,417,5,1,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",,0,31443.0,0,0,0,0,1818678.923994,,0,1,0,False,[],LGTM,LGTM,"Reland https://github.com/flutter/flutter/pull/159203 without change.
The initial PR was reverted in https://github.com/flutter/flutter/pull/159583.

Fixes [Date picker overlay colors aren't applied on MaterialState.selected state](https://github.com/flutter/flutter/issues/130586).",
159331,2024-11-22T16:51:18Z,2024-12-05T16:56:00Z,anisalibegic,2,0,5,354,59,2,2,"['a: tests', 'a: text input', 'team', 'tool', 'framework', 'f: material design', 'a: accessibility', 'f: scrolling', 'f: cupertino', 'd: api docs', 'd: examples', 'package', 'a: desktop', 'team-ecosystem', 'd: docs/']",1080831.0,0,1123484.0,0,0,0,0,1818964.939049,,1,5,0,False,"['anisalibegic', 'nate-thegrate']","Looks like a merge conflict popped up: @anisalibegic if you could resolve it that'd be awesome, otherwise I'd be happy to. @nate-thegrate I have fixed all conflicts.Thanks for identifering all of these! LGTM! Thanks for the PR.",Thanks for identifering all of these! LGTM! Thanks for the PR.,"Here's another one of my PRs where I hunt for typos across `flutter` repo.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
",
159441,2024-11-25T21:22:19Z,2024-12-05T16:45:57Z,AbdeMohlbi,2,3,1,2,1,3,2,['tool'],24.0,0,847421.0,0,0,0,0,1819568.238143,,0,1,0,False,"['reidbaker', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: formatting of tmpl files ",,"`what android studio lint is failing`
![Capture d’écran 2024-11-25 193428](https://github.com/user-attachments/assets/40729c6f-2c5d-4e56-a413-7b7c6dddddb8)

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","i guess ktlint is not enabled for this file ? yeah kt lint does not apply to tmpl files automatically.  I think we can probably fix this in 
https://github.com/flutter/flutter/blob/master/dev/bots/test/analyze-test-input/.editorconfig
(and then update the doc to reflect it)"
159750,2024-12-03T21:09:18Z,2024-12-04T16:47:35Z,bkonyi,0,3,1,96,3,2,1,"['tool', 'cp: beta', 'cp: stable']",,0,152879.0,0,0,0,0,1823691.244012,,0,1,0,False,[],LGTM,LGTM,Related to https://github.com/flutter/flutter/issues/157543,"Should this be `after 3.28`? The 3.28 branch has already been cut, so I we'll be removing support for anything in 3.28. (edit: I think 3.28 is a beta only branch, so 3.29 is what I should have said). The plan is to cherry pick this change so it's shipped with the upcoming stable release. Dart wants to remove x86 support for Dart 3.7. SGTM"
159592,2024-11-28T15:01:43Z,2024-11-28T16:16:04Z,engine-flutter-autoroll,0,0,2,2,1,1,1,[],,0,605548.0,0,0,0,0,1825078.085517,,0,2,0,False,[],,,"
https://github.com/flutter/packages/compare/e6932b77a183...bc0c22d57910

2024-11-27 34871572+gmackall@users.noreply.github.com [image_picker_android] Refactor interactions with ContentProvider provided filenames (flutter/packages#8188)
2024-11-27 34871572+gmackall@users.noreply.github.com [file_selector_android] Refactor interactions with `ContentProvider` provided filenames (flutter/packages#8184)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159579,2024-11-28T05:22:44Z,2024-11-28T06:04:16Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,607889.0,0,0,0,0,1857477.27009,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/dd0ef5ba7d9a...d7c0bcfe7a30

2024-11-28 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from u0agumUB4Ag6cTiKk... to oJzuSXcrUmaw5Ck2g... (flutter/engine#56853)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from u0agumUB4Ag6 to oJzuSXcrUmaw

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159541,2024-11-27T09:30:55Z,2024-12-04T15:31:03Z,fluttergithubbot,4,0,3,1,1,1,1,['c: flake'],22753.0,0,671583.0,0,0,0,0,1865292.609418,,0,3,0,False,"['auto-submit[bot]', 'zanderso', 'cbracken']","auto label is removed for flutter/flutter/159541, due to - The status or check suite [Linux_android_emu_34 android views](https://cr-buildbucket.appspot.com/build/8730102911103089025) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/159541, due to - The status or check suite [Linux customer_testing](https://cr-buildbucket.appspot.com/build/8729529159550826561) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 I give up. Merging manually because every run is a different (ironically, non-mac) flake. Why? This looks pretty consistently passing on the dashboard.",,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_benchmark flutter_view_macos__start_up""
}
-->
Issue link: https://github.com/flutter/flutter/issues/159540
",
153765,2024-08-20T15:31:22Z,2024-08-23T20:45:22Z,yiiim,4,3,5,48,4,3,2,"['framework', 'f: material design', 'f: cupertino', 'f: routes', 'autosubmit']",148155.0,0,9202637.0,0,0,0,0,1866212.425392,,0,5,0,False,"['SmallTownRiver', 'MitchellGoodwin']","I've been waiting for this for a long time. I need it so much.

 I see this PR has been merged into the mainline. When will it be released? I am looking forward to it.

@MitchellGoodwin @victorsanni   It's in the beta branches as of 3.26.0-0.1.pre and up, and it will be on the next stable release. Stable releases aren't announced ahead of time, unfortunately.

https://github.com/flutter/flutter/blob/master/docs/releases/Where's-my-commit.md @MitchellGoodwin 

Thank you so much for your reply

May I ask when is the next stable version release？

LGTM pending Mitchell's comment. LGTM!",LGTM pending Mitchell's comment. LGTM!,"Fixes: #48225 
Fixes: #73026 
Fixes: #62848

After some research, I found that the issue might simply be that our animation curve is too steep, causing the animation to continue while the page visually appears very close to popping. This PR modifies the animation curve and duration after the drag gesture is released (iOS native animation duration is not related to swipe distance). I recorded a video comparing the curves. From top to bottom, the video shows the iOS native curve, the curve modified by this PR, and the original curve. The animation duration is slowed down by 10 times.

1/2

https://github.com/user-attachments/assets/77d0a782-b56d-431b-b925-8ff4e825c14a

1/4

https://github.com/user-attachments/assets/a4c50219-e86d-4cce-8a92-b266eb6260a8

forward  1/2

https://github.com/user-attachments/assets/067fffc2-203b-4686-ba4c-3b61a2c98cf8

forward  1/4

https://github.com/user-attachments/assets/c1ae938f-76ab-42f8-a832-d2d0e6c0758d



## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Small nit: Might make it easier to read if the entire duration was defined here instead. Then the `// Milliseconds.` comment wouldn't be needed. Do we always want to use the same duration for forward and back now? The videos you have are only for if the drag is far enough to start the pop. I am certain that regardless of moving forward or backward, and regardless of the drag distance, the animation duration on iOS native(iOS 17.5) is always the same. I have supplemented the video of moving forward."
159574,2024-11-28T00:54:03Z,2024-11-28T01:47:59Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,606009.0,0,0,0,0,1875480.344393,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/ba112add5d98...dd0ef5ba7d9a

2024-11-27 skia-flutter-autoroll@skia.org Roll Fuchsia Test Scripts from OA7UxNZkbxCRfr80A... to VilXq4eGH5A24wRWA... (flutter/engine#56846)
2024-11-27 lauren@selfisekai.rocks IWYU: add some missing includes failing with libstdc++13/14 (flutter/engine#56822)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159510,2024-11-26T21:58:31Z,2024-12-04T21:52:59Z,bkonyi,3,9,9,1045,14,2,1,['tool'],685754.0,0,690871.0,0,0,0,0,1887551.311057,,0,9,0,False,"['auto-submit[bot]', 'bkonyi']","> In the future, feel free to hit the re-request review button next to my name in the reviewers section. This will ping me and let me know that something is ready for review again

I _always_ forget about this. I'll be sure to re-request next time! Thanks Andrew! :)
 auto label is removed for flutter/flutter/159510, due to - The status or check suite [Linux analyze](https://cr-buildbucket.appspot.com/build/8729450692963648369) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/159510, due to - The status or check suite [Mac_arm64 build_tests_4_4](https://cr-buildbucket.appspot.com/build/8729449423313347393) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM with nit

In the future, feel free to hit the re-request review button next to my name in the reviewers section. This will ping me and let me know that something is ready for review again","LGTM with nit

In the future, feel free to hit the re-request review button next to my name in the reviewers section. This will ping me and let me know that something is ready for review again","This is the initial tooling work for Flutter Widget Previews, adding two commands: `flutter widget-preview start` and `flutter widget-preview clean`.

The `start` command currently only checks to see if `.dart_tool/widget_preview_scaffold/` exists and creates a new Flutter project using the widget_preview_scaffold template if one isn't found. The widget_preview_scaffold template currently only contains some placeholder files and will be updated to include additional code required by the scaffold.

The `clean` command simply deletes `.dart_tool/widget_preview_scaffold/` if it's found.

This change also includes some refactoring of the `create` command in order to share some project creation logic without requiring `flutter widget-preview start` to spawn a new process simply to run `flutter create -t widget_preview .dart_tool/widget_preview_scaffold`.

Related issue: https://github.com/flutter/flutter/issues/115704","Will this default work in the case that the project is a part of a pub workspace? Should we be using [`findPackageConfigFileOrDefault`](https://github.com/flutter/flutter/blob/2812d4685c3a1c5fb9284d3d9a8e1d13dd0d79d5/packages/flutter_tools/lib/src/dart/package_map.dart#L48) here instead? Or should `packageConfigPath` stay required and `findPackageConfigFileOrDefault` be used at the call site instead? I don't know yet. Hm, I'm actually not sure why I made this change anymore since we're not creating an `Environment` instance anywhere in this PR that would necessitate this change... I'm going to revert it and update the docs for `packageConfigPath` to not reference a default.
 Do we need this for these tests? Looking at https://github.com/flutter/flutter/pull/39338, it looks like this was introduced because some of those tests invoke the `flutter` CLI directly[^1]. 

[^1]: https://github.com/flutter/flutter/blob/a309f3924af861a8de49dbd306048009f58f0195/packages/flutter_tools/test/commands.shard/permeable/create_test.dart#L4144 Oops, I made this comment in the wrong file. I'll move it. Do we need this for these tests? Looking at https://github.com/flutter/flutter/pull/39338, it looks like this was introduced because some of those tests invoke the `flutter` CLI directly[^1]. 

[^1]: https://github.com/flutter/flutter/blob/a309f3924af861a8de49dbd306048009f58f0195/packages/flutter_tools/test/commands.shard/permeable/create_test.dart#L4144 You're right, we don't. I had started writing these tests using the actual `flutter` CLI but eventually changed to just executing the commands directly. Removed. Is this called anywhere? Apparently not. Removed."
159667,2024-12-02T13:08:15Z,2024-12-04T06:09:02Z,hgraceb,4,0,2,99,1,2,2,"['a: tests', 'framework']",23.0,0,193353.0,0,0,0,0,1898485.606367,,0,2,0,False,"['nate-thegrate', 'flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: formatting only, with no semantic changes

Why was the test bot comment marked as resolved and the PR landed without a test exemption? @stuartmorgan that's on me, sorry!

I felt this was a trivial change and was hoping to either close this one or land it quickly, especially since the upcoming autoformatter adoption will make this change obsolete.

I assumed the bot comment was a false positive and that a whitespace only change was auto-exempt. I should have double-checked the tree hygiene page; will do that next time. > I assumed the bot comment was a false positive and that a whitespace only change was auto-exempt. I should have double-checked the tree hygiene page; will do that next time.

By definition, if the bot left a comment it is not auto-exempt. As it says in bold on that page:
>> In the repositories listed above, a bot will comment on your PR if you need an explicit exemption.LGTM, thanks for the cleanup!

For future reference, I believe there are plans to adopt [the new formatter](https://github.com/dart-lang/dart_style/blob/main/CHANGELOG.md#300), so whitespace throughout the repo will likely be improved upon soon :) LGTM!","LGTM, thanks for the cleanup!

For future reference, I believe there are plans to adopt [the new formatter](https://github.com/dart-lang/dart_style/blob/main/CHANGELOG.md#300), so whitespace throughout the repo will likely be improved upon soon :) LGTM!","Format controller.dart of flutter_test

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157983,2024-11-01T06:44:04Z,2024-12-04T18:45:00Z,YeungKC,4,19,8,128,2,3,3,"['framework', 'f: material design']",1038852.0,0,2894458.0,1,0,0,0,1898833.099911,,0,8,0,False,"['YeungKC', 'dkwingsmt']","Actually, why are the other 2 comments resolved without any changes or replies? I forgot to reply to the comments… but actually, those two comments are already resolved.

@Piinks  But they're not fixed either. For example, the `assert` condition is still the old one. Sorry...I'm not sure how I missed it, now is all resolved.LGTM Marking as changes requested to block merging as there are outstanding comments. Thanks! LGTM! Thanks for resolving those! :) LGTM, thank you!","LGTM Marking as changes requested to block merging as there are outstanding comments. Thanks! LGTM! Thanks for resolving those! :) LGTM, thank you!","This PR fixes an issue where PopupMenu doesn't update its position when the screen layout changes (e.g. during rotation or window resizing).

## Changes
- Introduces `positionBuilder` instead of directly using position
- Calls positionBuilder after layout changes to get the updated position
- Adds tests to verify position updates correctly

## Related Issues
Fixes #152475 - PopupMenu retains wrong position on layout change

## Implementation Notes
This implementation uses a builder pattern to dynamically calculate positions. This approach may be applicable to other popup widgets (like DropdownButton mentioned in #156980) that have similar positioning requirements.

<br>
<br>
<br>
<br>
<br>







*Replace this paragraph with a description of what this PR is changing or adding, and why. Consider including before/after screenshots.*

*List which issues are fixed by this PR. You must list at least one issue. An issue is not required if the PR fixes something trivial like a typo.*

*If you had to change anything in the [flutter/tests] repo, include a link to the migration guide as per the [breaking change policy].*

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I wonder if we can be more strict on it, and only allow one of them,

```
assert((position != null) != (positionBuilder != null),
``` Is this more correct?
```suggestion
/// [position] takes precedence. The [positionBuilder] is called at the time the
/// menu is shown to compute its position and every time the layout is updated,
/// which is useful when the position needs
/// to be determined at runtime based on the current layout.
``` Do we really need the `positionBuilder` parameter to fix this issue? It seems to me that with `LayoutBuilder` handling the rebuild, `position` is enough. The `positionBuilder` might be a useful feature for other uses, but unless we have explicit use case in mind (or brought up by an issue) it's unnecessary. I think the `positionBuilder` is necessary, When screen dimensions change (e.g. during rotation or window resizing), even with `LayoutBuilder`, the original position value remains static and may become incorrect relative to the new screen dimensions. The `positionBuilder` allows us to dynamically recalculate the position whenever the layout changes.

I think all about popup widget should need a positionBuilder replace position. Can it be configured by outside widgets? For example, (pseudocode)

```
Page(
  child: PopupMenuButton<int>(
    positionBuilder: _computePosition,
  ),
),
```

can always be replaced by 


```
Page(
  child: LayoutBuilder(
    builder: (BuildContext context, BoxConstraints constraints) =>
      PopupMenuButton<int>(
        position: _computePosition(),
      ),
  ),
),
```

Furthermore, does `_PopupMenuRoute` need `positionBuilder` as well? If `PopupMenuButton` reacts to layout changes and rebuilds `_PopupMenuRoute` with a new position, then `_PopupMenuRoute` wouldn't need `positionBuilder`. Cannot be solved by wrapping with an external `LayoutBuilder`. We must use `positionBuilder` because as long as the position parameter exists, its value remains static regardless of any external wrappers. Therefore, we need a method to dynamically obtain the position.


see also:
https://github.com/YeungKC/flutter/blob/4b090ec497b7326802b255b499422b35184f13ee/packages/flutter/lib/src/material/popup_menu.dart#L1114-L1116 I see. It is presented by `showMenu`, and therefore won't receive contextual updates any more. done done The assert here should be changed as well. ```suggestion
/// Only one of [position] or [positionBuilder] should be provided. Providing both 
/// throws an assertion error. The [positionBuilder] is called at the time the
``` Is this applied at all? I mean you can change based on my suggestion, but it seems to me that this isn't changed at all. done It seems like I failed to push.... I think we need to pass the `context` to the `positionBuilder` here. Probably the `constraints` as well, although I'm not exactly sure whose contraints they are and whether they're meaningful. Otherwise the callback can not effectively do much. The context you're suggesting to add would be the route's context, not the PopupMenuButton's context. The route's context isn't useful for positioning since we already have access to the button's context through PopupMenuButtonState. The current implementation with `RelativeRect Function()` is sufficient. But what about the caller of `showMenu`? Even in the simplest case where we don't really care which `context` it is just to get the screen parameters, no context is not available if a stateless widget is to call `showMenu`. Can you add explanation on whose `context` and `constraints` are provided here?

(Everything else looks good to ne, I'll aprove after this.) done"
158026,2024-11-01T21:42:36Z,2024-12-04T18:14:38Z,camsim99,2,3,23,202,8,2,1,"['platform-android', 'tool']",2667019.0,0,2838725.0,0,0,0,0,1900654.628247,,1,23,0,False,"['auto-submit[bot]', 'camsim99']","My understanding is that there's no way to get the integration test running in this PR, but if that is not the case please let me know :) I made an attempt to set `presubmit: true`, but I don't think that worked because `bringup` is true? auto label is removed for flutter/flutter/158026, due to - The status or check suite [Mac_x64 framework_tests_misc](https://cr-buildbucket.appspot.com/build/8729463592427464849) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM with 2 relatively minor changes/clarifications requested.

Thank you for doing this and being so responsive/incremental!","LGTM with 2 relatively minor changes/clarifications requested.

Thank you for doing this and being so responsive/incremental!","Removes plugins that are `dev_dependency`s from being dependencies of release builds of Flutter Android app projects.

Fixes https://github.com/flutter/flutter/issues/157949.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","What is the difference between `throw TaskResult.failure` (here) and `return TaskResult.failure` (below)? Here and below:

It might not matter, but I'd use `package:path` and `join` over manually adding `/`'s so folks on a Windows desktop can still run (and debug) this test locally, even if we only run it on a POSIX on our own CI. This failure is if the apk that was generated is not found. The one below checks whether or not the dev_dependency plugin was included in the apk or not."
159563,2024-11-27T18:06:52Z,2024-11-27T18:50:31Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605241.0,0,0,0,0,1900682.768307,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/ed4e13cefb45...ba112add5d98

2024-11-27 jonahwilliams@google.com [Impeller] dont use dynamic shader metadata path for precompiled shaders. (flutter/engine#56827)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159561,2024-11-27T17:27:56Z,2024-11-27T18:14:12Z,engine-flutter-autoroll,0,0,3,2,1,1,1,[],,0,607575.0,0,0,0,0,1900686.201809,,0,3,0,False,[],,,"
https://github.com/flutter/packages/compare/8ecf4b010143...e6932b77a183

2024-11-26 stuartmorgan@google.com [flutter_svg] Adopt code excerpts (flutter/packages#8181)
2024-11-26 brackenavaron@gmail.com [flutter_markdown] fix invalid URI's causing unhandled image errors (flutter/packages#8058)
2024-11-26 10687576+bparrishMines@users.noreply.github.com [ci][webview_flutter_android] Manual Roll and skip tests (flutter/packages#8186)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159559,2024-11-27T17:05:52Z,2024-11-27T17:45:11Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605300.0,0,0,0,0,1904285.93112,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4121287c360a...ed4e13cefb45

2024-11-27 chris@bracken.jp Reland: iOS: Eliminate global in platformviews controller (flutter/engine#56831)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
156412,2024-10-08T15:44:57Z,2024-12-04T18:10:57Z,yiiim,4,10,6,177,2,4,2,"['framework', 'f: material design']",1910759.0,0,4933596.0,0,0,0,0,1900845.593754,,0,6,0,False,"['yiiim', 'QuncCccccc', 'justinmc']","@yiiim FYI there is a merge conflict. > @yiiim I tried to run the two tests on master (without your change) and they did not failed. Maybe this was fixed by a recent change (several DropdownMenu PRs landed in the past weeks)?

The problem wasn't fixed by the recent landed PRs. I think this PR fix makes sense to me:)! > This looks good to me! Thanks for your contribution!
> 
> > I am unable to test sending TextInputClient.performAction when the enter key is pressed on desktop platforms.
> 
> As for the test, can we try `await tester.testTextInput.receiveAction(TextInputAction.done);`?

The current testing method still has issues. `Focus.of(editableText).hasFocus` cannot accurately determine whether the `TextField` has focus, and `await tester.testTextInput.receiveAction(TextInputAction.done);` cannot test this scenario either, as it always triggers `onEditingComplete` regardless of where the focus is. I plan to use `tester.state<EditableTextState>(find.byType(EditableText)).wantKeepAlive` to determine whether the `TextField` has focus. However, I am not ready with all the code yet, and I will update this PR soon. I changed the fix approach. We can't give focus to the `TextField` because, by default, the `TextField` is read-only on mobile platforms and cannot receive focus. If we continue to do so, keyboard navigation will still not work on mobile platforms. I had to use a less elegant solution by hiding an extra `Focus` widget to handle keyboard navigation. I tried giving focus directly to the MenuItem, but it breaks the highlight. Do you have any other ideas?

The good news is that I was able to test it successfully.Interesting fix, thanks! 🙏 

Some minor comments on the test side. @yiiim I tried to run the two tests on master (without your change) and they did not failed.
Maybe this was fixed by a recent change (several DropdownMenu PRs landed in the past weeks)? This looks good to me! Thanks for your contribution!

> I am unable to test sending TextInputClient.performAction when the enter key is pressed on desktop platforms.

As for the test, can we try `await tester.testTextInput.receiveAction(TextInputAction.done);`? Thanks so much for continuing to work on the fix! Overall this looks good to me! Just have one comment below. I found the problem when I did a manual test by using the sample code provided in the issue.

Could you also help fix the conflict? Sorry for letting this PR sit here for such a long time! LGTM! with two very minor nits. LGTM:) Thanks a lot for the contribution!","Interesting fix, thanks! 🙏 

Some minor comments on the test side. @yiiim I tried to run the two tests on master (without your change) and they did not failed.
Maybe this was fixed by a recent change (several DropdownMenu PRs landed in the past weeks)? This looks good to me! Thanks for your contribution!

> I am unable to test sending TextInputClient.performAction when the enter key is pressed on desktop platforms.

As for the test, can we try `await tester.testTextInput.receiveAction(TextInputAction.done);`? Thanks so much for continuing to work on the fix! Overall this looks good to me! Just have one comment below. I found the problem when I did a manual test by using the sample code provided in the issue.

Could you also help fix the conflict? Sorry for letting this PR sit here for such a long time! LGTM! with two very minor nits. LGTM:) Thanks a lot for the contribution!","Fixes #143505

I am unable to test sending `TextInputClient.performAction` when the enter key is pressed on desktop platforms. I have created an issue for this: #156414. The current test approach is to check whether the `DropdownMenu` has focus.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","We should follow the pattern where we have:
a) A user-provided FocusNode
b) An internally managed FocusNode, if the user never provided one

So you might want to have an ""_effectiveFocudeNode"" getter for the other parts of this change. When this focus node is created internally, it should also be disposed by this widget done Consider also adding a test where the FocusNode is not provided (as there is one created automatically now). ```suggestion
  });
```

Keyboard navigation is also possible on mobile.
After removing this variant, set `requestFocusOnTap` to true on the DropdownMenu (line 3466), this way the initial focus state will be the same for mobile and desktop.
See https://github.com/flutter/flutter/pull/156131 where the desktop variant was removed for several tests.
 ```suggestion

    // Now the focus is on the icon button.
    final Element iconButton = tester.firstElement(find.byIcon(Icons.arrow_drop_down));
    expect(Focus.of(iconButton).hasFocus, isTrue);
```
 When we hit enter twice, for the first time, the value is passed correctly, but when the menu view closes and we hit enter for the second time, currentHighlight becomes null and it will accidentally call this line and the selected value will become null. Does it make sense?

I think for here we should update this line to:
```
if (controller.isOpen) {
  widget.onSelected?.call(null);
}
``` ```suggestion
  });
  
  // Regression test for https://github.com/flutter/flutter/issues/143505.
``` ```suggestion
          // Handling keyboard navigation when the Textfield has no focus.
``` ```suggestion
 
```

Sorry for the trailing whitespace which breaks ""Linux Analyse"" check."
159784,2024-12-04T08:57:34Z,2024-12-04T12:49:16Z,bleroux,0,0,1,150,2,1,1,"['framework', 'f: material design']",,0,14513.0,0,0,0,0,1919572.327816,,0,1,0,False,[],LGTM,LGTM,"Reland https://github.com/flutter/flutter/pull/159072 without change.
The initial PR was flagged for a non-related perf regression, see https://github.com/flutter/flutter/issues/159337#issuecomment-2515486589

Fixes https://github.com/flutter/flutter/issues/159063",
159530,2024-11-27T07:18:53Z,2024-11-27T08:23:27Z,engine-flutter-autoroll,1,0,1,2,1,1,1,['engine'],19.0,0,608119.0,0,0,0,0,1936688.143796,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159530, Failed to enqueue flutter/flutter/159530 with HTTP 400: GraphQL mutate failed.",,"
https://github.com/flutter/engine/compare/b9474a99694c...4121287c360a

2024-11-27 chris@bracken.jp Reland: iOS: Delete FlutterPlatformViewsController.layerPoolSize (flutter/engine#56830)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159527,2024-11-27T05:02:32Z,2024-11-27T05:53:18Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,605500.0,0,0,0,0,1947488.765378,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/da71729651d8...b9474a99694c

2024-11-27 chris@bracken.jp Reland: iOS: Migrate PlatformViewsController to Objective-C (flutter/engine#56828)
2024-11-27 jonahwilliams@google.com [Impeller] make sampler use string_view instead of std::string. (flutter/engine#56821)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159422,2024-11-25T16:19:23Z,2024-12-04T04:57:50Z,ValentinVignal,6,13,8,405,11,4,2,"['framework', 'f: material design', 'f: cupertino', 'will affect goldens']",1909.0,0,736710.0,0,0,0,0,1948469.052312,,1,8,0,False,"['nate-thegrate', 'bleroux', 'ValentinVignal', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/159422) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159422 at sha 6f71cceef966a6851849f0b72d77fa0f42fd7d37_

 I made the tests and `Chip` only support `hovered`, `focused` and `disabled` material states as per the documentation I added to match and rely the `InkWell` behavior. Once https://github.com/flutter/flutter/issues/128289 is resolved, it would be easier to support `selected` too (or it might have to be done as the same time as https://github.com/flutter/flutter/issues/128289) Thank you for the review, I'd just want to clarify something 

> Overall, I would lean toward migrating _RawChipState away from MaterialStateMixin; I bet it'd reduce complexity since InkWell is already using a states controller.

I agree with you. But do you mean you'd prefer those changes to be made in this PR or are you fine splitting the work and having another PR to resolve https://github.com/flutter/flutter/issues/128289 ? I'd lean more towards splitting it, especially since https://github.com/flutter/flutter/pull/128507 got reverted in https://github.com/flutter/flutter/pull/128607 > I agree with you. But do you mean you'd prefer those changes to be made in this PR or are you fine splitting the work and having another PR to resolve #128289 ? I'd lean more towards splitting it, especially since #128507 got reverted in #128607

Splitting is usually better as it makes changes easier to track and, as you pointed, balances the risk of Google testing failure or the risk of a revert .
So when possible, land first the less risky part (here adding parameters), then land riskier part (here refactoring that might break some internal Google tests).
 > I'd lean more towards splitting it, especially since #128507 got reverted in #128607

I didn't know about this, thanks!

I agree with Bruno's conclusion: It'd probably be best to minimize the risk of this addition being reverted by saving the refactor for a future PR 👍 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/159422).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159422 at sha e247c9bcba8c33dbc58d79713fef7173ec49c66b_

Thank you @ValentinVignal! I'm glad to see this PR—it'll be great for chip configuration to match the other button widgets.

Overall, I would lean toward migrating `_RawChipState` away from `MaterialStateMixin`; I bet it'd reduce complexity since `InkWell` is already using a states controller.

If you're celebrating Thanksgiving today, have a great one! 🦃 LGTM! LGTM","Thank you @ValentinVignal! I'm glad to see this PR—it'll be great for chip configuration to match the other button widgets.

Overall, I would lean toward migrating `_RawChipState` away from `MaterialStateMixin`; I bet it'd reduce complexity since `InkWell` is already using a states controller.

If you're celebrating Thanksgiving today, have a great one! 🦃 LGTM! LGTM","Part of https://github.com/flutter/flutter/issues/58192

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Can the mouse cursor in this PR really be resolved in WidgetStates? If it can, a test for that behavior should be added. Otherwise, this documentation block would be misleading. ```suggestion
``` @victorsanni, I added some tests in [test: Add test for mouse cursor being a WidgetStateMouseCursor](https://github.com/flutter/flutter/pull/159422/commits/d7600ce0ef1df14b31e0420a674490583354d0f0).

However I'm facing some issues.

The mouse cursor is resolved in the `InkResponse` which is also the one modifying the `WidgetStatesController statesController` 

https://github.com/flutter/flutter/blob/4a4d7a7dac8aab7c3b27d44352d994cfea7b2925/packages/flutter/lib/src/material/ink_well.dart#L1311-L1314

But the `MaterialState.selected` is handled by the `RawChip`. 

https://github.com/flutter/flutter/blob/4a4d7a7dac8aab7c3b27d44352d994cfea7b2925/packages/flutter/lib/src/material/chip.dart#L1006-L1011

[test: Add test for mouse cursor being a WidgetStateMouseCursor](https://github.com/flutter/flutter/pull/159422/commits/d7600ce0ef1df14b31e0420a674490583354d0f0).

Includes an attempt to merge the 2 of them (I haven't updated the doc comment yet) but I'm facing the error:

```
══╡ EXCEPTION CAUGHT BY FOUNDATION LIBRARY ╞════════════════════════════════════════════════════════
The following assertion was thrown while dispatching notifications for WidgetStatesController:
setState() or markNeedsBuild() called during build.
This RawChip widget cannot be marked as needing to build because the framework is already in the
process of building widgets. A widget can be marked as needing to be built during the build phase
only if one of its ancestors is currently building. This exception is allowed because the framework
builds parent widgets before children, which means a dirty descendant will always be built.
Otherwise, the framework might not visit this widget during this build phase.
The widget on which setState() or markNeedsBuild() was called was:
  RawChip
The widget which was currently being built when the offending call was made was:
  InkWell

When the exception was thrown, this was the stack:
#0      Element.markNeedsBuild.<anonymous closure> (package:flutter/src/widgets/framework.dart:5194:9)
#1      Element.markNeedsBuild (package:flutter/src/widgets/framework.dart:5206:6)
#2      State.setState (package:flutter/src/widgets/framework.dart:1224:15)
#3      MaterialStateMixin.initState.<anonymous closure> (package:flutter/src/material/material_state_mixin.dart:139:7)
#4      ChangeNotifier.notifyListeners (package:flutter/src/foundation/change_notifier.dart:437:24)
#5      WidgetStatesController.update (package:flutter/src/widgets/widget_state.dart:1137:7)
#6      _InkResponseState.initStatesController (package:flutter/src/material/ink_well.dart:883:22)
#7      _InkResponseState.initState (package:flutter/src/material/ink_well.dart:890:5)
#8      StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:5770:55)
#9      ComponentElement.mount (package:flutter/src/widgets/framework.dart:5615:5)
```


https://github.com/flutter/flutter/blob/4a4d7a7dac8aab7c3b27d44352d994cfea7b2925/packages/flutter/lib/src/material/ink_well.dart#L879-L885


So my question is ""How should I tackled this?"" 

Should I only support the material state supported ""out of the box"" by the ink well? Or should I try to merge it with `selected` from the raw chip, and in that case, how do you suggest I could do? In the documentation for [WidgetStatesController](https://api.flutter.dev/flutter/widgets/WidgetStatesController-class.html) :

```
When calling setState in a WidgetStatesController listener, use the SchedulerBinding.addPostFrameCallback to delay the call to setState after the frame has been rendered. It's generally prudent to use the SchedulerBinding.addPostFrameCallback because some of the widgets that depend on WidgetStatesController may call update in their build method. In such cases, listener's that call setState - during the build phase - will cause an error.
``` If I do so and change to:

```dart
  @override
  void initState() {
    super.initState();
    widgetStatesController.addListener(() {
      SchedulerBinding.instance.addPostFrameCallback((Duration timeStamp) {
        if (mounted) {
          setState(() {});
        }
      });
    });
  }
```

in the `MaterialStateMixin`. 

It will delay by 1 frame some UI updates from the current implementation.

The current implementation uses `Set<MaterialState> materialStates = <MaterialState>{};` and `setState`. So I will have to add some `tester.pump()` here and there in the tests.

Are we okay with that? Having a WidgetStatesController inside the MaterialStateMixin seems wrong to me.

`MaterialStateMixin` (which I wasn't aware until today :smile: ) and `WidgetStatesController` (previously named `MaterialStatesController`) are two similar concepts.
Looking at the history they were both discussed in https://docs.google.com/document/d/1PJdsOoXhWdhnpYKlW5Nm2Di3Di5XARoYyHerMwWovXE/edit?tab=t.0

`MaterialStateMixin` was introduced in https://github.com/flutter/flutter/pull/82843 and did not get that much traction is it used only for Chip and RawMaterialButton (which is used for FAB and the deprecated MaterialButton).

`MaterialStatesController` was introduced in https://github.com/flutter/flutter/pull/103167/ . It is the preferred way to manage states.

I think removing Chip dependency on `MaterialStateMixin` is probably the way forward. The nice think with WidgetStatesController is that widget can accept an instance of it which gives users a way modify states and react to their changes. That's why several widgets accept such a parameter (and creates an internal controller if none is provided).

@nate-thegrate For insights and considering the deprecation of MaterialStateMixin. Yeah the issue I have here is that `Chip` is `MaterialStateMixin` but `InkWell` is using `WidgetStatesController`.

I don't mind changing `Chip`s to use `WidgetStatesController`. Should I include everything in this PR or should I try to split it in:

1. This PR doesn't include changes on `MaterialStateMixin` to only rely on `InkWell`'s current implementation (and it won't support `MaterialState.selected`)
2. 2nd PR to make `Chip` use `WidgetStatesController` instead of `MaterialStateMixin` (maybe we'd need to create a new issue for that part)

What do you think? If you can make step 1. without the changes on MaterialStateMixin, that's perfect.

For Step2, just found that there is already an issue, see https://github.com/flutter/flutter/issues/128289 My opinion about MaterialStateMixin vs. WidgetStatesController is that both are nice, but the controller is a bit more intuitive, since it's similar to other Listenable objects in the framework.

That being said, I wanted to use a listenable object to control a set of WidgetStates in a personal project, and eventually I settled on a third-party pub package as my overall favorite:

<table align=""center"">
<tr>
<th>WidgetStatesController</th>
<th>SetNotifier&lt;WidgetState&gt;</th>
</tr>
<tr><td>

```dart
// add a state
states.update(WidgetState.error, true);

// remove a state
states.update(WidgetState.error, false);       
``` 

</td>
<td>

```dart
// add a state
states.add(WidgetState.error);

// remove a state
states.remove(WidgetState.error);       
```

</td></tr>
</table>

I really like how [**collection_notifiers**](https://pub.dev/packages/collection_notifiers) can turn a List/Set/Map into a listenable without really changing the API surface. Perhaps we could port it into the framework at some point. ```suggestion
            mouseCursor: const WidgetStateMouseCursor.fromMap(
              <WidgetStatesConstraint, MouseCursor>{
                WidgetState.disabled: SystemMouseCursors.forbidden,
              },
            ),
```

The `_ChipMouseColor` class is probably not needed (Same for the other test file). While it works, I think it makes the test more difficult to understand. Passing directly a `WidgetStateMouseCursor` created from the `fromMap` factory is also what most users will probably do.
Did I miss something? I agree with this! The fact that `WidgetStateMouseCursor` also has its own `.fromMap()` constructor is probably easy to miss, especially since it didn't have one until https://github.com/flutter/flutter/pull/154972 was merged last month. > It's generally prudent to use the [SchedulerBinding.addPostFrameCallback](https://api.flutter.dev/flutter/scheduler/SchedulerBinding/addPostFrameCallback.html) because some of the widgets that depend on [WidgetStatesController](https://api.flutter.dev/flutter/widgets/WidgetStatesController-class.html) may call [update](https://api.flutter.dev/flutter/widgets/WidgetStatesController/update.html) in their build method.

I'm actually not sure I agree with the advice from the docs. In general I think it's good to avoid post-frame `setState` callbacks when we can, since they create scenarios where 1 update causes 2 builds. It's much better to design the API so widgets aren't triggering listenable notifications during a build.

In theory, no callback scheduling should be necessary, since user input takes place between frames. In this case, it looks like the problem stems from `_InkResponseState.initState` calling `initStatesController`:

https://github.com/flutter/flutter/blob/81fad61209cbb38724a1201665f79fce6364f0a0/packages/flutter/lib/src/material/ink_well.dart#L879-L892

I believe this can be fixed by handling `WidgetState.disabled` in the `_RawChipState` logic before the states controller is passed to the ink well. It's way better! I've implemented the changes in [Use WidgetStateMouseCursor.fromMap](https://github.com/flutter/flutter/pull/159422/commits/1bb971b53fca6c732abacb82a0ac42a9d290fde3)"
159523,2024-11-27T02:22:34Z,2024-11-27T03:02:16Z,engine-flutter-autoroll,0,0,7,4,2,1,1,['engine'],,0,607898.0,0,0,0,0,1954690.310005,,0,7,0,False,[],,,"
https://github.com/flutter/engine/compare/bd165dc27166...da71729651d8

2024-11-27 skia-flutter-autoroll@skia.org Roll Dart SDK from 72b594775c83 to 0740ded7b9bf (1 revision) (flutter/engine#56826)
2024-11-27 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 50xtjbMWWrqay_7m_... to u0agumUB4Ag6cTiKk... (flutter/engine#56823)
2024-11-27 flar@google.com [DisplayList] Delete (publicly) unused DlColorColorSource (flutter/engine#56825)
2024-11-26 jonahwilliams@google.com [engine] reland: more consistently flush message loops tasks (flutter/engine#56815)
2024-11-26 jonahwilliams@google.com [Impeller] cache even more text frame data to skip lookups. (flutter/engine#56798)
2024-11-26 flar@google.com [DisplayList] migrate DlColorFilter objects to new source layout (flutter/engine#56785)
2024-11-26 skia-flutter-autoroll@skia.org Roll Dart SDK from ca02d403f1a8 to 72b594775c83 (1 revision) (flutter/engine#56819)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 50xtjbMWWrqa to u0agumUB4Ag6

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159759,2024-12-03T23:01:11Z,2024-12-03T23:54:02Z,Piinks,0,3,2,3,1,3,2,['warning: land on red to fix tree breakage'],,0,3173.0,0,0,0,0,1966699.047101,,0,2,0,False,[],LGTM lgtm w/ question.,LGTM lgtm w/ question.,"Increases from the default 30 minutes to 45.
After devtools testing was re-enabled in https://github.com/flutter/tests/pull/432 the tree is red because the test shard exceeds 30 minutes again.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Is this only needed on Linux, or is it needed for mac and Windows as well? Flutter/devtools only runs on the Linux shard, so I only applied it there. I could see us wanting this to be consistent though across all shards, or it could be confusing later on down the line. I will adjust!"
159701,2024-12-02T23:46:53Z,2024-12-03T21:18:10Z,elliette,0,0,1,9,2,1,1,['framework'],,0,77478.0,0,0,0,0,1976053.472748,,0,1,0,False,[],,,"Work towards https://github.com/flutter/devtools/issues/8582

Follow up to https://github.com/flutter/flutter/pull/159454

Only include the `truncated` field if it is `true`. We accidentally were including it even when `false` which is what caused the regression in the DevTools tests.
",
158503,2024-11-12T11:41:30Z,2024-12-03T21:20:58Z,TahaTesser,5,12,4,490,14,2,1,"['a: text input', 'framework', 'f: material design']",1140542.0,0,1849169.0,0,0,0,0,1975885.589061,,0,4,0,False,"['QuncCccccc', 'TahaTesser']","Looks like this is failing google testing.  Waiting cl/700088185 to land. @QuncCccccc 
Please let me know when it  lands so I can rebase this.  It landed JUST now haha. Please try to rebase master. Hope all tests can pass now:) > It landed JUST now haha. Please try to rebase master. Hope all tests can pass now:)

Rebased and also pushed additional empty commit for safety. LGTM with just nits! Thanks for the improvement:)",LGTM with just nits! Thanks for the improvement:),"Fixes [Proposal to add iconAlignment to ButtonStyle](https://github.com/flutter/flutter/issues/153350)

### Description

This PR refactors buttons `IconAlignment`, adds to `ButtonStyle` and `styleFrom` methods. Which makes it possible to customize iconAlignment same way as icon size and color in the `ButtonStyle`.

### Code sample 

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

enum StyleSegment {
  none,
  widgetButtonStyle,
  widgetStyleFrom,
  themeButtonStyle,
  themeStyleFrom
}

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  StyleSegment _selectedSegment = StyleSegment.none;

  ThemeData? getThemeStyle() => switch (_selectedSegment) {
        StyleSegment.themeButtonStyle => ThemeData(
            textButtonTheme: const TextButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
            elevatedButtonTheme: const ElevatedButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
            outlinedButtonTheme: const OutlinedButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
            filledButtonTheme: const FilledButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
          ),
        StyleSegment.themeStyleFrom => ThemeData(
            textButtonTheme: TextButtonThemeData(
              style: TextButton.styleFrom(
                iconAlignment: IconAlignment.end,
              ),
            ),
            elevatedButtonTheme: const ElevatedButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
            outlinedButtonTheme: const OutlinedButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
            filledButtonTheme: const FilledButtonThemeData(
              style: ButtonStyle(
                iconAlignment: IconAlignment.end,
              ),
            ),
          ),
        _ => null
      };

  ButtonStyle? getTextButtonStyle() => switch (_selectedSegment) {
        StyleSegment.widgetStyleFrom => TextButton.styleFrom(
            iconAlignment: IconAlignment.end,
          ),
        StyleSegment.widgetButtonStyle => const ButtonStyle(
            iconAlignment: IconAlignment.end,
          ),
        _ => null
      };

  ButtonStyle? getElevatedButtonStyle() => switch (_selectedSegment) {
        StyleSegment.widgetStyleFrom => ElevatedButton.styleFrom(
            iconAlignment: IconAlignment.end,
          ),
        StyleSegment.widgetButtonStyle => const ButtonStyle(
            iconAlignment: IconAlignment.end,
          ),
        _ => null
      };

  ButtonStyle? getOutlinedButtonStyle() => switch (_selectedSegment) {
        StyleSegment.widgetStyleFrom => OutlinedButton.styleFrom(
            iconAlignment: IconAlignment.end,
          ),
        StyleSegment.widgetButtonStyle => const ButtonStyle(
            iconAlignment: IconAlignment.end,
          ),
        _ => null
      };

  ButtonStyle? getFilledButtonStyle() => switch (_selectedSegment) {
        StyleSegment.widgetStyleFrom => FilledButton.styleFrom(
            iconAlignment: IconAlignment.end,
          ),
        StyleSegment.widgetButtonStyle => const ButtonStyle(
            iconAlignment: IconAlignment.end,
          ),
        _ => null
      };

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: getThemeStyle(),
      home: Scaffold(
        appBar: AppBar(
          title: const Text('ButtonStyle Icon Alignment'),
        ),
        body: Center(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              spacing: 20,
              children: [
                Wrap(
                  spacing: 16,
                  runSpacing: 16,
                  children: [
                    TextButton.icon(
                      style: getTextButtonStyle(),
                      onPressed: () {},
                      icon: const Icon(Icons.add),
                      label: const Text('Text Button'),
                    ),
                    ElevatedButton.icon(
                      style: getElevatedButtonStyle(),
                      onPressed: () {},
                      icon: const Icon(Icons.add),
                      label: const Text('Elevated Button'),
                    ),
                    OutlinedButton.icon(
                      style: getOutlinedButtonStyle(),
                      onPressed: () {},
                      icon: const Icon(Icons.add),
                      label: const Text('Outlined Button'),
                    ),
                    FilledButton.icon(
                      style: getFilledButtonStyle(),
                      onPressed: () {},
                      icon: const Icon(Icons.add),
                      label: const Text('Filled Button'),
                    ),
                    FilledButton.tonalIcon(
                      style: getFilledButtonStyle(),
                      onPressed: () {},
                      icon: const Icon(Icons.add),
                      label: const Text('Filled Button Tonal Icon'),
                    ),
                  ],
                ),
                StyleSelection(
                  selectedSegment: _selectedSegment,
                  onSegmentSelected: (StyleSegment segment) {
                    setState(() {
                      _selectedSegment = segment;
                    });
                  },
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class StyleSelection extends StatelessWidget {
  const StyleSelection(
      {super.key,
      this.selectedSegment = StyleSegment.none,
      required this.onSegmentSelected});

  final ValueChanged<StyleSegment> onSegmentSelected;
  final StyleSegment selectedSegment;

  @override
  Widget build(BuildContext context) {
    return SegmentedButton<StyleSegment>(
      segments: const <ButtonSegment<StyleSegment>>[
        ButtonSegment<StyleSegment>(
          value: StyleSegment.none,
          label: Text('None'),
        ),
        ButtonSegment<StyleSegment>(
          value: StyleSegment.widgetButtonStyle,
          label: Text('Widget Button Style'),
        ),
        ButtonSegment<StyleSegment>(
          value: StyleSegment.widgetStyleFrom,
          label: Text('Widget Style From'),
        ),
        ButtonSegment<StyleSegment>(
          value: StyleSegment.themeButtonStyle,
          label: Text('Theme Button Style'),
        ),
        ButtonSegment<StyleSegment>(
          value: StyleSegment.themeStyleFrom,
          label: Text('Theme Style From'),
        ),
      ],
      selected: <StyleSegment>{selectedSegment},
      onSelectionChanged: (Set<StyleSegment> newSelection) {
        onSegmentSelected(newSelection.first);
      },
    );
  }
}
```

</details>

### Preview

<img width=""1175"" alt=""Screenshot 2024-11-12 at 12 10 43"" src=""https://github.com/user-attachments/assets/a28207c5-0ef7-41fa-a45c-e9401df897a0"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
    final ElevatedButtonThemeData elevatedButtonTheme = ElevatedButtonTheme.of(context);
``` ```suggestion
      ?? elevatedButtonTheme.style?.iconAlignment
``` Nice catch! tiny nit: If we want to update the test message to follow the convention that we followed for other M2/M3 tests, I think it's 'Material3 - ...' / 'Material2 - ...':) ```suggestion
  testWidgets('ElevatedButton.icon respects ElevatedButtonTheme ButtonStyle.iconAlignment', (WidgetTester tester) async {
``` ```suggestion
  testWidgets('Material2 - ElevatedButton repsects Theme shadowColor', (WidgetTester tester) async {
``` Seems this is only useful when .icon method is used? Should we also mention it here? ```suggestion
  testWidgets('Filled tonal button icon alignment respects ButtonStyle.iconAlignment', (WidgetTester tester) async {
``` ```suggestion
  testWidgets('FilledButton.icon respects FilledButtonTheme ButtonStyle.iconAlignment', (WidgetTester tester) async {
``` ```suggestion
  testWidgets('TextButton.icon respects TextButtonTheme ButtonStyle.iconAlignment', (WidgetTester tester) async {
``` Oops... thanks for noticing this! Yes, great idea. Just added supported constructors. "
159137,2024-11-19T10:40:56Z,2024-12-03T21:17:10Z,AbdeMohlbi,6,0,7,13,1,2,2,"['platform-android', 'tool']",7114.0,0,1247777.0,0,0,0,0,1976112.289086,,1,7,0,False,"['AbdeMohlbi', 'reidbaker', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Test-exempt: This is a change in behavior lets identify at least one test that covers this path so we can claim that this codepath is tested. 
I am comfortable saying that the compile and copy assets tasks are covered but we need to find a test that covers the jni libs task.  > approved % jnilibs test identification. 
> 
Should i write a test ?
Any examples that i can use them as a blueprint ?

 > > approved % jnilibs test identification.
> 
> Should i write a test ? Any examples that i can use them as a blueprint ?

I dont think you need to write a test just identify an existing test that uses the jni task. I am about to go on vacation for a bit more than a week (time off + thanksgiving) and i am trying to get some different work landed before I leave or I would find this for you. 

 > > > approved % jnilibs test identification.
> > 
> > 
> > Should i write a test ? Any examples that i can use them as a blueprint ?
> 
> I dont think you need to write a test just identify an existing test that uses the jni task. I am about to go on vacation for a bit more than a week (time off + thanksgiving) and i am trying to get some different work landed before I leave or I would find this for you.

if i understand the errors right , this is a test that failed to execute without the jni task (there is others , but this one seamed more accurate)
[Linux gradle_plugin_fat_apk_test](https://github.com/flutter/flutter/pull/159294/checks?check_run_id=33349820930) > > > > approved % jnilibs test identification.
> > > 
> > > 
> > > Should i write a test ? Any examples that i can use them as a blueprint ?
> > 
> > 
> > I dont think you need to write a test just identify an existing test that uses the jni task. I am about to go on vacation for a bit more than a week (time off + thanksgiving) and i am trying to get some different work landed before I leave or I would find this for you.
> 
> if i understand the errors right , this is a test that failed to execute without the jni task (there is others , but this one seamed more accurate) [Linux gradle_plugin_fat_apk_test](https://github.com/flutter/flutter/pull/159294/checks?check_run_id=33349820930)

Confirmed 
`[2024-11-19 04:04:15.120178] [STDOUT] stdout: [  +99 ms] > Task :aaa:mergeDebugJniLibFolders`
https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8730841621379757489/+/u/run_gradle_plugin_fat_apk_test/stdout
From this pr. approved % jnilibs test identification. 

As an aside I really appreciate the new format you are using with screenshots of the lints you are correcting! this LGTM, a welcome change:) thank you","approved % jnilibs test identification. 

As an aside I really appreciate the new format you are using with screenshots of the lints you are correcting! this LGTM, a welcome change:) thank you","fix failing lint `Consider using 'register' to avoid unnecessary configuration` in Android studio :
![Capture d’écran 2024-11-19 132110](https://github.com/user-attachments/assets/ffc98203-5563-4846-aa42-60a0b8defa27)

![Capture d’écran 2024-11-19 133050](https://github.com/user-attachments/assets/7671b6f4-5a18-460a-8456-608a40e6da22)
see #147122
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159504,2024-11-26T20:44:16Z,2024-11-26T21:31:02Z,engine-flutter-autoroll,0,0,23,4,2,1,1,['engine'],,0,606597.0,0,0,0,0,1976293.610221,,0,23,0,False,[],,,"
https://github.com/flutter/engine/compare/fe45a6608651...bd165dc27166

2024-11-26 chris@bracken.jp Revert ""iOS: Migrate PlatformViewsController to Objective-C (#56790)"" (flutter/engine#56817)
2024-11-26 chris@bracken.jp iOS: Rename FlutterPlatformViews_Internal.mm (flutter/engine#56816)
2024-11-26 chris@bracken.jp iOS: Eliminate global in platformviews controller (flutter/engine#56805)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from a276978ba7c8 to f149f852c70a (1 revision) (flutter/engine#56812)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from d7a267d88fd6 to a276978ba7c8 (1 revision) (flutter/engine#56811)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from 8d9d892657a7 to d7a267d88fd6 (1 revision) (flutter/engine#56810)
2024-11-26 skia-flutter-autoroll@skia.org Roll Dart SDK from bdb76c714009 to ca02d403f1a8 (1 revision) (flutter/engine#56809)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from b697dd1b03b2 to 8d9d892657a7 (1 revision) (flutter/engine#56808)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from c1c8ff84997c to b697dd1b03b2 (1 revision) (flutter/engine#56807)
2024-11-26 chris@bracken.jp iOS: Delete FlutterPlatformViewsController.layerPoolSize (flutter/engine#56806)
2024-11-26 skia-flutter-autoroll@skia.org Roll Dart SDK from 4b49546a1dfa to bdb76c714009 (1 revision) (flutter/engine#56803)
2024-11-26 chris@bracken.jp iOS: Migrate PlatformViewsController to Objective-C (flutter/engine#56790)
2024-11-26 30870216+gaaclarke@users.noreply.github.com Started caching HandleGLES's hash and made them immutable (flutter/engine#56800)
2024-11-26 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[iOS] Full keyboard access scrolling (#56606)"" (flutter/engine#56802)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from 12c8bd6ac1d9 to c1c8ff84997c (14 revisions) (flutter/engine#56801)
2024-11-25 jonahwilliams@google.com [Impeller] better handle allocation herustics of Android slide in page transition. (flutter/engine#56762)
2024-11-25 chris@bracken.jp iOS: Eliminate logging of non-zero origin platformviews (flutter/engine#56796)
2024-11-25 30870216+gaaclarke@users.noreply.github.com [impeller] gles: started storing the number of handle deletions to avoid reallocation (flutter/engine#56799)
2024-11-25 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 9o0fWa2xVhmxV6Mtn... to 50xtjbMWWrqay_7m_... (flutter/engine#56795)
2024-11-25 skia-flutter-autoroll@skia.org Roll Dart SDK from df716eaa6ed2 to 4b49546a1dfa (1 revision) (flutter/engine#56793)
2024-11-25 31859944+LongCatIsLooong@users.noreply.github.com [iOS] Full keyboard access scrolling (flutter/engine#56606)
2024-11-25 jonahwilliams@google.com [android] remove fml_check from surface_texture_external_texture (flutter/engine#56760)
2024-11-25 30870216+gaaclarke@users.noreply.github.com removed unused variable for skia initialization (flutter/engine#56791)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 9o0fWa2xVhmx to 50xtjbMWWrqa

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159398,2024-11-24T18:16:43Z,2024-12-03T21:11:07Z,TheJoeSchr,3,0,1,2,1,2,2,['tool'],4.0,0,788064.0,0,0,0,0,1976479.699194,,0,1,0,False,"['google-cla[bot]', 'nate-thegrate', 'flutter-dashboard[bot]']","Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/159398/checks?check_run_id=33445290996) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request. It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Fortunately, docs changes like this one are [auto-test-exempt](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#tests) :)LGTM, thanks for catching this! LGTM and thanks!","LGTM, thanks for catching this! LGTM and thanks!","sever -> server

",
158540,2024-11-12T23:40:23Z,2024-12-03T20:44:48Z,jtmcdole,1,0,1,1,1,1,1,[],2463.0,0,1803866.0,0,0,0,0,1978058.299146,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158540, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731431650284414769) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"https://github.com/flutter/flutter/issues/156457
",
159303,2024-11-21T23:16:05Z,2024-12-03T19:22:50Z,AbdeMohlbi,2,0,2,2,1,2,2,"['platform-android', 'tool']",337025.0,0,1022808.0,0,0,0,0,1982975.880157,,0,2,0,False,"['reidbaker', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: formatting no functional change. ",,"`what lint is failing ?`
![Capture d’écran 2024-11-25 215213](https://github.com/user-attachments/assets/c2be911c-981a-4d47-8c52-9802d4855666)

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159502,2024-11-26T19:07:12Z,2024-12-03T19:08:34Z,loic-sharma,0,0,1,26,2,1,1,['tool'],,0,604886.0,0,0,0,0,1983830.906398,,1,1,0,False,[],"SGTM

This is something I'd like to do to other environment variables in the future.","SGTM

This is something I'd like to do to other environment variables in the future.","Previously, the Swift Package Manager feature could be overridden using the `SWIFT_PACKAGE_MANAGER` environment variable.

This environment variable name is a bit generic and might collide with other tooling.

This renames the environment variable to `FLUTTER_SWIFT_PACKAGE_MANAGER`.

**This is a breaking change**, however, [we haven't documented this environment variable](https://docs.flutter.dev/packages-and-plugins/swift-package-manager/for-app-developers#how-to-turn-on-swift-package-manager).

Addresses https://github.com/flutter/flutter/issues/159121

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159489,2024-11-26T15:01:37Z,2024-11-26T18:42:09Z,engine-flutter-autoroll,0,0,5,2,1,1,1,[],,0,605554.0,0,0,0,0,1997898.316692,,0,5,0,False,[],,,"
https://github.com/flutter/packages/compare/46aeb2b29d60...8ecf4b010143

2024-11-26 stuartmorgan@google.com [file_selector] Update Pigeon version for Linux (flutter/packages#8172)
2024-11-25 737941+loic-sharma@users.noreply.github.com [various] Migrate example apps' AppDelegate.swift (flutter/packages#8155)
2024-11-25 737941+loic-sharma@users.noreply.github.com [various] Update example apps' .gitignore (flutter/packages#8156)
2024-11-25 49699333+dependabot[bot]@users.noreply.github.com [gradle]: Bump androidx.annotation:annotation from 1.9.0 to 1.9.1 in /packages/path_provider/path_provider_android/android (flutter/packages#8170)
2024-11-25 37843020+fransdhinta@users.noreply.github.com [vector_graphics_compiler] fix: handle parsing stroke-width with an invalid value (flutter/packages#8004)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159715,2024-12-03T10:03:22Z,2024-12-03T12:23:50Z,mkustermann,0,0,1,19,1,1,1,['tool'],,0,8429.0,0,0,0,0,2008119.925703,,1,1,0,False,[],Thanks @mkustermann! 🙏 ,Thanks @mkustermann! 🙏 ,"Native asset tests use `flutter create --no-pub --template=package_ffi`. The template used for this is checked in. It then adds extra dependencies to checked-in packages in flutter/flutter (which have pinned deps) in those generated templates.

It then pins all dependencies in the modified template project. This can lead to constraint violations when flutter updates pinned dependencies, because the template uses old constraints (which are turned from `^x` to `=x`) and the additional dependency on flutter/flutter checked in package brings in different pinned dependencies.

In a previous PR we already made this more robust by using flutter's pinned versions over the the versions from the template (that are changed from `^x` to `=x`).

Though a new upgrade of flutters pinned packages reveals that this isn't quite sufficient: The template uses `test` at `^X`. The additional dependency to `link_hook` doesn't depend on `test`. It therefore turns it into `=X`. BUT `link_hooks` has a non-dev dependency on `test_core` which is incompatible with `=X`.

=> So we relax this even more by prefering to choose (pinned) versions of the flutter/flutter `link_hook` dependencies and (new) dev dependencies over the template dependencies.
=> This will make use use the pinned `test` version from `link_hooks` instead of from the template.",
132646,2023-08-16T11:01:48Z,2023-10-18T15:44:32Z,aakash-pamnani,7,4,18,99,2,4,2,"['framework', 'f: material design', 'autosubmit']",4.0,0,41036382.0,0,0,0,0,2016661.533297,,0,18,0,False,"['aakash-pamnani', 'MarkOSullivan94', 'Piinks', 'Katsumoto-crypto', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Also noticed this when making use of `PaginatedDataTable`. Would be good to see this fixed and merged into main.

If @aakash-pamnani is busy can someone else cherry-pick their commit and then a follow up commit to ensure it's tested so this can be merged? I have added the test for SizedBox height at last page. It also looks like there are a lot of failing tests here, can you take a look? Thank you! Hi @Piinks thanks for reviewing the PR, I will make the required changes soon.

And the test are failing after the last merge will also look into that. > ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png) Thank you for the contribution!

Welcome,
And ThankYou for your help and support. Hello, I know this issue is closed, but I'm still encountering the problem regarding the empty rows at the end of the page.

      if (widget.showEmptyRows) {
        row ??= null;
      }
      
I found out that by setting the row in here to null then the last rows are not shown anymore.
Should this issue be reopened, or should I create a new one?This will need a test. 

@Hixie - once a test is added, can you review this one? Hi @aakash-pamnani thanks for contributing!
This looks like a breaking change, can you alter it so it is not breaking?
Some users may prefer the default empty rows, and looking at the code it appears to be very intentional in its design. I think it's a good idea to give folks the option though. Can you update this to maintain the  current default, and add a parameter folks can set to opt-in to this new behavior? ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)
Thank you for the contribution! lgtm!","This will need a test. 

@Hixie - once a test is added, can you review this one? Hi @aakash-pamnani thanks for contributing!
This looks like a breaking change, can you alter it so it is not breaking?
Some users may prefer the default empty rows, and looking at the code it appears to be very intentional in its design. I think it's a good idea to give folks the option though. Can you update this to maintain the  current default, and add a parameter folks can set to opt-in to this new behavior? ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)
Thank you for the contribution! lgtm!","Fixed empty rows at the last page in paginated data table

BEFORE:
![Before](https://github.com/flutter/flutter/assets/76067278/1f1e364c-df38-462f-b9fb-868554ce04a5)

AFTER:
![After](https://github.com/flutter/flutter/assets/76067278/80648a25-e9e6-4873-805f-b18c7c6a00af)


Issues resolves : #80421 


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","What happens if it is false? What is the default value? These should be documented. Hmm.. naming is hard. Having a negating name default to false can be confusing for users.

What about ..
- showEmptyRows 
- displayEmptyRows
- populateEmptyRows
- includeBlanksRows

I think having a default value of true along with a name to match would be nice. :) ```dart
/// A boolean variable that controls the visibility of empty rows on the last page
/// of a paginated data table.
///
/// The default value is `true`, which means empty rows will be visible on the
/// last page of the paginated data table. When set to `false`, empty rows will
/// not be visible on the last page.
///
bool? showEmptyRows;
```

Will this work? How about:

```dart
/// Controls the visibility of empty rows on the last page of a
/// [PaginatedDataTable].
///
/// Defaults to `true`, which means empty rows will be populated on the /// last page of the table if there is not enough content.
/// When set to `false`, empty rows will not be created.
final bool showEmptyRows;
```

Also, I don't think this value should be nullable. What would a null case be, and its behavior?"
159665,2024-12-02T12:29:24Z,2024-12-03T07:53:28Z,bleroux,1,3,1,99,2,3,2,"['framework', 'f: material design']",12944.0,0,69940.0,0,0,0,0,2024247.537256,,0,1,0,False,['bleroux'],"@justinmc This is a way simpler fix than [my first attempt](https://github.com/flutter/flutter/pull/157496).
Taha approved it to trigger the Google testing check. Everything is green :tada: LGTM Much simpler and looks like the Google tests pass! LGTM :+1: ",LGTM Much simpler and looks like the Google tests pass! LGTM :+1: ,"## Description

This PR fixes `DropdownMenu`  menu vertical position when tight constraints are given to the `DropdownMenu`.

Before:

![image](https://github.com/user-attachments/assets/d8d9b857-07ed-4d3c-afe2-44518d979e66)

After:

![image](https://github.com/user-attachments/assets/a71ea3c8-a408-43a1-8c99-c2612ad4b24b)



## Related Issue

Fixes [DropdownMenu does not correctly handle incoming maxWidth and minHeight constraints](https://github.com/flutter/flutter/issues/147076). 
(It fixes the minHeight part, the maxWidth part was already fixed in https://github.com/flutter/flutter/pull/147233).

## Tests

Adds 4 tests.","Just to ease my paranoia, could you double check that the dropdown menu item is tappable in the area circled in red here?

![dropdownmenuh](https://github.com/user-attachments/assets/b4b5a35d-e2de-4883-b51c-3c96c3a89a3c)
 Probably not worth testing this. It might already be covered in a test. I just want to make sure it works. I can confirm that it works."
157186,2024-10-18T20:01:54Z,2024-10-21T15:35:11Z,eyebrowsoffire,2,1,2,77,5,1,1,"['tool', 'autosubmit']",11456.0,0,3919472.0,0,0,0,0,2035567.064024,,0,2,0,False,"['auto-submit[bot]', 'chardskarth']","auto label is removed for flutter/flutter/157186, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8733701578733689425) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 What version would this be included in?
",,"There have been various requests for this for a while. See https://github.com/flutter/flutter/issues/96283 for an example. This has become more important with dart2wasm builds in the mix, as the profiling versions of the dart2wasm builds are a lot less debuggable than the debug versions. Most of this is already wired up so it just requires taking out a few explicit checks for it and making sure that we compile with the right optimization levels when compiling debug.","nit 1: avoid ""[we](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple)"" in the docs. Maybe something like ""...and the appropriate default should be used.""

nit 2: s/teh/the/"
158302,2024-11-07T01:36:27Z,2024-12-02T19:37:17Z,LinXunFeng,4,0,2,32,6,2,2,"['tool', 'a: desktop']",675834.0,0,2243558.0,0,0,0,0,2049808.69929,,0,2,0,False,"['kenzieschmoll', 'LinXunFeng', 'bkonyi']","Thanks for the PR @LinXunFeng!

I think we need to wait on @kenzieschmoll to determine if this is the correct behavior or if DevTools needs to make a change. FYI @kenzieschmoll, just in case you missed this while you were OOO. @LinXunFeng have you tested whether running the new command (e.g. `dart devtools --appSizeBase=/Users/lxf/.flutter-devtools/apk-code-size-analysis_01.json`) opens the file properly in the DevTools app size tool? > @LinXunFeng have you tested whether running the new command (e.g. `dart devtools --appSizeBase=/Users/lxf/.flutter-devtools/apk-code-size-analysis_01.json`) opens the file properly in the DevTools app size tool?

@kenzieschmoll  Yes

<img width=""822"" alt=""image"" src=""https://github.com/user-attachments/assets/94dd2eae-4190-47ba-95bf-d640f2df4791"">

<img width=""860"" alt=""image"" src=""https://github.com/user-attachments/assets/d7bffe1c-2b37-4717-821e-adcc5ead9d3c"">

<img width=""1420"" alt=""image"" src=""https://github.com/user-attachments/assets/75e07166-2b9a-4f0a-8652-37baf2a7740e"">
",,"Fixes https://github.com/flutter/flutter/issues/158211

before

```shell
A summary of your APK analysis can be found at: /Users/lxf/.flutter-devtools/apk-code-size-analysis_01.json

To analyze your app size in Dart DevTools, run the following command:
dart devtools --appSizeBase=apk-code-size-analysis_01.json
```

now

```shell
A summary of your APK analysis can be found at: /Users/lxf/.flutter-devtools/apk-code-size-analysis_01.json

To analyze your app size in Dart DevTools, run the following command:
dart devtools --appSizeBase=/Users/lxf/.flutter-devtools/apk-code-size-analysis_01.json
```


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159461,2024-11-26T02:18:43Z,2024-11-26T02:57:29Z,engine-flutter-autoroll,2,0,12,4,2,1,1,['engine'],56765.0,0,608130.0,0,0,0,0,2041100.737149,,0,12,0,False,"['auto-submit[bot]', 'yjbanov']","A reason for requesting a revert of flutter/flutter/159461 could
      not be found or the reason was not properly formatted. Begin a comment with **'Reason for revert:'** to tell the bot why
      this issue is being reverted. Reason for revert: engine regression https://github.com/flutter/flutter/issues/159497",,"
https://github.com/flutter/engine/compare/fe45a6608651...fb6439918252

2024-11-26 chris@bracken.jp iOS: Migrate PlatformViewsController to Objective-C (flutter/engine#56790)
2024-11-26 30870216+gaaclarke@users.noreply.github.com Started caching HandleGLES's hash and made them immutable (flutter/engine#56800)
2024-11-26 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[iOS] Full keyboard access scrolling (#56606)"" (flutter/engine#56802)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from 12c8bd6ac1d9 to c1c8ff84997c (14 revisions) (flutter/engine#56801)
2024-11-25 jonahwilliams@google.com [Impeller] better handle allocation herustics of Android slide in page transition. (flutter/engine#56762)
2024-11-25 chris@bracken.jp iOS: Eliminate logging of non-zero origin platformviews (flutter/engine#56796)
2024-11-25 30870216+gaaclarke@users.noreply.github.com [impeller] gles: started storing the number of handle deletions to avoid reallocation (flutter/engine#56799)
2024-11-25 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 9o0fWa2xVhmxV6Mtn... to 50xtjbMWWrqay_7m_... (flutter/engine#56795)
2024-11-25 skia-flutter-autoroll@skia.org Roll Dart SDK from df716eaa6ed2 to 4b49546a1dfa (1 revision) (flutter/engine#56793)
2024-11-25 31859944+LongCatIsLooong@users.noreply.github.com [iOS] Full keyboard access scrolling (flutter/engine#56606)
2024-11-25 jonahwilliams@google.com [android] remove fml_check from surface_texture_external_texture (flutter/engine#56760)
2024-11-25 30870216+gaaclarke@users.noreply.github.com removed unused variable for skia initialization (flutter/engine#56791)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 9o0fWa2xVhmx to 50xtjbMWWrqa

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
154994,2024-09-11T09:20:21Z,2024-12-02T23:32:31Z,fluttergithubbot,1,0,1,1,1,1,1,['c: flake'],1755170.0,0,7135933.0,0,0,0,0,2054401.227371,,0,1,0,False,['flutter-dashboard[bot]'],"This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

",,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux build_tests_4_5""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Linux%20build_tests_4_5%22).
This test can be marked as unflaky.
",
159115,2024-11-19T00:37:48Z,2024-11-19T16:12:22Z,matanlurey,1,0,3,97,2,2,2,['tool'],1205325.0,0,1205326.0,0,0,0,0,2054761.704714,,1,3,0,False,['christopherfujino'],"Nice!Testing with this script on Windows:

```dart
import 'dart:async';
import 'dart:convert';

import 'package:process/process.dart';
import 'package:path/path.dart' as path;

const String flutterPath = r""D:\Dev\Google\Flutter\Flutter main"";

main() async {
  List<String> cmd = <String>[
    path.join(flutterPath, 'bin', 'flutter.bat'),
    ""test"",
    ""--machine"",
  ];

  final processManager = LocalProcessManager();
  final proc = await processManager.start(
    cmd,
    environment: <String, String>{'FLUTTER_TEST': 'true'},
    workingDirectory: ""$flutterPath/examples/hello_world"",
  );
  final pidCompleter = Completer<int>();
  proc.stdout.transform(utf8.decoder).listen((line) {
    if (RegExp(r'""pid"":(\d+)').firstMatch(line) case var match?) {
      pidCompleter.complete(int.parse(match.group(1)!));
    }
    print(line);
  });
  proc.stderr.transform(utf8.decoder).listen(print);

  final pid = await pidCompleter.future;
  await Future.delayed(const Duration(seconds: 1));

  print('KILLING PROCESS $pid');
  processManager.killPid(pid);
}
```

Without this PR, a flutter_tester process is left around, but with this change, it is not. thank you 🙏 ","Testing with this script on Windows:

```dart
import 'dart:async';
import 'dart:convert';

import 'package:process/process.dart';
import 'package:path/path.dart' as path;

const String flutterPath = r""D:\Dev\Google\Flutter\Flutter main"";

main() async {
  List<String> cmd = <String>[
    path.join(flutterPath, 'bin', 'flutter.bat'),
    ""test"",
    ""--machine"",
  ];

  final processManager = LocalProcessManager();
  final proc = await processManager.start(
    cmd,
    environment: <String, String>{'FLUTTER_TEST': 'true'},
    workingDirectory: ""$flutterPath/examples/hello_world"",
  );
  final pidCompleter = Completer<int>();
  proc.stdout.transform(utf8.decoder).listen((line) {
    if (RegExp(r'""pid"":(\d+)').firstMatch(line) case var match?) {
      pidCompleter.complete(int.parse(match.group(1)!));
    }
    print(line);
  });
  proc.stderr.transform(utf8.decoder).listen(print);

  final pid = await pidCompleter.future;
  await Future.delayed(const Duration(seconds: 1));

  print('KILLING PROCESS $pid');
  processManager.killPid(pid);
}
```

Without this PR, a flutter_tester process is left around, but with this change, it is not. thank you 🙏 ","Closes https://github.com/flutter/flutter/issues/20949.

Signals (such as SIGTERM or SIGKILL) end up flowing through `exitWithHooks`, which in turn, after running hooks, call `exit().` That means, as a result, any `try { } finally { }` guarded execution may _not_ run, which happens to also be how `flutter_tester` instances are cleaned up if they have not terminated.

This PR adds in-progress `flutter_tester` runs (or any platform `flutter_platform` supports) to the shutdown hooks, guaranteeing that the finalizers (which in turn, kill the process) are _always_ executed as long as either the test completes, _or_ `exitWithHooks` is called.

The existing integration tests (`integration.shard/test_test.dart`) still pass as well.",
159517,2024-11-26T23:22:42Z,2024-12-02T21:50:43Z,LongCatIsLooong,1,3,8,10,2,3,2,"['framework', 'a: accessibility']",4298.0,0,512998.0,0,0,0,0,2060395.937399,,0,8,0,False,['LongCatIsLooong'],also /cc @gaaclarke thanks =) LGTM,thanks =) LGTM,"~This also includes the engine hash change from https://github.com/flutter/flutter/pull/159453/files for testing purposes. Will revert if all tests pass~ all tests passed with the engine hash from #159453: https://github.com/flutter/flutter/pull/159517/commits/0f26acb438024948ddf5ea2cc7a17d1ed9f15193

TODOs: https://github.com/flutter/flutter/issues/159515
context: https://github.com/flutter/flutter/issues/159456


## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","What do these TODO's refer to?  I believe the format should be:

```c++
// TODO(159515): This is the thing we should do.
``` Per the style guide: https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-checking-in-comments-that-ask-questions

I'll add ""clean up after `SemanticsAction.scrollToOffset` is added in dart:ui"" to the description. As someone that is not you, I'm not sure what cleaning up entails.  There isn't a clear action that someone other than you could take.  A verb phase like ""remove this"" is more descriptive than ""clean up""."
159435,2024-11-25T19:29:56Z,2024-11-25T21:16:34Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,607457.0,0,0,0,0,2066304.803178,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/ce1eb371eafa...fe45a6608651

2024-11-25 34871572+gmackall@users.noreply.github.com Bump versions of agp and robolectric, and configure to use SDK 35 (flutter/engine#56732)
2024-11-25 jiahaog@users.noreply.github.com Add missing import for malloc (flutter/engine#56781)
2024-11-25 skia-flutter-autoroll@skia.org Roll Skia from 7588789d8fc6 to 12c8bd6ac1d9 (1 revision) (flutter/engine#56786)
2024-11-25 skia-flutter-autoroll@skia.org Roll Skia from 01a3a55f1d54 to 7588789d8fc6 (2 revisions) (flutter/engine#56784)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
156313,2024-10-07T09:46:31Z,2024-12-02T21:51:48Z,EArminjon,7,6,1,4,1,4,2,"['a: text input', 'framework', 'workaround available', 'team-text-input']",283051.0,0,4881919.0,0,0,0,0,2060447.807803,,0,1,0,False,"['EArminjon', 'Piinks', 'LongCatIsLooong', 'nate-thegrate', 'justinmc']","Yep, will create an issues. 

I didn't know how internally works Samsung pass and other password managers, i didn't know if it's in fact an expected behavior.

How these tools works, they are trigger only based on keyboard type or they try to read what is currently displayed on screen to add some overlay ? (I didn't know) > How these tools works, they are trigger only based on keyboard type or they try to read what is currently displayed on screen to add some overlay ? (I didn't know)

I'm not sure exactly how it works either. But I bet we'll get some good insight once an issue is posted :) CC @LongCatIsLooong from triage, maybe you know how hintText is used by things like this (autofill) under the hood?

 Thanks for the doc update and for spreading the knowledge! 

> On our e-commerce app, Samsung pass was not working and we discovered that, after using hintText : Samsung pass autofill was working perfectly.

The [Android docs](https://developer.android.com/identity/autofill/autofill-optimize#hints) states that 
> The autofill service determines the type of each view using heuristics. However, if your app relies on these heuristics, autofill behavior might unexpectedly change as you update your app. To make sure that the autofill service correctly identifies your app's form factors, provide autofill hints.

So if you have `autofillHints: const <String>[AutofillHints.password]` in your text field and the autofill service refuses to recognize it as a password field unless `hintText` is set, that sounds like a bug with the autofill service, since it still relies on heuristics even when a valid hint is provided. 

That said, on Android, hint text is indeed one of the few things that the autofill services can see in your app, so I guess we could include the information to the autofill documentation [here](https://main-api.flutter.dev/flutter/widgets/EditableText/autofillHints.html). Also I think that might be a better place to mention the hintText and autofill interaction than in `hintText` because I'd assume people would go to that page to troubleshoot autofill if they encounter the same problem.  (Triage): Hey @EArminjon thanks for the PR! Would you like to incorporate some of @LongCatIsLooong's feedback and update the doc? Thanks!  Sorry, thanks a lot for the reminder, I will update today !  Sorry again for delay, PR updated :).It'd be great if the password manager stuff worked without needing to set a `hintText` value, but for now I agree that this advice makes the documentation better than it was before 👍 Thanks so much for the update!

Now that I've had a chance to look at this advice (in the context of the best place in the documentation for it), I'm starting to think that maybe we should try an alternate approach.

I strongly agree that this is an unintuitive quirk with the InputDecoration API that could probably trip up a lot of people, and I believe the ideal long-term solution is to fix the class so that Samsung Pass works regardless of whether or not a `hintText` value is provided.

Rather than updating the docs to announce the unintuitive behavior, I think maybe the best approach would be to file a [bug report](https://github.com/flutter/flutter/issues/new?assignees=&labels=&projects=&template=2_bug.yml). The Flutter repo has a robust issue tracking/triage system, and when people run into the same problem in the future they'll still be able to learn about the issue and its workaround (only difference is they'd read about it GitHub rather than the API docs).

I wish I'd thought of this earlier; sorry for asking you to update the PR before pulling the switcheroo.
Let me know what you think! Sorry for the delay. LGTM with nits.  ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)","It'd be great if the password manager stuff worked without needing to set a `hintText` value, but for now I agree that this advice makes the documentation better than it was before 👍 Thanks so much for the update!

Now that I've had a chance to look at this advice (in the context of the best place in the documentation for it), I'm starting to think that maybe we should try an alternate approach.

I strongly agree that this is an unintuitive quirk with the InputDecoration API that could probably trip up a lot of people, and I believe the ideal long-term solution is to fix the class so that Samsung Pass works regardless of whether or not a `hintText` value is provided.

Rather than updating the docs to announce the unintuitive behavior, I think maybe the best approach would be to file a [bug report](https://github.com/flutter/flutter/issues/new?assignees=&labels=&projects=&template=2_bug.yml). The Flutter repo has a robust issue tracking/triage system, and when people run into the same problem in the future they'll still be able to learn about the issue and its workaround (only difference is they'd read about it GitHub rather than the API docs).

I wish I'd thought of this earlier; sorry for asking you to update the PR before pulling the switcheroo.
Let me know what you think! Sorry for the delay. LGTM with nits.  ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)","This PR improve the Flutter documentation about the Textfield.hintText property. On our e-commerce app, Samsung pass was not working and we discovered that, after using hintText : Samsung pass autofill was working perfectly.

Example (that can help) : 
```dart
 TextFormField(
   autofillHints: const <String>[
    // Order is important, username must be first
     AutofillHints.username,
     AutofillHints.email,
   ],
   keyboardType: TextInputType.emailAddress,
   decoration: InputDecoration(
     hintText: ""What do you want, it doesn't matter but it's important to use it"",
  ),
 ),
 ...
 TextFormField(
   autofillHints: const <String>[AutofillHints.password],    
   obscureText: true,
   keyboardType: TextInputType.visiblePassword,
   decoration: InputDecoration(
     hintText: ""What do you want, it doesn't matter but it's important to use it"",
   ),
 ),
```

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Maybe this should be included as part of the overall class documentation, rather than specifically for the `hintText` field (since someone struggling with this problem probably wouldn't know which class field to check for an answer). I need to move that inside TextField & TextFormField class ? I think adding it to the InputDecoration docs would be ideal.

https://github.com/flutter/flutter/blob/c78c166e3ecf963ca29ed503e710fd3c71eda5c9/packages/flutter/lib/src/material/input_decorator.dart#L2497-L2570 Done :) uber nit: maybe: ""Specifying [InputDecoration.hintText] may also help autofill services determine the expected content type of an input field, although this is typically not required when `autofillHints` are present."" Done, changed to put have 

```dart
/// Specifying [InputDecoration.hintText] may also help autofill services
/// (like Samsung Pass) determine the expected content type of an input field,
/// although this is typically not required when autofillHints are present.
 ```
 
 I've added Samsung Pass, i believe this can help developper which face issue related to Samsung."
159424,2024-11-25T16:35:45Z,2024-12-02T18:47:05Z,bkonyi,3,2,4,22,1,2,1,[],25.0,0,612682.0,0,0,0,0,2071531.274414,,0,4,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: can't be tested without changing machine state in a way that could be disruptive auto label is removed for flutter/flutter/159424, due to - The status or check suite [Mac_x64 native_ui_tests_macos](https://cr-buildbucket.appspot.com/build/8729648995745691057) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,"cmd.exe will read from the AutoRun registry key at launch and execute the commands listed in the key. Since `FOR /F IN (command) ...` causes a new terminal instance to start, the AutoRun commands will be run again, possibly changing the current working directory. In this case, the `git rev-parse HEAD` check run in `shared.bat` could fail, which we were assuming meant `git` was not on the user's PATH.

This change ensures that `git rev-parse HEAD` will always run in %FLUTTER_ROOT% and explicitly adds a separate check for `git` using `WHERE git` to more accurately determine if `git` is on the PATH.

Fixes https://github.com/flutter/flutter/issues/159018","Would the following be easier to follow?

```suggestion
    REM 'FOR /f' spawns a new terminal instance to run the command. If an
    REM 'AutoRun' command is defined in the user's registry, that command could
    REM change the working directory, and then we wouldn't be in the directory
    REM we expect to be in. To prevent this, we need to 'PUSHD %FLUTTER_ROOT%'
    REM before getting the git revision.
```

It fully explains the ""why"" before explaining the ""what."" Yep, that's a good idea!"
159314,2024-11-22T02:03:47Z,2024-12-02T18:34:53Z,ditman,5,1,23,334,20,2,1,['tool'],278.0,0,923578.0,0,0,0,0,2072155.127858,,0,23,0,False,['ditman'],"Publishing this PR to have CI take a look. I fully expect this to fail.

![0b0d048c-fd01-4136-a025-d4983c8ab082_text](https://github.com/user-attachments/assets/ce90e0ba-0e91-4950-a799-f63b2935e27e)
 The problem was that I was not using the correct renderer on flutter run/drive. Now I've corrected this ([4a2ae1d](https://github.com/flutter/flutter/pull/159314/commits/4a2ae1d35ca50c248b38868898182a36d5a4c0c5)), and tests should pass, unless I broke some by changing the errors. 🤞 In test_6, it seems the runner is doing:

> <tt>`/work/flutter/flutter/bin/cache/flutter_web_sdk/ --incremental --target=dartdevc
--experimental-emit-debug-metadata
-DFLUTTER_WEB_AUTO_DETECT=false
**-DFLUTTER_WEB_USE_SKIA=false** -DFLUTTER_WEB_USE_SKWASM=false -DDART_HHH_BOT=false
**-DFLUTTER_WEB_USE_SKIA=true** --output-dill ...</tt>

That's probably not good :) All right, down to 1 failing test! All is green, I'll set this to `autosubmit` next week.![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"Removes the `--web-renderer` option.

Flutter tool users won't be able to select their web renderer.

In order to not drop test coverage, tests are still run with the HTML Renderer, until its code is fully removed from the engine.

Part of https://github.com/flutter/flutter/issues/145954

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I'm going to restore the `html` renderer in these tests, to see if they cure the broken test, but that's definitely not a permanent fix :/"
159508,2024-11-26T21:37:01Z,2024-12-02T17:47:26Z,justinmc,1,0,3,105,3,1,1,"['a: text input', 'framework']",1764.0,1,504626.0,0,0,0,0,2075113.280259,,1,3,0,False,['justinmc'],"FYI @fbcouch since you implemented Scribble.LGTM, looks like the docs already say this.","LGTM, looks like the docs already say this.","Previously, dragging to select with an Apple Pencil on an iPad (Scribble) caused the context menu to rapidly hide and show. Sometimes this even caused an assertion error when using SystemContextMenu due to showing two context menus in one frame. After this PR, the flicker and crash are gone.

The flicker happened on both the Flutter-rendered context menu and SystemContextMenu, but the error only happened with SystemContextMenu due to a safeguard that prevents two from showing at the same time.

The flickering is likely a regression caused by https://github.com/flutter/flutter/pull/142463.

| Before this PR | After this PR |
| --- | --- |
| <video src=""https://github.com/user-attachments/assets/e35f36f5-350d-41fb-b878-ee7b7820699d"" /> | <video src=""https://github.com/user-attachments/assets/262cb8d3-6670-4765-ace8-2d9bf61ae112"" /> |

Flutter's behavior isn't perfect compared to native (below), but it's a major improvement. If we want to match native, I think we might have to mess with the engine and see why it's calling showToolbar so much. I checked and scribbleInProgress is false during this selection gesture, so we can't use that.

<details>

<summary>Scribble native video</summary>


https://github.com/user-attachments/assets/207e208a-ac36-4c9e-a8ed-9e90e6ef9e3a



</details>


Fixes https://github.com/flutter/flutter/issues/159259",
144883,2024-03-09T20:20:05Z,2024-03-13T19:38:28Z,drxddy,10,22,14,61,2,4,2,"['a: text input', 'framework', 'f: cupertino']",3.0,0,23148516.0,0,0,0,0,2072639.833561,,1,14,0,False,"['drxddy', 'google-cla[bot]', 'justinmc']","Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/144883/checks?check_run_id=22472148382) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request. Thanks, I agree with you @justinmc, realized a simpler way to test this is by using `runtimeType`,  of `_DecoyChild`, finding its Descendant Container, and Verifying with its decoration property, after looking at other test examples.

So this latest commit [49ba870](https://github.com/flutter/flutter/commit/49ba870d828a73d670e7fb47ffc1ce8c9bf71f72) simplifies and undoes a lot of workarounds done in previous commits, and reverts to the old version of the file with just removal of white color in `_DecoyChild`.

`_DecoyChild` is kept private now & kept the [overall changes](https://github.com/flutter/flutter/pull/144883/files) minimal, with the changes you suggested in the review. - Added style suggestion made by @justinmc to fix indentation in test, new lines for parenthesis, and use `contains` Matcher instead of doing it in pure dart.
- Removed white color in doc comments in `context_menu.dart` file Is this ready to merge, or should I change anything else? Looks like the Google tests are failing, but the failure looks unrelated to me. @dhikshith12 if it doesn't go green, can you try pushing a merge commit? Yes, the Google testing check is failing, just like on some other pull requests that have been approved, I don't know why, and when trying to open the details it is opening, Flutter roll on borg (frob) which is inaccessible to me, I think it's only for Google Employees Internal website. Thanks for updating the PR. That's right. If it doesn't go green I'll take another look at the failures. All tests are now passing...  Merged! Thanks for fixing this and for all your prompt responses. Thanks for patiently reviewing this along the way, I should have read style guides and written tests before, that would have reduced your time spent on this PR.

I faced this issue while building this feature in my app and thought to make an Issue and a PR, looking forward to contributing more whenever I face more issues that I can help with.One question about other white colors I found in the file. Otherwise I think this looks good, but @MitchellGoodwin should have the final say as to whether that white color was there for a good reason or not. Getting rid of the white color seems to cause no issues. I think it was there from an incorrect assumption that CupertinoContext menu would be used only in a native iOS-like background.

Echoing Justin, it should probably be removed from examples in this file. LGTM :+1: . Thanks! LGTM!","One question about other white colors I found in the file. Otherwise I think this looks good, but @MitchellGoodwin should have the final say as to whether that white color was there for a good reason or not. Getting rid of the white color seems to cause no issues. I think it was there from an incorrect assumption that CupertinoContext menu would be used only in a native iOS-like background.

Echoing Justin, it should probably be removed from examples in this file. LGTM :+1: . Thanks! LGTM!","## Summary

The current implementation of `CupertinoContextMenu`, on long press, while animating the child up, it's using a Container Shell in `_buildAnimation` with a pure White Color (0xFFFFFFFF), instead of being Transparent, this causes white corner borders for those developers that use a higher corner radius in child Widget, 

## Problem Detail:

When you long press on the Widget after using this `CupertinoContextMenu` as a parent, it will start animating the child out to occupy half the screen in the top, while this animation happens ( before blur appears on the screen & previewBuilder is rendered), the child is used in a Container with a decoration of pure white color (0xFFFFFFFF), with no border-radius, this will cause inconsistent looks while the child undergoes a transition.

This issue does not exist when using `CupertinoContextMenu.builder`, this is how `CupertinoContextMenu` should also be working.

## Fixes #144886 
## Video
https://github.com/flutter/flutter/assets/59935432/66a2cb60-b264-4922-b045-374ebf2f643c

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.






<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","You're going to need a test for this. What if you do a test as following:

- pump a widget that contains the CupertinoPageScaffold and button from the gif, the background of the CupertinoPageScaffold can be the grey-ish color from the gif
- start a tap gesture on the button
- once the CupertinoContextMenu has begun animating, assert that the color of the corners is not white, but transparent (probably you can do this by finding the BoxDecoration of the context menu and checking if the color is Colors.transparent) If we need to access the `_boxDecoration` property used in the `_DecoyChild` directly in the tests, I would need to expose it somehow or at least write a public method to validate its state in tests, as it's currently a private property.

It means I would need to
 
- make `_DecoyChild` public to Test its state while the animation is in progress.
- write `validateDecoyColor` public predicate method to use it in tests to verify its state.

I have to introduce a new public class by publicizing `_DecoyChild` or put them in a new file and not export them in Cupertino library. I think you could try finding the `Container` that is built by the ` _buildAnimation()`, using a Finder, in the test? And then get the BoxDecoration from that.

This does assume that your widget tree has only that Container. If there are multiple, you could perhaps try to find the specific Container, by looking for a Container that has a `BoxDecoration`, whose `boxShadow` is a list (empty or not). That could be fragile though, so maybe there are better ways to find that specific container. To avoid brittle tests, I prefer making `_DecoyChild` available by putting it in a new file that's not included in the Cupertino library so that it's available in tests but not visible to the library users as before, and now I can find it by Type and find its state & verify its color.

Could you please review my last commit 42b62372fde027f3f0c1c1e319de895abeb0bc38, where I implemented this?

If that looks good, I can follow up with a clean-up commit to fix dart analysis so that it's ready to merge. Too much white space here. Whoo I never meant for something named ""DecoyChild"" to end up public haha. I think you can still do your test without making this public. Find the _DecoyChild by runtimeType, find the Container descendant with the BoxDecoration, then read the boxDecoration property. Too much white space. These comments should have only 2 slashes and should start with a capital letter and end with a period. Is this duplicated now? Check the latest commit, I cleaned up a lot, I made these changes as a result of making `_DecoyChild` public now they are like before. Used this style with all comments in the latest commit. Thanks, this was very helpful in cleaning up a lot of mess I made before 😅, also thanks to @navaronbracke, he also hinted at this but I proceeded with my way, now I realize. I noticed that this same kind of BoxDecoration with a white color is created in 2 of the code snippets in this file as well. Can you take a look at those too? Maybe the solution is just to remove the color there, too. The indentation should be 2 spaces here in this pumpWidget. I think these closing parentheses should each get their own line. Nit: Could you use `contains` or something here instead of doing the `.any`? [Matcher docs](https://main-api.flutter.dev/flutter/package-matcher_matcher/package-matcher_matcher-library.html). Yes, there were similar usages of white color in the same file in 2 instances, one in the doc comments for `CupertinoContextMenuBuilder`, and `kOpenBorderRadius`, and I removed them as well, and there was no other usage of White Color. Fixed in 7e80b4f52ec920b301fec11d8ea2371facecec1c Fixed in 7e80b4f52ec920b301fec11d8ea2371facecec1c Fixed in 7e80b4f52ec920b301fec11d8ea2371facecec1c Nit: Period at the end here. Nit: Period at the end here."
159420,2024-11-25T15:01:33Z,2024-11-25T21:26:38Z,engine-flutter-autoroll,0,0,3,2,1,1,1,[],,0,605557.0,0,0,0,0,2084312.221504,,0,3,0,False,[],,,"
https://github.com/flutter/packages/compare/920321356e45...46aeb2b29d60

2024-11-22 reidbaker@google.com Update avd_cipd_version (flutter/packages#8135)
2024-11-22 10687576+bparrishMines@users.noreply.github.com [interactive_media_ads] Adds internal wrapper for Android native `CompanionAdSlot` and `CompanionAdSlot.ClickListener` (flutter/packages#8131)
2024-11-22 engine-flutter-autoroll@skia.org Roll Flutter from 93d772c5cdd8 to 793569f621f7 (5 revisions) (flutter/packages#8152)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159404,2024-11-25T01:59:22Z,2024-11-25T02:36:25Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605697.0,0,0,0,0,2131103.324429,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/0ced389c842d...ce1eb371eafa

2024-11-25 jason-simmons@users.noreply.github.com Fix the mapping from exit response strings to the FlPlatformChannelExitResponse enum (flutter/engine#56769)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159403,2024-11-24T23:25:22Z,2024-11-25T00:08:14Z,engine-flutter-autoroll,0,0,2,4,2,1,1,['engine'],,0,607738.0,0,0,0,0,2138302.875655,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/11777dcabe69...0ced389c842d

2024-11-24 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from XOyk4KAUqAnkgC2WY... to 9o0fWa2xVhmxV6Mtn... (flutter/engine#56780)
2024-11-24 30870216+gaaclarke@users.noreply.github.com Replaces Resource's shared_ptr with unique_ptr (flutter/engine#56778)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from XOyk4KAUqAnk to 9o0fWa2xVhmx

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159387,2024-11-24T09:19:22Z,2024-11-24T10:08:27Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608098.0,0,0,0,0,2188704.282136,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/7231bf5799ae...37715e9cdcf8

2024-11-24 skia-flutter-autoroll@skia.org Roll Skia from ded8ab47ee69 to 01a3a55f1d54 (1 revision) (flutter/engine#56779)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159401,2024-11-24T20:21:21Z,2024-11-24T21:06:25Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607978.0,0,0,0,0,2149105.421461,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/37715e9cdcf8...11777dcabe69

2024-11-24 30870216+gaaclarke@users.noreply.github.com Cleaned up BufferBindingsGLES::BindUniformBuffer (flutter/engine#56777)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159381,2024-11-24T04:56:22Z,2024-11-24T05:40:14Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605878.0,0,0,0,0,2206704.861594,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/7f160b9913d7...7231bf5799ae

2024-11-23 30870216+gaaclarke@users.noreply.github.com Smaller reactor handle locks (flutter/engine#56768)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159376,2024-11-23T20:57:22Z,2024-11-23T21:43:29Z,engine-flutter-autoroll,0,0,2,4,2,1,1,['engine'],,0,605818.0,0,0,0,0,2235506.317728,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/b382d17a27d1...7f160b9913d7

2024-11-23 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from D5CBHuB2c-v3Zai-c... to XOyk4KAUqAnkgC2WY... (flutter/engine#56775)
2024-11-23 skia-flutter-autoroll@skia.org Roll Skia from 6a3f77189dde to ded8ab47ee69 (1 revision) (flutter/engine#56774)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from D5CBHuB2c-v3 to XOyk4KAUqAnk

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159371,2024-11-23T09:33:22Z,2024-11-23T10:12:19Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607258.0,0,0,0,0,2275106.603433,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/19563e5c72a9...b382d17a27d1

2024-11-23 skia-flutter-autoroll@skia.org Roll Dart SDK from 202083b79ac5 to df716eaa6ed2 (1 revision) (flutter/engine#56773)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159369,2024-11-23T04:49:23Z,2024-11-23T06:08:22Z,engine-flutter-autoroll,1,0,3,2,1,1,1,['engine'],3541.0,0,606297.0,0,0,0,0,2293106.966896,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159369, due to - The status or check suite [Mac plugin_dependencies_test](https://cr-buildbucket.appspot.com/build/8730506244787780945) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/f776c3a7647c...19563e5c72a9

2024-11-23 skia-flutter-autoroll@skia.org Roll Dart SDK from eb01a0430f72 to 202083b79ac5 (1 revision) (flutter/engine#56772)
2024-11-23 skia-flutter-autoroll@skia.org Roll Skia from c3d9596a93f8 to 6a3f77189dde (1 revision) (flutter/engine#56771)
2024-11-23 chris@bracken.jp iOS: Fix typo in fluttterViewController (flutter/engine#56770)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159364,2024-11-23T00:57:55Z,2024-11-23T02:09:14Z,engine-flutter-autoroll,0,0,20,4,2,1,1,['engine'],,0,605784.0,0,0,0,0,2307509.421468,,0,20,0,False,[],,,"
https://github.com/flutter/engine/compare/6f941c961b05...f776c3a7647c

2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from e7caf38140ce to c3d9596a93f8 (2 revisions) (flutter/engine#56765)
2024-11-22 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[engine] more consistently flush dart event loop, run vsync callback immediately (#56738)"" (flutter/engine#56767)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from 8b65a7a628e2 to eb01a0430f72 (2 revisions) (flutter/engine#56764)
2024-11-22 jonahwilliams@google.com [Impeller] delete Impeller sim opt out. (flutter/engine#56706)
2024-11-22 jason-simmons@users.noreply.github.com [Impeller] Ensure that SnapshotControllerImpeller has a rendering context before creating the snapshot (flutter/engine#56743)
2024-11-22 flar@google.com [DisplayList] migrate DlColorSource objects to Impeller geometry (flutter/engine#56735)
2024-11-22 chinmaygarde@google.com [Impeller] libImpeller: Tinker on the README. (flutter/engine#56761)
2024-11-22 jonahwilliams@google.com [Impeller] dont create temp vec for discard. (flutter/engine#56759)
2024-11-22 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from zhFzwYCH-N_wasTnM... to D5CBHuB2c-v3Zai-c... (flutter/engine#56757)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from 141291fd570d to 8b65a7a628e2 (1 revision) (flutter/engine#56755)
2024-11-22 jonahwilliams@google.com [Impeller] cache and reuse openGL framebuffer attachments. (flutter/engine#56746)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 700e685861c8 to e7caf38140ce (25 revisions) (flutter/engine#56756)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from c1106f7e4cde to 141291fd570d (1 revision) (flutter/engine#56748)
2024-11-22 jonahwilliams@google.com [engine] more consistently flush dart event loop, run vsync callback immediately (flutter/engine#56738)
2024-11-22 chris@bracken.jp Extract backend-specific code in ShellTestPlatformView (flutter/engine#56722)
2024-11-22 chris@bracken.jp Eliminate ShellTestPlatformView::BackendType::kDefaultBackendType (flutter/engine#56744)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 2614590b4f32 to 700e685861c8 (1 revision) (flutter/engine#56725)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from b36e4d731d67 to c1106f7e4cde (12 revisions) (flutter/engine#56742)
2024-11-22 chinmaygarde@google.com [Impeller] libImpeller: A C++ wrapper to the Impeller API. (flutter/engine#56682)
2024-11-21 chinmaygarde@google.com [Impeller] Run simulator tests with Impeller enabled. (flutter/engine#56740)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from zhFzwYCH-N_w to D5CBHuB2c-v3

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159348,2024-11-22T19:42:53Z,2024-11-22T20:20:14Z,engine-flutter-autoroll,1,0,2,4,2,1,1,['engine'],14887.0,0,606687.0,0,0,0,0,2325508.689988,,0,2,0,False,['hannah-hyj'],"Reason for revert:

tree is red on "" Linux_build_test flutter_gallery__transition_perf_hybrid"" after engine auto roll",,"
https://github.com/flutter/engine/compare/202506d686e3...9384df4425fd

2024-11-22 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from zhFzwYCH-N_wasTnM... to D5CBHuB2c-v3Zai-c... (flutter/engine#56757)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from 141291fd570d to 8b65a7a628e2 (1 revision) (flutter/engine#56755)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from zhFzwYCH-N_w to D5CBHuB2c-v3

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159345,2024-11-22T18:41:49Z,2024-11-22T19:26:56Z,engine-flutter-autoroll,1,0,10,2,1,1,1,['engine'],18623.0,0,606751.0,0,0,0,0,2329109.214847,,0,10,0,False,['hannah-hyj'],"Reason for revert:

tree is red on "" Linux_build_test flutter_gallery__transition_perf_hybrid"" after engine auto roll",,"
https://github.com/flutter/engine/compare/6f941c961b05...202506d686e3

2024-11-22 jonahwilliams@google.com [Impeller] cache and reuse openGL framebuffer attachments. (flutter/engine#56746)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 700e685861c8 to e7caf38140ce (25 revisions) (flutter/engine#56756)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from c1106f7e4cde to 141291fd570d (1 revision) (flutter/engine#56748)
2024-11-22 jonahwilliams@google.com [engine] more consistently flush dart event loop, run vsync callback immediately (flutter/engine#56738)
2024-11-22 chris@bracken.jp Extract backend-specific code in ShellTestPlatformView (flutter/engine#56722)
2024-11-22 chris@bracken.jp Eliminate ShellTestPlatformView::BackendType::kDefaultBackendType (flutter/engine#56744)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 2614590b4f32 to 700e685861c8 (1 revision) (flutter/engine#56725)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from b36e4d731d67 to c1106f7e4cde (12 revisions) (flutter/engine#56742)
2024-11-22 chinmaygarde@google.com [Impeller] libImpeller: A C++ wrapper to the Impeller API. (flutter/engine#56682)
2024-11-21 chinmaygarde@google.com [Impeller] Run simulator tests with Impeller enabled. (flutter/engine#56740)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159338,2024-11-22T17:30:47Z,2024-11-22T18:23:31Z,engine-flutter-autoroll,0,0,9,2,1,1,1,[],,0,607401.0,0,0,0,0,2332722.521372,,0,9,0,False,[],,,"
https://github.com/flutter/packages/compare/913b99ed8542...920321356e45

2024-11-22 737941+loic-sharma@users.noreply.github.com Reland ""[url_launcher] Add Swift Package Manager integration to example app"" (flutter/packages#8148)
2024-11-22 meliksahcakirr@gmail.com [webview_flutter_wkwebview] Webkit webview controller multiple registration fix (flutter/packages#8078)
2024-11-22 1341156974@qq.com [quick_actions_plaform_interface] add localizedSubtitle (flutter/packages#8112)
2024-11-22 737941+loic-sharma@users.noreply.github.com [tools] Don't check license of generated Swift package (flutter/packages#8137)
2024-11-21 engine-flutter-autoroll@skia.org Roll Flutter from 8536b96ebb3e to 93d772c5cdd8 (37 revisions) (flutter/packages#8147)
2024-11-21 omar_hanafy@icloud.com [go_router] Fix: Consistent PopScope Handling on Root Routes issue #140869 (flutter/packages#8045)
2024-11-21 louisehsu@google.com [in_app_purchase_storekit] fix price displayed with wrong precision (flutter/packages#8127)
2024-11-21 10687576+bparrishMines@users.noreply.github.com [pigeon] Removes the `@protected` annotation from the InstanceManager field of the   `PigeonInternalProxyApiBaseClass` (flutter/packages#8125)
2024-11-21 stuartmorgan@google.com [google_maps_flutter] Use structured Pigeon data on iOS (flutter/packages#8142)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157846,2024-10-30T09:17:57Z,2024-11-29T08:22:20Z,PurplePolyhedron,1,3,8,35,2,3,2,['framework'],2587322.0,0,2588665.0,0,0,0,0,2368229.061156,,0,8,0,False,['PurplePolyhedron'],"> LGTM, great change!

Thanks for the review. 
Can you add autosubmit? Or is there anything I need to do?LGTM, just a nitpick LGTM, great change!","LGTM, just a nitpick LGTM, great change!","Previously when subclassing `MultiChildRenderObjectWidget` and `RenderObject with ContainerRenderObjectMixin`, if one forgot to set up parent data,  the error message does not give hint that `setupParentData` need to be implemented by the `RenderObject`.

This PR add assertion that check parent data type before type cast and give hints if it is was not properly set.
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
    // Use a mismatched parent data type
``` Consider matching the error message, using a `having()` selector on the `throwsAssertionError` matcher ```suggestion
    expect(() => renderObject.add(child), throwsAssertionError);
```

The formatting is wrong here."
77014,2021-03-01T23:03:47Z,2021-03-02T18:09:03Z,Piinks,5,5,3,19,3,4,1,"['a: tests', 'framework']",16339010.0,0,118200329.0,0,0,0,0,2396615.380568,,0,3,0,False,"['burhanrashid52', 'CaseyHillers', 'fzyzcjy', 'felix-barz-brickmakers']","Can anyone help me to understand how do we set diff tolerance levels for the golden test ? I am not sure how I will use these api in my tests.
Currently I’ve golden test matcher like this.
```dart
await expectLater(find.byType(MyTestWidget),
    matchesGoldenFile('my_test_widget.png'));
 ```
How do I set a diff tolerance level for this test ?
@Piinks  anyone? Here's an example with a comparator where you can customize the tolerance.

```dart
class GoldenDiffComparator extends LocalFileComparator {
  GoldenDiffComparator(String testFile, {double tolerance = 0.005,}) : super(Uri.parse(testFile));

  @override
  Future<bool> compare(Uint8List imageBytes, Uri golden) async {
    final ComparisonResult result = await GoldenFileComparator.compareLists(
      imageBytes,
      await getGoldenBytes(golden),
    );

    if (!result.passed && result.diffPercent > _kGoldenDiffTolerance) {
      final String error = await generateFailureOutput(result, golden, basedir);
      throw FlutterError(error);
    }
    if (!result.passed) {
      log('A tolerable difference of ${result.diffPercent * 100}% was found when comparing $golden.');
    }
    return result.passed || result.diffPercent <= _kGoldenDiffTolerance;
  }
}
```

Then in the test you can call it like

```dart
goldenFileComparator = GoldenDiffComparator(path.join(
  (goldenFileComparator as LocalFileComparator).basedir.toString(),
  goldenFileKey,
));

expectLater(actual, matchesGoldenFile(goldenPath), reason: reason, skip: skip || !Platform.isLinux);
``` Hi, may I know what is `goldenFileKey`? Seems that the code above does not work for macos. The following works:

```
MyLocalFileComparator(
      Uri.file(path.join(path.fromUri((goldenFileComparator as LocalFileComparator).basedir), 'just_arbitrary_string.dart')));
```",,"This exposes the diff percentage of a ComparisonResult, which will enable sub-classed LocalFileComparators to set a tolerance level for golden file testing.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making or feature I am adding, or Hixie said the PR is test-exempt.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","```suggestion
    final double diffPercent = pixelDiffCount / totalPixels;
``` ```suggestion
        '${(diffPercent * 100).toStringAsFixed(2)}% '
``` ```suggestion
      passed: true,
``` @Piinks When this is multiplied by 100, it looks like this is not a percentage to begin with, meaning it's 0-1 instead of 0-100, right?

Just was confused by some downstream code multiplying by 100, which I found unexpected for something called ""percent"" already.

As we probably can not change/rename this at this point, would you be fine with commenting the range on the property itself to make this clear? Or is my confusion unfounded? Hi @Piinks 👋🏻
Like @tp , I found it unexpected that we’re multiplying a value that’s already a percentage. Could you clarify this when you have a moment? Thanks in advance!

"
159308,2024-11-22T00:22:18Z,2024-11-22T17:28:05Z,engine-flutter-autoroll,0,0,5,2,1,1,1,['engine'],,0,604818.0,0,0,0,0,2397016.563068,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/d1a08064e193...6f941c961b05

2024-11-21 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[Impeller] support GLES 3.0 MSAA without extension. (#56705)"" (flutter/engine#56741)
2024-11-21 skia-flutter-autoroll@skia.org Roll Dart SDK from dde57dc75c15 to b36e4d731d67 (1 revision) (flutter/engine#56723)
2024-11-21 dacoharkes@google.com [native assets] Consume `NativeAssetsManifest.json` (flutter/engine#56727)
2024-11-21 jonahwilliams@google.com [Impeller] support GLES 3.0 MSAA without extension. (flutter/engine#56705)
2024-11-21 30870216+gaaclarke@users.noreply.github.com Updated some impeller benchmark urls (flutter/engine#56721)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159280,2024-11-21T17:04:14Z,2024-11-21T17:56:19Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,605901.0,0,0,0,0,2422218.076395,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/78b87f3fe023...d1a08064e193

2024-11-21 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from oq6Ztlu1b1mgdDSPH... to zhFzwYCH-N_wasTnM... (flutter/engine#56736)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from oq6Ztlu1b1mg to zhFzwYCH-N_w

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159270,2024-11-21T15:25:16Z,2024-11-21T16:29:04Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,608239.0,0,0,0,0,2425818.444938,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/523d381893c8...78b87f3fe023

2024-11-21 mdebbar@google.com [web] Make sure to include all split fonts (flutter/engine#56733)
2024-11-21 mdebbar@google.com [web] Work around wrong pointerId in coalesced events in iOS Safari 18.2 (flutter/engine#56719)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159268,2024-11-21T15:01:31Z,2024-11-21T15:45:51Z,engine-flutter-autoroll,0,0,7,2,1,1,1,[],,0,606066.0,0,0,0,0,2429417.599423,,0,7,0,False,[],,,"
https://github.com/flutter/packages/compare/e95f6d8fce58...913b99ed8542

2024-11-21 brackenavaron@gmail.com [vector_graphics] handle errors from bytes loader (flutter/packages#8080)
2024-11-21 82763757+derdilla@users.noreply.github.com [flutter_svg] Fix SvgNetworkLoader not closing internal http client (flutter/packages#8126)
2024-11-20 30872003+misos1@users.noreply.github.com [video_player_avfoundation] send video load failure even when eventsink was initialized late (flutter/packages#7194)
2024-11-20 kevmoo@users.noreply.github.com [flutter_markdown] enable Wasm support (flutter/packages#8120)
2024-11-20 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[url_launcher] Add Swift Package Manager integration to example app (#8128)"" (flutter/packages#8136)
2024-11-20 737941+loic-sharma@users.noreply.github.com [url_launcher] Add Swift Package Manager integration to example app (flutter/packages#8128)
2024-11-20 stuartmorgan@google.com [pigeon] Enable example app build in CI (flutter/packages#8119)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159589,2024-11-28T13:28:48Z,2024-11-28T14:37:11Z,bleroux,0,0,1,150,2,1,1,"['framework', 'f: material design']",,0,4500.0,0,0,0,0,2431747.225596,,0,1,0,False,[],LGTM,LGTM,"Reverts https://github.com/flutter/flutter/pull/159072 which was flagged as a perf regression in https://github.com/flutter/flutter/issues/159337. 

Reverting to see if the perf regression was really related to this change or was impacted by another change. See https://github.com/flutter/flutter/issues/159337#issuecomment-2504418480 for context.",
159583,2024-11-28T09:17:37Z,2024-11-28T13:10:44Z,bleroux,0,0,1,417,5,1,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",,0,14738.0,0,0,0,0,2436580.546314,,0,1,0,False,[],LGTM,LGTM,"Reverts https://github.com/flutter/flutter/pull/159203 because it depends on https://github.com/flutter/flutter/pull/159072 which was flagged as a perf regression in https://github.com/flutter/flutter/issues/159337. 

Reverting both PRs to see if the perf regression was really related to this change or was impacted by another change. See https://github.com/flutter/flutter/issues/159337#issuecomment-2504418480 for context.",
159263,2024-11-21T12:56:14Z,2024-11-21T14:46:58Z,engine-flutter-autoroll,1,0,3,2,1,1,1,['engine'],2472.0,0,606382.0,0,0,0,0,2436620.668505,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159263, due to - The status or check suite [Mac tool_tests_general](https://cr-buildbucket.appspot.com/build/8730656801700948593) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/69c325513a65...523d381893c8

2024-11-21 55750689+AthulJoseph27@users.noreply.github.com [Flutter GPU] Added support to set Scissor. (flutter/engine#56302)
2024-11-21 tugorez@users.noreply.github.com Enable view focus (flutter/engine#54966)
2024-11-21 robert.ancell@canonical.com Allow GTK style enum naming (flutter/engine#56731)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
125133,2023-04-19T13:35:03Z,2023-04-21T13:43:37Z,bleroux,10,2,3,225,9,1,1,"['a: text input', 'framework', 'f: material design', 'autosubmit']",76491.0,0,50882658.0,0,0,0,0,2442816.637004,,1,3,0,False,"['LucaIaconelli', 'reza00farjam', 'guidezpl', 'federicopolesello', 'bleroux']","Nice work! However there are quite a few components with clickable parts that include text. These include: 

- FAB / extended FAB
- Chips 
- Tabs
- Navigation (rail, drawer, bar)
- Top app bar
- XListTiles (e.g. `CheckboxListTile`)
- Menus
- Date and time pickers

Rather than handle these individually, can we add it a level below, say to `InkWell` and see which components still need to be handled individually? > Rather than handle these individually, can we add it a level below, say to InkWell and see which components still need to be handled individually?

I agree with this. Let me try to update this PR.
First goal of this PR was to get feedback for the `DefaultSelectionStyle.mouseCursor` solution I proposed. I choosed Material buttons to illustrate how this can be used but it makes sense to use it for InkWell to reduce code duplication. Thanks for fix. On which channel and which version this fix is available? This fix is available on the master channel. pro tip: https://github.com/flutter/flutter/commit/d4f884e000194d050a745ccd2b09029225b89636 indicates the branches the merge commit is present on

<img width=""455"" alt=""image"" src=""https://user-images.githubusercontent.com/6655696/234926189-c70179b1-3386-45c1-9a07-6912e8d35584.png"">
 Thanks for the fix. Is it also available in stable or only on master? As long as stable isn't listed on that commit, it's not available. Since beta releases are monthly, expect it in the next one. @guidezpl still not available on stable? @LucaIaconelli I see that is present in stable from version `3.13.0`

https://docs.flutter.dev/release/release-notes/release-notes-3.13.0 For future reference (both for myself and others), here's an example of how this output can be utilized effectively:  

```dart
SelectionArea(
  child: DefaultSelectionStyle.merge(
    mouseCursor: SystemMouseCursors.click,
    child: Text('Clickable and selectable text'),
  ),
);
```  Nice, please update PR description.

```
  _    ___ _____ __  __ 
 | |  / __|_   _|  \/  |
 | |_| (_ | | | | |\/| |
 |____\___| |_| |_|  |_|
                        
```","Nice, please update PR description.

```
  _    ___ _____ __  __ 
 | |  / __|_   _|  \/  |
 | |_| (_ | | | | |\/| |
 |____\___| |_| |_|  |_|
                        
```","## Description

This PR introduces `DefaultSelectionStyle.mouseCursor` to configure the mouse cursor over selectable text.
It also applies this solution to `InkResponse` to make the mouse cursor win over the default one provided by selectable `Text` for many Material components (such as buttons). 

### Before

https://user-images.githubusercontent.com/840911/233627729-ddf98e2a-444d-4c6d-a6d5-f521982f48dd.mov


### After

https://user-images.githubusercontent.com/840911/233627718-8871a68f-d33c-44cf-b4a1-91bb1fcdf076.mov


## Related Issue

Fixes https://github.com/flutter/flutter/issues/104595

## Tests

Adds 6 tests.
","```suggestion
  /// The [MouseCursor] for mouse pointers hovering over selectable [Text] widgets.
``` nit: https://dart.dev/guides/language/effective-dart/documentation#do-separate-the-first-sentence-of-a-doc-comment-into-its-own-paragraph"
159203,2024-11-20T15:19:51Z,2024-11-25T13:11:21Z,bleroux,2,3,1,417,5,3,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",668985.0,0,669023.0,0,0,0,0,2451763.921362,,1,1,0,False,"['auto-submit[bot]', 'bleroux']","Reason for revert: This PR depends on https://github.com/flutter/flutter/pull/159072 which was flagged as a perf regression in https://github.com/flutter/flutter/issues/159337. Reverting to see if the perf regression was real or not. See https://github.com/flutter/flutter/issues/159337#issuecomment-2504418480 for context. Time to revert pull request flutter/flutter/159203 has elapsed.
          You need to open the revert manually and process as a regular pull request.LGTM!",LGTM!,"## Description

This PR fixes the DatePicker overlay colors for the selected days.
Before this PR, overlays were obscured by the selected day backgound.
This fix simply replaces a DecoratedBox with an Ink to make the overlays visible.
Combined with https://github.com/flutter/flutter/pull/159072 which fixes InkWell overlay color resolution related to the selected state, this PR fixes [Date picker overlay colors aren't applied on MaterialState.selected state](https://github.com/flutter/flutter/issues/130586).

Before, no overlay visible for the selected day when hovered, focused, or pressed:

https://github.com/user-attachments/assets/944d5035-68b2-40da-b606-3e8795229767

After, overlay is visible for the selected day when hovered, focused, or pressed (color change is slight as defined with M3 defaults):

https://github.com/user-attachments/assets/2627955b-f45a-465f-8eb0-21955ccd8c3e


## Related Issue

Fixes [Date picker overlay colors aren't applied on MaterialState.selected state](https://github.com/flutter/flutter/issues/130586).

## Tests

Adds 12 tests.
Updates several existing tests (those tests were looking for a `DecoratedBox`, make them look for an `Ink`).","### 😍😍

This is wonderful, thank you Thanks!
It took me several hours to figure out that there is not one Material for each day. 
This was mainly because existing tests were carefully using the day they are interested in to look up the Material. It was ok, until I spent hours fixing one test where the circle painted for another day collides with the one I was interested in.
I created this utility function to save time for future contributors who will work on the date picker.  I have some mixed feelings about the Ink widget—it seems like it'd help performance by consolidating a bunch of widgets into a single ink controller, but it also has the tendency to [introduce jank](https://main-api.flutter.dev/flutter/material/Ink-class.html#limitations), and while it appears to work very similar to DecoratedBox, some things are super confusing for anyone who doesn't have a solid grasp of how painting on a Material works."
156399,2024-10-08T10:30:11Z,2024-11-28T01:05:57Z,azizChebbi,8,7,5,77,2,3,2,['framework'],3.0,0,4372549.0,1,0,0,0,2480819.019344,,0,5,0,False,"['hannah-hyj', 'google-cla[bot]', 'flutter-dashboard[bot]', 'melWiss', 'azizChebbi']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/156399/checks?check_run_id=31227593423) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request. I'm trying to check the native behavior. The closest scenario I could find is adding a credit card to the Play Store/App Store.  https://github.com/user-attachments/assets/b474e401-d52e-49b5-b233-149fe6aca0c4

Android only announces the error message for the text field you're editing.   Also, the error messages I tested in this case are live when editing. 

In the flutter TextFormField widget, you can 
1 .set the error messages to be live when editing 
OR
2. set all error messages to appear simultaneously when finally submitting the form. 

For case 1. the a11y behavior is the same with native. For case 2. we announce the error messages when validating the whole form. The announcement was added in this PR https://github.com/flutter/flutter/pull/123373 to improve user experience.  For 2. It's hard to exactly match native behavior, if there's not a native equivalent for the form widget.

I agree that we should only announce the error message from the first error form field so it's not too overwhelming. 

 Please also add a test in form_test.dart > Please also add a test in form_test.dart

done! cc @hannah-hyj  Thank you for adding the test!

I think this looks good to me except for a small comment. Hey, what's the status here? The pr seems okay to me, can we get this ready for the next release? our team is blocked and needs this one, cc @chunhtai @hannah-hyj  
@chunhtai  
what is the native form does in this case?>>
https://github.com/flutter/flutter/pull/156399#issuecomment-2415321098  For this question I tested some native behavior but I didn't find an exact native equivalent for the flutter form widget to validate multiple form field at the same time when submitting the form.  

I think this change make sense, but do you know what is the native form does in this case? LGTM except one nit LGTM","I think this change make sense, but do you know what is the native form does in this case? LGTM except one nit LGTM","## Issue
This pull request addresses an accessibility issue where all form error messages were concatenated and announced simultaneously, overwhelming users relying on screen readers like VoiceOver and TalkBack. 
This is the issue link: https://github.com/flutter/flutter/issues/156340

## Update
The change ensures that only the first error message is announced, providing a more manageable and user-friendly experience.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","I don't have access to a real device now, but we should check for native behavior. If the concatenation string was confusing, maybe we should concate with 2 line break in between each message but even with adding the 2 line break, we are still facing the same issue, that the voice over is revealing all the error messages at once, we don't actually want that behavior.
We reveal only the first error, after that the user fills the field and pass to the next one.  @chunhtai what do you think ?
This change is really crucial as we're working with a big institute that provides benefits for the blind and visually impaired, and they suggested this accessibility improvement. It's key that our system works well for them. 
And thanks in advance! You can add a comment here about why only change error message when it's empty. done! nit:  The comment `// Ensure that only the first error message gets announced to the user.` should be above
`if (errorMessage.isEmpty) {` This is not updated."
159229,2024-11-20T22:46:12Z,2024-11-20T23:32:27Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608703.0,0,0,0,0,2485304.68872,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/2d32cf3a7971...69c325513a65

2024-11-20 dkwingsmt@users.noreply.github.com Fix: Impeller playground's shapes should react to controllers (flutter/engine#56734)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159226,2024-11-20T21:34:13Z,2024-11-20T22:12:00Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,606934.0,0,0,0,0,2491393.026916,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/3828681d1f86...2d32cf3a7971

2024-11-20 flar@google.com [DisplayList] migrate DlImageFilter code to Impeller geometry classes (flutter/engine#56720)
2024-11-20 robert.ancell@canonical.com Split channel messaging out of handlers (flutter/engine#56667)
2024-11-20 jason-simmons@users.noreply.github.com Revert ""Added assert for opengles thread safety (#56585)"" (flutter/engine#56730)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159217,2024-11-20T20:24:12Z,2024-11-20T21:14:03Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607535.0,0,0,0,0,2494994.193068,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3245c8976976...3828681d1f86

2024-11-20 dacoharkes@google.com [et] Add Android x64 configurations (flutter/engine#56703)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159214,2024-11-20T19:00:12Z,2024-11-20T19:44:25Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605375.0,0,0,0,0,2502194.755421,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/80d77505fdde...3245c8976976

2024-11-20 jonahwilliams@google.com [Impeller] flush all GLES cmd buffers together. (flutter/engine#56724)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159210,2024-11-20T17:48:11Z,2024-11-20T18:31:01Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,606096.0,0,0,0,0,2505796.024475,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3f19207e820e...80d77505fdde

2024-11-20 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from dJ0gh-z1KVnSzvfjW... to oq6Ztlu1b1mgdDSPH... (flutter/engine#56728)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from dJ0gh-z1KVnS to oq6Ztlu1b1mg

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159543,2024-11-27T10:00:50Z,2024-11-27T16:23:24Z,fluttergithubbot,1,0,2,1,1,1,1,['c: flake'],20261.0,0,22956.0,0,0,0,0,2512177.38378,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159543, due to - The status or check suite [ci.yaml validation](https://flutter-dashboard.appspot.com) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Merge Queue Guard](https://flutter-dashboard.appspot.com) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_benchmark hello_world_macos__compile""
}
-->
Issue link: https://github.com/flutter/flutter/issues/159542
",
159201,2024-11-20T15:01:15Z,2024-11-20T15:46:20Z,engine-flutter-autoroll,0,0,6,2,1,1,1,[],,0,605317.0,0,0,0,0,2516593.171013,,0,6,0,False,[],,,"
https://github.com/flutter/packages/compare/fc4adc78aa24...e95f6d8fce58

2024-11-19 louisehsu@google.com [in_app_purchase_storekit] disallow ios versions lower than supported from enabling storekit (flutter/packages#8110)
2024-11-19 49699333+dependabot[bot]@users.noreply.github.com [interactive_media_ads]: Bump com.google.ads.interactivemedia.v3:interactivemedia from 3.35.1 to 3.36.0 in /packages/interactive_media_ads/android (flutter/packages#8046)
2024-11-19 49699333+dependabot[bot]@users.noreply.github.com [interactive_media_ads]: Bump androidx.annotation:annotation from 1.8.2 to 1.9.1 in /packages/interactive_media_ads/android (flutter/packages#7980)
2024-11-19 10687576+bparrishMines@users.noreply.github.com [webview_flutter_android] Updates plugin to use `ProxyApis`s (flutter/packages#7794)
2024-11-19 10687576+bparrishMines@users.noreply.github.com [interactive_media_ads] Adds support to define parameters that control the rendering of ads (flutter/packages#8057)
2024-11-19 engine-flutter-autoroll@skia.org Roll Flutter from b3818f6b5979 to 8536b96ebb3e (22 revisions) (flutter/packages#8124)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
156405,2024-10-08T14:41:59Z,2024-10-11T20:51:18Z,TahaTesser,2,2,2,116,2,2,1,"['framework', 'f: material design', 'autosubmit']",68704.0,0,4307153.0,0,0,0,0,2531113.583234,,1,2,0,False,"['guidezpl', 'TahaTesser']","drive-by comment to learn what the screen recording app is? > drive-by comment to learn what the screen recording app is?

Screen Studio![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)",![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png),"Fixes [Add option to control whether the root DropdownMenu can be closed or not](https://github.com/flutter/flutter/issues/139269)

This introduces  `DropdownMenu.closeBehavior` to provide control over `DropdownMenu` can be closed in nested menus.

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String selectedValue = ""1"";

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Center(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              Column(
                spacing: 16.0,
                mainAxisSize: MainAxisSize.min,
                children: [
                  const Text(""DropdownMenuCloseBehavior.none""),
                  MenuAnchor(
                    menuChildren: <Widget>[
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: DropdownMenu(
                          closeBehavior: DropdownMenuCloseBehavior.none,
                          label: const Text('Menu'),
                          initialSelection: selectedValue,
                          onSelected: (String? value) {
                            if (value != null) {
                              setState(() {
                                selectedValue = value;
                              });
                            }
                          },
                          dropdownMenuEntries: [""1"", ""2"", ""3""]
                              .map(
                                (it) => DropdownMenuEntry(
                                  value: it,
                                  label: it,
                                ),
                              )
                              .toList(),
                        ),
                      )
                    ],
                    child: const Text('Open Menu'),
                    builder: (context, controller, child) {
                      return ElevatedButton(
                        onPressed: () {
                          controller.open();
                        },
                        child: child,
                      );
                    },
                  ),
                ],
              ),
              Column(
                spacing: 16.0,
                mainAxisSize: MainAxisSize.min,
                children: [
                  const Text(""DropdownMenuCloseBehavior.self""),
                  MenuAnchor(
                    menuChildren: <Widget>[
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: DropdownMenu(
                          closeBehavior: DropdownMenuCloseBehavior.self,
                          label: const Text('Menu'),
                          initialSelection: selectedValue,
                          onSelected: (String? value) {
                            if (value != null) {
                              setState(() {
                                selectedValue = value;
                              });
                            }
                          },
                          dropdownMenuEntries: [""1"", ""2"", ""3""]
                              .map(
                                (it) => DropdownMenuEntry(
                                  value: it,
                                  label: it,
                                ),
                              )
                              .toList(),
                        ),
                      )
                    ],
                    child: const Text('Open Menu'),
                    builder: (context, controller, child) {
                      return ElevatedButton(
                        onPressed: () {
                          controller.open();
                        },
                        child: child,
                      );
                    },
                  ),
                ],
              ),
              Column(
                spacing: 16.0,
                mainAxisSize: MainAxisSize.min,
                children: [
                  const Text(""DropdownMenuCloseBehavior.all""),
                  MenuAnchor(
                    menuChildren: <Widget>[
                      Padding(
                        padding: const EdgeInsets.all(8.0),
                        child: DropdownMenu(
                          closeBehavior: DropdownMenuCloseBehavior.all,
                          label: const Text('Menu'),
                          initialSelection: selectedValue,
                          onSelected: (String? value) {
                            if (value != null) {
                              setState(() {
                                selectedValue = value;
                              });
                            }
                          },
                          dropdownMenuEntries: [""1"", ""2"", ""3""]
                              .map(
                                (it) => DropdownMenuEntry(
                                  value: it,
                                  label: it,
                                ),
                              )
                              .toList(),
                        ),
                      )
                    ],
                    child: const Text('Open Menu'),
                    builder: (context, controller, child) {
                      return ElevatedButton(
                        onPressed: () {
                          controller.open();
                        },
                        child: child,
                      );
                    },
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
```

</details>

### Demo



https://github.com/user-attachments/assets/1f79ea6e-c0c6-4dcf-8180-d9dcca1c22c5




## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Since enums are in the global namespace, this should be called something like `DropdownMenuCloseBehavior` so it doesn't get confused with something that applies to all kinds of closing something. Agree! Thank you so much."
159322,2024-11-22T08:29:30Z,2024-11-27T11:05:09Z,dcharkes,2,10,14,1151,39,4,1,"['tool', 'a: desktop']",265591.0,0,441342.0,0,0,0,0,2531274.325111,,3,14,0,False,['dcharkes'],"cc @jonahwilliams - I'm not sure how versed you are in the `flutter_tools` code are, but since you reviewed the engine PR and have some background knowledge, feel free to chime in. Thanks @mraleph! 🙏 LGTM",LGTM,"This PR introduces a `NativeAssetsManifest.json` next to the `AssetManifest.bin` and `FontManifest.json`. This removes the need for embedding the native assets mapping inside the kernel file and enables decoupling native assets building and bundling from the kernel compilation in flutter tools. This means `flutter run` no longer does a dry run of `hook/build.dart` hooks.

(It also means all isolate groups will have the same native assets. However, since Flutter does not support `Isolate.spawnUri` from kernel files, this is not a regression.)

Implementation details:

* g3 is still using kernel embedding. https://github.com/flutter/flutter/pull/142016 introduced an argument to embed a `native_assets.yaml` inside `flutter attach` and `flutter run` (the outer flutter process), but it is not used in `flutter assemble` (the inner process when doing `flutter run`). So, those arguments need to still be respected. However, all other logic related to embedding a yaml encoding in the kernel file has been removed.
* All dry-run logic has been removed. 🎉 
* The `KernelSnapshot` target no longer depends on the `InstallCodeAssets` target. Instead, the various OS-specific ""BundleAsset"" targets now depend on the `InstallCodeAssets` target. The `InstallCodeAssets` invokes the build hooks and produces the `NativeAssetsManifest.json`. The various ""BundleAsset"" commands synchronize the `NativeAssetsManifest.json` to the app bundle.
* `InstallCodeAssets` produces a `native_assets.json`, which is renamed to `NativeAssetsManifest.json` in the various ""Bundle"" targets. This means that all unit tests of the ""Bundle"" targets now need to create this file. (Similar to how `app.dill` is expected to exist because `KernelSnapshot` is a dependency of the ""Bundle"" targets.)
* Because dynamic libraries need to be code signed (at least on iOS and MacOS), the bundling of the dylibs is _not_ migrated to reuse `_updateDevFS` (which is used for ordinary assets). Only the 2nd and 3rd invocation of `flutter assemble` from `xcodebuild` has access to the code signing identity.

Relevant tests:

* test/integration.shard/isolated/native_assets_test.dart - runs `flutter run` with native assets including hot restart and hot reload.

TODO:

* Undo engine-roll in this PR after engine has rolled in.

Issue:

* https://github.com/flutter/flutter/issues/154425

Related PRs:

* https://dart-review.googlesource.com/c/sdk/+/388161
* https://github.com/flutter/engine/pull/56727

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Should we be using the sync FS APIs here instead? This can be simplified to:

```dart
assetsPerTarget.putIfAbsent(
  asset.target, <KernelAsset>[]
)..add(asset);
``` This version should be a constant somewhere and so should the keys. Also, could this not just be a string? For fast operations like `exists`, yes. String literals are already constants.

I'm not sure the code would become more readable with the keys outlined.

> Also, could this not just be a string?

The version? It's a list of numbers, not a string. The list of numbers avoids needing string operations to check. > String literals are already constants.

Of course, but I typically encourage using variables for constant keys for maintainability and testing. Also, for JSON encoding / decoding it reduces likelihood of introducing a typo into one of the steps. Where is this JSON eventually decoded?

> The version? It's a list of numbers, not a string. 

I know, I'm just wondering why we're deciding to do that here when it's not what we do in other config files like pubspecs, package_configs, etc. (that I'm aware of, at least). It doesn't really cost many more cycles to parse a short version string, so I'm looking at this from a consistency standpoint. Not a blocker though :)

Also, the version can still be `const <int>[1, 0, 0]` > Of course, but I typically encourage using variables for constant keys for maintainability and testing.

Fair enough, done.

> Where is this JSON eventually decoded?

The engine. So changing it now requires another engine PR and roll.

> Also, the version can still be `const <int>[1, 0, 0]`

done. Makes me wonder if `NativeAssetsManifest.json` should be a named constant, but it does not seem to be used for other artifacts... So I guess not.  why this replacement (add a comment maybe?). We went from yaml to json, and json adds an extra layer of escaping of backslashes in strings."
159272,2024-11-21T15:47:25Z,2024-11-27T01:44:25Z,davidhicks980,3,0,46,582,2,2,2,"['framework', 'f: cupertino', 'will affect goldens']",1847.0,0,467822.0,0,0,0,0,2564920.401697,,0,46,0,False,"['dkwingsmt', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/159272) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159272 at sha 6d9a3ee8b19ceb76276bb4f8004e1d551b9e90b3_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/159272).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #159272 at sha e34c4b6f6453e96649b478b69acede213e013a56_

 cc @LongCatIsLooong who reviewed the first takeLGTM, thank you so much!","LGTM, thank you so much!","https://github.com/flutter/flutter/pull/151430 had to be reverted because of a black square appearing during animations. This PR fixes the issue by switching from BlendMode.src -> BlendMode.srcOver. I visually checked to make sure the issue was fixed on MacOS and iOS/Android simulators.

Fixes https://github.com/flutter/flutter/issues/154887

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159176,2024-11-19T23:42:52Z,2024-11-20T00:23:10Z,engine-flutter-autoroll,0,0,4,2,1,1,1,['engine'],,0,606615.0,0,0,0,0,2570400.814896,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/7eb87547cbc6...3f19207e820e

2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from d776efdac21b to 2614590b4f32 (1 revision) (flutter/engine#56718)
2024-11-19 chris@bracken.jp TestMetalContext: Use ARC-managed Metal types (flutter/engine#56717)
2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from a694b9e85a49 to d776efdac21b (3 revisions) (flutter/engine#56716)
2024-11-19 skia-flutter-autoroll@skia.org Roll Dart SDK from b01654fa26c7 to dde57dc75c15 (3 revisions) (flutter/engine#56714)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159168,2024-11-19T21:17:25Z,2024-11-19T21:57:02Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,608142.0,0,0,0,0,2577601.477532,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/4ff696b555dc...7eb87547cbc6

2024-11-19 chris@bracken.jp EmbedderTest: templatise GetEmbedderContext (flutter/engine#56709)
2024-11-19 chris@bracken.jp display_list: Extract backend-specific surface providers (flutter/engine#56711)
2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 78ef6b7a574f to a694b9e85a49 (5 revisions) (flutter/engine#56713)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159454,2024-11-25T23:41:20Z,2024-11-26T21:24:14Z,elliette,0,8,9,324,7,2,1,['framework'],,0,78174.0,0,0,0,0,2580535.884015,,0,9,0,False,[],,,"Fixes https://github.com/flutter/devtools/issues/8553

Context: 

A Flutter web customer with a large widget tree was getting a stack overflow error when they toggled on ""show implementation widgets"" in the Flutter DevTools Inspector. This is because building the JSON tree recursively was hitting Chrome's stack limit. 

This PR creates the JSON tree **iteratively** if the `getRootWidgetTree` service extension is called with `fullDetails = false` (which is what DevTools uses to fetch the widget tree).

For all other instances of creating a widget JSON map (for example, when fetching widget properties) the recursive implementation is used. This allows properties provided by subclasses implementing `toJsonMap` to be included in the response.

Note: Because with this change `toJsonMap` is only called when `fullDetails = true` and `toJsonMapIterative` is only called when `fullDetails = false`, this PR partially reverts the changes in https://github.com/flutter/flutter/pull/157309.
","do we need to add this back to the result? trailing comma? nit: remove colon at end of comment if we are always removing from the front, should we use a more efficient data structure than a list like a ListQueue? nevermind I see it is added below. Done, thanks! Removed (changed to period) Ooh I didn't know ListQueue exists, that's perfect"
159307,2024-11-22T00:13:18Z,2024-11-26T21:03:12Z,matanlurey,2,3,6,87,4,2,1,"['tool', 'cp: beta']",324167.0,0,421136.0,0,0,0,0,2581256.08088,,0,6,0,False,"['kenzieschmoll', 'auto-submit[bot]']","As long as we aren't sending events for a new tool that isn't covered by the PDD or sending any PII in event data for an existing tool, then there is no issue with sending new analytics events. 👍  auto label is removed for flutter/flutter/159307, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8730183057070422033) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM but I'm looping in @kenzieschmoll since I don't know whether there are any legal gotchas when it comes to collecting new events. LGTM",LGTM but I'm looping in @kenzieschmoll since I don't know whether there are any legal gotchas when it comes to collecting new events. LGTM,"Towards https://github.com/flutter/flutter/issues/159212.

/cc @jtmcdole ","Would it be useful to have a more precise test name for folks investigating a potential failure on CI?

```suggestion
    testUsingContext('use of the deferred components feature sends a build info event indicating so', () async {
``` Since we don't send an event when deferred components is _not_ used:

```suggestion
      // Record to analytics that DeferredComponents is being used.
``` ```suggestion
      // Record to analytics that DeferredComponents is being used.
```"
159164,2024-11-19T20:09:46Z,2024-11-19T20:52:49Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605001.0,0,0,0,0,2584803.516257,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/d5820a638885...4ff696b555dc

2024-11-19 47866232+chunhtai@users.noreply.github.com Update Engine-Clang-Tidy-Linter.md (flutter/engine#56708)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
154629,2024-09-04T15:55:42Z,2024-11-13T18:52:27Z,nate-thegrate,4,30,7,140,2,4,1,"['team', 'framework', 'team-infra', 'autosubmit', 'd: docs/']",544820.0,0,7186346.0,0,0,0,0,2585104.781685,,0,7,0,False,['nate-thegrate'],"@christopherfujino let me know if you'd prefer adding this content to the existing wiki page, rather than making a new one. @dkwingsmt thanks again for the advice & feedback! I updated the [wiki page](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/testing/Fix-failing-checks.md) with ""**What to do:**"" sections as you suggested.

I also tried adding section headers for **customer_testing** and **Linux Analyze**, but I felt that it negatively impacted the flow of the document (being similar to the above sections would imply that they should both have their own ""what to do"" paragraph, except they both are resolved the same way: reading through the test output). > In general this is looking awesome. I'll ask someone familiar with tech writing for the final review.

Thanks very much! Hopefully we'll be able to pick someone during framework triage :) Hi Shams, this PR isn't urgent but I do believe you're the most qualified to evaluate this change :)

PTAL when you have a chance, thanks!I had some comments that I thought I gave, but actually they were pending! I'm so sorry.

In general this is looking awesome. I'll ask someone familiar with tech writing for the final review. Sorry, for the delay! This mostly looks pretty good, though there is one phrase that I find confusing. @sfshaza2 thanks very much for the review! This looks great! I have one tiny modification, and it's not a big deal at all.","I had some comments that I thought I gave, but actually they were pending! I'm so sorry.

In general this is looking awesome. I'll ask someone familiar with tech writing for the final review. Sorry, for the delay! This mostly looks pretty good, though there is one phrase that I find confusing. @sfshaza2 thanks very much for the review! This looks great! I have one tiny modification, and it's not a big deal at all.","Resolves https://github.com/flutter/flutter/issues/154628

<br>

As a contributor, I would expect resources related to testing to be located in the [/docs/contributing/testing](https://github.com/flutter/flutter/tree/master/docs/contributing/testing) directory. This PR adds a page to that directory geared toward helping new contributors.

<br>

I've noticed that in `team-framework` triage meetings, comments along the lines of ""could you take a look at the failing checks?"" are a regular occurrence.

I believe we could save quite a bit of effort by changing this:

> [**Understanding a LUCI build failure**](https://github.com/flutter/flutter/blob/a5ca16ea94048103b110d2cbd41e95d770735fb5/docs/infra/Understanding-a-LUCI-build-failure.md)

to this:

> [**Flutter wiki – How to fix failing checks**](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/testing/Fix-failing-checks.md)","```suggestion
that should be addressed before anything else is merged in.
``` This should be https://github.com/flutter/tests ? The customer tests registry is there. Although, since flutter/packages also runs tests on master, it _could_ break both? oh my goodness 😂 I believe flutter/tests runs the tests in flutter/packages, and my understanding is that Google testing takes care of the other stuff, but it would be nice to double-check that info. The customer tests are tests, submitted by third parties, against the framework. These help catch breakages.

IIRC super_list is one of those customers. 

See the note on the `flutter/flutter` Github homepage: ""A repository for you to submit your application's tests to ensure that breaking changes don't affect your application.""

Google testing is the G3 suite, that runs tests for internal things at Google, IIRC (not a Googler myself but someone from the team can probably verify that)

(see also the various customer labels on Github) I experienced quite a bit of frustration a while back after putting a lot of work into [a huge PR](https://github.com/flutter/flutter/pull/149963) only to see that **customer_testing** was failing. For most test failures, I can quickly find the test by pasting the name into the VS Code search tab, but even after doing that in both flutter/flutter and flutter/tests there weren't any results. Eventually I realized that the test was located in flutter/packages; my hope in adding this wiki page is to prevent others from having to go through that 😅

I really appreciate the explanation you gave here. I made an effort to incorporate this info into the page; let me know if it should be tweaked further! I suggest we split every section into two parts. (The PR currently is almost like this, but I suggest we make it clearer.) The first paragraph explains what it is, and the second paragraph explicitly tells the reader what to do.

For example, for this one:

```suggestion
A **tree-status** failure indicates that the main branch has problems
that should be addressed before anything else is merged in. No matter
whether it's a false positive or a real problem, it is not related with
with your PR. Flutter maintainers are resolving it as soon as possible.

**What to do:** If your PR already meets the [review requirements](../Tree-hygiene.md#getting-a-code-review)
(for example, have enough code reviews and all checks are green except for this one),
you can add the `autosubmit` label, which signals a bot to merge the PR once the tree-status check succeeds.
And until then, sit back and relax.
```

What do you think? Also, does non-hackers have the permission to add labels? I added a bit information and changed it to the style I suggested.

```suggestion
A Google testing failure means that your PR breaks some tests in
Google's internal codebase. It might be a flake ([see below](#flaking))
or a real problem caused by your changes. Only a Google employee
can see the detail of the failure.

**What to do:** Tag a Google employee to look into your issue.
Feel free to [reach out on Discord](../../Chat.md), especially if more than 2
weeks have gone by and nobody's looked into it.

See also:
* [Understanding Google Testing](../../infra/Understanding-Google-Testing.md)
```

Also: I think it might scare contributors to look for random Google employees to investigate this issue. Do you think we can tell them exactly ""just go to Discord and ask for help in this channel""? Or is the recommended way to just wait for issue triage? > I suggest we split every section into two parts. (The PR currently is almost like this, but I suggest we make it clearer.) The first paragraph explains what it is, and the second paragraph explicitly tells the reader what to do.

Sounds fantastic!

<br>

> Also, does non-hackers have the permission to add labels?

Nope—before I had commit access, I'd often awkwardly ask ""hey… could someone add `autosubmit`?""
There isn't much that someone without commit access can do, aside from [posting a meme](https://github.com/flutter/flutter/pull/143675#issuecomment-1964923848) and hoping for the best. Simplified with the style I suggested:

```suggestion
This failure means that [.ci.yaml](../../../.ci.yaml) is out of date with the base branch.
This file defines the checks that are performed on each PR.

**What to do:** You should update your PR with master, preferably **via rebase** ([reasons](../Tree-hygiene.md#using-git)).

![Update with rebase](https://github.com/user-attachments/assets/8bacd87f-410a-4a9c-8ad0-075dd05f3eff)
``` Thank you!

> I think it might scare contributors to look for random Google employees to investigate this issue. Do you think we can tell them exactly ""just go to Discord and ask for help in this channel""?

Personally, I think adding a link to [Chat.md](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) is probably the best way to do it. Ok, in that case we might want to change the 2nd paragraph into:

```
...
	you can ask the reviewers to add the `autosubmit` label, which signals a bot to merge the PR once the tree-status check succeeds.
...
``` Looks good overall! I'm not sure the extent to which the [style guide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple) applies here, but I'll probably change it to something similar without using ""you"" or ""we"". For the remainder of the article, I still think it'd be the best to categorize them by the failure name (because it's really obvious! I like your idea.)

So something like

```
### Other failures
// Move your ""View the test output"" here as what-to-do

#### Linux customer_testing
// As a special case of ""other failures""
``` Yeah I thought about it too. Thanks for linking the style guide. I think the guide definitely applies here as well, since it talks about making docs less intimidating.  (see [below response](https://github.com/flutter/flutter/pull/154629#issuecomment-2387467410)) The style guide recommends using ""consider xxx"" to give advices.

Also, do you think it's better to mention asking for help for the reviewers, since this readers might be first time contributors?

```suggestion
are met and all other checks are passing, consider adding the
[**`autosubmit`**](../../infra/Landing-Changes-With-Autosubmit.md) label
(possibly with the help of the PR reviewers) to signal a bot to merge the PR once the tree-status check succeeds.
``` I suggest rewriting this section into cases that contributors can do, and cases that are unrelated to the contributors.

```
A failed check might indicate real bugs introduced by the PR,
or might be caused by ""flakes"", i.e. false failures. Flakes can be caused
by a variety of reasons, such as
[infra errors](../../infra/Understanding-a-LUCI-build-failure.md#overview-of-an-infra-failure-build),
or bugs in the main branch.

Sometimes a flake will resolve itself once some more changes are pushed to
re-trigger the checks. Consider [performing a rebase](#ciyaml-validation)
to include the latest changes from the main branch, especially when the ""tree status"" check is green.
```

(Also, I removed the word ""simple"", per the style guide.) I suggest the following change, which is in my opinion more direct and simple

```suggestion
## Other failing checks

Other failing checks typically mean the PR broke expected behavior (or could be a [flake](#flaking)).
``` Is the backslash intentional?
```suggestion
along with other tests from open-source Flutter projects.
``` I want to somehow stress that the following two checks are just two special kinds of all other checks. What do you think of this way?
```suggestion
Among all other checks, there are two notable ones:
* If a **customer_testing** check is unsuccessful, ...
``` Yes: this page is primarily directed toward new contributors, whereas only those with commit access can add labels.

<br>

I thought about adding something like

> **What to do:** Once review requirements are met and all other checks are passing, someone with [commit access](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/Contributor-access.md) will add the `autosubmit` label, and then a bot will merge the PR once the tree-status check succeeds.

My only concern is that directing the attention of brand-new contributors toward gaining commit access could increase the amount of spam in the `#server-support` Discord channel. At this point, many people have mistakenly posted there asking for help with app development-related issues, but I only saw [one recent post](https://discord.com/channels/608014603317936148/611619879153565715/1281123233709424683) where someone asked for commit access. I imagine we'd see a lot more of these if we added a link here. Thanks for the advice! I agree that the first paragraph of this section should be direct & simple.

I moved the [setting up the framework dev environment](https://github.com/flutter/flutter/blob/master/docs/contributing/Setting-up-the-Framework-development-environment.md) link to the **Linux Analyze** description; it seems to flow better this way! :) > I want to somehow stress that the following two checks are just two special kinds of all other checks.

Yeah, that makes a lot of sense.
One idea is to sort of ""encapsulate"" these paragraphs by having them bridge the space between a link to the [view the test output](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/testing/Fix-failing-checks.md#view-the-test-output) section and where the section itself begins. Yes, it's intentional!

It's a way to force a line break that's a bit more noticeable than 2 empty spaces at the end of a paragraph. This is something I learned while going through the resources linked in the Dart/Flutter [semantic line breaks](https://github.com/dart-lang/site-shared/blob/main/doc/writing-for-dart-and-flutter-websites.md#semantic-line-breaks) documentation. > removed the word ""simple"", per the style guide

One would think I'd always have this in mind, after how many times I've read through that section… thanks for catching that! 😅

I ended up rewriting most of this section; hopefully it looks better now! Hopefully https://github.com/flutter/flutter/pull/154629/commits/8e131e294dbe26c718bde9430c23147e619ebc2d helps make this easier to navigate! :) Yeah, that's why I'm not directing contributors toward gaining commit access, but directing them to asking for help from someone with commit access. And also I intentionally did not mention asking for help in the Discord channel, since their reviewer must have commit access and should have added the label. (Sometimes we don't add labels because we don't know if the author wants to make more changes, therefore I might wait for the author to ask me to.) My aim was to use your suggestion and tweak it to be entirely geared toward new contributors… what I ended up with had diverged quite a bit from your original suggestion, sorry about that!

I think I'll give it another shot."
157313,2024-10-22T00:55:40Z,2024-11-18T21:29:59Z,nate-thegrate,8,24,6,228,26,4,2,"['a: text input', 'framework', 'a: animation', 'f: material design', 'f: scrolling', 'f: routes', 'autosubmit']",3.0,0,3093142.0,1,0,0,0,2585110.93827,,0,6,0,False,"['auto-submit[bot]', 'justinmc', 'nate-thegrate', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Marking as a draft for now, since this didn't qualify for a test exemption. I imagine the team's overall preference would be to move forward with this PR, but https://github.com/flutter/flutter/pull/157874 is also a fun option! Thanks very much @justinmc! Hope you don't mind if I argue a couple of points :)

<br>

> I'm worried it's risky

If, for some reason, someone has `Navigator.of(context).dispose()` in their codebase, it would still compile & run as before: the only difference is that now it will trigger a linter rule, which I believe is a very good thing.

<br>

> we've been up for making exceptions to the styleguide lately, but doing that all over the framework would be a huge departure from the intent of the styleguide

I don't believe the other PR violates any style guidelines, since ""extension methods"" and ""extension types"" are separate concepts.

- https://dart.dev/language/extension-methods
- https://dart.dev/language/extension-types

But as far as ""the intent of the styleguide"", I can see how just having the public class without the extension type wrapper would be more readable for people debugging their own projects 👍 https://github.com/flutter/flutter/pull/157313/checks?check_run_id=32405077901

> ## Google Testing
> Timed out

will try re-running! Looks like the Google tests are passing which is really encouraging!

I see your point about `extension type` vs. extension methods and it's a lot better than I was thinking. However, I think there is still some level of redirection along the lines of what is called out [in the styleguide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-using-extension) in that users that go looking for NavigatorState's build method might be surprised to find that it's not in NavigatorState.

Maybe we can figure out a path forward for this in the triage meeting next week. I could definitely be convinced either way. And I do think we should fix this problem one way or another.

Also it would be nice if we could update the styleguide to explicitly state what our policy is on `extension type`. auto label is removed for flutter/flutter/157313, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8730902764249792465) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 ```
FAILURE: Build failed with an exception.
* What went wrong:
Execution failed for task ':app:compressDebugAssets'.
> A failure occurred while executing com.android.build.gradle.internal.tasks.CompressAssetsWorkAction
   > Java heap space
```

(assuming this is a flake)lgtm with the caveat that I don't have the domain knowledge to understand the implications of the changes in this PR. I've requested Google tests on this PR. That will be a good indicator on whether or not people are referencing these methods in their apps. It's encouraging that the customer tests are already passing at least.

This all sounds like a good idea to me, but I'm worried it's risky, so ideally we can get some other people to look at this too (maybe @goderbauer when he's back?). I wonder why these methods weren't marked `@protected` in the first place, just an oversight? I see that they are `@protected` in their base class, e.g. [State.initState](https://main-api.flutter.dev/flutter/widgets/State/initState.html) is protected.

Your [design doc](https://docs.google.com/document/d/15Rx894OxW1w2Lcgj-ObDMDyLokDB-zpZluX4yUBqbL8/edit?usp=sharing) and https://github.com/flutter/flutter/pull/157874 make a good case for the extension solution, and we've been up for making exceptions to the styleguide lately, but doing that all over the framework would be a huge departure from the intent of the styleguide. The solution in this PR is probably better.

tl;dr: LGTM but we should get more people to look at this. LGTM :+1: . Thanks for going through all of the back and forth while deciding whether to take this approach or the other one.

I assume your new lint passes on this branch?

I admit I haven't added a custom lint rule before so I'm not super familiar with that code, maybe someone who knows more should take a quick look at that before merging if possible. Just caching a single `DartType` was the right call 👍","lgtm with the caveat that I don't have the domain knowledge to understand the implications of the changes in this PR. I've requested Google tests on this PR. That will be a good indicator on whether or not people are referencing these methods in their apps. It's encouraging that the customer tests are already passing at least.

This all sounds like a good idea to me, but I'm worried it's risky, so ideally we can get some other people to look at this too (maybe @goderbauer when he's back?). I wonder why these methods weren't marked `@protected` in the first place, just an oversight? I see that they are `@protected` in their base class, e.g. [State.initState](https://main-api.flutter.dev/flutter/widgets/State/initState.html) is protected.

Your [design doc](https://docs.google.com/document/d/15Rx894OxW1w2Lcgj-ObDMDyLokDB-zpZluX4yUBqbL8/edit?usp=sharing) and https://github.com/flutter/flutter/pull/157874 make a good case for the extension solution, and we've been up for making exceptions to the styleguide lately, but doing that all over the framework would be a huge departure from the intent of the styleguide. The solution in this PR is probably better.

tl;dr: LGTM but we should get more people to look at this. LGTM :+1: . Thanks for going through all of the back and forth while deciding whether to take this approach or the other one.

I assume your new lint passes on this branch?

I admit I haven't added a custom lint rule before so I'm not super familiar with that code, maybe someone who knows more should take a quick look at that before merging if possible. Just caching a single `DartType` was the right call 👍","I don't want to see these methods in my autofill suggestions.

<br>

![navigator dispose](https://github.com/user-attachments/assets/5d2dc37c-abe9-44f4-ad16-4396a3aeeaf7)
","Nit: I would make the parameter here and in _isState have the same name. Can you not check the type? I'd be worried particularly in a large codebase this would leak memory, in particular `InterfaceElement` and all of its heapspace. Maybe in practice that doesn't matter because it's a one-off process, but I'd want to understand better what the performance implications of _not_ caching this are. +1, for example this would match `WidgetStateFoo`.

If you are worried about performance, I'd be OK with caching the exact `DartType` referring to the `InterfaceType` `State` and referring to it (which is an equality check - still cheap). I'd like to see the caching removed unless there is a very strong justification (that I don't see, we're doing a plain-string comparison?) What does this mean, how is it supposed to be acted upon? I'm guessing this method is operating under the assumption that these are the specific methods that are currently annotated `@protected` and that list will never (or rarely) change (increase or decrease)?

If so, let's document that. Ditto, it's not clear to me this is valuable. I'd like to see a comment in the file defining `State` that changing the class structure or adding/removing methods might impact this lint, with a link to it. There is a good chance folks won't see it - but let's at least try. I would just merge the two, splitting across two functions doesn't appear to have any value to me - just go with `_isState` and don't bother with the public method at all. I'd also rename it `_isSubtypeofState`, since that's what we're asking. Sadly no 😞

This is a ""metadata object"" containing info about the class declaration, I don't believe it ever creates an instance of the class. Good catch, thanks! I'd personally like to see this tested, so that we know it works and know what happens if we break the rule.

I am not sure there are examples of lint tests today (there are in `package:analyzer`), so I'd take a TODO and a github issue if not. ooh, yeah, that's a good idea 👍 > I'd be OK with caching the exact `DartType` referring to the `InterfaceType` `State` and referring to it (which is an equality check - still cheap).

That sounds fantastic. SGTM! It's something that I don't believe would ever happen. I thought about doing `assert(classElement != null)`, but the current structure allows for type promotion.

I should probably just null-assert it, if only for improved code readability. yeah… I can probably just go ahead and null-assert this one. I think the conversation there is pretty interesting:

- https://github.com/dart-lang/sdk/issues/57094 ### 😌 (appended this to the `State` class declaration) https://github.com/flutter/flutter/pull/157313#discussion_r1844738734 resolving per https://github.com/flutter/flutter/pull/157313#discussion_r1844739512"
158019,2024-11-01T19:43:53Z,2024-11-11T01:00:21Z,nate-thegrate,1,6,3,385,3,4,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",15526.0,0,2161444.0,0,0,0,0,2585116.119597,,0,3,0,False,['loic-sharma'],"Code looks good to me! Unfortunately, I've never added a sample to Flutter before so I'm not sure if there's any special considerations here - @Piinks do you know who could review this?LGTM, my comment shouldn't block merge given the original intention is to showcase the ui, not the code itself","LGTM, my comment shouldn't block merge given the original intention is to showcase the ui, not the code itself",Follow-up from #157228,"Was able to reduce [**the original**](https://dartpad.dev/?id=29cb777b13b9656b05c8230fb9a0a421&channel=main) from 355 lines down to 288! What do you think of capitalizing this text?

Also, what do you think of clarifying that these update a `Scaffold`?

Something like:

```suggestion
  appBar('Add Scaffold appBar?'),
  safeArea('Wrap Scaffold body with SafeArea?');
``` The capitalization was a stylistic choice… which means we might as well follow the [style guide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-correct-grammar)!

Part of me feels that it's obvious that these apply to the Scaffold (a Scaffold with an app bar & body is one of the first things a developer sees after running `flutter create`), but there's not much of a downside to including it here 👍 should be a verb `newInsets` => `changeInsets` I would consider simplify this example a bit since people usually looking for a quick demo without complex setup and focus on the SafeArea only after read through the chat history, seems like the main purpose is to showcase the UI instead of the code. then it looks good to me"
159155,2024-11-19T18:50:47Z,2024-11-19T19:40:00Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,606022.0,0,0,0,0,2588525.998623,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/cff1e751f853...d5820a638885

2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 0b74a1bb1b55 to 78ef6b7a574f (6 revisions) (flutter/engine#56707)
2024-11-19 chris@bracken.jp Move renderer config to EmbedderTestContext (flutter/engine#56699)
2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 8a1a84509501 to 0b74a1bb1b55 (1 revision) (flutter/engine#56702)
2024-11-19 skia-flutter-autoroll@skia.org Roll Dart SDK from 05d58364e92f to b01654fa26c7 (1 revision) (flutter/engine#56694)
2024-11-19 chris@bracken.jp EmbedderTest: Eliminate unused include (flutter/engine#56698)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159498,2024-11-26T18:07:21Z,2024-11-26T18:10:17Z,auto-submit[bot],2,0,1,4,2,1,1,['engine'],22.0,1,177.0,0,0,0,0,2592177.190178,,0,1,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/159498, Failed to enqueue flutter/flutter/159498 with HTTP 400: GraphQL mutate failed.",,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#159461
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: yjbanov
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: engine regression https://github.com/flutter/flutter/issues/159497
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: engine-flutter-autoroll
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {fluttergithubbot}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:

https://github.com/flutter/engine/compare/fe45a6608651...fb6439918252

2024-11-26 chris@bracken.jp iOS: Migrate PlatformViewsController to Objective-C (flutter/engine#56790)
2024-11-26 30870216+gaaclarke@users.noreply.github.com Started caching HandleGLES's hash and made them immutable (flutter/engine#56800)
2024-11-26 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[iOS] Full keyboard access scrolling (#56606)"" (flutter/engine#56802)
2024-11-26 skia-flutter-autoroll@skia.org Roll Skia from 12c8bd6ac1d9 to c1c8ff84997c (14 revisions) (flutter/engine#56801)
2024-11-25 jonahwilliams@google.com [Impeller] better handle allocation herustics of Android slide in page transition. (flutter/engine#56762)
2024-11-25 chris@bracken.jp iOS: Eliminate logging of non-zero origin platformviews (flutter/engine#56796)
2024-11-25 30870216+gaaclarke@users.noreply.github.com [impeller] gles: started storing the number of handle deletions to avoid reallocation (flutter/engine#56799)
2024-11-25 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 9o0fWa2xVhmxV6Mtn... to 50xtjbMWWrqay_7m_... (flutter/engine#56795)
2024-11-25 skia-flutter-autoroll@skia.org Roll Dart SDK from df716eaa6ed2 to 4b49546a1dfa (1 revision) (flutter/engine#56793)
2024-11-25 31859944+LongCatIsLooong@users.noreply.github.com [iOS] Full keyboard access scrolling (flutter/engine#56606)
2024-11-25 jonahwilliams@google.com [android] remove fml_check from surface_texture_external_texture (flutter/engine#56760)
2024-11-25 30870216+gaaclarke@users.noreply.github.com removed unused variable for skia initialization (flutter/engine#56791)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 9o0fWa2xVhmx to 50xtjbMWWrqa

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md

<!-- end_revert_body -->
",
156708,2024-10-14T13:11:43Z,2024-11-19T19:12:33Z,Mairramer,10,30,18,77,4,3,3,"['framework', 'f: material design']",476421.0,0,3738968.0,0,0,0,0,2586325.149933,,0,18,0,False,"['stan-at-work', 'Mairramer', 'nate-thegrate', 'justinmc']","Unfortunately, my disliking toward certain aspects of the `Form` API is giving me some ""analysis paralysis"" as I consider how we might proceed with this PR.

@Mairramer thanks again for all the improvements you've made here! I'll probably be ready to re-engage sometime later this week. > Unfortunately, my disliking toward certain aspects of the `Form` API is giving me some ""analysis paralysis"" as I consider how we might proceed with this PR.
> 
> @Mairramer thanks again for all the improvements you've made here! I'll probably be ready to re-engage sometime later this week.

I understand you. Over the weekend I was analyzing several parts of the `Form` code that do not seem to have the quality standard that we expect from Flutter. FYI—per the [Tree hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#using-git) page, one way to fix Google testing could be to update via rebase rather than a merge commit.

![Update with rebase](https://github.com/user-attachments/assets/8bacd87f-410a-4a9c-8ad0-075dd05f3eff) Google tests seem to be failing because there are fields with `AutovalidateMode.always` that are now being displayed as invalid that weren't previously. Maybe these tests were just accidentally taking advantage of this bug and should use `.onuserInteraction` instead? I'll try to test this theory, but if anything else comes to mind let me know. Does this issue, fixes this bug currently present in v3.24.5.

The form for some reason triggers an setState when the underlying widgets are beeing build (for the first time i think).

It happens because the `FormFieldState.didChange` is beeing called from a `TextEditingController.text=` call.
The `TextEditingController.text=` is beeing triggered from the `build()` method of `CoreDropdown<CoreFieldType>`
 but i don't think that's a problem. (calling ctrl.text = in the build method)

---

```text
flutter: ══╡ EXCEPTION CAUGHT BY FOUNDATION LIBRARY ╞════════════════════════════════════════════════════════
flutter: The following assertion was thrown while dispatching notifications for TextEditingController:
flutter: setState() or markNeedsBuild() called during build.
flutter: This Form widget cannot be marked as needing to build because the framework is already in the
flutter: process of building widgets. A widget can be marked as needing to be built during the build phase
flutter: only if one of its ancestors is currently building. This exception is allowed because the framework
flutter: builds parent widgets before children, which means a dirty descendant will always be built.
flutter: Otherwise, the framework might not visit this widget during this build phase.
flutter: The widget on which setState() or markNeedsBuild() was called was:
flutter:   Form-[LabeledGlobalKey<FormState>#9ba50]
flutter: The widget which was currently being built when the offending call was made was:
flutter:   CoreDropdown<CoreFieldType>
flutter:
flutter: When the exception was thrown, this was the stack:
flutter: #0      Element.markNeedsBuild.<anonymous closure>
flutter: #1      Element.markNeedsBuild
flutter: #2      State.setState
flutter: #3      FormState._forceRebuild
flutter: #4      FormState._fieldDidChange
flutter: #5      FormFieldState.didChange
flutter: #6      _TextFormFieldState.didChange
flutter: #7      _TextFormFieldState._handleControllerChanged
flutter: #8      ChangeNotifier.notifyListeners
flutter: #9      ValueNotifier.value=
flutter: #10     TextEditingController.value=
flutter: #11     TextEditingController.text=
flutter: #12     CoreDropdownState.build
flutter: #13     StatefulElement.build
flutter: #14     ComponentElement.performRebuild
flutter: #15     StatefulElement.performRebuild
flutter: #16     Element.rebuild
flutter: #17     StatefulElement.update
flutter: #18     Element.updateChild
flutter: #19     ComponentElement.performRebuild
flutter: #20     Element.rebuild
flutter: #21     ProxyElement.update
flutter: #22     Element.updateChild
flutter: #23     Element.updateChildren
flutter: #24     MultiChildRenderObjectElement.update
flutter: #25     Element.updateChild
flutter: #26     ComponentElement.performRebuild
flutter: #27     Element.rebuild
flutter: #28     StatelessElement.update
flutter: #29     Element.updateChild
flutter: #30     ComponentElement.performRebuild
flutter: #31     StatefulElement.performRebuild
flutter: #32     Element.rebuild
flutter: #33     StatefulElement.update
flutter: #34     Element.updateChild
flutter: #35     ComponentElement.performRebuild
flutter: #36     StatefulElement.performRebuild
flutter: #37     Element.rebuild
flutter: #38     StatefulElement.update
flutter: #39     Element.updateChild
flutter: #40     ComponentElement.performRebuild
flutter: #41     StatefulElement.performRebuild
flutter: #42     Element.rebuild
flutter: #43     StatefulElement.update
flutter: #44     Element.updateChild
flutter: #45     ComponentElement.performRebuild
flutter: #46     StatefulElement.performRebuild
flutter: #47     Element.rebuild
flutter: #48     StatefulElement.update
flutter: #49     Element.updateChild
flutter: #50     ComponentElement.performRebuild
flutter: #51     StatefulElement.performRebuild
flutter: #52     Element.rebuild
flutter: #53     StatefulElement.update
flutter: #54     Element.updateChild
flutter: #55     ComponentElement.performRebuild
flutter: #56     StatefulElement.performRebuild
flutter: #57     Element.rebuild
flutter: #58     BuildScope._tryRebuild
flutter: #59     BuildScope._flushDirtyElements
flutter: #60     BuildOwner.buildScope
flutter: #61     WidgetsBinding.drawFrame
flutter: #62     RendererBinding._handlePersistentFrameCallback
flutter: #63     SchedulerBinding._invokeFrameCallback
flutter: #64     SchedulerBinding.handleDrawFrame
flutter: #65     SchedulerBinding._handleDrawFrame
flutter: #69     _invoke (dart:ui/hooks.dart:314:10)
flutter: #70     PlatformDispatcher._drawFrame (dart:ui/platform_dispatcher.dart:419:5)
flutter: #71     _drawFrame (dart:ui/hooks.dart:283:31)
flutter: (elided 3 frames from dart:async)
flutter:
flutter: The TextEditingController sending notification was:
flutter:   TextEditingController#d8dc9(TextEditingValue(text: ┤Lead├, selection: TextSelection.invalid,
flutter:   composing: TextRange(start: -1, end: -1)))
flutter: ════════════════════════════════════════════════════════════════════════════════════════════════════
flutter: Another exception was thrown: setState() or markNeedsBuild() called during build.
``` @stan-at-work unfortunately I don't think so—this PR did have to deal with the same problem, but it was with regards to initializing the widget, not with `didUpdateWidget` calls. @nate-thegrate @stan-at-work 
Today, I spent some time experimenting with the Form and tried refactoring the code. I explored two approaches: one using `ValueNotifier` with a `Mixin` and another using only a `Mixin`. In both implementations, I managed to perform validation during the first build without relying on `WidgetsBinding.instance.addPostFrameCallback`. It’s still not entirely clear to me, but it seems that the `RestorationMixin` is responsible for many of these issues, since it extends the `State` itself.

@nate-thegrate Do you think this could be related or is it just a coincidence? > @nate-thegrate @stan-at-work 
> 
> Today, I spent some time experimenting with the Form and tried refactoring the code. I explored two approaches: one using `ValueNotifier` with a `Mixin` and another using only a `Mixin`. In both implementations, I managed to perform validation during the first build without relying on `WidgetsBinding.instance.addPostFrameCallback`. It’s still not entirely clear to me, but it seems that the `RestorationMixin` is responsible for many of these issues, since it extends the `State` itself.
> 
> 
> 
> @nate-thegrate Do you think this could be related or is it just a coincidence?

Would you be able to share what you made ? Here are some changes:
https://gist.github.com/Mairramer/0ccf3eb24750c9b1a9802d7efb1134f1
I recovered from vscode history, it may be wrong in some parts.

There's a lot of stuff in there that's just for testing purposes, as I'm trying to find these blind spots that cause errors in other widgets. > Here are some changes: https://gist.github.com/Mairramer/0ccf3eb24750c9b1a9802d7efb1134f1 I recovered from vscode history, it may be wrong in some parts.
> 
> There's a lot of stuff in there that's just for testing purposes, as I'm trying to find these blind spots that cause errors in other widgets.

ThanksThanks for making this fix! I'm a huge fan of this change—I feel that the current fix is an effective solution for #142701 and is probably better than a fix that involves using a post-frame callback.

As far as how to approach a breaking change that gives an overall improvement, there are several different paths we could take, so it'd be good to get another reviewer's input here (which might take up to 2 weeks, so thanks in advance for your patience). Thanks very much for the updates!

In my opinion, this change is worth it regardless of whether it qualifies as ""breaking"", but hopefully we can do it in a non-breaking way :) Thanks for the PR! Still some questions but I think we should definitely fix this bug. Thanks for your patience! I'm looking forward to getting this fix merged.

<br>

> I was analyzing several parts of the `Form` code that do not seem to have the quality standard that we expect from Flutter.

Amen to that. The widget wasn't poorly designed, but this file was created [8 years ago](https://github.com/flutter/flutter/pull/2850), and much has changed since then. LGTM, thanks for the fix! About the Google tests: Setting to .onUserInteraction fixes it. I've added a g3 fix. I want to clarify the process before I mark the Google tests as passing but I'll plan to do that Friday. LGTM :+1: 

Sorry for nitpicking this PR to death over the addPostFrameCallback, I just wanted to make sure there wasn't another option before we committed to that. Thanks for the changes, renewing my LGTM 👍 . The Google failure was one case of the error message not showing when it should have been, so I've approved the golden image change.","Thanks for making this fix! I'm a huge fan of this change—I feel that the current fix is an effective solution for #142701 and is probably better than a fix that involves using a post-frame callback.

As far as how to approach a breaking change that gives an overall improvement, there are several different paths we could take, so it'd be good to get another reviewer's input here (which might take up to 2 weeks, so thanks in advance for your patience). Thanks very much for the updates!

In my opinion, this change is worth it regardless of whether it qualifies as ""breaking"", but hopefully we can do it in a non-breaking way :) Thanks for the PR! Still some questions but I think we should definitely fix this bug. Thanks for your patience! I'm looking forward to getting this fix merged.

<br>

> I was analyzing several parts of the `Form` code that do not seem to have the quality standard that we expect from Flutter.

Amen to that. The widget wasn't poorly designed, but this file was created [8 years ago](https://github.com/flutter/flutter/pull/2850), and much has changed since then. LGTM, thanks for the fix! About the Google tests: Setting to .onUserInteraction fixes it. I've added a g3 fix. I want to clarify the process before I mark the Google tests as passing but I'll plan to do that Friday. LGTM :+1: 

Sorry for nitpicking this PR to death over the addPostFrameCallback, I just wanted to make sure there wasn't another option before we committed to that. Thanks for the changes, renewing my LGTM 👍 . The Google failure was one case of the error message not showing when it should have been, so I've approved the golden image change.","Fixes #142701
This PR fixes an issue where on the first build `AutovalidateMode.always` was not called.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I think the convention is to do relative imports for files within the same directory, and package imports otherwise.

A couple of options:

```dart
// package import
import 'package:flutter/scheduler.dart';


// using WidgetsBinding wouldn't require the scheduler import
WidgetsBinding.instance.addPostFrameCallback(...)
```

 ooh, this looks like it was inspired by `BuildScope`! Looks like a super effective solution, especially after seeing the test you added!

<br>

I noticed that the FormState's `_register()` method currently violates a style guideline:

```dart
  void _register(FormFieldState<dynamic> field) {
    _fields.add(field);
    if (widget.autovalidateMode == AutovalidateMode.onUnfocus) {
      field._focusNode.addListener(() => _updateField(field));
    }
  }
```

I'm wondering… maybe turning this into a switch statement and adding logic for `AutovalidateMode.always` could allow solving this issue without any post-frame callbacks.

Let me know what you think 🙂 This is satisfying, thank you 😌👌 We could probably get rid of the `formKey` here since it's not being used:

```suggestion
``` The switch statement worked beautifully and also made the code cleaner and more straightforward. Which guideline is `_register()` violating, those that were recently added? I'll take the opportunity to apply that improvement as well.
But would a switch really be necessary? Maybe just an if for the field itself.
I'm thinking of something like: 
```
if (widget.autovalidateMode == AutovalidateMode.always && field.widget.enabled) { 
  field.validate();
}
``` There is one issue: the Material 2 time picker is not working as expected. I'm trying to figure out the issue, even with adding WidgetsBinding.instance.addPostFrameCallback(...) it still doesn't work. 😔😔 Dang, unfortunate to hear.

<br>

As far as the style guideline, I was going to link to it but forgot, my bad!

https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-using-if-chains-or--or--with-enum-values

> ### Avoid using `if` chains or `?:` or `==` with enum values
> Use `switch` with no `default` case if you are examining an enum, since the analyzer will warn you if you missed any of the values when you use `switch`. The `default` case should be avoided so that the analyzer will complain if a value is missing. Unused values can be grouped together with a single `break` or `return` as appropriate.

 I found the problem, for example in the tests [time_picker_theme_test](https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/time_picker_theme_test.dart#L862-L896) the `await tester.pumpAndSettle();` causes the problem of multiple builds. If I remove them, it works normally.

My code looks like this:
```
void _register(FormFieldState<dynamic> field) {
    _fields.add(field);
    switch (widget.autovalidateMode) {
      case AutovalidateMode.always:
        if (field.widget.enabled) {
          field.validate();
        }
      case AutovalidateMode.onUnfocus:
        field._focusNode.addListener(() => _updateField(field));
      case AutovalidateMode.onUserInteraction:
      case AutovalidateMode.disabled:
        break;
    }
  }
```
And if I add the code below and don't remove `await tester.pumpAndSettle();`, it causes a memory leak.

```
WidgetsBinding.instance.addPostFrameCallback((_) {
  if (field.widget.enabled) {
    field.validate();
  }
});
```
Because with this new implementation we no longer need `await tester.pumpAndSettle();`, to force the rebuild.

The biggest problem is in [time_picker_test](https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/time_picker_test.dart). Here, I will need to be cautious if I want to implement this new feature. I can confirm that the test passes regardless of whether `tester.pumpAndSettle()` is called, which means this change is simply bringing the test more in line with our [style guide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#avoid-using-pumpandsettle) 👍  This is **_beautiful_**, thank you! This looks like a clear improvement: [`FormState.validate`](https://main-api.flutter.dev/flutter/widgets/FormState/validate.html) guarantees a rebuild, so I don't believe this `setState` is necessary.

<br>

However: I'm a bit worried about the implications here.

There might be a bunch of Flutter projects outside of this codebase that build a `Form` with a similar structure; sadly, migrating the code here isn't going to help them out.

(I personally feel that many different aspects of the `Form` widget could be improved, but they'd require significant time investment and would definitely qualify as ""breaking changes"". I've also found that it's not very hard to just ignore `Form` entirely by using a state management package like provider or riverpod.)

<br>

Assuming we go through with this change: much like how theme data has [`useMaterial3`](https://main-api.flutter.dev/flutter/material/ThemeData/useMaterial3.html), it'd be nice if `Form` had something that allowed for a migration period. I bet we could remove one or more of these widgets from the tree and the test would still run just fine :) Making the return type non-nullable would remove the need for null checks further down!

```suggestion
    String errorText(String? value) => '$value/error';
``` One possible idea… maybe we _could_ do a post-frame callback here. Unlike [the previous fix](https://github.com/flutter/flutter/pull/156708#discussion_r1801554680), this wouldn't need a boolean flag to track the callback's status.

It wouldn't be quite as nice as the current setup, but it also might be less breaking. I think the ideal scenario would be to revert the change here if possible—just to show that fixing this bug doesn't require migrating existing code.

Or if migrating _is_ required, we would need to [handle the breaking change](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes). What's the meaning of ""infinite loop"" here? Is it possible for the same field to be registered multiple times? Looking great!

I noticed a couple of other small things:
- Setting theme data probably isn't necessary here.
- We could probably just call `pumpWidget` here, since this function isn't being referenced in multiple places.

```suggestion
    await tester.pumpWidget(
      MaterialApp(
        home: Center(
```
(ending punctuation would need to be adjusted as well.) I've been eyeing Form for a rewrite for a long time. I wish I could just write a whole new class with a new name, but the name ""Form"" is so good I think we'd have to do something like userMaterial3. +1, the setStates could be removed in a followup PR. I guess this pumpAndSettle is necessary because it takes 2 frames to get the error to show up? If so, I wonder if there's a way to do it in 1 frame. I tried to address the issues, but some tests are still failing. I'm considering reverting to this implementation with `didChangeDependencies` and documenting the technical debt needed to resolve the problems with the` Form`. I will attempt to write documentation or outline the technical debt for this. I resolved the issue by simply moving the logic from inside the `Form` to within the `FormField`. Since the `build` method is always triggered when interacting with a field, or in this case, on the first build, it was causing recursive calls, leading to a memory overflow. Yes, now we can do it in 1 frame. I believe having this logic inside `didChangeDependencies()` could create situations where duplicate listeners are added to the focus node.

It might make the most sense to move the focus logic back into the `_register()` / `_unregister()` methods, while keeping the post-frame callback here. Splitting it up this way won't be great for readability, but IMO it's probably the best move here.

Either an if-statement or a `switch` with a bunch of empty cases would probably be fine. It looks like this still takes 2 frames due to the addPostFrameCallback above? Ideally we wouldn't even need this pump here, only pumpWidget. I believe it used to work, but since I moved the business logic from the `Form` to the `FormField`, it no longer occurs. Thanks; this method looks to be in a good spot 👍 Since the `AutovalidateMode.onUnfocus` logic was removed below, would you be able to revert this section to its original state?"
159143,2024-11-19T15:02:02Z,2024-11-19T15:46:21Z,engine-flutter-autoroll,0,0,10,2,1,1,1,[],,0,605370.0,0,0,0,0,2602905.164173,,0,10,0,False,[],,,"
https://github.com/flutter/packages/compare/c1eabf5e32cc...fc4adc78aa24

2024-11-18 magder@google.com [ci] Take screenshot when native drive test is taking longer than 10 minutes (flutter/packages#8050)
2024-11-18 jessiewong401@gmail.com Applied Gradle Plugins Declaratively for Most Remaining Plugin Example Apps (Part 3) (flutter/packages#8037)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [pigeon]: Bump org.jetbrains.kotlin:kotlin-bom from 1.8.10 to 2.0.21 in /packages/pigeon/platform_tests/test_plugin/android (flutter/packages#7867)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [gradle]: Bump androidx.test.ext:junit-ktx from 1.1.5 to 1.2.1 in /packages/shared_preferences/shared_preferences_android/android (flutter/packages#8097)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [pigeon]: Bump org.jetbrains.kotlin:kotlin-gradle-plugin from 2.0.20 to 2.0.21 in /packages/pigeon/platform_tests/test_plugin/android (flutter/packages#7869)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [gradle]: Bump org.hamcrest:hamcrest from 2.2 to 3.0 in /packages/espresso/android (flutter/packages#8092)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [pigeon]: Bump io.mockk:mockk from 1.13.12 to 1.13.13 in /packages/pigeon/platform_tests/test_plugin/android (flutter/packages#7868)
2024-11-18 49699333+dependabot[bot]@users.noreply.github.com [shared_pref]: Bump io.mockk:mockk from 1.13.12 to 1.13.13 in /packages/shared_preferences/shared_preferences_android/android (flutter/packages#7866)
2024-11-18 magder@google.com Add autosubmit label to dependabot PRs (flutter/packages#8101)
2024-11-18 engine-flutter-autoroll@skia.org Roll Flutter from 0e2d55e0e7b2 to b3818f6b5979 (23 revisions) (flutter/packages#8118)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159228,2024-11-20T22:26:04Z,2024-11-21T01:38:45Z,jonahwilliams,9,9,8,219,37,2,1,"['platform-ios', 'tool', 'd: examples', 'a: desktop']",2712.0,0,498148.0,0,0,0,0,2597085.633155,,1,8,0,False,"['auto-submit[bot]', 'jmagman', 'jonahwilliams', 'gaaclarke']","As a follow up, I need to opt all of our benchmarks out of this setting... Yeah I can migrate in this PR, wasn't sure if it was common to do it separately or not. is there a way to trigger the migrators that skips building? oh, maybe --config-only > is there a way to trigger the migrators that skips building?

Not a nice way, though we should.  You can get a lot of it by commenting out the Android part of test.dart:
https://github.com/flutter/flutter/blob/17e38a4b78a67d1c2f30c786fa69b22536444d5f/dev/bots/test.dart#L383-L393

add '--config-only' here
https://github.com/flutter/flutter/blob/17e38a4b78a67d1c2f30c786fa69b22536444d5f/dev/bots/test.dart#L451
and here
https://github.com/flutter/flutter/blob/17e38a4b78a67d1c2f30c786fa69b22536444d5f/dev/bots/test.dart#L481

then 
```
$ cd dev/bots
$ flutter pub get
$ SHARD=build_tests dart test.dart
```

Then I grep to see if there's anything unmigrated left and run `build --config-only` manually in those directories.   auto label is removed for flutter/flutter/159228, Failed to enqueue flutter/flutter/159228 with HTTP 400: GraphQL mutate failed. This did cause an increase in cpu usage for some benchmarks: https://flutter-flutter-perf.skia.org/e/?begin=1732136514&end=1732211697&keys=X689df53096362e272afcf2aaadfdb3ab&selected=commit%3D43461%26name%3D%252Carch%253Dintel%252Cbranch%253Dmaster%252Cconfig%253Ddefault%252Cdevice_type%253DiPhone_11%252Cdevice_version%253Dnone%252Chost_type%253Dmac%252Csub_result%253Daverage_cpu_usage%252Ctest%253Dbackdrop_filter_perf_ios__timeline_summary%252C&xbaroffset=43461

I'm guessing the cpu can just run hotter since it isn't waiting on some sort of gpu synchronization for the validator? https://flutter-flutter-perf.skia.org/e/?queries=sub_result%3D90th_percentile_frame_rasterizer_time_millis%26sub_result%3Daverage_frame_rasterizer_time_millis%26test%3Dbackdrop_filter_perf_ios__timeline_summary&selected=commit%3D43461%26name%3D%252Carch%253Dintel%252Cbranch%253Dmaster%252Cconfig%253Ddefault%252Cdevice_type%253DiPhone_11%252Cdevice_version%253Dnone%252Chost_type%253Dmac%252Csub_result%253Daverage_frame_rasterizer_time_millis%252Ctest%253Dbackdrop_filter_perf_ios__timeline_summary%252C&xbaroffset=43461

The raster thread is going so much faster we're probably pushing ~50% to ~30% more frames Here's another regression with garbage collection time, also almost surely related to running more frames, but noting it here

https://flutter-flutter-perf.skia.org/e/?begin=1732048325&end=1732302020&keys=Xb641568324e71c153cd5b5197c7aa8d0&selected=commit%3D43461%26name%3D%252Carch%253Dintel%252Cbranch%253Dmaster%252Cconfig%253Ddefault%252Cdevice_type%253DiPhone_11%252Cdevice_version%253Dnone%252Chost_type%253Dmac%252Csub_result%253Dtotal_ui_gc_time%252Ctest%253Ddynamic_path_tessellation_perf_ios__timeline_summary%252C&xbaroffset=43459Usually when we do a migration we also build (and therefore automigrate) all the example and integration test projects to prove out that it's working.

Example: https://github.com/flutter/flutter/pull/140256 LGTM ","Usually when we do a migration we also build (and therefore automigrate) all the example and integration test projects to prove out that it's working.

Example: https://github.com/flutter/flutter/pull/140256 LGTM ","Setting ""enableGPUValidationMode = ""1"""" disables Metal API validation. I know, I know.

Fixes https://github.com/flutter/flutter/issues/159227
","```suggestion
``` ```suggestion
``` Can you check the entire XML file to make sure other whitespace doesn't get messed up.
```
'''
<?xml version=""1.0"" encoding=""UTF-8""?>
  <LaunchAction
    buildConfiguration = ""Debug""
    selectedDebuggerIdentifier = ""Xcode.DebuggerFoundation.Debugger.LLDB""
    selectedLauncherIdentifier = ""Xcode.DebuggerFoundation.Launcher.LLDB""
    launchStyle = ""0""
    useCustomWorkingDirectory = ""NO""
    ignoresPersistentStateOnLaunch = ""NO""
    debugDocumentVersioning = ""YES""
    debugServiceExtension = ""internal""
    enableGPUValidationMode = ""1""
    allowLocationSimulation = ""YES"">
'''
``` oh the white space is definitely messed up, since the indentation varies. I'm wagering that most folks never actually open this file... This only migrates iOS, you'll also want to add it here for macOS:
https://github.com/flutter/flutter/blob/364e4be81638a3f109820135c32ffdd9d8ff87c9/packages/flutter_tools/lib/src/macos/build_macos.dart#L105 Ideally given the normal generated template scheme that's never otherwise been updated, the migration adds the right whitespace.  Otherwise Xcode will try to format it if the whitespace is off the first time it opens, which will dirty the working copy again. Done I'm a real programmer and regex'd my way to a solution. You shouldn't need to override this.
```suggestion
```"
159141,2024-11-19T14:17:08Z,2024-11-19T14:59:18Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,608041.0,0,0,0,0,2602929.270239,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b6723e33b858...cff1e751f853

2024-11-19 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from io00npG_eDCYC7bac... to dJ0gh-z1KVnSzvfjW... (flutter/engine#56701)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from io00npG_eDCY to dJ0gh-z1KVnS

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159134,2024-11-19T08:27:24Z,2024-11-19T09:19:16Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,607425.0,0,0,0,0,2624530.37341,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/983b7b85d122...b6723e33b858

2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 17601e471acf to 8a1a84509501 (4 revisions) (flutter/engine#56700)
2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 8d652f142911 to 17601e471acf (1 revision) (flutter/engine#56696)
2024-11-19 robert.ancell@canonical.com Add missing cancellable to text input handler (flutter/engine#56666)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158930,2024-11-14T15:30:40Z,2024-11-23T11:45:10Z,bleroux,4,0,1,42,2,2,2,"['framework', 'f: material design', 'cp: beta']",6865.0,0,1007041.0,0,0,0,0,2631518.901533,,0,1,0,False,"['gspencergoog', 'bleroux', 'justinmc']","Seems like there is a tradeoff here, and we need to decide which set of bugs is more detrimental to the user.

The regressions look like they are annoying, but the issues that this reopens are also pretty bad: they hide the dropdown on a mobile device because the keyboard covers up the menu, and the menu gets disconnected from the anchor when scrolling.

Are you expecting that the two other PRs referenced will fix the reopened issues, or are they just related?

Also, the ""Fixes"" section in this PR description seem to refer to the PRs, not the bugs, so you might want to update the numbers there. Thanks for the feedback :pray: 

(I have edited the description to fix the two links in the ""fixes"" section, thank for noticing this).

> Seems like there is a tradeoff here, and we need to decide which set of bugs is more detrimental to the user.

Yes, there is a tradeoff. The main reason I filed this PR is that we are probably close to a stable release and I think this has an impact on the decision.

> Are you expecting that the two other PRs referenced will fix the reopened issues, or are they just related?

[One of the PR,](https://github.com/flutter/flutter/pull/157921), is a direct attempt to fix [the first regression](https://github.com/flutter/flutter/issues/157916). But it is still a draft and It might take time to discuss and review this solution and it probably needs more work because being able to move the menu above the field is a good first step but not as smart as the current positioning logic that MenuAnchor offers when not using Leader/Follower.

The second PR introduces RawMenuAnchor in the widget library, I don't think it will fix the reopened issues. But it might help. It is a promising and huge PR so it might takes time to review it.

In summary, there are pending work that will help to fix the referenced regressions, but the corresponding PRs might not be ready for the next stable release.

 ### Option 1: Close this PR

Downside: We'll be stuck with the following two issues. What would be the long term plan for addressing these if we go with this option?

https://github.com/flutter/flutter/issues/157916: DropdownMenu menu always appears below the TextField
A bad one because Dropdowns at or near the bottom of the screen are unusable on all platforms. The workaround would be to move the Dropdown.

https://github.com/flutter/flutter/issues/158924: Cannot scroll to the bottom of DropdownMenu
Also a bad one because latter menu items are not clickable. It seems to affect all platforms. Affects only longer lists,  but that's probably common (in the issue, a Dropdown in the center of the screen with 8 items repros the bug). Workaround would just be to keep the list shorter.

### Option 2: Merge this PR

The above two issues will be fixed, but the following ones will be reopened. They might be fixed with work in progress in https://github.com/flutter/flutter/pull/157921 and https://github.com/flutter/flutter/issues/158924, but those probably won't be done by the next release.

https://github.com/flutter/flutter/issues/123395: Menu appears behind the keyboard
Android only, doesn't happen all the time. The user can work around the problem by closing the keyboard. Admittedly though, it looks very bad.

https://github.com/flutter/flutter/issues/149037: DropdownMenu Entries Not Positioned Correctly on Keyboard Appearance
Looks to me like a duplicate of the previous issue.

https://github.com/flutter/flutter/issues/151856: DropdownMenu doesn't follow in scrollable
All platforms. Affects any Dropdown in a Scrollable, which is probably a good amount. The user can work around the problem by closing and reopening the menu and not scrolling. Looks bad.

## So what should we do?

It looks to me like option 2 gets us in a better state. The issues we'd have are ugly but not app-breaking. Also, we seem to have a potential path forward to fixing them with https://github.com/flutter/flutter/pull/157921 and https://github.com/flutter/flutter/issues/158924. I say we merge this PR and then follow up on making sure those issues get fixed. @itsjustkevin The two PRs that this reverts (https://github.com/flutter/flutter/issues/157916 and https://github.com/flutter/flutter/issues/158924) have already rolled into beta, so this PR should be cherry picked into beta if possible.LGTM 👍 

See my thoughts in the previous comment. I'm definitely open to being corrected but I think merging this is the best of two imperfect options. ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Works for me.  I just wanted it to be a reasoned choice.","LGTM 👍 

See my thoughts in the previous comment. I'm definitely open to being corrected but I think merging this is the best of two imperfect options. ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Works for me.  I just wanted it to be a reasoned choice.","## Description

This PR removes `DropdownMenu` usage of Leader/Follower.

Leader/Follower positioning was introduced in https://github.com/flutter/flutter/pull/154667 which uses Leader/Follower approach to fix some weird positioning issues (such as https://github.com/flutter/flutter/issues/149037).

Unfortunately, it also introduces some regressions, see:
- https://github.com/flutter/flutter/issues/157916
- https://github.com/flutter/flutter/issues/158924

Because https://github.com/flutter/flutter/pull/154667 is already included in the beta channel, cherry-picking this PR should be considered.

## Context

This PR is not a full revert and keeps Leader/Follower usage in `MenuAnchor` because this usage is optional and doesn't cause any regression.
There are some ongoing work which might fix or mitigate this problem:
- https://github.com/flutter/flutter/pull/157921
- https://github.com/flutter/flutter/pull/158255

## Related Issue

Fixes https://github.com/flutter/flutter/issues/157916
Fixes https://github.com/flutter/flutter/issues/158924

Reopens https://github.com/flutter/flutter/issues/123395
Reopens https://github.com/flutter/flutter/issues/149037
Reopens https://github.com/flutter/flutter/issues/151856 
",
159124,2024-11-19T03:19:58Z,2024-11-19T04:23:54Z,engine-flutter-autoroll,1,0,2,2,1,1,1,['engine'],19.0,0,606939.0,0,0,0,0,2643463.495218,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159124, Failed to enqueue flutter/flutter/159124 with HTTP 400: GraphQL mutate failed.",,"
https://github.com/flutter/engine/compare/c1b0e18a70b3...983b7b85d122

2024-11-19 lhkbob@gmail.com Remove SK_USE_LEGACY_BLUR_RASTER staging flag (flutter/engine#56618)
2024-11-19 skia-flutter-autoroll@skia.org Roll Skia from 492e8347d7a4 to 8d652f142911 (1 revision) (flutter/engine#56693)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159118,2024-11-19T01:32:59Z,2024-11-19T02:10:10Z,engine-flutter-autoroll,0,0,13,2,1,1,1,['engine'],,0,606158.0,0,0,0,0,2650664.751897,,0,13,0,False,[],,,"
https://github.com/flutter/engine/compare/878f593802e1...c1b0e18a70b3

2024-11-19 jonahwilliams@google.com [Impeller] use sync fence for image uploads. (flutter/engine#56609)
2024-11-18 reidbaker@google.com Update emulator definitions version to latest available from chrome infra (flutter/engine#56313)
2024-11-18 skia-flutter-autoroll@skia.org Roll Dart SDK from 625e0a9cb67a to 05d58364e92f (1 revision) (flutter/engine#56688)
2024-11-18 chris@bracken.jp iOS: Eliminate unguarded-availability opt-out (flutter/engine#56689)
2024-11-18 jacksongardner@google.com [skwasm] Use `displayWidth`/`displayHeight` instead of `codedWidth`/`codedHeight` (flutter/engine#56686)
2024-11-18 chris@bracken.jp Extract TestGLContext to separate translation unit (flutter/engine#56647)
2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from b79e71223284 to 492e8347d7a4 (2 revisions) (flutter/engine#56687)
2024-11-18 jason-simmons@users.noreply.github.com Update the Skia build scripts for a refactoring of the Fontconfig font manager (flutter/engine#56684)
2024-11-18 chris@bracken.jp iOS,macOS: Enable ARC in flutter_cflags_objc[c] (flutter/engine#56685)
2024-11-18 matanlurey@users.noreply.github.com Re-land ""Remove `android_jit_release_x86`."" (flutter/engine#56681)
2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 0d24bd3268ef to b79e71223284 (1 revision) (flutter/engine#56683)
2024-11-18 tugorez@users.noreply.github.com Flutter views can gain focus (flutter/engine#54985)
2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 0b74d5c3eb4f to 0d24bd3268ef (1 revision) (flutter/engine#56680)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159352,2024-11-22T21:48:26Z,2024-11-25T23:50:08Z,elliette,0,0,3,58,2,1,1,['framework'],,0,266503.0,0,0,0,0,2658193.577095,,0,3,0,False,[],,,"Fixes https://github.com/flutter/devtools/issues/8539
",
154202,2024-08-27T20:14:40Z,2024-11-26T00:16:19Z,Renzo-Olivares,4,30,91,1698,14,4,0,"['a: text input', 'framework', 'f: material design', 'd: api docs', 'd: examples']",1113464.0,0,7790502.0,0,0,0,0,2656621.285215,,1,91,0,False,"['chunhtai', 'vergaraSC', 'Renzo-Olivares']","This is ready for another review, the main change is that a `Selectable`/`SelectionHandler` now only return a single `SelectedContentRange` instead of a list of ranges and other comments have been addressed. Talked to @Renzo-Olivares offline, the current idea is to use a listen/notify API something like TextEditingController to listen to selection changes, Ideally this can also get rid of the SelectionFinalizedEvent if the controller can listen to the SelectableRegion's state changes above the current widget, and it sounds good to me. Since I will be out for another 2 weeks, this PR will LGTM if it can be implemented without SelectionfinalizedEvent and also LGT @justinmc and @LongCatIsLooong . @Renzo-Olivares This will go into production (we have an estimated date)?, it is a very good feature. Friendly bump for review.Overall I like this approach a lot. My comments are all small stuff.

If I can give one general thought it's that the relationship between SelectionContentRange, SelectionDetails, SelectedContent etc. took me awhile to understand. They all seem like they cover pretty similar but not-quite-the-same kind of stuff, and there is no clear relationship between them all. But I don't have any better ideas there, and I don't think that's a blocker at all. Just writing down some thoughts as I read through this.

I think I'd be happy to approve this if the small comments I left are fixed.","Overall I like this approach a lot. My comments are all small stuff.

If I can give one general thought it's that the relationship between SelectionContentRange, SelectionDetails, SelectedContent etc. took me awhile to understand. They all seem like they cover pretty similar but not-quite-the-same kind of stuff, and there is no clear relationship between them all. But I don't have any better ideas there, and I don't think that's a blocker at all. Just writing down some thoughts as I read through this.

I think I'd be happy to approve this if the small comments I left are fixed.","https://github.com/user-attachments/assets/59225cf7-5506-414e-87da-aa4d3227e7f6

Adds:
* `SelectionListener`, allows a user to listen to selection changes under the subtree it wraps given their is an ancestor `SelectionArea` or `SelectableRegion`. These selection changes can be listened to through the `SelectionListenerNotifier` that is provided to a `SelectionListener`.
* `SelectionListenerNotifier`, used with `SelectionListener`, allows a user listen to selection changes for the subtree of the `SelectionListener` it was provided to. Provides access to individual selection values through the `SelectionDetails` object `selection`.
* `SelectableRegionSelectionStatusScope`, allows the user to listen to when a parent `SelectableRegion` is changing or finalizing the selection.
* `SelectedContentRange`, provides information about the selection range under a `SelectionHandler` or `Selectable` through the `getSelection()` method. This includes a start and end offset relative to the `Selectable`s content.
* `SelectionHandler.contentLength`, to describe the length of the content contained by a selectable.

Original PR & Discussion: https://github.com/flutter/flutter/pull/148998

Fixes: #110594

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Consider documenting the defaults and why -1. What's the difference between -1 and null? This can be another constructor right? nit: maybe use TextRange so you don't have to document what `-1` means for this field. The range is relative content start, this will probably be easier to understand if the example also shows how `contentStart` fits in. Should the class be final? That way you don't have to check the runtime type. Document: what does it mean for a selection to be considered finalized indentation By user do you mean the caller of the callback or creator of the callback? I don't think this is ""global"" within the app right? This should probably use a more accurate term if that's the case. nit: Returns Also: why doesn't it return an empty list? You don't really need the fullText? nit: consider using the list spread opreator `...`? Why constructing a new empty list? Also consider using existing classes `TextRange`. We need to be able to add up the `contentLength`s of `Selectable`s even if they are not currently selected. For example if we have `[A,B,C,D]`, and only `[B,C,D]` are selected, I still need the length of `A` to calculate the offsets. I didn't use `TextRange` because I think it implies this would only cover and apply to text, when a `Selectable` can be anything and not just text. Good point, I meant the caller of the callback here. Do you mean I don't need the `fullText` to calculate this? I think I can also do `range.end - range.start`. I think it would be really valuable to add some tests here and for `2_test.dart` that make some selections, change them red, and then expect that the text is red. Maybe mention that the order is based on the `startOffset` (assuming that's true). Nit: I feel like the line lengths on your comments are well under 80 characters, but maybe I'm off... Did you consider using a TextRange for this?

*Edit*: This is discussed in another comment further down. ""start offset"" => ""[startOffset]"" and same for end. Also, maybe its better to say ""startIndex"" etc. instead of ""startOffset"" to avoid confusion with [Offset](https://main-api.flutter.dev/flutter/dart-ui/Offset-class.html). +1 about documenting the -1s since that has tripped us up so much elsewhere. Maybe: ""The length of the content whose selection is managed by a [Selectable] or [SelectionHandler].""

Reading the docs of this class I'm wondering exactly how contentLength and contentStart map onto a widget tree, so being more explicit like this should hopefully help. Similarly to my comment above, it might help to explain where this start comes from in relation to a Selectable or SelectionHandler. +1. I'm really glad you have this example though, it makes understanding this a lot easier. Maybe consider pointing to [startOffset] in a ""See also"" elsewhere in these docs so more people who are trying to understand this class see it? Why not just one SelectedContentRange?

Also, what would happen if there were multiple WidgetSpans in the TextSpan.children that were covered by selection? Or what would happen if the WidgetSpan was just another TextSpan?"
159448,2024-11-25T22:27:20Z,2024-11-25T23:18:21Z,goderbauer,1,0,1,2,1,1,1,[],8.0,0,3063.0,0,0,0,0,2660100.835485,,0,1,0,False,['goderbauer'],cc @srawlins ,,,
159449,2024-11-25T22:32:17Z,2024-11-25T23:01:52Z,goderbauer,0,0,1,2,1,1,1,[],,0,1778.0,0,0,0,0,2661089.67802,,0,1,0,False,[],"![return of the king](https://github.com/user-attachments/assets/c6c3cd66-ad80-4306-bae1-da87c65d0aca)
","![return of the king](https://github.com/user-attachments/assets/c6c3cd66-ad80-4306-bae1-da87c65d0aca)
",,
159257,2024-11-21T10:09:41Z,2024-11-25T22:56:44Z,Pante,3,8,4,91,1,3,2,"['framework', 'f: material design', 'refactor']",21.0,0,391626.0,0,0,0,0,2661398.734825,,0,4,0,False,"['nate-thegrate', 'flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: code refactor with no semantic change @victorsanni yeah that's fair.

The original logic was implemented in https://github.com/flutter/flutter/pull/116743; it was a pretty large PR with a focus on improving accessibility.
My guess is that they copy-pasted existing `RenderBox` logic and tweaked it so the box expands to fill the constraints, not realizing that much of the logic relating to intrinsics is unnecessary when [**sizedByParent**](https://main-api.flutter.dev/flutter/rendering/RenderObject/sizedByParent.html) is true.

That PR also added
```dart
typedef _SizeChangeCallback<Size> = void Function(Size);
```
It works exactly like `ValueChanged<T>` but uses `Size` as the type argument, which might be a cause for confusion, given the name overlap with the [**Size**](https://main-api.flutter.dev/flutter/dart-ui/Size-class.html) class.

Overall, I'm super pleased with @Pante's contribution and would happily follow up if anything goes wrong with the merge 👍Thanks very much for the cleanup! LGTM, with 1 suggestion :)

Thanks again for the improvement here! LGTM but I don't entirely understand the previous logic in the compute intrinsic height methods.","Thanks very much for the cleanup! LGTM, with 1 suggestion :)

Thanks again for the improvement here! LGTM but I don't entirely understand the previous logic in the compute intrinsic height methods.","<!--
Thanks for filing a pull request!
Reviewers are typically assigned within a week of filing a request.
To learn more about code review, see our documentation on Tree Hygiene: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
-->

This PR refactors Material's bottom sheet & related widgets. It also replaces internal usage of deprecated types such as `MaterialState` with `WidgetState`.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","The original typedef was quite interesting! 😅

I'm wondering… could we just remove this and use `ValueChanged<Size>`? optional nit: Maybe the variable name could reflect how it's a set of WidgetStates.
```suggestion
  Set<WidgetState> dragHandleStates = <WidgetState>{};
``` same nit here:
```suggestion
  final Set<WidgetState> states;
``` These methods are looking _much_ better now, thanks!

Now that it's been cleaned up a bit, I'm wondering: is it at all possible for this to return anything other than zero? (It seems like `width` will always be set to `double.infinity`, thus `0.0` is always returned.) Ooh, good catch here! Thanks! Oh that's a good catch! It does seem like most of the compute intrinsic methods would always return 0 regardless.  tiny nit (here & below):

```suggestion
  double computeMinIntrinsicWidth(double height) => 0.0;
```

([relevant style guideline](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-double-literals-for-double-constants))"
159355,2024-11-22T23:28:07Z,2024-11-25T21:39:00Z,chunhtai,0,0,1,49,3,1,1,"['framework', 'a: accessibility']",,0,252655.0,0,0,0,0,2666063.892845,,0,1,0,False,[],,,"This reverts commit 07690a69b0067f8a8471470f7314a3294591033d.

previous pr was merged when tree is close by mistake, and was revert out of precaution. There is no change in this reland.


## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159097,2024-11-18T20:08:34Z,2024-11-18T21:20:56Z,engine-flutter-autoroll,1,0,5,2,1,1,1,['engine'],2209.0,0,609772.0,0,0,0,0,2666520.757967,,0,5,0,False,['engine-flutter-autoroll'],Commit queue failed; closing this roll.,,"
https://github.com/flutter/engine/compare/9686de154114...878f593802e1

2024-11-18 chris@bracken.jp EmbedderTest: Extract backend-specific user_data (flutter/engine#56642)
2024-11-18 skia-flutter-autoroll@skia.org Roll Dart SDK from ae5111067032 to 625e0a9cb67a (1 revision) (flutter/engine#56679)
2024-11-18 30870216+gaaclarke@users.noreply.github.com Started only loading gles3 functions if we have a gles3 context (flutter/engine#56636)
2024-11-18 30870216+gaaclarke@users.noreply.github.com [impeller] enable framebuffer blit when available (flutter/engine#56596)
2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 7594233ff914 to 0b74d5c3eb4f (4 revisions) (flutter/engine#56678)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159437,2024-11-25T20:41:29Z,2024-11-25T20:49:04Z,auto-submit[bot],0,0,1,136,2,1,1,['framework'],,1,456.0,0,0,0,0,2669062.959117,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#158985
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: QuncCccccc
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: to unblock tree
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: TahaTesser
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {QuncCccccc}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
Updated unit tests for `ColorFiltered` and `ImageFiltered` to have M2 and M3 versions.

More info in #139076

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes

<!-- end_revert_body -->
",
158839,2024-11-13T18:44:41Z,2024-11-25T21:15:01Z,gmackall,3,0,2,12,2,1,1,['tool'],700831.0,0,1045822.0,0,0,0,0,2667504.990878,,0,2,0,False,"['gmackall', 'bkonyi']","@gmackall do you want a review on this? :) > @gmackall do you want a review on this? :)

Sure, thanks for reminding me! I wanted to let the tests finish running before requesting, but I must have closed the tab > This LGTM but I do want to ask if there's a reason behind these specific versions at this time, e.g. we are trying to get to particular versions by X time?

No specific driving reason this time, just to keep our window from growing too large (versions are getting released faster than we drop support) and keep users up to dateThis LGTM but I do want to ask if there's a reason behind these specific versions at this time, e.g. we are trying to get to particular versions by X time?","This LGTM but I do want to ask if there's a reason behind these specific versions at this time, e.g. we are trying to get to particular versions by X time?","Bumps the versions up a bit, so we can keep people moving forward.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158985,2024-11-15T14:06:50Z,2024-11-25T15:02:54Z,TahaTesser,9,1,2,136,2,1,1,"['framework', 'will affect goldens']",1942.0,0,887681.0,0,0,0,0,2669518.239031,,0,2,0,False,"['auto-submit[bot]', 'TahaTesser', 'QuncCccccc', 'jonahwilliams', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/158985) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158985 at sha 272217e8b88e48536f698e0a8de7758ca392b818_

 When this landed it caused skia gold to begin reporting untriaged goldens. I went ahead and accepted them, so things should green up.

The problem I believe was the force push will cause the skia gold check to not fire correctly. Just an FYI to try avoid force pushes if you're updating goldens. @jonahwilliams 
Thanks for the update! I usually push empty commit when this happens and golden testing fails. I'll remember to avoid force push when updating Goldens.  Looks like there are more web changes. I'm unsure if these are expected: https://flutter-gold.skia.org/detail?grouping=name%3Dwidgets.image_filter_matrix_offset_m3%26source_type%3Dflutter&digest=725f13536274b8ee715e64df3f2d6ddc > Looks like there are more web changes. I'm unsure if these are expected: https://flutter-gold.skia.org/detail?grouping=name%3Dwidgets.image_filter_matrix_offset_m3%26source_type%3Dflutter&digest=725f13536274b8ee715e64df3f2d6ddc

Could it be due to different web renderer? 
<img width=""800"" alt=""Screenshot 2024-11-25 at 21 12 43"" src=""https://github.com/user-attachments/assets/f618bd72-9674-4034-8535-ebdb7d455d90"">
 Should we revert this for now to unblock the tree? Revert reason: to unblock tree A reason for requesting a revert of flutter/flutter/158985 could
      not be found or the reason was not properly formatted. Begin a comment with **'Reason for revert:'** to tell the bot why
      this issue is being reverted. Reason for revert: to unblock treeLGTM:) Thanks for continuing to add more tests!!",LGTM:) Thanks for continuing to add more tests!!,"Updated unit tests for `ColorFiltered` and `ImageFiltered` to have M2 and M3 versions.

More info in #139076

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","I'm actually not very familiar with ColorFilter and ImageFiler, why do we end each line with a ""//""?"
159407,2024-11-25T07:41:52Z,2024-11-25T19:22:22Z,LongCatIsLooong,0,0,1,3,1,1,1,['framework'],,0,42031.0,0,0,0,0,2674267.122497,,0,1,0,False,[],LGTM,LGTM,"Missed this test in https://github.com/flutter/flutter/pull/159108

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157855,2024-10-30T10:20:19Z,2024-11-22T19:09:11Z,kszczek,4,8,1,98,2,3,2,"['framework', 'f: scrolling']",4.0,0,2281211.0,0,0,0,0,2671980.465447,,0,1,0,False,"['kszczek', 'nate-thegrate', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Thanks for the review, I've addressed the code style issue and added the aforementioned test.

I've had to mock the `Scrollable.notificationContext` property though, because I couldn't find a way to make it null when the action is invoked. I don't think that's practically possible, as warranted by the fact that no user reported this issue. All done! Awesome, thanks @kszczek! We'll be able to merge once the PR has 2 approvals.Looks great!

Just 1 thing left: go to [scrollable_helpers_test.dart](https://github.com/kszczek/flutter/blob/fix-scroll-action-condition/packages/flutter/test/widgets/scrollable_helpers_test.dart) and add a test with something like
```dart
somethingThatShouldWork();
expect(tester.takeException(), isNull);
``` LGTM, thanks for the well-structured test!

Perhaps if it's impossible for the `notificationContext` to be null, the getter should be updated to be non-nullable, but that's outside the scope of this PR.

<br>

I have a few tiny suggestions for the test comments (for brevity and to follow [style guidelines](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple)), so take a look when you get a chance :) This LGTM. I was a little wary that we did not have an issue demonstrating this causing a problem, but it looks like a nice clean up.

From an offline chat with @nate-thegrate, the notification context can be null, it comes from the key for the gesture detector in ScrollableState: 
https://github.com/flutter/flutter/blob/793569f621f79119dd7cb2c82c403b5d52271946/packages/flutter/lib/src/widgets/scrollable.dart#L598","Looks great!

Just 1 thing left: go to [scrollable_helpers_test.dart](https://github.com/kszczek/flutter/blob/fix-scroll-action-condition/packages/flutter/test/widgets/scrollable_helpers_test.dart) and add a test with something like
```dart
somethingThatShouldWork();
expect(tester.takeException(), isNull);
``` LGTM, thanks for the well-structured test!

Perhaps if it's impossible for the `notificationContext` to be null, the getter should be updated to be non-nullable, but that's outside the scope of this PR.

<br>

I have a few tiny suggestions for the test comments (for brevity and to follow [style guidelines](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple)), so take a look when you get a chance :) This LGTM. I was a little wary that we did not have an issue demonstrating this causing a problem, but it looks like a nice clean up.

From an offline chat with @nate-thegrate, the notification context can be null, it comes from the key for the gesture detector in ScrollableState: 
https://github.com/flutter/flutter/blob/793569f621f79119dd7cb2c82c403b5d52271946/packages/flutter/lib/src/widgets/scrollable.dart#L598","This conditional most likely was meant to use `||` instead of `&&` operator to check if `notificationContext` is null OR if no Scrollable was found for this `notificationContext`. Using the AND operator instead causes the null assertion to fail when notificationContext is null, while also causing an assertion failure when notificationContext is not null, but no Scrollable is found for it. While at it, let's also deduplicate the Scrollable.maybeOf call.

This fix is purely speculative, I didn't encounter this error, but rather was reading the ScrollAction's source and stumbled upon this. ~~With that said I wasn't actually able to trigger this error condition, thus why there are no tests included with this PR, if anyone has ideas on how this could be triggered, I'll be happy to include such test cases.~~

fixes #158063

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I agree it's a bit strange for this method to use a combination of `assert`s and early `return`s, rather than sticking with one or the other. I think it'd be good to set a local variable here, to further reduce the amount of null-asserting.

```suggestion
      final BuildContext? notificationContext = primaryScrollController.position.context.notificationContext;
      if (notificationContext != null) {
        state = Scrollable.maybeOf(notificationContext);
      }
``` Yeah, this assert was also marked as unnecessary by the linter after applying the patch. Done. ```suggestion
      // The default web shortcuts do not use a modifier key for ScrollActions.
``` Instead of describing the bug in the test code, we usually just add an issue link.

```suggestion
``` ```suggestion

  // Regression test for https://github.com/flutter/flutter/issues/158063.
  testWidgets('Invoking a ScrollAction when notificationContext is null does not cause an exception.', (WidgetTester tester) async {
```

I went ahead and made an issue so we can link it here:
- https://github.com/flutter/flutter/issues/158063 ```suggestion
      // No scrollable is found, so the scroll position should not change.
```"
159082,2024-11-18T16:35:37Z,2024-11-18T17:16:15Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607945.0,0,0,0,0,2681129.342441,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/e1f4e7d9bfc4...9686de154114

2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 78fd0dfa6cf8 to 7594233ff914 (1 revision) (flutter/engine#56677)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159077,2024-11-18T15:02:00Z,2024-11-18T15:47:18Z,engine-flutter-autoroll,0,0,6,2,1,1,1,[],,0,606387.0,0,0,0,0,2688305.045668,,0,6,0,False,[],,,"
https://github.com/flutter/packages/compare/b164be312ca2...c1eabf5e32cc

2024-11-16 49699333+dependabot[bot]@users.noreply.github.com [gradle]: Bump org.mockito.kotlin:mockito-kotlin from 4.1.0 to 5.4.0 in /packages/interactive_media_ads/android (flutter/packages#8095)
2024-11-16 kevmoo@users.noreply.github.com [google_identity_services_web] Migrate all types to JSObject (flutter/packages#8053)
2024-11-15 49699333+dependabot[bot]@users.noreply.github.com [file_selector]: Bump androidx.annotation:annotation from 1.9.0 to 1.9.1 in /packages/file_selector/file_selector_android/android (flutter/packages#7982)
2024-11-15 ditman@gmail.com [web_benchmarks] Remove `WebRenderer` enum. (flutter/packages#8103)
2024-11-15 kevmoo@users.noreply.github.com [google_maps_flutter] Fix detection of WebAssembly compatibility (flutter/packages#8102)
2024-11-15 engine-flutter-autoroll@skia.org Roll Flutter from ed553d10cf63 to 0e2d55e0e7b2 (40 revisions) (flutter/packages#8106)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159078,2024-11-18T15:25:37Z,2024-11-18T16:23:03Z,engine-flutter-autoroll,0,0,4,4,2,1,1,['engine'],,0,604969.0,0,0,0,0,2688306.651638,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/f365c9f5dce3...e1f4e7d9bfc4

2024-11-18 skia-flutter-autoroll@skia.org Roll Dart SDK from 8795a3eaa87b to ae5111067032 (1 revision) (flutter/engine#56675)
2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 5968000526fe to 78fd0dfa6cf8 (1 revision) (flutter/engine#56674)
2024-11-18 kjlubick@users.noreply.github.com Use updated gni source list (flutter/engine#56627)
2024-11-18 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from K-3yXpPmmu1f0idCa... to io00npG_eDCYC7bac... (flutter/engine#56673)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from K-3yXpPmmu1f to io00npG_eDCY

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159035,2024-11-16T20:07:30Z,2024-11-25T15:06:36Z,userFortyTwo,5,0,1,2,1,1,1,['tool'],4.0,0,759547.0,0,0,0,0,2689616.553106,,1,1,0,False,"['userFortyTwo', 'andrewkolos', 'google-cla[bot]', 'bkonyi', 'flutter-dashboard[bot]']","Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/159035/checks?check_run_id=33087139197) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request. It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Thanks for the PR!

This looks good to me; but, per the [bot message](https://github.com/flutter/flutter/pull/159035#issuecomment-2480763613), you'll have to sign the CLA before this can be reviewed and merged. Should be signed now? Thanks!LGTM once the CLA is signed!",LGTM once the CLA is signed!,This pull request fixes a typo.,
159151,2024-11-19T17:23:52Z,2024-11-25T15:05:53Z,bkonyi,4,8,10,228,8,3,1,['tool'],99113.0,0,510123.0,0,0,0,0,2689659.530036,,0,10,0,False,"['auto-submit[bot]', 'andrewkolos', 'bkonyi']","FYI @DanTup  (FYI that I probably won't have time to look at this for at least a couple of days. Let me know if anything else is blocked on this PR) > (FYI that I probably won't have time to look at this for at least a couple of days. Let me know if anything else is blocked on this PR)

No rush, nothing's blocked on this :) auto label is removed for flutter/flutter/159151, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=159151) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM with nit",LGTM with nit,"Also starts DDS for integration test devices.

Fixes https://github.com/flutter/flutter/issues/157922","Don't you need a null check here, like on line 215?

```
if (compilerOutput != null && compilerOutput.errorCount == 0 && compilerOutput.expressionData != null) {
  return base64.encode(compilerOutput.expressionData!);
} else if (compilerOutput != null && compilerOutput.errorCount > 0 && compilerOutput.errorMessage != null) {
  throw VmServiceExpressionCompilationException(compilerOutput.errorMessage!);
}
```

Alternatively, you could throw `throw Exception('Failed to compile $expression');` early, when compiler output is null? Same remark here Good catch! Done. Done. edit: see next comment
```suggestion
      await flutter.run(withDebugger: true);
      await breakInTopLevelFunction(flutter);
      await evaluateInvalidExpression(flutter);
``` I'm still figuring out how to do suggestions from VSCode properly, and this one came out wrong. I meant to try to fix the indentation here second try:
```suggestion
    await flutter.run(withDebugger: true);
    await breakInTopLevelFunction(flutter);
    await evaluateInvalidExpression(flutter);
``` I'll just update it myself... :)"
159064,2024-11-18T10:05:42Z,2024-11-18T10:51:24Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606164.0,0,0,0,0,2706308.605264,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/a63841d0c64b...f365c9f5dce3

2024-11-18 skia-flutter-autoroll@skia.org Roll Skia from 452208ce96aa to 5968000526fe (3 revisions) (flutter/engine#56671)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159057,2024-11-18T01:25:24Z,2024-11-18T02:18:30Z,engine-flutter-autoroll,0,0,8,2,1,1,1,['engine'],,0,605873.0,0,0,0,0,2737818.548711,,0,8,0,False,[],,,"
https://github.com/flutter/engine/compare/4878f1c9ed1c...a63841d0c64b

2024-11-18 chris@bracken.jp iOS: Clean up @synthesize directives / ivars (flutter/engine#56665)
2024-11-17 skia-flutter-autoroll@skia.org Roll Skia from 4708534db2e7 to 452208ce96aa (1 revision) (flutter/engine#56664)
2024-11-17 chris@bracken.jp iOS: Extract constant for CADisableMinimumFrameDurationOnPhone (flutter/engine#56659)
2024-11-17 chris@bracken.jp iOS: Eliminate unnecessary use of NSClassFromString (flutter/engine#56660)
2024-11-17 chris@bracken.jp iOS: Eliminate unnecessary bridged retain casts (flutter/engine#56662)
2024-11-17 chris@bracken.jp iOS,macOS: Fix string constant declarations (flutter/engine#56661)
2024-11-17 chris@bracken.jp iOS: Make FlutterViewController.engine a strong ref (flutter/engine#56663)
2024-11-17 chris@bracken.jp iOS: Clean up uses of string literal constants (flutter/engine#56658)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159050,2024-11-17T13:29:24Z,2024-11-17T14:14:19Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605633.0,0,0,0,0,2781019.658181,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4c1eb8cacb95...4878f1c9ed1c

2024-11-17 skia-flutter-autoroll@skia.org Roll Skia from 1086e39c04cf to 4708534db2e7 (1 revision) (flutter/engine#56657)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158025,2024-11-01T21:08:22Z,2024-11-24T16:56:07Z,AbdeMohlbi,2,4,2,8,1,3,2,"['platform-android', 'tool']",1026854.0,0,1972066.0,0,0,0,0,2769448.751978,,0,2,0,False,"['flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: code refactor with no semantic changeRSLGTM",RSLGTM,"android studio is marking those three imports as unused imports.
```gradle 
import org.gradle.api.Project
import org.gradle.api.artifacts.Configuration
import org.gradle.api.publish.maven.MavenPublication
```
the lint : 
![Capture d’écran 2024-11-01 220654](https://github.com/user-attachments/assets/a152bf80-f3b4-4a6c-bdda-abfc6503d8ea)

and this method could be converted to static :
```gradle
String getFlutterRoot(Project project) {
    if (!project.hasProperty(""flutter-root"")) {
        throw new GradleException(""The `-Pflutter-root` flag must be specified."")
    }
    return project.property(""flutter-root"")
}
```

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","i'm still suspicious how are three unused imports here ? I am worried that maven publication is something we are actually depending on without use in this file.  I'm still confused tho , is it a good thing ? I think it is reasonable to land this given there are no usages in the code. If we discover a regression we will roll this back and add a comment for why the import is required. "
159049,2024-11-17T10:44:24Z,2024-11-17T11:35:56Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,608333.0,0,0,0,0,2788220.602874,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/9d0720a7b0ec...4c1eb8cacb95

2024-11-17 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from c5padahsa9sMecBb3... to K-3yXpPmmu1f0idCa... (flutter/engine#56656)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from c5padahsa9sM to K-3yXpPmmu1f

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159047,2024-11-17T09:35:23Z,2024-11-17T10:18:14Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,605274.0,0,0,0,0,2795421.905059,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/6f9854ad6ed7...9d0720a7b0ec

2024-11-17 skia-flutter-autoroll@skia.org Roll Skia from b88c7b03a838 to 1086e39c04cf (1 revision) (flutter/engine#56654)
2024-11-17 chris@bracken.jp iOS: Eliminate FlutterEngine dealloc notification (flutter/engine#56650)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159041,2024-11-17T02:21:24Z,2024-11-17T03:22:18Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,606113.0,0,0,0,0,2820621.991335,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/40000c742910...6f9854ad6ed7

2024-11-17 skia-flutter-autoroll@skia.org Roll Dart SDK from dfa7b3ac976b to 8795a3eaa87b (1 revision) (flutter/engine#56652)
2024-11-16 skia-flutter-autoroll@skia.org Roll Skia from f8ec97344733 to b88c7b03a838 (1 revision) (flutter/engine#56651)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159038,2024-11-16T21:42:23Z,2024-11-16T22:24:22Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,604854.0,0,0,0,0,2838622.706188,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/908061196148...40000c742910

2024-11-16 skia-flutter-autoroll@skia.org Roll Dart SDK from d47c22e5f63a to dfa7b3ac976b (1 revision) (flutter/engine#56649)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159032,2024-11-16T18:55:24Z,2024-11-16T19:52:26Z,engine-flutter-autoroll,0,0,3,4,2,1,1,['engine'],,0,607673.0,0,0,0,0,2845823.936304,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/85d445e3cf78...908061196148

2024-11-16 41930132+hellohuanlin@users.noreply.github.com [ios]fix unused variable clang tidy warning (flutter/engine#56637)
2024-11-16 skia-flutter-autoroll@skia.org Roll Skia from 6b0f264bde33 to f8ec97344733 (1 revision) (flutter/engine#56646)
2024-11-16 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from UpSQzyXGUhMfedYIh... to c5padahsa9sMecBb3... (flutter/engine#56645)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from UpSQzyXGUhMf to c5padahsa9sM

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
156297,2024-10-06T21:41:11Z,2024-11-23T18:57:12Z,Albert221,5,6,17,234,7,3,2,['tool'],79488.0,0,4137363.0,1,0,0,0,2848587.298003,,0,17,0,False,"['andrewkolos', 'bkonyi', 'Albert221']","CC @andrewkolos, that's ready for Code Review now. The implementation turned out to be extremely simple. As for the tests, I added a case for the setup that already existed for the `gen-l10n`. @Albert221 do you have plans to pick this back up? @bkonyi I plan to return back to this PR in a week or two, yes; unless you'd like to add the remaining things, then tell me and fell free :) @andrewkolos tests added! Code ready for re-review. I'm not sure what's the issue with some of the unrelated tests failing though, should I merge from upstream everytime I get that?

EDIT: Merged latest main into PR. Now `Windows tool_integration_tests_2_9` passes but `Mac_x64 framework_tests_misc` does not. I don't think that's because of my changes > EDIT: Merged latest main into PR. Now `Windows tool_integration_tests_2_9` passes but `Mac_x64 framework_tests_misc` does not. I don't think that's because of my changes

Some of our CI/integration tests are a bit flaky right now, so this is normal. Sorry about the confusion.Thanks for the PR!

The approach looks good, and the code is delightfully simple. That being said, I think we should have test(s) that define the behavior around odd formats that could be made with this new syntax. For example, consider the format `""yMd+jms+""`, which has a dangling `+`.  What should the user see here? An error message? Would the last `+` be implicitly removed? LGTM overall! Just a couple of minor comments from me. LGTM with nit. Sorry for the delay here.","Thanks for the PR!

The approach looks good, and the code is delightfully simple. That being said, I think we should have test(s) that define the behavior around odd formats that could be made with this new syntax. For example, consider the format `""yMd+jms+""`, which has a dangling `+`.  What should the user see here? An error message? Would the last `+` be implicitly removed? LGTM overall! Just a couple of minor comments from me. LGTM with nit. Sorry for the delay here.","This Pull Request extends the functionality of the `flutter gen-l10n` command (and its behavior during hot restart/reload) related to `DateFormat` type placeholders and their `format`. Until now, it was impossible to take advantage of `intl`'s `DateFormat.something().add_somethingElse()`. The `.add_x()` part was impossible to achieve. This PR adds the ability to take advantage of these methods over `DateFormat`, by adding the `add_` formats after the `+` character in the `format` in placeholder configuration. You can even have multiple added format parts if needed. All within a single placeholder.

<table>
<tr>
<th>Before the PR</th>
<th>After the PR</th>
</tr>
<tr>
<td>

```json
{
    ""bookingsPage_camo_dataLoaded"": ""CAMO data from {date} {time}."",
    ""@bookingsPage_camo_dataLoaded"": {
        ""placeholders"": {
            ""date"": {
                ""type"": ""DateTime"",
                ""format"": ""yMMMd""
            },
            ""time"": {
                ""type"": ""DateTime"",
                ""format"": ""jm""
            }
        }
    },
}
```

</td>
<td>

```json
{
    ""bookingsPage_camo_dataLoaded"": ""CAMO data from {date}."",
    ""@bookingsPage_camo_dataLoaded"": {
        ""placeholders"": {
            ""date"": {
                ""type"": ""DateTime"",
                ""format"": ""yMMMd+jm""
            }
        }
    },
}
```

</td>
</tr>
</table>

Resolves #155817.

## Next steps

After this PR is merged, an update to [i18n | Flutter > Messages with dates](https://docs.flutter.dev/ui/accessibility-and-internationalization/internationalization#messages-with-dates) ([source](https://github.com/flutter/website/blob/main/src/content/ui/accessibility-and-internationalization/internationalization.md)) shall be made to include a mention of this new addition.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
      testWithoutContext('throws an exception when there is an invalid date format', () {
``` Nit: I think this should still be 'code' Nit: I think we should use the actual '+' character here for clarity. I believe you meant 'tool' instead of the first 'code'? fixing This one was fixed already :) ```suggestion
            'Ensure all date formats joined by a ""+"" character have '
```"
159020,2024-11-16T07:57:24Z,2024-11-16T08:40:31Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607553.0,0,0,0,0,2885424.696065,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/1800193ba961...85d445e3cf78

2024-11-16 skia-flutter-autoroll@skia.org Roll Dart SDK from 77a4ee3266a4 to d47c22e5f63a (1 revision) (flutter/engine#56644)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159019,2024-11-16T06:23:24Z,2024-11-16T07:15:52Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605993.0,0,0,0,0,2892625.904627,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/98c3b7f8d1a7...1800193ba961

2024-11-16 skia-flutter-autoroll@skia.org Roll Fuchsia Test Scripts from 6FgM4KTbxxmyYoiOs... to OA7UxNZkbxCRfr80A... (flutter/engine#56643)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159017,2024-11-16T04:21:23Z,2024-11-16T05:07:13Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606114.0,0,0,0,0,2899826.378081,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/f23832175b7a...98c3b7f8d1a7

2024-11-16 chris@bracken.jp Backend-specific EmbedderTestBackingStoreProducers (flutter/engine#56638)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159016,2024-11-16T03:34:30Z,2024-11-16T04:20:15Z,engine-flutter-autoroll,1,0,1,2,1,1,1,['engine'],2750.0,0,605327.0,0,0,0,0,2903426.924666,,0,1,0,False,['engine-flutter-autoroll'],Commit queue failed; closing this roll.,,"
https://github.com/flutter/engine/compare/f649330affa8...f23832175b7a

2024-11-16 skia-flutter-autoroll@skia.org Roll Dart SDK from eccb15756020 to 77a4ee3266a4 (1 revision) (flutter/engine#56640)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159015,2024-11-16T01:11:48Z,2024-11-16T02:04:14Z,engine-flutter-autoroll,0,0,47,4,2,1,1,['engine'],,0,607439.0,0,0,0,0,2909877.975424,,0,47,0,False,[],,,"Roll Flutter Engine from 619804c0fbb7 to f649330affa8 (47 revisions)

https://github.com/flutter/engine/compare/619804c0fbb7...f649330affa8

2024-11-16 skia-flutter-autoroll@skia.org Roll Skia from 1ef3b910e064 to 6b0f264bde33 (6 revisions) (flutter/engine#56635)
2024-11-16 zanderso@users.noreply.github.com Revert ""Remove `android_jit_release_x86`."" (flutter/engine#56634)
2024-11-15 chris@bracken.jp Move SetRenderTargetType to EmbedderTestCompositor (flutter/engine#56626)
2024-11-15 skia-flutter-autoroll@skia.org Roll Dart SDK from b62dadb14d82 to eccb15756020 (2 revisions) (flutter/engine#56630)
2024-11-15 andre.stein.1985@gmail.com [TextInput] Add TextInputType.webSearch (#15762) (flutter/engine#56428)
2024-11-15 mdebbar@google.com [web] Send the correct view ID with semantics actions (flutter/engine#56595)
2024-11-15 41930132+hellohuanlin@users.noreply.github.com [macos] early return to suppress clang-tidy warning (flutter/engine#56588)
2024-11-15 chinmaygarde@google.com [Impeller] libImpeller: Tinker on the README to cross reference the SDK and the example. (flutter/engine#56623)
2024-11-15 chaopeng@google.com [fuchsia] MaybeRunInitialVsyncCallback should only called once (flutter/engine#56429)
2024-11-15 magder@google.com Move mac clangd build from x64 to arm (flutter/engine#56567)
2024-11-15 30870216+gaaclarke@users.noreply.github.com Added assert for opengles thread safety (flutter/engine#56585)
2024-11-15 jonahwilliams@google.com [Impeller] enable OpenGL fallback on Android. (flutter/engine#56591)
2024-11-15 jason-simmons@users.noreply.github.com [Impeller] Maintain separate queues of GLES operations for each thread in the reactor (flutter/engine#56573)
2024-11-15 skia-flutter-autoroll@skia.org Roll Dart SDK from abe86ca4eb01 to b62dadb14d82 (2 revisions) (flutter/engine#56615)
2024-11-15 skia-flutter-autoroll@skia.org Roll Skia from b730eb340852 to 1ef3b910e064 (4 revisions) (flutter/engine#56613)
2024-11-15 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from JkpuAsLzcmYLzf1iX... to UpSQzyXGUhMfedYIh... (flutter/engine#56611)
2024-11-15 skia-flutter-autoroll@skia.org Roll Dart SDK from bf0eeb9d929c to abe86ca4eb01 (1 revision) (flutter/engine#56610)
2024-11-15 skia-flutter-autoroll@skia.org Roll Skia from e5fda8472b21 to b730eb340852 (1 revision) (flutter/engine#56608)
2024-11-15 skia-flutter-autoroll@skia.org Roll Skia from 8ff65da4b8bf to e5fda8472b21 (1 revision) (flutter/engine#56603)
2024-11-15 chris@bracken.jp Move TestMetalContext/Surface to testing namespace (flutter/engine#56602)
2024-11-15 skia-flutter-autoroll@skia.org Roll Dart SDK from 343b9fc6eafe to bf0eeb9d929c (1 revision) (flutter/engine#56604)
2024-11-15 chinmaygarde@google.com [Impeller] Don't enable KHR_debug on Angle. (flutter/engine#56601)
2024-11-15 chinmaygarde@google.com [Impeller] libImpeller: Reset the GL state when transitioning control back to the embedder. (flutter/engine#56597)
2024-11-15 skia-flutter-autoroll@skia.org Roll Skia from 8946ea477b42 to 8ff65da4b8bf (2 revisions) (flutter/engine#56600)
2024-11-14 chinmaygarde@google.com [Impeller] Put test components in the testing namespace. (flutter/engine#56594)
2024-11-14 chinmaygarde@google.com [Impeller] libImpeller: Add a warning about OpenGL state being trampled. (flutter/engine#56599)
2024-11-14 chris@bracken.jp Embedder: Refactor EmbedderConfigBuilder by backend (flutter/engine#56598)
2024-11-14 chris@bracken.jp Migrate Metal translation units to Obj-C++ (flutter/engine#56592)
2024-11-14 skia-flutter-autoroll@skia.org Roll Dart SDK from db4d7d52db48 to 343b9fc6eafe (1 revision) (flutter/engine#56590)
2024-11-14 chris@bracken.jp iOS,macOS: Build/test test_metal_surface_unittests (flutter/engine#56586)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from 3222456e63dc to 8946ea477b42 (2 revisions) (flutter/engine#56587)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from 16178bf63de7 to 3222456e63dc (3 revisions) (flutter/engine#56584)
2024-11-14 bruno.leroux@gmail.com [Android] Fix Slider semantics double tap behaviors (flutter/engine#56452)
2024-11-14 skia-flutter-autoroll@skia.org Roll Dart SDK from a3b6652100c8 to db4d7d52db48 (1 revision) (flutter/engine#56581)
2024-11-14 chris@bracken.jp Move Vulkan context to EmbedderTestContextVulkan (flutter/engine#56571)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from a076435073fc to 16178bf63de7 (1 revision) (flutter/engine#56579)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from 70553189e4e8 to a076435073fc (1 revision) (flutter/engine#56577)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from fa52f2c1ddba to 70553189e4e8 (1 revision) (flutter/engine#56576)
2024-11-14 skia-flutter-autoroll@skia.org Roll Dart SDK from 3f05b3540cb2 to a3b6652100c8 (3 revisions) (flutter/engine#56575)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from ddbd8d1cb8d8 to fa52f2c1ddba (3 revisions) (flutter/engine#56574)
2024-11-14 jonahwilliams@google.com [Android] choose 24 bit depth buffer. (flutter/engine#56553)
2024-11-14 skia-flutter-autoroll@skia.org Roll Skia from 3750b8939c7f to ddbd8d1cb8d8 (1 revision) (flutter/engine#56562)
2024-11-14 robert.ancell@canonical.com Move FlMouseCursorHandler from FlView to FlEngine (flutter/engine#56026)
2024-11-14 jonahwilliams@google.com [Impeller] force software resize usage for GLES backend. (flutter/engine#56511)
2024-11-14 skia-flutter-autoroll@skia.org Roll Dart SDK from 66ab1774bfe9 to 3f05b3540cb2 (2 revisions) (flutter/engine#56564)
2024-11-14 chris@bracken.jp Embedder: Refactor EmbedderTestContext creation (flutter/engine#56563)
...",
157280,2024-10-21T17:09:17Z,2024-11-23T00:29:08Z,Sameri11,4,0,4,227,6,2,2,['tool'],2098852.0,0,2791193.0,0,0,0,0,2915075.601954,,0,4,0,False,"['Sameri11', 'andrewkolos']","Thanks for the PR. I pushed commits with small tweaks. Feel free to revise and revert as desired. I will provide a review shortly. It looks like I broke tests, I'll work on fixing them @andrewkolos thanks for your commit! I guess I missed deprecation of user_messages. Also, please tell if you need any assistance with fixing those tests.  friendly ping @bkonyi. RE our earlier offline discussion: I think this is good to merge as-is.LGTM! Thanks for the improvement here :) LGTM!",LGTM! Thanks for the improvement here :) LGTM!,"This PR attempts to improve clarity of androids section of  `flutter doctor -v` output by providing explicit information about which JDK is being used and how to configure a different one if needed.

### Before

```console
• Java binary at: /Users/user/Applications/Android Studio Ladybug Feature Drop 2024.2.2 Canary 2.app/Contents/jbr/Contents/Home/bin/java
```

### After

1. When JDK is from Android Studio:

```console
    • Java binary at: /Users/users/Applications/Android Studio Ladybug Feature Drop 2024.2.2 Canary 2.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with latest Android Studio installation
      To manually set a custom JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`
```

2. When JDK is from JAVA_HOME env variable:

```console
    • Java binary at: /Users/user/Applications/Android Studio Ladybug Feature Drop 2024.2.2 Canary 2.app/Contents/jbr/Contents/Home/bin/java
      This JDK is specified by JAVA_HOME environment variable
      To manually set a custom JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`
```

3. When path to JDK is set in flutter config:

```console
    • Java binary at: /Users/user/Applications/Android Studio Ladybug Feature Drop 2024.2.2 Canary 2.app/Contents/jbr/Contents/Home/bin/java
      This JDK was found in system PATH
      To change current JDK, run: `flutter config --jdk-dir=""path/to/jdk""`
```
4. When java binary is found in PATH (as fallback)

```console
    • Java binary at: /Users/user/Applications/Android Studio Ladybug Feature Drop 2024.2.2 Canary 2.app/Contents/jbr/Contents/Home/bin/java
      This JDK is specified in Flutter configuration
      To manually set a custom JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`
```

### Motivation

I think it's described in https://github.com/flutter/flutter/issues/153156#issuecomment-2336814991. 

TLDR; many developers struggle with Java-related issues and more verbose doctor's output will (presumably) improve DX in that part.


fixes #153156


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159349,2024-11-22T20:05:05Z,2024-11-23T00:27:34Z,matanlurey,0,0,2,73,12,1,1,['tool'],,0,15751.0,0,0,0,0,2915170.044072,,0,2,0,False,[],,,https://github.com/flutter/flutter/issues/159000 resolved (for now).,
159360,2024-11-22T23:58:52Z,2024-11-23T00:01:07Z,auto-submit[bot],2,0,1,2,1,1,1,['engine'],24.0,1,136.0,0,0,0,0,2916759.204255,,0,1,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/159360, Failed to enqueue flutter/flutter/159360 with HTTP 400: GraphQL mutate failed.",,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#159345
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: hannah-hyj
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: tree is red on "" Linux_build_test flutter_gallery__transition_perf_hybrid"" after engine auto roll
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: engine-flutter-autoroll
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {fluttergithubbot}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:

https://github.com/flutter/engine/compare/6f941c961b05...202506d686e3

2024-11-22 jonahwilliams@google.com [Impeller] cache and reuse openGL framebuffer attachments. (flutter/engine#56746)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 700e685861c8 to e7caf38140ce (25 revisions) (flutter/engine#56756)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from c1106f7e4cde to 141291fd570d (1 revision) (flutter/engine#56748)
2024-11-22 jonahwilliams@google.com [engine] more consistently flush dart event loop, run vsync callback immediately (flutter/engine#56738)
2024-11-22 chris@bracken.jp Extract backend-specific code in ShellTestPlatformView (flutter/engine#56722)
2024-11-22 chris@bracken.jp Eliminate ShellTestPlatformView::BackendType::kDefaultBackendType (flutter/engine#56744)
2024-11-22 skia-flutter-autoroll@skia.org Roll Skia from 2614590b4f32 to 700e685861c8 (1 revision) (flutter/engine#56725)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from b36e4d731d67 to c1106f7e4cde (12 revisions) (flutter/engine#56742)
2024-11-22 chinmaygarde@google.com [Impeller] libImpeller: A C++ wrapper to the Impeller API. (flutter/engine#56682)
2024-11-21 chinmaygarde@google.com [Impeller] Run simulator tests with Impeller enabled. (flutter/engine#56740)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md

<!-- end_revert_body -->
",
159359,2024-11-22T23:52:05Z,2024-11-22T23:56:50Z,auto-submit[bot],2,0,1,4,2,1,1,['engine'],20.0,1,286.0,0,0,0,0,2917016.687591,,0,1,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/159359, Failed to enqueue flutter/flutter/159359 with HTTP 400: GraphQL mutate failed.",,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#159348
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: hannah-hyj
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: tree is red on "" Linux_build_test flutter_gallery__transition_perf_hybrid"" after this PR 
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: engine-flutter-autoroll
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {fluttergithubbot}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:

https://github.com/flutter/engine/compare/202506d686e3...9384df4425fd

2024-11-22 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from zhFzwYCH-N_wasTnM... to D5CBHuB2c-v3Zai-c... (flutter/engine#56757)
2024-11-22 skia-flutter-autoroll@skia.org Roll Dart SDK from 141291fd570d to 8b65a7a628e2 (1 revision) (flutter/engine#56755)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from zhFzwYCH-N_w to D5CBHuB2c-v3

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC aaclarke@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md

<!-- end_revert_body -->
",
159354,2024-11-22T23:17:27Z,2024-11-22T23:22:47Z,auto-submit[bot],0,0,1,49,3,1,1,"['framework', 'a: accessibility', 'revert of']",,1,321.0,0,0,0,0,2919060.091706,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#157884
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: chunhtai
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: merge by mistake
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: chunhtai
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {LongCatIsLooong}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
fixes https://github.com/flutter/flutter/issues/156242



## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md

<!-- end_revert_body -->
",
157884,2024-10-30T21:44:13Z,2024-11-22T22:49:49Z,chunhtai,11,2,3,49,3,1,1,"['framework', 'a: accessibility']",833.0,0,1992797.0,0,0,0,0,2919379.567511,,0,3,0,False,"['chunhtai', 'auto-submit[bot]', 'LongCatIsLooong', 'nate-thegrate', 'zanderso']","Looks great to me, but I'll leave reviewing up to someone with access to scuba tests.

(FYI, it looks like the PR needs a rebase) LGTM modulo the CI failure. 

That's a lot of golden changes. I skimmed through a few hundred of them, they all seem ok to me. I wonder if we should change hashing to avoid common color blind colors and those too close to #FF000000 so the semantics labels are legible? I think the analyzer script doesn't like the `import 'package:flutter/rendering.dart';` import? We shall see. > I think the analyzer script doesn't like the `import 'package:flutter/rendering.dart';` import? We shall see.

oh i missed that one Is this PR intended to fix the tree? It landed with the tree closed. I used the merge when ready button. I thought that would wait for the tree to open. am I doing it wrong?

also the message said
Merged via the queue into flutter:master with commit I see. For what you wanted, you should continue to use the `autosubmit` label. The tree being closed doesn't block submitting via the merge queue. Right now, it's just like clicking the 'merge' button from before the merge queue was enabled. looks like that button served a different purpose, and the correct workflow will still be using autosubmit. should I revert this pr? > looks like that button served a different purpose, and the correct workflow will still be using autosubmit. should I revert this pr?

That would be the safe thing to do on a Friday afternoon =) A reason for requesting a revert of flutter/flutter/157884 could
      not be found or the reason was not properly formatted. Begin a comment with **'Reason for revert:'** to tell the bot why
      this issue is being reverted. Reason for revert: merge by mistake",,"fixes https://github.com/flutter/flutter/issues/156242



## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","question: so it looks like `_findDepth` finds the distance between this node and the deepest descendant. Why this instead of using the distance to the root? If we use that depth instead, all root nodes will be of the same color and every node at the same ""location"" in the tree (`(# of ancestors, child index)` pair) will have a consistent color? Is that worth doing? The CI analyzer doesn't like this it seems."
159346,2024-11-22T18:55:44Z,2024-11-22T19:42:57Z,matanlurey,1,0,1,83,8,1,1,[],1763.0,0,2836.0,0,0,0,0,2932249.749685,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159346, due to - The status or check suite [Mac_arm64 build_tests_4_4](https://cr-buildbucket.appspot.com/build/8730543588180254465) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,Also deleted a file that appeared to be unused.,
159108,2024-11-18T22:45:25Z,2024-11-22T19:41:25Z,LongCatIsLooong,0,6,1,3,1,2,1,"['framework', 'a: accessibility']",,0,334561.0,0,0,0,0,2932344.261377,,0,1,0,False,[],LGTM,LGTM,"This is for fixing a test failure in an engine PR that introduces a new `SemanticsAction`: https://github.com/flutter/engine/pull/56606/files

The test will be updated in the future to remove the index-based predicate.

failure: https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8730901009848520305/+/u/run_test.dart_for_web_tests_shard_and_subshard_1/stdout

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Can you add a todo so that we don't forget this? I'll only merge this if the other PR is ready so I can immediately update the test, sounds good? ok, sgtm @chunhtai do you think can merge both PRs now? let me take a quick look at the engine pr now lgtm'd"
159343,2024-11-22T18:17:10Z,2024-11-22T19:02:11Z,gmackall,1,0,2,5,3,1,1,[],2923.0,0,2925.0,0,0,0,0,2934476.784454,,1,2,0,False,['gmackall'],Will keep an eye on the dashboard to make sure the autoroller succeeds,,"Updates strings to reflect changes from https://github.com/flutter/flutter/commit/dca37ad17ff0354924f9b5bbbcbb2ce6ed819230

Reason: https://github.com/flutter/flutter/issues/159316#issuecomment-2494445095

Fixes https://github.com/flutter/flutter/issues/159316

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159271,2024-11-21T15:42:53Z,2024-11-22T18:44:46Z,TahaTesser,0,4,3,168,5,2,1,"['framework', 'f: material design']",,0,97314.0,0,0,0,0,2935745.057404,,0,3,0,False,[],LGTM:) Thanks so much for the quick fix!,LGTM:) Thanks so much for the quick fix!,"Fix [Add `CircularProgressIndicator` padding to match M3 specs](https://github.com/flutter/flutter/issues/159267)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Center(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                width: 40,
                height: 40,
                color: Colors.red,
                alignment: Alignment.center,
                child: const Text(
                  '40x40px',
                  style: TextStyle(fontSize: 8, color: Colors.white),
                ),
              ),
              const ColoredBox(
                color: Colors.amber,
                child: CircularProgressIndicator(
                  year2023: false,
                  value: 0.4,
                ),
              ),
              Container(
                width: 48,
                height: 48,
                color: Colors.red,
                alignment: Alignment.center,
                child: const Text(
                  '48x48px',
                  style: TextStyle(fontSize: 10, color: Colors.white),
                ),
              )
            ],
          ),
        ),
      ),
    );
  }
}

```

</details>

### Preview

<img width=""454"" alt=""Screenshot 2024-11-21 at 17 13 25"" src=""https://github.com/user-attachments/assets/6f7520f1-a213-4814-8116-6dd996639eec"">

### Specs


![Screenshot_2024-11-20_at_12 17 46_PM](https://github.com/user-attachments/assets/3ab005cc-e93a-485a-8470-f80072440948)


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Just feel 8 pixels is a little confusing. Can we say defaults to `EdgeInsets.all(4.0)`? Sure! If padding is not null, seems widget._buildSemanticsWrapper is removed accidentally:)? Oops my bad, i was actually wanted to assign it to the `result` variable. "
159279,2024-11-21T16:55:08Z,2024-11-22T17:35:50Z,lamnhan066,1,9,8,108,2,3,2,"['framework', 'f: material design']",33130.0,0,88845.0,0,0,0,0,2939879.775611,,0,8,0,False,['lamnhan066'],"Thank you for your review, @nate-thegrate. I have updated the code per your suggestions.I've run into quite a few problems relating to DataTable's lack of customizability; eventually I discovered that it's an artifact of Material 2 and that the recommendation is to use something like [Table](https://main-api.flutter.dev/flutter/widgets/Table-class.html) or [TableView](https://pub.dev/documentation/two_dimensional_scrollables/latest/two_dimensional_scrollables/TableView-class.html).

I left some suggestions on the first test (that also apply to the second one). Overall it looks like a great contribution; looking forward to getting this merged! Just 1 tiny suggestion, otherwise this LGTM 👍

Thanks for the contribution! LGTM","I've run into quite a few problems relating to DataTable's lack of customizability; eventually I discovered that it's an artifact of Material 2 and that the recommendation is to use something like [Table](https://main-api.flutter.dev/flutter/widgets/Table-class.html) or [TableView](https://pub.dev/documentation/two_dimensional_scrollables/latest/two_dimensional_scrollables/TableView-class.html).

I left some suggestions on the first test (that also apply to the second one). Overall it looks like a great contribution; looking forward to getting this merged! Just 1 tiny suggestion, otherwise this LGTM 👍

Thanks for the contribution! LGTM","<!--
Thanks for filing a pull request!
Reviewers are typically assigned within a week of filing a request.
To learn more about code review, see our documentation on Tree Hygiene: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
-->

After discussing with @Hixie in #51799, this PR has been created to implement the ability to customize column widths in DataTable.

This change introduces the `columnWidth` property to `DataColumn`, allowing developers to specify column widths using `TableColumnWidth` within a `DataTable`.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","(tiny typo)
```suggestion
  testWidgets('DataTable with custom column widths - checkbox', (WidgetTester tester) async {
``` If I understand correctly, the pattern of using these braces helps with variable scoping, i.e. a different `table` variable could be declared somewhere else in the same function without issues.

Overall, I think it's a pretty cool language feature, but we probably should avoid it in the Flutter framework, to prevent people unfamiliar with this pattern getting tripped up. Since `buildTable()` is only being called once, I think it'd be ideal just to pass the widget here directly.

```dart
await tester.pumpWidget(
  MaterialApp(
    // ...
  ),
);
``` Unfortunately I don't think this is an accurate description.

If there is only 1 column with text (i.e. all the rest are numeric) then it uses a unique layout algorithm; otherwise it use `IntrinsicColumnWidth()` for everything. Yes, this is my bad. Thanks for pointing it out. Could we format this as

```dart
if (column.columnWidth != null) {
  // ...
else if (dataColumnIndex == _onlyTextColumn) {
  // ...
} else {
  // ...
}
``` Yes, we could format like that. The reason I use the current format is to keep the original logic as much as possible. So, the new logic is something like “if the column width is not null, we will use it, otherwise we will use the default behavior”. Do you think we should update it per your suggestion? Yeah, I think it'd make it more readable, since the goal of each statement body is to assign a value for `tableColumns[displayColumnIndex]`. Done. Thanks for your suggestion!"
159336,2024-11-22T17:18:54Z,2024-11-22T17:22:56Z,zanderso,0,0,1,1,1,2,2,[],,0,243.0,0,0,0,0,2940656.788676,,1,1,0,False,[],,,"For https://github.com/flutter/flutter/issues/159316

",
158986,2024-11-15T15:01:25Z,2024-11-15T15:44:08Z,engine-flutter-autoroll,0,0,4,2,1,1,1,[],,0,605291.0,0,0,0,0,2948658.136134,,0,4,0,False,[],,,"
https://github.com/flutter/packages/compare/b9ac917daeb0...b164be312ca2

2024-11-14 magder@google.com Remove packages/platform from dependabot config (flutter/packages#8099)
2024-11-14 magder@google.com Ignore dependabot minor and patch updates of Kotlin mocking library (flutter/packages#8056)
2024-11-14 paulberry@google.com [google_identity_services_web] Set nonce properly in loadWebSdk(). (flutter/packages#8069)
2024-11-14 engine-flutter-autoroll@skia.org Roll Flutter (stable) from 603104015dd6 to dec2ee5c1f98 (4 revisions) (flutter/packages#8084)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159275,2024-11-21T15:55:21Z,2024-11-21T18:35:06Z,bkonyi,5,0,1,4,1,1,1,"['platform-ios', 'tool']",26.0,0,26782.0,0,0,0,0,3005531.90928,,0,1,0,False,"['auto-submit[bot]', 'hannah-hyj', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. auto label is removed for flutter/flutter/159275, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8730645527924888593) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/159275, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8730640794085740609) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 A reason for requesting a revert of flutter/flutter/159275 could
      not be found or the reason was not properly formatted. Begin a comment with **'Reason for revert:'** to tell the bot why
      this issue is being reverted. Reason for revert: 

tree is red on ""Linux packages_autoroller"" after this PR 
Unhandled exception:
Bad state: Expected all diffs after re-generating gradle lockfiles to end in `.lockfile`, but encountered: [dev/benchmarks/test_apps/stocks/lib/i18n/stock_strings_en.dart, dev/benchmarks/test_apps/stocks/lib/i18n/stock_strings_es.dart]
#0      PackageAutoroller._regenerateGradleLockfiles (package:conductor_core/src/packages_autoroller.dart:162:9)
<asynchronous suspension>
#1      PackageAutoroller.roll (package:conductor_core/src/packages_autoroller.dart:100:7)
<asynchronous suspension>
#2      run (file:///b/s/w/ir/x/w/flutter/dev/conductor/core/bin/packages_autoroller.dart:83:3)
<asynchronous suspension>LGTM. I do not believe this requires updating a test. This is a zero-risk logging change",LGTM. I do not believe this requires updating a test. This is a zero-risk logging change,Attempting to collect additional context into the failure outlined in https://github.com/flutter/flutter/issues/141892,
159039,2024-11-16T22:06:52Z,2024-11-21T20:41:58Z,dtscalac,1,3,7,19,2,4,2,['tool'],21.0,0,426909.0,0,0,0,0,3015115.390868,,1,7,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.LGTM! Thanks for the fix! LGTM! Thanks! Keep them coming!",LGTM! Thanks for the fix! LGTM! Thanks! Keep them coming!,"<!--
Thanks for filing a pull request!
Reviewers are typically assigned within a week of filing a request.
To learn more about code review, see our documentation on Tree Hygiene: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
-->

This PR makes sure that `--web-header` flag works together with the `flutter drive` command. Currently the flag is correctly parsed but it is not properly propagated and ends up being unused when running the web server for tests.

I have validated the fix by following the steps to reproduce from: https://github.com/flutter/flutter/issues/159037.

#### Before the fix

No custom HTTP header in test run:
![Screenshot 2024-11-16 at 22 21 36](https://github.com/user-attachments/assets/b3d4e34b-fe2b-4d32-8b0a-2d55e5d23f69)

#### After the fix

Correct HTTP headers in test run:
![Screenshot 2024-11-16 at 22 13 43](https://github.com/user-attachments/assets/b74a41de-69c5-4968-82c0-a08d29a3252d)


Fixes #159037

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","This change is going to need a test, that verifies that any headers that are passed to the web runner's debugging options are correct. Unfortunately https://github.com/flutter/flutter/blob/master/packages/flutter_tools/test/web.shard/web_driver_service_test.dart only contains a single test, which uses `startTest()` and not the `start()` method of the service What do you think about adding the test to https://github.com/flutter/flutter/blob/master/packages/flutter_tools/test/general.shard/drive/web_driver_service_test.dart since it already contains other tests that validate the behavior of the `start()` method of the service?

I have added a test there to validate that correct webHeaders are passed. That test seems reasonable to me!"
152237,2024-07-24T14:11:07Z,2024-11-19T19:12:33Z,TahaTesser,30,30,2,1221,7,3,1,"['framework', 'f: material design', 'will affect goldens']",87427.0,0,10392127.0,0,0,0,0,3014443.000553,,0,2,0,False,"['QuncCccccc', 'TahaTesser', 'Piinks', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/152237) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha 1e547a2ca346a29f35855d8415d6587c2ef2e068_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha b4a762b515da9bd288d9d15a824ca9cdb0689b80_

 Back from vacation, there are a lot of great feedback here and I'll address them. Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha e9e6fc7f966a9980f7fc283df314dcff44df1868_

 There were some conflicts which i resolved today. I'm addressing a few more API challenges such as supporting the new `thumbSize` for all shapes and also trying to figure out a better approach overriding thumb states.  I have tried several ways to support the new `thumbSize` parameter for M2 style thumb shape. However, this turns out to be a breaking change as there are various tests depending `RoundSliderThumbShape` hard coded parameters. I also tried making them nullable but disable `RoundSliderThumbShape` cannot have nullable value in at least two tests.

https://github.com/flutter/flutter/blob/99f00a1309238338ef5a999fd86f85e200bbd044/packages/flutter/lib/src/material/slider_theme.dart#L2282-L2289

To move forward, we might need to state the new `thumbSize` theme parameter is only support the new M3 thumb shape. @QuncCccccc @Piinks 
I've addressed a bunch of feedback and commented some replies when there are breaking changes. 
Please let me know if  you agree or have any further feedback. > To move forward, we might need to state the new thumbSize theme parameter is only support the new M3 thumb shape.

That SGTM. Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha f8c3c223536fb7df9f219cf4c732d733276d592c_

 @Piinks These look to be mostly because of the updated track height of 16 pixels. I wrote a migration guide I'll file it tomorrow after Bruno looks at it. This guide includes steps to use previous track height of 4 pixels. 

The tests you shared might need to adjust their track height to get rid of these differences.  @Piinks 
https://github.com/flutter/flutter/pull/152237/files includes steps to restore previous shapes. Could you please if the migration guide resolve the tests differences. Specifically track height.


I'm also holding on to new commits to update docs in this PR as you're checking out the tests differences in https://github.com/flutter/flutter/pull/152237#pullrequestreview-2261246024 Can you push a commit that resolves the name conflict first? There are many many failures, removing those from the name conflict would help a lot. Thanks! > Can you push a commit that resolves the name conflict first? There are many many failures, removing those from the name conflict would help a lot. Thanks!

Ohh thank you. I will rename this. Naming ideas https://github.com/flutter/flutter/pull/152237#discussion_r1733088462

 > Can you push a commit that resolves the name conflict first? There are many many failures, removing those from the name conflict would help a lot. Thanks!

> This class name conflicts with one that exists in Google testing


Renamed thumb shape to resolve conflict. Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha 086ef7617e84b66db15585bbb1421dc9922edbef_

  
 @Piinks Hi!  Waiting for results for https://github.com/flutter/flutter/pull/152237#pullrequestreview-2261246024 with my steps included in my migration. guide to restore the Slider to previous. If you please confirm this in fact  get rid of the diffs?  We might be able to avoid adding flag. 
 
  Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha 90499389747d29f15b34be3520f700fd0c23e840_

 Update: Still working with affected customers in Google testing Following up on https://github.com/flutter/website/pull/11093#discussion_r1757220183, I wonder now if there are too many variants of slider that are difficult to configure with the addition of this PR.

@QuncCccccc @TahaTesser WDYT of maybe some Slider constructors specific to each kind? Especially since some properties apply to only some types of Sliders, having unique constructors could keep the number of properties exposed manageable, since only the relevant properties would be on each constructor. Something like` Slider.legacy` constructor? It could work, i can add private bool to check the constructor type similar to one i added for `TabBar.secondary` and configure the Slider. Do you concur @QuncCccccc ? > Something like Slider.legacy constructor?

Maybe it should correlate more with what shape/style it will result in. Inevitably, the new one here will be legacy one day. :) >  the new one here will be legacy one day. :)

That's true 😅 The new constructor will be for the current Slider so coming with a name to describe that, is hard.  
- They're both rounded.
- New one has a gap but constructor for  current Slider cannot be `Slider.ungapped`, that's a bad name.
- Both have different type of thumbs but naming constructor based on thumb doesn't sound right. Good points! Maybe then the style object idea proposed in the migration guide PR is the way to go! > > the new one here will be legacy one day. :)
> 
> That's true 😅 The new constructor will be for the current Slider so coming with a name to describe that, is hard.
> 
> * They're both rounded.
> * New one has a gap but constructor for  current Slider cannot be `Slider.ungapped`, that's a bad name.
> * Both have different type of thumbs but naming constructor based on thumb doesn't sound right.

How about creating a `Slider.gapped()` constructor in which we have the new style? Then we don't have to handle backward compatibility problem. Since the tokens are not likely to have a big change in the future, we don't need to worry about more constructor creation:)

Adding a `sliderStyle` property sounds good to me as well. But for the existing style-related properties in Slider class, should we mark them be deprecated to avoid duplication with properties in `sliderStyle`? ohhh that would work if we want to move new design into a new constructor. Yes, this will keep existing Slider untouched, we won't need migration guide at all. Genius @QuncCccccc  Another way that I can think of is, if given the new changes in SliderTheme, we can customize the current Slider to be a gapped Slider, then instead of providing a constructor, providing an example to show users how we can get the latest look might also work:) In this way, no backward compatibility issue, and no new constructor introduced. The disadvantage is probably that it is a little tedious(a lot of customization, compared with one single `Slider.gapped()`) to get all the configuration in order to see the latest styles. > Another way that I can think of is, if given the new changes in SliderTheme, we can customize the current Slider to be a gapped Slider, then instead of providing a constructor, providing an example to show users how we can get the latest look might also work:) In this way, no backward compatibility issue,

Getting the new Slider with customization is the very first approach i took in the previous implementation of this https://github.com/flutter/flutter/pull/147783. Then we decided to go flag route, then changed defaults now. 

We could go `Slider.gapped` if we want a constructor. No migration would be needed for this. Existing Slider constructor would be untouched. 

or we could introduce a style class as mentioned https://github.com/flutter/website/pull/11093#discussion_r1757230428. This will bring Slider components customization to the widget level, this is something not possible right now. > Good points! Maybe then the style object idea proposed in the migration guide PR is the way to go!

I think if the future Slider updates doesn't have a gap, it might hard to keep a gapped constructor. I'm going for style object way so we can bring the customization to the widget level as well. In fact, I've an idea to simplify styling the Slider with one line to get gapped design. I'll make progress on this this week!  Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/152237).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #152237 at sha 51c45418c99c823048c652151a097dcc010a02e5_

 This is ready for review.  This now has `Slider.year2023` flag and similar in https://github.com/flutter/flutter/pull/154817Thanks for adding the feature! This looks so great! I haven't finish reviewing the whole change, will continue tomorrow😎!

I also noticed slider.0.dart and slider.1.dart are basically the same. I think slider.1.dart was added when `useMaterial3` was still false? Maybe we can delete one of these and add a button to switch between M2 and M3 in just one example app. This can be done later in a separate PR:) Thank you for your patience here, I'll be much quicker on the follow up reviews. 🙏 💙  LGTM, kicking off Google testing 🤞 
Can you confirm the comment on `Slider` docs below? Let's fix the naming conflict and then I'll rerun the Google testing shard.
We might need to implement an opt in first, but it will be easier to evaluate that option once all the failures from the name conflict are gone.

I think we'll definitely want a migration guide for folks that do not want the new appearance.

I grabbed some of the screenshot test failures for you to review. Some of them looked unexpected. I can dig deeper on each in the next run, just wanted to see if any jumped out at you at first glance.

On the left is `before`, on the right is `with this change`.

![Screenshot 2024-08-26 at 12 33 13 PM](https://github.com/user-attachments/assets/9b36827b-5477-4a25-9d89-d2441fba5bb9)

![Screenshot 2024-08-26 at 12 31 21 PM](https://github.com/user-attachments/assets/302c9c18-9960-475f-a42b-0f105ccfacab)

![Screenshot 2024-08-26 at 12 30 54 PM](https://github.com/user-attachments/assets/2c1fa75e-3e92-455c-b7c7-9344fa681dc1)

![Screenshot 2024-08-26 at 12 30 39 PM](https://github.com/user-attachments/assets/14acee7a-76b5-454f-85c3-8cb8fdb4d700)

![Screenshot 2024-08-26 at 12 30 21 PM](https://github.com/user-attachments/assets/edbd1022-a0e4-427d-a770-0ae0fa982f70)

![Screenshot 2024-08-26 at 12 29 53 PM](https://github.com/user-attachments/assets/a09f420b-90be-45a7-ade2-e3b99ad67d85)
","Thanks for adding the feature! This looks so great! I haven't finish reviewing the whole change, will continue tomorrow😎!

I also noticed slider.0.dart and slider.1.dart are basically the same. I think slider.1.dart was added when `useMaterial3` was still false? Maybe we can delete one of these and add a button to switch between M2 and M3 in just one example app. This can be done later in a separate PR:) Thank you for your patience here, I'll be much quicker on the follow up reviews. 🙏 💙  LGTM, kicking off Google testing 🤞 
Can you confirm the comment on `Slider` docs below? Let's fix the naming conflict and then I'll rerun the Google testing shard.
We might need to implement an opt in first, but it will be easier to evaluate that option once all the failures from the name conflict are gone.

I think we'll definitely want a migration guide for folks that do not want the new appearance.

I grabbed some of the screenshot test failures for you to review. Some of them looked unexpected. I can dig deeper on each in the next run, just wanted to see if any jumped out at you at first glance.

On the left is `before`, on the right is `with this change`.

![Screenshot 2024-08-26 at 12 33 13 PM](https://github.com/user-attachments/assets/9b36827b-5477-4a25-9d89-d2441fba5bb9)

![Screenshot 2024-08-26 at 12 31 21 PM](https://github.com/user-attachments/assets/302c9c18-9960-475f-a42b-0f105ccfacab)

![Screenshot 2024-08-26 at 12 30 54 PM](https://github.com/user-attachments/assets/2c1fa75e-3e92-455c-b7c7-9344fa681dc1)

![Screenshot 2024-08-26 at 12 30 39 PM](https://github.com/user-attachments/assets/14acee7a-76b5-454f-85c3-8cb8fdb4d700)

![Screenshot 2024-08-26 at 12 30 21 PM](https://github.com/user-attachments/assets/edbd1022-a0e4-427d-a770-0ae0fa982f70)

![Screenshot 2024-08-26 at 12 29 53 PM](https://github.com/user-attachments/assets/a09f420b-90be-45a7-ade2-e3b99ad67d85)
","fixes [Update `Slider` for Material 3 redesign](https://github.com/flutter/flutter/issues/141842)
previous implementation https://github.com/flutter/flutter/pull/147783

### Description

This PR introduces new Material 3 Slider design. 

### Slider Preview

<img width=""912"" alt=""Screenshot 2024-07-24 at 16 38 11"" src=""https://github.com/user-attachments/assets/9645ff6c-b72a-40aa-ae95-4f76994f8302"">

<img width=""912"" alt=""Screenshot 2024-07-24 at 16 38 24"" src=""https://github.com/user-attachments/assets/fbaed8bb-2717-43a9-9415-ea1365165d9a"">

### Value indicator Preview


https://github.com/user-attachments/assets/45fa001c-de81-433a-a8e9-6c0d6a2335c0

### New stop indicator


https://github.com/user-attachments/assets/ad05621d-042d-4b17-9dbb-7f7b802a2593


### Customized 

<img width=""912"" alt=""Screenshot 2024-07-24 at 16 41 49"" src=""https://github.com/user-attachments/assets/2f279240-5af8-4bc8-9c65-a4b4ac718101"">



## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","`.withOpacity(0.38).withOpacity(0.12)` is this a typo? also here:) Is this the padding for the handle on both sides? If so, I think we can use this token: https://github.com/flutter/flutter/blob/e33eb5b46e591bdb97ee3adbd47aab80122445f3/dev/tools/gen_defaults/data/slider.json#L6 Would it be better if we just call it `thumbSize`? Just feel it would be more consistent with other properties. From the [specs](https://m3.material.io/components/sliders/specs#0ead3403-84ad-4d39-abb6-46400f9515a8), it seems we don't have overlayColor by default. Looks like these have been deprecated internally but haven't been updated on the website. Maybe we can change this to transparent color or change the default overlayShape to null? ```suggestion
      Radius.circular(thumbSize.shortestSide / 2),
``` Yes, good catch! You're right, I also tested Slider on the native and it doesn't seem to have overlay color anymore but when using it there is no other way to indicate if the Slider is hovered or focused. I sent a Demo on Discord.

IMO, to avoid breaking existing tests and focus, hover behavior of the Flutter Slider widget, we can keep the overlay color as it is until we have other ways to indicate these states.  The reason i made it `barThumbSize` because it's a `Size` type and this is not compatible with existing Thumb as it is just a circle and it would be `double` aka radius value. If the user expect `thumbSize` to update existing thumb it might create confusion. 

However, you raised a good point on consistency. I will take a look if `thumbSize` of `Size` type can be used for existing thumb radius by rounding to square value.   ```suggestion
      : _SliderDefaultsM2(context: context, sliderTheme: sliderTheme);

``` Why do we need to make a copy of the theme? This looks unique. :) Same here. Can the SliderThemeData not be acquired like the ThemeData is below using the context? Nit: Remove `=>` when followed by a multiline block. Why the change here, do we expect it to be breaking? Is this value represented by a token? Can you file an issue to follow up and include it here? Should we put this number in a constant? Should this number be kept in a constant? Multiline `=>` nit here as well. I agree. I did not realize this theme data class was so large. There are a lot of parameters here, so having a clear name would be ideal. Maybe (in a separate change) we can look at this, and maybe group the parameters together based on the type of slider they apply to. Is this only relevant for the M3 slider? Or both? We should check that the docs clearly state when/how a parameter/behavior/etc applies for M2 versus M3 Another thought for another change later - there's a ton of stuff in this massive file. Might be worth sending a change after this to move everything that does not relate to slider theme out of this file to a new one. Is it default for M3? Great idea! Removing `sliderTheme` parameter. > Why the change here, do we expect it to be breaking? Is this value represented by a token?

This is updated by the  track height token which has a new value. 

```dart
class _${blockName}DefaultsM3 extends SliderThemeData {
  _${blockName}DefaultsM3(this.context)
    : super(trackHeight: ${getToken('$tokenGroup.active.track.height')});
```

> Should this number be kept in a constant?

This value is taken from token. I think it is the correct place for this. > Should we put this number in a constant?


This value is taken from token. I think it is the correct place for this.

It actually divides the new stop indicator radius value by 2. 
```dart
  @override
  SliderTickMarkShape? get tickMarkShape => const RoundSliderTickMarkShape(tickMarkRadius: ${getToken(""$tokenGroup.stop-indicator.size"")} / 2);
``` Thank you! Added new line.  Thank you!"
150031,2024-06-11T04:49:50Z,2024-10-02T20:08:11Z,MitchellGoodwin,17,30,67,1351,10,3,0,"['framework', 'f: material design', 'f: cupertino', 'd: api docs', 'd: examples', 'f: routes', 'autosubmit']",1966466.0,0,14138872.0,0,0,0,0,3016576.408303,,0,67,0,False,"['brian-superlist', 'kuhnroyal', 'MitchellGoodwin', 'Piinks', 'justinmc']","@justinmc this one has the refactor of route animation logic so that the prior route does not need to opt in to get it's transition overwritten, it will always happen. So `DelegatedTransition` is gone. There's documentation missing, but could you take a look and see if I'm on the right track? The switch happens in `ModalRoute` now. If this is fine, then I'll start moving this into a non-draft PR by adding a non MBS example, get the documentation solid, write tests etc. Here's my example of a custom non-MBS delegated transition:

https://github.com/user-attachments/assets/74410b50-0014-4338-85ef-5c2721a243e4

<details>

<summary>Code</summary>

```dart

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Mixing Routes',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        pageTransitionsTheme: const PageTransitionsTheme(
          builders: <TargetPlatform, PageTransitionsBuilder>{
            TargetPlatform.iOS: ZoomPageTransitionsBuilder(),
          },
        ),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Zoom Transition'),
    );
  }
}

class MyHomePage extends StatelessWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).colorScheme.inversePrimary,
          title: Text(title),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextButton(
                onPressed: () {
                  Navigator.of(context).push(
                    VerticalTransitionPageRoute(
                      context: context,
                      builder: (BuildContext context) {
                        return  const MyHomePage(title: 'Crazy Vertical Transition');
                      },
                    ),
                  );
                },
                child: const Text('Crazy Vertical Transition'),
              ),
              TextButton(
                onPressed: () {
                  Navigator.of(context).push(
                    MaterialPageRoute(
                      builder: (BuildContext context) {
                        return  const MyHomePage(title: 'Zoom Transition');
                      },
                    ),
                  );
                },
                child: const Text('Zoom Transition'),
              ),
              TextButton(
                onPressed: () {
                  CupertinoPageRoute route = CupertinoPageRoute(
                    builder: (BuildContext context) {
                      return  const MyHomePage(title: 'Cupertino Transition');
                    }
                  );
                  Navigator.of(context).push(route);
                },
                child: const Text('Cupertino Transition'),
              ),
            ],
          ),
        ),
    );
  }
}

class VerticalTransitionPageRoute<T> extends PageRoute<T> with FlexibleTransitionRouteMixin<T> {
  /// Creates a page route for use in an iOS designed app.
  VerticalTransitionPageRoute({
    required this.builder,
    required BuildContext context,
  });

  final WidgetBuilder builder;

  @override
  DelegatedTransitionBuilder? get delegatedTransition => VerticalPageTransition._delegatedTransition;

  @override
  Color? get barrierColor => const Color(0x00000000);

  @override
  bool get barrierDismissible => false;

  @override
  String? get barrierLabel => 'Should be no visible barrier...';

  @override
  bool get maintainState => true;

  @override
  bool get opaque => false;

  // Begin PageRoute.

  @override
  Duration get transitionDuration => const Duration(milliseconds: 2000);

  @override
  Widget buildPage(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation) {
    return builder(context);
  }

  static Widget buildPageTransitions<T>(
    ModalRoute<T> route,
    BuildContext context,
    Animation<double> animation,
    Animation<double> secondaryAnimation,
    Widget child,
  ) {
    return VerticalPageTransition(
      primaryRouteAnimation: animation,
      secondaryRouteAnimation: secondaryAnimation,
      child: child,
    );
  }

  // TODO(justinmc): No canTransitionTo needed? I want to be able to have
  // back-to-back VerticalPageTransitions.

  @override
  Widget buildTransitions(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation, Widget child) {
    return buildPageTransitions<T>(this, context, animation, secondaryAnimation, child);
  }

  // End PageRoute.
}

class VerticalPageTransition extends StatelessWidget {
  VerticalPageTransition({
    super.key,
    required Animation<double> primaryRouteAnimation,
    required this.secondaryRouteAnimation,
    required this.child,
  }) : _primaryPositionAnimation =
           CurvedAnimation(
                 parent: primaryRouteAnimation,
                 curve: curve,
                 reverseCurve: curve,
               ).drive(_kBottomUpTween),
      _secondaryPositionAnimation =
           CurvedAnimation(
                 parent: secondaryRouteAnimation,
                 curve: curve,
                 reverseCurve: curve,
               )
           .drive(_kTopDownTween);

  // When this page is coming in to cover another page.
  final Animation<Offset> _primaryPositionAnimation;

  // When this page is being coverd by another page.
  final Animation<Offset> _secondaryPositionAnimation;

  /// Animation
  final Animation<double> secondaryRouteAnimation;

  /// The widget below this widget in the tree.
  final Widget child;

  static const Curve curve = Curves.decelerate;

  static final Animatable<Offset> _kBottomUpTween = Tween<Offset>(
    begin: const Offset(0.0, 1.0),
    end: Offset.zero,
  );

  static final Animatable<Offset> _kTopDownTween = Tween<Offset>(
    begin: Offset.zero,
    end: const Offset(0.0, -1.0),
  );

  static Widget _delegatedTransition(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation, Widget? child) {
    final Animatable<Offset> tween = Tween<Offset>(
      begin: Offset.zero,
      end: const Offset(0.0, -1.0),
    ).chain(CurveTween(curve: curve));

    return SlideTransition(
      position: secondaryAnimation.drive(tween),
      child: child,
    );
  }

  @override
  Widget build(BuildContext context) {
    assert(debugCheckHasDirectionality(context));
    final TextDirection textDirection = Directionality.of(context);
    return SlideTransition(
      position: _secondaryPositionAnimation,
      textDirection: textDirection,
      transformHitTests: false,
      child:  SlideTransition(
        position: _primaryPositionAnimation,
        textDirection: textDirection,
        child: ClipRRect(
          borderRadius: const BorderRadius.vertical(top: Radius.circular(12)),
          child: child,
        )
      ),
    );
  }
}

```

</details> Also random thought: Any concerns about how the drag-to-close interaction will work with MBS? Seems like it should be fine with this API but I wanted to bring it up. > Also random thought: Any concerns about how the drag-to-close interaction will work with MBS? Seems like it should be fine with this API but I wanted to bring it up.

As in dragging it to partially close the animation, like the Cupertino transition does? It should work fine. The Cupertino transition works correctly when dragging back to a non-Cupertino page with this PR. I mean when the MBS is open, dragging it down to close it and dismiss all of its routes. Yes, I believe that shouldn't be affected. > Ideally these subclasses would be const so you can just do a normal equality check, but if not you could do a type check.

@justinmc I went with a type check, because with the Zoom transition snapshotting behavior we talked about offline, there are cases were the builder may be different, but you would want to not overwrite the previous pages transition. If you do want to make two or more delegates that do override the previous one, you would make a class type for each variation. Hey @jamesblasco. This PR is nearing completion for allowing mixing different route transitions. If you are able to take a look and see if how this looks from the perspective of enabling adding a Cupertino modal bottom sheet, that would be helpful. Is there a quick and easy way to opt out of this change? It's breaking tests in our app where I'm trying to upgrade to the master branch to add WASM Support (I need master branch as it has a few important fixes for WASM). I'm already introducing so many changes to support the new js_interop/html and upgrading a bunch of our packages to support web 1.0, I'd really rather not refactor our routing stack to support this one change as well.

I've pinpointed this commit as the failure point. For those who hit this same issue, I found overriding the `MaterialApp.pageTransitionsTheme` with custom versions that do not include these new transitions fixes the issue for me. @brian-superlist could you file an issue with more info on what got broken? This was intended to not be a breaking change. @MitchellGoodwin I'll try to boil it down -- our tests that failed are broad integration tests that cover many widgets together and I'm unsure how long it will take to create a minimal repro. I'll see if I can do so in a reasonable timeframe. @brian-superlist are these tests registered in flutter/tests? We run all of the tests registered there on every pull request before landing a change in flutter/flutter. @Piinks Nope, we have many of our open source projects on there, but this particular failure was against our closed source app. As far as I understand, that violates the first criterion:

> All the code must be available publicly on GitHub under a license compatible with this effort.
 I have an app where the transition is broken after this change.
From a route built via `PageRouteBuilder` to a `MaterialPageRoute(fullscreenDialog: true)`.
Before this commit, there was NO outgoing transition for the underlying `PageRouteBuilder`, now there is an outgoing animation which seems wrong. This is mainly noticeable on iOS where the underlying page is transitioned out to the left while the fullscreen page slides up from the bottom. Please file an issue with a code sample that reproduces the problem. We cannot triage and address issues in closed PRs. Thanks! Done!Here's the review put together while @MitchellGoodwin walked me through this PR over GVC. I've been ignoring small things like incomplete docs in other reviews, but I decided to go all out on that nitpicky stuff in this one haha. Feel free to ignore if there's still anything major that might change.

Overall the architecture looks good as long as everything is working. The biggest API related question I had was just about buildFlexTransitions and nextRouteTransition, and needing help understanding them. I had an idea (below) about possibly simplifying them.

Otherwise just small stuff. I think the `name` string comparison is not doable because of the risk of collision. How about instead, for each of the places where you currently instantiate DelegatedTransition with a unique `name` string, create a subclass of DelegatedTransition with a hardcoded `builder`. E.g. ZoomPageDelegatedTransition or something like that. Ideally these subclasses would be `const` so you can just do a normal equality check, but if not you could do a type check. I think the biggest thing to think about is just the default delegatedTransitions in PageTransitionsBuilder, which I commented on. Not sure if I'm understanding it correctly though.

Also I was reviewing this while you pushed some changes, so I may be slightly out of date.","Here's the review put together while @MitchellGoodwin walked me through this PR over GVC. I've been ignoring small things like incomplete docs in other reviews, but I decided to go all out on that nitpicky stuff in this one haha. Feel free to ignore if there's still anything major that might change.

Overall the architecture looks good as long as everything is working. The biggest API related question I had was just about buildFlexTransitions and nextRouteTransition, and needing help understanding them. I had an idea (below) about possibly simplifying them.

Otherwise just small stuff. I think the `name` string comparison is not doable because of the risk of collision. How about instead, for each of the places where you currently instantiate DelegatedTransition with a unique `name` string, create a subclass of DelegatedTransition with a hardcoded `builder`. E.g. ZoomPageDelegatedTransition or something like that. Ideally these subclasses would be `const` so you can just do a normal equality check, but if not you could do a type check. I think the biggest thing to think about is just the default delegatedTransitions in PageTransitionsBuilder, which I commented on. Not sure if I'm understanding it correctly though.

Also I was reviewing this while you pushed some changes, so I may be slightly out of date.","Fixes #33799

Allows for a route to inform the route below it in the navigation stack how to animate when the topmost route enters are leaves the stack.

It does this by making a `DelegatedTransition` available for the previous route to look up and use. If available, the route lower in the stack will wrap it's transition builders with that delegated transition and use it instead of it's default secondary transition.

This is what the sample code in this PR shows an app that is able to use both a Material zoom transition and a Cupertino slide transition in one app. It also includes a custom vertical transition. Every page animates off the screen in a way to match up with the incoming page's transition. When popped, the correct transitions play in reverse.

https://github.com/user-attachments/assets/1fc910fa-8cde-4e05-898e-daad8ff4a697

The below video shows this logic making a pseudo iOS styled sheet transition.

https://github.com/flutter/flutter/assets/58190796/207163d8-d87f-48b1-aad9-7e770d1d96c5

All existing page transitions in Flutter will be overwritten by the incoming route if a `delegatedTransition` is provided. This can be opted out of through `canTransitionTo` for a new route widget. Of Flutter's existing page transitions, this PR only adds a `DelegatedTransition` for the Zoom and Cupertino transitions. The other transitions possible in Material will get delegated transitions in a later PR.","Discussed in person: fix the formatting problems here to make the diff easier to read. ~~I'm curious how it works that delegatedTransition is on the PageTransitionsTheme.~~ ~~I'm also confused why ZoomPageTransitionsBuilder needs to define a delegateTransition.~~ Discussed in person, this is part of the new feature that ZoomPageTransitionBuilder also makes outgoing routes perform a zoom.

We also discussed that maybe some of this code could be deduplicated with _ZoomPageTransition if it makes sense. ~~Users would have to override this if they have their own PageTransitionBuilder with a delegateTransition?~~ Discussed in another comment, the format of where the delegatedTransition is defined for a PageTransitionBuilder will probably change. ~~Why does CupertinoPageTransition now have a delegateTransition? It is making the outgoing route use this as its secondaryTransition? (If they are FlexibleTransitionRouteMixins?)~~ ~~Why 2 separate mixins? I see that MBSRouteTransitionMixin is on ModalRoute, while MBSRouteTransitionMixin is on PageRoute.~~ Discussed in person: FlexibleTransitionRouteMixin will be moved into ModalRoute itself. Discussed in person: To avoid code duplication, consider using the delegateTransition method. Or not if it's trivial. Here and in Material below. Discussed in person: This means that now, CupertinoPageRoute will cause other routes to use this transition when outgoing. Previously the outgoing route would do nothing, so this is a good change, but we should watch out for it being breaking, by running the Google tests. If they fail, maybe this change should be its own separate PR first. Discussed in person: How can I the app developer specify a custom PageTransitionsBuilder AND its delegatedTransition?

Maybe we can put the delegatedTransition inside of the PageTransitionsBuilder somehow. These things are conceptually linked. When I write my own PageTransitionsBuilder, I will want to write a delegatedTransition to go along with it and always be tied to it. Discussed in person: Talking about opt-out by default. The default implementations of TransitionRoute.canTransitionTo/From are both `=> true`. This is good, because when they are true, we will use the delegatedTransition. If a user has previously set one/both of them to false, then they are saying that they don't want a transition to happen at all, and that's still the behavior they will get after this PR.

We should make sure we have a test(s) for these scenarios.

@MitchellGoodwin to check what happens when canTransitionTo and canTransitionFalse do not agree. Now talking about opt-out not as in do nothing, but as in do your existing custom transition and NOT the delegatedTransition. I'm guessing most users that want to opt out will want to do that.

With the current state of this PR it's not possible. We'll have to add a way for these users to make some code change to explicitly opt out. We were thinking something like a boolean flag on ModalRoute?

We think that users that are currently doing this setup (they have a custom transition and they want it to always do its secondaryTransition on the way out regardless of what the next route is) must have implemented a custom ModalRoute. It wouldn't be possible to do this if you only wrote a PageTransitionsBuilder. Therefore it's OK to do this as a flag on ModalRoute.

Probably another thing to test. Discussed in person: We have concerns about jumping from a delegatedTransition back to the original non-delegated transition while outgoing. So this is the case we should test:

 1. Push a non-MBS route and then an MBS route.
 2. Pop both of them quickly.

The non-MBS route will have its receivedTransition cleared (line 2534 here) in the middle of performing it, and will switch back to its normal non-delegated transition. It will probably look jumpy.

What can we do to avoid that and make it look smooth like the existing train hopping? Well removing the didPopNext method below seems like it would do it... But is that breaking anything else? @MitchellGoodwin said that it's done that way in the existing train hopping logic as well, so maybe it's necessary for something related to train hopping. Discussed in person why this was needed: The case is when pushing two routes and then popping them in succession. Call them Route1, 2 and 3.

When Route3 is popped, Route2 is using its delegatedTransition. When that transition finishes and Route3 is long gone, Route2 still has Route3's delegatedTransition in its widget tree! And not its own usual transitions provided by something like [PageTransitionsBuilder.buildTransitions](https://main-api.flutter.dev/flutter/material/PageTransitionsBuilder/buildTransitions.html). When Route2 is then popped, this didPop method is called and its receivedTransition is set to null so that it can go back to using its own original transition. But, that also causes the problem given in my comment a few lines above. @MitchellGoodwin That makes me think of another possible bug here. Same setup as before: push Route2 and Route3, then pop Route3. Now instead of popping Route2, push a new Route4, which does not have a delegatedTransition. If I'm understanding correctly, Route2 will not animate out correctly.

We should add a test for that too. The use of FlexibleTransitionRouteMixin won't be necessary when that code is moved into ModalRoute, and any other people that extended ModalRoute will get the new functionality automatically 👍 . I commented on this above in the example after discussing in person. The format of how the delegatedTransition will have to change. Ideally it will be provided alongside the transition itself, maybe part of the PageTransitionsBuilder. Discussed in person, @MitchellGoodwin was still looking into if this was the best way to do this. Sorry for the late response. That last scenario will actually currently work. If Route4 does not have a delegate transition, then Route2 will set its `reveivedTransition` to null, so it will have it's original transitions. Whether it plays that transition or not when Route4 is pushed on top is up to `canTransitionTo` and `canTransitionFrom`, which is current behavior before this PR. 
https://github.com/user-attachments/assets/72654697-6150-4814-b199-43be40ad9597

What it currently looks like. It is pretty jumpy.  Making a note that we were talking offline about solving this jumpiness by:

 * Always keep all 3 transitions in the widget tree. Don't swap in/out the delegated/received transition tree.
 * Create a new Animation that only drives the delegated transition. Or make a copy of secondaryAnimation somehow?

Not sure how feasible that is at this point though... I think this has been resolved. I see the delegatedTransitionBuilder is defined on the PageTransitionsBuilder, so it's all in the same place now 👍 . By default there is no delegated transitions, if the user wants they can write their own by overriding delegatedTransitionBuilder. Nit: I would make it private: _MyHomePage. Indentation is wrong here. I would make this private as well and then put the comment on the class:

```
// A PageRoute that applies VerticalPageTransition.
``` Don't forget to remove this. The question stands though. I guess it doesn't need canTransitionTo unless we want to demonstrate that somehow? I'd make it private and comment:

```
// A page transition that slides off the screen vertically, and uses
// delegatedTransition to ensure that the outgoing route slides with it.
```  I misspelled ""covered"". Also it's up to you if these comments are necessary or not. This comment is probably not necessary at least. Probably worth a comment here?

```
// When the VerticalTransitionPageRoute animates onto or off of the navigation
// stack, this transition is given to the route below it so that they animate in
// sync.
```"
159234,2024-11-21T00:30:07Z,2024-11-21T17:41:05Z,matanlurey,3,0,2,404,2,1,1,['tool'],166.0,0,66952.0,0,0,0,0,3020879.458056,,1,2,0,False,"['matanlurey', 'gmackall']","It might be useful to review this with whitespace diffs disabled, sorry about that. @gmackall I am going to land this to see if it helps CI at all, but your comments are still welcome in-post. Github won't let me approve but LGTM",,"Speculative fix for https://github.com/flutter/flutter/issues/157640.

A few observations:

- I was a bit paranoid about indented files meaning something was parsed incorrectly
- I removed `android.enableR8=true` (not used elsewhere)
- I removed `android.experimental.enableNewResourceShrinker=true` (not used elsewhere)
- I matched the rest of the `jvmargs` used in the standard template file

... let's hope this does good things?",
159169,2024-11-19T21:19:54Z,2024-11-21T19:05:56Z,jason-simmons,0,0,2,10,1,1,1,['tool'],,0,164764.0,0,0,0,0,3020881.041254,,0,2,0,False,[],,,"Killing the flutter_tools parent process may leak child processes spawned by the tools.

Also wait for the message indicating that DevTools has started before stopping flutter_tools.  If DevTools has not fully launched, then there may be a race between DevTools startup and flutter_tools shutdown.

Fixes https://github.com/flutter/flutter/issues/159154",
152535,2024-07-30T03:08:04Z,2024-08-01T22:28:23Z,nate-thegrate,4,0,1,169,8,1,1,"['a: text input', 'framework', 'd: api docs', 'd: examples', 'f: focus', 'autosubmit', 'refactor']",241742.0,0,9905809.0,0,0,0,0,3022147.497302,,0,1,0,False,"['bleroux', 'nate-thegrate', 'victorsanni']","Linking the original PR: https://github.com/flutter/flutter/pull/146043 LGTM! Thanks for the PR. @nate-thegrate The new syntax is shorter and the main benefit turned out to be the equality problem it solved.

Nonetheless, while working with it those days, I found it difficult to work with it when debugging is involved.
I mainly work on fixing particular issues, and some are related to wrong states being propagated.
With the old syntax, one can simply add a print statement or a breakpoint to :
1. Know the states provided for the resolution.
2. Understand the resolution.

With the new syntax, I did not find a convenient way (other than adding breakpoint into WidgetStateMapper.resolve which is not very friendly when debugging issues with dozen of resolved colors or other properties).

Any idea to mitigate this is welcomed. Fair point! I agree that there's a tradeoff between using a callback vs. a map in terms of verbosity/performance/debugging.

I bet there are a lot of different ways we could go about improving the debugging experience. Currently there's a way to conveniently convert from stateless → stateful widget; perhaps the same could be done for map → callback.

![convert to StatefulWidget](https://github.com/user-attachments/assets/779454ca-077c-460e-9202-62496b8ef0ba)

I'll keep this in mind and will try to come up with some alternatives too.",,"Currently, there are 21 `.resolveWith()` calls in example files.

This pull request changes 11 of them to use the new `.fromMap()` constructor. (Seven of them are now `const`!)

```dart
ListTile(
  iconColor: WidgetStateColor.fromMap(<WidgetStatesConstraint, Color>{
    WidgetState.disabled: Colors.red,
    WidgetState.selected: Colors.green,
    WidgetState.any:      Colors.black,
  }),
  // The same can be achieved using the .resolveWith() constructor.
  // The text color will be identical to the icon color above.
  textColor: WidgetStateColor.resolveWith((Set<WidgetState> states) {
    if (states.contains(WidgetState.disabled)) {
      return Colors.red;
    }
    if (states.contains(WidgetState.selected)) {
      return Colors.green;
    }
    return Colors.black;
  }),
),
```",
158938,2024-11-14T17:50:10Z,2024-11-14T18:33:27Z,engine-flutter-autoroll,0,0,5,2,1,1,1,[],,0,607935.0,0,0,0,0,3022296.802235,,0,5,0,False,[],,,"
https://github.com/flutter/packages/compare/26e123a6ce03...b9ac917daeb0

2024-11-13 louisehsu@google.com [in_app_purchase_storekit] Fixes manual invocation of `finishTransaction()` triggering fatal crash (flutter/packages#8071)
2024-11-13 49699333+dependabot[bot]@users.noreply.github.com [webview]: Bump androidx.annotation:annotation from 1.8.2 to 1.9.1 in /packages/webview_flutter/webview_flutter_android/android (flutter/packages#7988)
2024-11-13 louisehsu@google.com [in_app_purchase_storekit] Remove unneeded platform annotations  (flutter/packages#7914)
2024-11-13 stuartmorgan@google.com [tool] Improve Swift lint error message (flutter/packages#8074)
2024-11-13 engine-flutter-autoroll@skia.org Roll Flutter from c8510f29ccc2 to ed553d10cf63 (48 revisions) (flutter/packages#8076)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
148784,2024-05-21T18:17:04Z,2024-11-21T01:35:02Z,justinmc,6,30,15,1994,13,3,1,"['a: text input', 'framework', 'f: material design', 'f: cupertino']",657834.0,1,15898192.0,0,0,0,0,3023226.151738,,0,15,0,False,"['vistaar-mlopes', 'justinmc']","hi. @justinmc I have Samsung galaxy s9 ultra tab, I wanted to implement the above feature. I went through above PR and till it gets approved, can you please suggest a temporary solution that I can implement using native android? 
I found your comment on using 2 native methods :
""Android's InputMethodManager class already has support for stylus handwriting. We'll need to tie these into the framework similarly to how it's done for iOS.

Some relevant methods:

1.InputMethodManager.startStylusHandwriting
2.View.setAutoHandwritingEnabled""
can I implement method channnel and access this native features?

Thanks. @vistaar-mlopes I'm not sure whether you could get this working by writing a plugin. The bare minimum thing you'd need to do is to [call startStylusHandwriting on the InputMethodManager](https://github.com/flutter/engine/pull/52943/files#diff-ef88f9b38c44f43fdc7c5c0f84591b537b9da1888e680241777294bb8ca0318aR66). If you couldn't do that with a plugin, you would need to build a custom engine and framework.

By the way, if you end up trying this feature out using your Samsung device, could you let me know if it works? I'm assuming/hoping that other Android devices will work the same as what I'm using (Pixel Tablet). @justinmc Recently I got a Lenovo tab. I tried to scribble on the text field and it worked. I typed hello and it was there in the text field. whereas I tried the same on the Samsung tab with S-pen it didn't work. Now I'm not sure where the issue is. Is it a flutter issue or is it device dependent? @vistaar-mlopes Interesting! You tried this on master, not on this branch, right? I'm not sure how those other devices do handwriting. Maybe they have their own implementations since I believe Android hasn't supported this officially until recently. @vistaar-mlopes If you could try this branch out with your Samsung and Lenovo tablets I'd be interested to see if it solves your problem! Now no engine change is needed, just this framework branch. This PR is ready for re-review. Changes:

 * Gesture detection is now done in a normal GestureDetector, and has been moved to text_selection.dart.
 * The padding feature has been dropped from this PR, and will likely need https://github.com/flutter/flutter/issues/75747 in order to implement it.

A question for reviewers: The `stylusHandwritingEnabled` parameter is set on EditableText but currently just read by TextSelectionGestureDetector. Is there a cleaner way to do that? I don't want to split up iOS and Android handwriting into multiple flags or configurations.(looked at widgets and services) Regarding hit-testing, how important is it to support `_handwritingPadding` for how? 

Can this be implemented using gesture recognizers, by either:
- move the logic to TextField like other gesture recognizers
- ignore the padding for now, and implement https://github.com/flutter/flutter/issues/75747 to allow the RenderBox to accept out-of-bounds events for the subtree

So we don't have to replicate the hit testing logic and z-index hittest behavior logic? Suggestions for fixing [**Linux analyze**](https://github.com/flutter/flutter/pull/148784/checks?check_run_id=32958313187)… LGTM with nits","(looked at widgets and services) Regarding hit-testing, how important is it to support `_handwritingPadding` for how? 

Can this be implemented using gesture recognizers, by either:
- move the logic to TextField like other gesture recognizers
- ignore the padding for now, and implement https://github.com/flutter/flutter/issues/75747 to allow the RenderBox to accept out-of-bounds events for the subtree

So we don't have to replicate the hit testing logic and z-index hittest behavior logic? Suggestions for fixing [**Linux analyze**](https://github.com/flutter/flutter/pull/148784/checks?check_run_id=32958313187)… LGTM with nits","Enables the Scribe feature, or Android stylus handwriting text input.

![scribe](https://github.com/flutter/flutter/assets/389558/25a54ae9-9399-4772-8482-913ec7a9b330)

This PR only implements basic handwriting input. Other features will be done in subsequent PRs:

 * https://github.com/flutter/flutter/issues/155948
 * https://github.com/flutter/flutter/issues/156018

I created and fixed issue about stylus hovering while working on this: https://github.com/flutter/flutter/issues/148810

Original PR for iOS Scribble, the iOS version of this feature: https://github.com/flutter/flutter/pull/75472
FYI @fbcouch 

~~Depends on https://github.com/flutter/engine/pull/52943~~ (merged).

Fixes https://github.com/flutter/flutter/issues/115607

<details>

<summary>Example code I'm using to test this feature (but any TextField works)</summary>

```dart
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final FocusNode _focusNode1 = FocusNode();
  final FocusNode _focusNode2 = FocusNode();
  final FocusNode _focusNode3 = FocusNode();
  final TextEditingController _controller3 = TextEditingController(
    text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Scribe demo'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 74.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                focusNode: _focusNode1,
                autofocus: false,
              ),
              TextField(
                focusNode: _focusNode2,
              ),
              TextField(
                focusNode: _focusNode3,
                minLines: 4,
                maxLines: 4,
                controller: _controller3,
              ),
              TextButton(
                onPressed: () {
                  _focusNode1.unfocus();
                  _focusNode2.unfocus();
                  _focusNode3.unfocus();
                },
                child: const Text('Unfocus'),
              ),
              TextButton(
                onPressed: () {
                  _focusNode1.requestFocus();
                  SchedulerBinding.instance.addPostFrameCallback((Duration _) {
                    SystemChannels.textInput.invokeMethod('TextInput.hide');
                  });
                },
                child: const Text('Focus 1'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
```

</details>
","Note to self: I can listen directly to the global pointer binding to avoid the problem with clipping out events that I want. These Scribble tests were just moved out of editable_text_test.dart. `final class` since everything seems to be static. Who calls this private constructor? Also how's linter not complaining if this is not used. How often does the caller have to check if the feature is available? Can I assume the return value won't change while the app is running? Do `false` and `null` mean the same thing? From the Android documentation this can't be called when there is no active input connection it seems (maybe I'm reading the doc wrong, it says ""This will always be preceded by onStartInput(android.view.inputmethod.EditorInfo, boolean) for the EditorInfo and InputConnection for which stylus handwriting is being requested"")?  https://main-api.flutter.dev/flutter/painting/EdgeInsets/deflateRect.html ? https://main-api.flutter.dev/flutter/painting/MatrixUtils/transformRect.html is probably more idiomatic. What prevents 2 overlapping text fields from competing for stylus point down events? Also, the stylus hitting an invisible text field (in an inactive route, for example) would also trigger scribble it seems? `enabled` is always true here right? I wish this logic lives in the TextSelectionHandle (or whatever it is called) since we have different handle classes for android and iOS (I think)?  Also why can't this be a regular gesture recognizer / detector? Is it because of the padding? Ah this is leftover from when I was handling gesture calls, before I moved it to a separate branch. I'll just remove all this. Not sure about the linter! Maybe the linter can't handle constructors? It must be called each time before calling startStylusHandwriting. I'll update the docs. The nullability is a limitation of [invokeMethod](https://main-api.flutter.dev/flutter/services/MethodChannel/invokeMethod.html) (docs don't explain it super well either but maybe it's just that the codec can't enforce non-nullability?). I will explain in the docs here. Good call, I tried calling it with no active TextInputConnection and it was ignored. I'll update the docs to explain this. I will follow up on this one on Monday.

 > What prevents 2 overlapping text fields from competing for stylus point down events?

Good catch, I just tried this out and it looks like the behavior to the user is that the field lowest in the tree will win if I write directly in between the two fields, where their paddings are overlapping. If I get really accurate with the stylus I can write just in the bottom of the upper field but the lower field will receive the text, but for the most part the behavior is probably fine in this ambiguous situation.

However, both fields do receive the event. I'll need to follow up and do something to prevent that.

<details>

<summary>3 TextFields right next to each other</summary>

```dart
child: Column(
  mainAxisAlignment: MainAxisAlignment.center,
  children: <Widget>[
    TextField(
      controller: controller,
      stylusHandwritingEnabled: true,
      decoration: InputDecoration(
        border: OutlineInputBorder(),
      ),
    ),
    TextField(
      stylusHandwritingEnabled: true,
      decoration: InputDecoration(
        border: OutlineInputBorder(),
      ),
    ),
    TextField(
      stylusHandwritingEnabled: true,
      decoration: InputDecoration(
        border: OutlineInputBorder(),
      ),
    ),
  ],
),
```

</details>

 > Also, the stylus hitting an invisible text field (in an inactive route, for example) would also trigger scribble it seems?

Should I check `ModalRoute.of(context)` or something like that? Anything else I should check?

 > Also why can't this be a regular gesture recognizer / detector? Is it because of the padding?

Yes, this was my solution to needing to listen to an area outside of the size of the field. nit: `abstract final class` to indicate the class is just a namespace? Would it be possible to do `.then<bool>((bool? value) => value ?? false)`

or `.then<bool>((bool? value) => value ?? throw SomeError)` then? If this is the case shouldn't this API be incorporated into `startStylusHandwriting` then? Since they are always paired? so the IME is responsible for determining when to stop?  nit: [] instead of ``? Why is the default exposed? Is this a fixed size or just the size of the input decorator? Yes, and it is more readable if I pass `true` here :+1:  Good call, I should do this checking and not the user. It sounds like it should, but that's not the way that Android designed their API for whatever reason. I want to provide an accurate reproduction of the Android API in case our users need it.  Yes. It seems like it's a timeout from the last screen touch."
159238,2024-11-21T01:52:46Z,2024-11-21T17:55:45Z,jason-simmons,0,0,2,20,4,1,1,['tool'],,0,57781.0,0,0,0,0,3025095.513551,,0,2,0,False,[],,,See https://github.com/flutter/flutter/issues/159154,
159232,2024-11-20T23:47:38Z,2024-11-21T17:52:37Z,matanlurey,2,0,1,19,3,1,1,"['a: tests', 'framework', 'f: integration_test']",13453.0,0,65102.0,0,0,0,0,3025283.970838,,1,1,0,False,['matanlurey'],"Looks like a fix in g3 is still required. I'll take a look tomorrow  > Looks like a fix in g3 is still required. I'll take a look tomorrow

No fix required, Scuba just reported the DPR changed, which is correct and intended.![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/c66b65ba-2c0b-4b59-b720-68ff28423b38)",![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/c66b65ba-2c0b-4b59-b720-68ff28423b38),"Closes https://github.com/flutter/flutter/issues/66006.

From what I can tell in the multi-view effort a variation of https://github.com/flutter/flutter/pull/88609 already landed, meaning that the current device-pixel-ratio is being used (as the tests in #88609 are now passing), and I believe that means we can remove the override/hack.

Will rely on ""Google Testing"" to run a TGP internally, or do so myself if necessary.
",
159145,2024-11-19T15:48:36Z,2024-11-21T15:51:07Z,jesswrd,1,0,1,881,18,1,1,[],172588.0,1,172952.0,0,0,0,0,3032576.32314,,1,1,0,False,['jesswrd'],"sounds good. done.

LGTM w/ nit that the title if confusing as written, also it isn't just removed because of use of v1 types but also that it isn't testing anything that isn't covered by other tests, right? (otherwise even if it used v1 types we would keep it, and prioritize migrating it to v2).","LGTM w/ nit that the title if confusing as written, also it isn't just removed because of use of v1 types but also that it isn't testing anything that isn't covered by other tests, right? (otherwise even if it used v1 types we would keep it, and prioritize migrating it to v2).","Deleted Android embedding smoke test `firebase_abstract_method_smoke_test`. It is part of v1 embedding removal cleanup. 

This test was marked bringup.

Fixes https://github.com/flutter/flutter/issues/158212

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159072,2024-11-18T13:19:13Z,2024-11-19T11:35:46Z,bleroux,1,5,2,150,2,2,1,"['framework', 'f: material design']",33027.0,0,260461.0,0,0,0,0,3040431.005787,,0,2,0,False,['bleroux'],"@justinmc Thanks for the review, especially for catching these typos. 🙏 

Let see how it goes with Google testing because this might break some golden (if there are golden capturing hovering, focused or pressed state). For instance, with this fix hovered color for some widgets which have a selected state (such as IconButton) is slightly different (the change is slight because the defaults colors are very close but this could be noticed when comparing screenshots.
For instance, here are screenshots of an icon button created from `IconButton.filledTonal` constructor when hovered:

| Before | After |
|--------|--------|
| ![Capture d’écran 2024-11-18 à 11 55 48](https://github.com/user-attachments/assets/4be9a335-03d4-46ff-a96e-68e2a821d384) | ![Capture d’écran 2024-11-18 à 11 56 08](https://github.com/user-attachments/assets/7bbd946b-8e6d-4d5b-a7fd-657d4c90637b) | LGTM with a few typo nits in the docs :+1: 

","LGTM with a few typo nits in the docs :+1: 

","## Description

This PR fixes `InkWell` overlay colors resolution.
The `InkWell` overlay color is resolved when the `InkWell` is either focused, hovered , and/or pressed.
This resolution happens at two places:
- first when the highlight is created.
- then on each build, using the inner function named `getHighlightColorForType`.
This second resolution should be aware of other current states (such as selected) as it might impact the color resolution.

For instance, several Material styles have colors resolution define similarly to:
https://github.com/flutter/flutter/blob/dc44547d0d90dfff4fd4c3bdcd525f9d7a70744e/packages/flutter/lib/src/material/date_picker_theme.dart#L982-L1006

## Related Issue

Fixes [InkWell overlay colors aren't applied on MaterialState.selected state](https://github.com/flutter/flutter/issues/159063)
First step for [Date picker overlay colors aren't applied on MaterialState.selected state](https://github.com/flutter/flutter/issues/130586).

## Tests

Adds 3 tests.","""The"" => ""the"" ""states"" => ""state""
""separatly"" => ""separately"" Good call splitting this out. This is kind of tricky, I hope we don't make this same kind of mistake elsewhere. I guess it's probably rare to speculatively resolve a color like this, though. > I hope we don't make this same kind of mistake elsewher

I looked at various places where the color are resolved. I think this one is somewhat particular because most of InkWell logic was written way before widget state controllers were introduced. For instance the getHighlightColorForType function was added in https://github.com/flutter/flutter/pull/31438 and then was updated and moved later.
This logic can probably be simplified, but because this is a core widget I tried to fix the issue without taking risk."
151136,2024-07-01T21:33:01Z,2024-07-17T05:09:24Z,dkwingsmt,4,0,10,105,2,1,1,"['framework', 'f: cupertino', 'will affect goldens', 'autosubmit']",25032.0,0,12307107.0,0,0,0,0,3060158.14264,,0,10,0,False,"['anchao-lu', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/151136) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #151136 at sha 42cd599bbecd357584822ce457d87a5e47b4d730_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/151136).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #151136 at sha 4721cba2577bfb45702f6995d1e46a59428a136e_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/151136).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #151136 at sha 779a6b21363916c2a92aca9d81f1aa4210a6972e_

 Flutter3.24.5 still not working
```
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.24.5, on macOS 15.0.1 24A348 darwin-arm64, locale zh-Hans-CN)
[✗] Android toolchain - develop for Android devices
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/to/macos-android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.

[✓] Xcode - develop for iOS and macOS (Xcode 16.1)
[✓] Chrome - develop for the web
[!] Android Studio (not installed)
[✓] VS Code (version 1.95.3)
[✓] Connected device (6 available)
```
code
```dart
class CustomerServiceActionSheet extends StatelessWidget {
  const CustomerServiceActionSheet({
    super.key,
    this.onOnlineTap,
    this.onPhoneTap,
  });

  final VoidCallback? onOnlineTap;
  final VoidCallback? onPhoneTap;

  @override
  Widget build(BuildContext context) {
    return CupertinoActionSheet(
      actions: [
        InkWell(
          onTap: () {
            Get.back();
            onOnlineTap?.call();
          },
          child: SizedBox(
            height: 55,
            child: Text(
              'Online Customer Service'.tr,
              style: TextStyle(
                color: AppTheme.current.colors0x333333,
                fontSize: 16,
              ),
            ).center,
          ),
        ),
        InkWell(
          onTap: () {
            Get.back();
            onPhoneTap?.call();
          },
          child: SizedBox(
            height: 55,
            child: Text(
              'Phone Customer Service'.tr,
              style: TextStyle(
                color: AppTheme.current.colors0x333333,
                fontSize: 16,
              ),
            ).center,
          ),
        ),
      ],
      cancelButton: InkWell(
        onTap: Get.back,
        child: SizedBox(
          height: 55,
          child: Text(
            'Cancel'.tr,
            style: TextStyle(
              color: AppTheme.current.colors0x333333,
              fontWeight: FontWeight.bold,
              fontSize: 16,
            ),
          ).center,
        ),
      ),
    );
  }
}
```LGTM",LGTM,"Fixes https://github.com/flutter/flutter/issues/150980

This PR allows buttons implemented with `GestureDetector.onTap` to be selected in the action sheet.

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158905,2024-11-14T03:43:11Z,2024-11-14T04:46:41Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,607235.0,0,0,0,0,3073820.365805,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/e97b148e796d...619804c0fbb7

2024-11-14 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from z-cm2nR0aJ4lXfwZ0... to JkpuAsLzcmYLzf1iX... (flutter/engine#56570)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from z-cm2nR0aJ4l to JkpuAsLzcmYL

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158901,2024-11-14T02:09:16Z,2024-11-14T02:52:08Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,609270.0,0,0,0,0,3077421.147526,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/82940a9aa714...e97b148e796d

2024-11-13 skia-flutter-autoroll@skia.org Roll Skia from ca10bc19c67e to 3750b8939c7f (2 revisions) (flutter/engine#56560)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159231,2024-11-20T23:31:59Z,2024-11-21T01:15:39Z,matanlurey,0,0,1,6,2,1,1,['tool'],,0,6223.0,0,0,0,0,3085106.541429,,0,1,0,False,[],LGTM,LGTM,"Closes https://github.com/flutter/flutter/issues/158560.

I believe but am not sure as of https://github.com/flutter/flutter/pull/159170 merging, many process flakes that were consuming memory and in turn, making Gradle particularly sensitive to timing out or being killing by the OS for low-memory, have been rectified.

It is possible there are additional problems, but they aren't visible at the moment.

I'd like to re-enable these and keep tracking their stability.",
159170,2024-11-19T21:32:10Z,2024-11-21T01:23:13Z,matanlurey,6,19,12,192,6,3,3,['tool'],9995.0,0,100265.0,1,0,0,0,3084653.938535,,0,12,0,False,"['jason-simmons', 'andrewkolos', 'matanlurey']","Alternatively, it might make sense to have a flag that represents whether the app connection was initiated through `flutter run` or `flutter attach`.

`cleanupAfterSignal` could then use that flag to decide whether to call `appFinished` or `exitApp`.  (I'm guessing that this is what `_didAttach` was originally supposed to represent).

With that change, Ctrl-C will stop an app that was launched with `flutter run`.  And that will also accomplish the goal of having flutter_tools stop the flutter_tester process if the tool was launched with `flutter run -d flutter-tester` and is then killed by a signal.

 > Can anyone confirm whether Ctrl-C is expected to stop an app launched by `flutter run`?

I don't believe this is documented. In fact, the current behavior differs based on target platform. When running a Flutter app on an Android emulator, Ctrl-C leaves the app running (unlike sending `q` which exits it). When running a Flutter app on desktop (macOS), Ctrl-C exits the app.

I don't attach/detach when working on Flutter apps personally, so I don't know if my opinion is worth anything. _Personally_, I would expect Ctrl-C to behave similarly to sending `q`. However, `q` also behaves ambiguously. `q` does not quit the app during `flutter attach`, as Jason mentioned, even though the description text still says the app will be. Regardless, this can be treated as a separate issue (as it already is, see https://github.com/flutter/flutter/issues/122303).
 TL;DR [Jason's last comment](https://github.com/flutter/flutter/pull/159170#issuecomment-2487030104) sounds good to me > Alternatively, it might make sense to have a flag that represents whether the app connection was initiated through `flutter run` or `flutter attach`.
> 
> `cleanupAfterSignal` could then use that flag to decide whether to call `appFinished` or `exitApp`. (I'm guessing that this is what `_didAttach` was originally supposed to represent).
> 
> With that change, Ctrl-C will stop an app that was launched with `flutter run`. And that will also accomplish the goal of having flutter_tools stop the flutter_tester process if the tool was launched with `flutter run -d flutter-tester` and is then killed by a signal.

Sounds good, moving this back to draft - will ping when updated. Ok, this simplifies things a bit and added another test case! Updated the commit message to keep https://github.com/flutter/flutter/issues/159154 open.

Something like https://github.com/flutter/flutter/pull/159169 will still be needed on Windows.  The termination signal handler will not run on Windows in response to the integration test calling `Process.kill()` on the flutter_tools process.LGTM I suspect that the original goal of `HotRunner.cleanupAfterSignal` was that a Ctrl-C of flutter_tools should not try to stop the app if the user connected to an already running app using `flutter attach`.

But it looks like `cleanupAfterSignal` intended to have Ctrl-C stop the app if the app was launched by `flutter run`.  However, that does not actually happen because `HotRunner.run` calls `HotRunner.attach`, which sets the `_didAttach` flag.  So a Ctrl-C goes down the `appFinished` code path instead of `exitApp` for both `flutter attach` and `flutter run`.

Having Ctrl-C stop the app on a `flutter run` would be similar to the behavior of the flutter_tools quit command.  Pressing `q` stops the app after a `flutter run` but not a `flutter attach`.

Can anyone confirm whether Ctrl-C is expected to stop an app launched by `flutter run`?

If not, then it may be simpler to always have `cleanupAfterSignal` call `appFinished` and remove the `exitApp` code path. Overall LGTM LGTM","LGTM I suspect that the original goal of `HotRunner.cleanupAfterSignal` was that a Ctrl-C of flutter_tools should not try to stop the app if the user connected to an already running app using `flutter attach`.

But it looks like `cleanupAfterSignal` intended to have Ctrl-C stop the app if the app was launched by `flutter run`.  However, that does not actually happen because `HotRunner.run` calls `HotRunner.attach`, which sets the `_didAttach` flag.  So a Ctrl-C goes down the `appFinished` code path instead of `exitApp` for both `flutter attach` and `flutter run`.

Having Ctrl-C stop the app on a `flutter run` would be similar to the behavior of the flutter_tools quit command.  Pressing `q` stops the app after a `flutter run` but not a `flutter attach`.

Can anyone confirm whether Ctrl-C is expected to stop an app launched by `flutter run`?

If not, then it may be simpler to always have `cleanupAfterSignal` call `appFinished` and remove the `exitApp` code path. Overall LGTM LGTM","See https://github.com/flutter/flutter/issues/159154.
See https://github.com/flutter/flutter/pull/159169.

Before this PR, it appeared we were accidentally leaking (keeping active) `flutter_tester` instances (or any test device) after `flutter run` completion, even if the runner was not explicitly detached. I _think_ this is a bug, but I'll check with the tools team and possibly @jonahwilliams before finalizing this.

/cc @jason-simmons ","Nit: formatting Nit: while I don't foresee this `group` growing to encompass a large number of tests, I prefer each test to do its own setup except in scenarios where setup is expensive or `testUsingContext` needs to be used.

https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#make-each-test-entirely-self-contained ```suggestion
        expect(flutterDevice.wasExited, isTrue);
``` ```suggestion
        expect(flutterDevice.wasExited, isFalse);
``` edit: I'm dumb, we are using `testUsingContext` (Here and below) My 2c: I don't think there is any value in this suggestion and we should stop making the suggestion - even the pkg/test authors are debating deprecating `isTrue` and `isFalse` because it has no particular value.

If you feel strongly about it, I can make the change anyway. SGTM. I just checked the output of these matchers when they fail and it's basically the same as not using the matcher.

> even the pkg/test authors are debating deprecating `isTrue` and `isFalse` because it has no particular value

This is news to me. I think the name of this variable can be misleading because running the `flutter attach` command will cause `isDetached` to be set to `true`.

Trying to think of a better name - maybe something like `stopAppDuringCleanup` or `appWasStartedByRunner`? SGTM, will do before merging. I like `stopAppDuringCleanup`. `_attachWithoutMarkingDetached` could probably use a rename then, as well. I'm trying to think of a better name... `_attachWithoutStoppingAppOnDetach`?  Done. I tweaked again in [rename `_attachWithoutStoppingAppOnDetach` to `_attachWithoutStoppingAppDuringCleanup`](https://github.com/flutter/flutter/pull/159170/commits/1b6dedbbc1ad69b63c83680d021c0eff9885545f). A little bit more verbose but precise—I think. Works for me. Or perhaps name it `_attach` or `_attachToApp` or `_connectToApp`?

This method does the work of attaching to the app that is common between `flutter run` and `flutter attach`.

I think `_attachWithoutStoppingAppDuringCleanup` makes it sound like it clears the `stopAppDuringCleanup` flag, which is not the case. Tweaked again in [rename `_attachWithoutStoppingAppDuringCleanup` to `_attach`](https://github.com/flutter/flutter/pull/159170/commits/245a2faf4141927bd15f1decd1046fbd9f127ecc) Just noticed that `stopAppDuringCleanup` is inverted.

It should be set to `true` only in the `flutter run` case, and if it is `true` then the cleanup should call `exitApp`. This test group is failing when I run it locally in the default non-randomized order.

`flutterDevice` should be reconstructed for each test case in `setUp` Thanks. Did not realize it was stateful!"
158956,2024-11-14T21:59:40Z,2024-11-20T21:03:44Z,matanlurey,3,6,9,134,5,3,2,[],90644.0,0,515046.0,0,0,0,0,3100223.578251,,1,9,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158956, due to - The status or check suite [Windows framework_tests_misc](https://cr-buildbucket.appspot.com/build/8731163198788262353) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158956, due to - The status or check suite [Windows build_android_host_app_with_module_aar](https://cr-buildbucket.appspot.com/build/8731163198866677409) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158956, due to - The status or check suite [Windows framework_tests_misc](https://cr-buildbucket.appspot.com/build/8730883366503898561) has failed. Please fix the issues identified (or deflake) before re-applying this label.
Ship it",Ship it,"Closes https://github.com/flutter/flutter/issues/158884.

/cc @reidbaker.

Example output:

```sh
% SHARD=tool_integration_tests SUBSHARD=6_6 dart dev/bots/test.dart --dry-run 
▌13:59:18▐ STARTING ANALYSIS
▌13:59:18▐ --dry-run enabled. Tests will not actually be executed.
▌13:59:18▐ SHARD=tool_integration_tests
▌13:59:18▐ SUBSHARD=6_6
▌13:59:18▐ |> bin/flutter: 
  --version
▌13:59:18▐ |> bin/cache/dart-sdk/bin/dart (packages/flutter_tools): 
  run
  test
  --reporter=expanded
  --file-reporter=json:/var/folders/qw/qw_3qd1x4kz5w975jhdq4k58007b7h/T/metrics_1731621558619861.json
  --test-randomize-ordering-seed=20241114
  -j1
  test/integration.shard/shader_compiler_test.dart
  test/integration.shard/overall_experience_test.dart
  test/integration.shard/expression_evaluation_test.dart
  test/integration.shard/isolated/native_assets_without_cbuild_assemble_test.dart
  test/integration.shard/isolated/native_assets_test.dart
  test/integration.shard/isolated/native_assets_agp_version_test.dart
  test/integration.shard/coverage_collection_test.dart
  test/integration.shard/devtools_uri_test.dart
  test/integration.shard/deprecated_gradle_settings_test.dart
  test/integration.shard/batch_entrypoint_test.dart
  test/integration.shard/bash_entrypoint_test.dart
  test/integration.shard/background_isolate_test.dart
```","uber-nit

```suggestion
      } else if (arg == '--dry-run') {
``` Is making this a stateful global going to make our unit tests fail on certain shuffle settings? Reading this code I am not sure why dryrun would want a different error here.  Done. Fair question. The answer is no, as there are no unit tests where this is true (there is an integration test where this is set to true implicitly with `--dry-run`) but it's an isolated process.

I modified the API a bit to make it more clear how this will be used. This is unused code, removed."
159209,2024-11-20T17:24:34Z,2024-11-20T21:00:29Z,gmackall,1,10,13,30,2,2,2,['d: docs/'],2426.0,0,12957.0,0,0,0,0,3100419.848222,,0,13,0,False,['gmackall'],"cc @bartekpacia, as I see you ran in to this on https://github.com/flutter/flutter/pull/157193 (and because you make changes to kotlin gradle files)",,"Docs to make Android Studio auto format kotlin code in a way compatible with the format check that we make in CI.

Open to suggestions as to a better place to put them, but there wasn't an existing doc that seemed like an obvious fit to me.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
1. have submitted Kotlin code that failed the analyzer check step
``` If this file will never contain formatting instructions for vscode then I would put android studio in the name of the file.  make ci.yaml a hyperlink or file link or at minimum `<flutter framework>/.ci.yaml` Note it is dot ci dot yaml.  Not required to merge this pr but I would encourage you to make a .editorconfig file in the repo then have the instructions here be to set that path as the file that should be used. That way if we need to update it everyone who has linked the path gets the new rules.  Changed it, but also if someone was to set up vscode instructions I would approve them (but they can be responsible for renaming the file back if so) Changed it to a link format that appears to work on github I think this would make sense. Right now I've been preserving a gitignored .editorconfig file which isn't the best solution. I can do this in a follow up, though it might meet opposition because unfortunately this seems to be a file type used by (many?) different editors to do lots of different config Since .ci.yaml is at the root I thin you can use 
```suggestion
2. Set the ruleset to be the same as the version used in [`.ci.yaml`](.ci.yaml) (as of writing this is 1.1.1), and the baseline to be `dev/bots/test/analyze-test-input/ktlint-baseline.xml`.
``` I think the current format is correct if you try clicking on it
https://github.com/flutter/flutter/blob/83d2e9c043a800b64c59c7c2c651d8825ef2549c/docs/platforms/android/Kotlin-android-studio-formatting.md The current format works but I thought you might be able to reference root without needing the ../../../ but it can merge as is. "
158520,2024-11-12T17:51:23Z,2024-11-15T16:24:20Z,mdebbar,0,4,8,162,13,3,2,['a: text input'],,0,700684.0,0,0,0,0,3102284.276328,,0,8,0,False,[],LGTM!,LGTM!,"As the title says, this PR deletes the HTML renderer's benchmarks.","Do we need this? Do we want to flip these to presubmit permanently? There's a TODO and a P3 issue for doing this in CanvasKit mode. But given that we already measure frame timing (which is mostly text in this case), maybe we don't need the more granular `'text_layout'` numbers?

I'll remove it for now and can add it back later if needed. Nope, I'm enabling them temporarily to check that benchmarks are still running in CI and I didn't break something."
158907,2024-11-14T06:13:46Z,2024-11-20T19:25:15Z,StanleyCocos,10,4,4,5,2,3,2,"['framework', 'f: material design']",22.0,0,565892.0,0,0,0,0,3106134.088807,,1,4,0,False,"['StanleyCocos', 'stuartmorgan', 'nate-thegrate', 'TahaTesser', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. @StanleyCocos 
Thanks for the contribution! We will need a test in order to land this. Yes, you're right. However, as a developer, I believe that if someone explicitly calls InkWell(enableFeedback: null), it is an error. For developers, setting it to null likely implies an intention to set it to false, but it will actually default to true. Therefore, we think it would be more intuitive to notify them that there's an error here. Using assert(enableFeedback != null) is a runtime reminder, but developers may not immediately notice this issue. For developers who set enableFeedback != null, this change would not affect them. Fortunately, this PR isn't a breaking change per our [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#handling-breaking-changes) rules, since all checks are passing. In my personal opinion, I'd be happy to see this merged right away.

However, the [bot comment above](https://github.com/flutter/flutter/pull/158907#issuecomment-2475499778) regarding tests needs to be resolved first. This seems to me like it _could_ qualify as a ""code refactor with no semantic changes""—feel free to head over to [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (specifically the `#hackers-💭` channel) and put in a request, or I'd be happy to do it on your behalf.
Alternatively, we could try to brainstorm some ways to update the test infrastructure :) @nate-thegrate If you could help me resolve the robot comments above, it would be greatly appreciated. Thank you!
 Sounds good! I should have an update for you within the next few days :) I'm very happy to see this outcome. Thank you test-exempt: code refactor with no semantic change > I believe that if someone explicitly calls InkWell(enableFeedback: null), it is an error.

Interestingly, at the time this file was migrated to null-safety and the `bool?` was introduced, the constructor had the `?? true` handling of `null` already, but also had a comment saying:

```dart
  /// The [mouseCursor], [enableFeedback], and [excludeFromSemantics] arguments
  /// must not be null.
``` Interesting, I guess this must have slipped under the radar!

@StanleyCocos we'll be able to merge this pull request once it has 2 approvals.Looks great overall, but @TahaTesser is right—this PR will need either a test or a test exemption. (One could argue that there are virtually no semantic changes here, but in my experience, requesting a test exemption for a borderline case hasn't succeeded.)

One approach could be to keep the `bool? enableFeedback = true` for now and ~~add an assert; then test whether the assert fires~~ (perhaps this isn't the best idea, since we'd have to ignore [tighten_type_of_initializing_formals](https://dart.dev/lints/tighten_type_of_initializing_formals)), and then a while after it lands in stable we could get back in here and finish the job. LGTM! Thanks for the cleanup. 🙏 ","Looks great overall, but @TahaTesser is right—this PR will need either a test or a test exemption. (One could argue that there are virtually no semantic changes here, but in my experience, requesting a test exemption for a borderline case hasn't succeeded.)

One approach could be to keep the `bool? enableFeedback = true` for now and ~~add an assert; then test whether the assert fires~~ (perhaps this isn't the best idea, since we'd have to ignore [tighten_type_of_initializing_formals](https://dart.dev/lints/tighten_type_of_initializing_formals)), and then a while after it lands in stable we could get back in here and finish the job. LGTM! Thanks for the cleanup. 🙏 ","*I found that enableFeedback can be set to null, but in actual use, setting it to null has no effect and is overwritten by true. I think this is an issue.*


```dart
class InkWell extends InkResponse {
  const InkWell({
    super.key,
    super.child,
    super.onTap,
    super.onDoubleTap,
    super.onLongPress,
    super.onTapDown,
    super.onTapUp,
    super.onTapCancel,
    super.onSecondaryTap,
    super.onSecondaryTapUp,
    super.onSecondaryTapDown,
    super.onSecondaryTapCancel,
    super.onHighlightChanged,
    super.onHover,
    super.mouseCursor,
    super.focusColor,
    super.hoverColor,
    super.highlightColor,
    super.overlayColor,
    super.splashColor,
    super.splashFactory,
    super.radius,
    super.borderRadius,
    super.customBorder,
    bool? enableFeedback = true,
    super.excludeFromSemantics,
    super.focusNode,
    super.canRequestFocus,
    super.onFocusChange,
    super.autofocus,
    super.statesController,
    super.hoverDuration,
  }) : super(
    containedInkWell: true,
    highlightShape: BoxShape.rectangle,
    enableFeedback: enableFeedback ?? true,
  );
}
```

Call Error
```dart
InkWell(
    enableFeedback: null,
)
```


","Technically this could be a breaking change for someone, if they've explicitly called `InkWell(enableFeedback: null)`. I do think this is a nice readability improvement though. nit: I think it'd be better to add `?? true` to the declaration site for `resolvedEnableFeedback`. Based on your suggestion, adjustments have been made. I’m not entirely sure how this should be adjusted. Should I mark this PR as a breaking change? It doesn't seem like it's significant enough for that, but I'm unsure. Could you provide some guidance? Thank you!"
158799,2024-11-13T18:21:41Z,2024-11-13T19:05:03Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,608066.0,0,0,0,0,3106685.841702,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/db3e5af2ca22...82940a9aa714

2024-11-13 skia-flutter-autoroll@skia.org Roll Dart SDK from e5c2c502c890 to 66ab1774bfe9 (1 revision) (flutter/engine#56558)
2024-11-13 skia-flutter-autoroll@skia.org Roll Dart SDK from c7d140d18895 to e5c2c502c890 (1 revision) (flutter/engine#56555)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158626,2024-11-13T15:34:31Z,2024-11-13T18:03:56Z,engine-flutter-autoroll,2,0,19,2,1,1,1,[],2216.0,0,607299.0,0,0,0,0,3117483.36474,,0,19,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158626, due to - The status or check suite [Mac plugin_test](https://cr-buildbucket.appspot.com/build/8731371618605152369) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158626, due to - The status or check suite [Mac plugin_test](https://cr-buildbucket.appspot.com/build/8731371618605152369) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/packages/compare/72356fda4684...26e123a6ce03

2024-11-13 dasyad00@gmail.com [camera_windows] Set device media type for video preview explicitly (flutter/packages#7447)
2024-11-13 39979207+ThangVuNguyenViet@users.noreply.github.com [go_router] Add support for relative routes (flutter/packages#6825)
2024-11-13 pq@users.noreply.github.com [vector_graphics_compiler] fix a renamed method parameter lint (flutter/packages#8070)
2024-11-12 feinstein@users.noreply.github.com [in_app_purchase] Add expiration date to Transaction (flutter/packages#8030)
2024-11-12 stuartmorgan@google.com [various] Clean up contributing guides (flutter/packages#8032)
2024-11-12 ditman@gmail.com [ci] Remove web renderer option from tools. (flutter/packages#8055)
2024-11-12 stuartmorgan@google.com [url_launcher] Update Pigeon version for Linux (flutter/packages#8065)
2024-11-12 tobias@leafnode.se [go_router] Add support for preloading branches of StatefulShellRoute (revised solution) (flutter/packages#6467)
2024-11-12 stuartmorgan@google.com [pigeon] Make Linux type declarations public (flutter/packages#8040)
2024-11-11 engine-flutter-autoroll@skia.org Roll Flutter from 73546b3b71a7 to c8510f29ccc2 (30 revisions) (flutter/packages#8042)
2024-11-11 magder@google.com Use dependabot multi-directory configuration for Android package updates (flutter/packages#8048)
2024-11-11 stuartmorgan@google.com [tools] Run `pub get` before `format` (flutter/packages#8052)
2024-11-11 stuartmorgan@google.com [file_selector] Fix Linux cancel regression (flutter/packages#8051)
2024-11-09 stuartmorgan@google.com [shared_preferences] Fix confusing language in README (flutter/packages#8049)
2024-11-08 magder@google.com Use dependabot multi-directory configuration for Android example gradle updates (flutter/packages#8036)
2024-11-08 43054281+camsim99@users.noreply.github.com [animations] Remove `.flutter-plugins` reference from example app (flutter/packages#8002)
2024-11-08 magder@google.com Group dependabot github-action update PRs, delete dead docker updates (flutter/packages#8044)
2024-11-08 37028599+EArminjon@users.noreply.github.com [vector_graphics_compiler] fix-null-exception (flutter/packages#8006)
2024-11-08 stuartmorgan@google.com [tools] Format Dart per-package (flutter/packages#8043)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159196,2024-11-20T11:37:30Z,2024-11-20T12:46:32Z,mkustermann,1,0,1,142,8,1,1,"['tool', 'a: desktop']",4027.0,0,4142.0,0,0,0,0,3130062.190622,,0,1,0,False,['mkustermann'],"Thanks, @dcharkes !",,"The dart-lang/native repository contains a `Target` class that is almost not needed anymore. The remaining uses are mainly due to kernel asset mapping (which we may be able to remove in the future).

This PR removes usages of that `Target` (in favor of `Architecture`) class in most places in flutter tools.
This makes the code also cleaner because we no longer have an implicit assumption that
a `List<Target>` all belong to the same operating system.",
158553,2024-11-13T07:39:09Z,2024-11-13T08:16:33Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,607018.0,0,0,0,0,3146288.539612,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/05c14d8b4cd7...db3e5af2ca22

2024-11-13 skia-flutter-autoroll@skia.org Roll Skia from 02dd72c2fbc2 to ca10bc19c67e (2 revisions) (flutter/engine#56554)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158104,2024-11-04T14:55:12Z,2024-11-19T23:25:16Z,TahaTesser,10,17,2,667,5,3,2,"['framework', 'f: material design', 'will affect goldens']",11941.0,0,1358671.0,0,0,0,0,3146072.691265,,0,2,0,False,"['TahaTesser', 'QuncCccccc', 'flutter-dashboard[bot]']","Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/158104) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha 2e02d89b8cc0cb54a0fae890c944210968e83d58_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha df6fa85034a805d1faab82986683ca27f08cf480_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha 23f8c815589b59cdb6d8f3fe33f5b527bc20d81d_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha d36dbea661208ce1dcff93590d9a483fdd7c20f1_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha a8f672fc002729c423f595674a91a4417a52f016_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha 48a904ce0003194f1566c1b3dc138a11a8c238da_

 @QuncCccccc 
Looks like this is failing some google testings. Meanwhile I'm preparing sample and migration guide PRs. Filed samples and migration guide PRs. To be landed once this PR lands.  > @QuncCccccc Looks like this is failing some google testings. Meanwhile I'm preparing sample and migration guide PRs.

Checking! Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158104).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158104 at sha b5cd6dcc7007fbdad416a4a095add6d6fe8c4a90_

LGTM! Thanks for the update:)

_EDIT:_ I just triaged the goldens. I think we are good to go once the tests are fixed:)! Just checked the Google testing and I think the changes are all acceptable. So I updated the github status. LGTM! Thanks so much for the update:)

_EDIT_: Oh seems Google testing status is removed so it shows the same failures again. Checking whether the failures are expected.

_EDIT_: Manually setup the Github status. This PR should be good to go:)","LGTM! Thanks for the update:)

_EDIT:_ I just triaged the goldens. I think we are good to go once the tests are fixed:)! Just checked the Google testing and I think the changes are all acceptable. So I updated the github status. LGTM! Thanks so much for the update:)

_EDIT_: Oh seems Google testing status is removed so it shows the same failures again. Checking whether the failures are expected.

_EDIT_: Manually setup the Github status. This PR should be good to go:)","Related [Update both `ProgressIndicator` for Material 3 redesign](https://github.com/flutter/flutter/issues/141340)
Fixes [Issue: Cannot theme progress indicators, many properties missing](https://github.com/flutter/flutter/issues/131690)
Fixes [Cannot override default `CircularProgressIndicator` size](https://github.com/flutter/flutter/issues/158106)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
          // progressIndicatorTheme: const ProgressIndicatorThemeData(
          //   constraints: BoxConstraints.tightFor(width: 100, height: 100),
          //   strokeWidth: 12
          // ),
          ),
      home: Scaffold(
        appBar: AppBar(title: const Text('CircularProgressIndicator')),
        body: const Center(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              CircularProgressIndicator(year2023: false, value: 0.5),
              CircularProgressIndicator(year2023: false),
            ],
          ),
        ),
      ),
    );
  }
}
```

</details>

### Preview 

<img width=""579"" alt=""Screenshot 2024-11-04 at 16 01 57"" src=""https://github.com/user-attachments/assets/d27768c6-5570-48d0-9eed-565e02be8041"">

### New custom `CircularProgressIndicator.constraints` and stroke  width

<img width=""579"" alt=""Screenshot 2024-11-04 at 16 02 40"" src=""https://github.com/user-attachments/assets/c67c4a31-58f4-4f82-bfb6-f1b78a000bac"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","This does not have to be late? Should this be 48x48 based on the [specs](https://m3.material.io/components/progress-indicators/specs#7a334158-3a5f-4659-b3fd-323956acc358) and `strokeAlign` should be `CircularProgressIndicator.strokeAlignInside`? ```suggestion
  /// If [CircularProgressIndicator.year2023] is false or [ThemeData.useMaterial3]
``` If the size comment above make sense:)
```suggestion
    expect(tester.getSize(find.byType(CircularProgressIndicator)), const Size(48, 48));
``` Same here and elsewhere:) nit: widget.year2023 ? null : ... Can we put a brief comment here to indicate that the `if` is for the latest M3 appearance and the `else` part is for the `year2023` version? Just for better understanding for later maintenance:) Earlier i tried 48x48 and found it to be too big so i compared it with Android components, it is 36x36 pixels, with padding comes to 48x48. The actual shape is still 36x36. I can file an issue for incorrect specs. 

I didn't add any padding since there is no mention of the padding. If i were to add padding to make it 48x48, it would be 48 - 36 = 12.  https://github.com/flutter/flutter/pull/158104#discussion_r1828966498 https://github.com/flutter/flutter/pull/158104#discussion_r1828966498 Briliant.  Filed an issue https://github.com/flutter/flutter/issues/158162 Great catch! Added a comment. Ah got it. I just asked the Material team to see if they have any suggestions. Probably it's just Android team hasn't updated this component since I just feel the Material Design website should be the only source of truth:) Will the new parameters be ignored on iOS & maxOS? If so, can we add a comment above? Also I just noticed, the existing parameter `value` is not ignored on iOS & macOS. Could you also help fix [the sentence here](https://github.com/flutter/flutter/pull/158104/files#diff-ad8c72d85e0fc3c281aed722df9346bd445ae6bfa9477f5e833c40d62876c503L712):) ? Thanks! Also existing `strokeCap` and `strokeWidth` parameters are ignore on iOS and macOS. 
"
149926,2024-06-07T19:09:26Z,2024-06-10T16:06:03Z,jason-simmons,3,0,1,9,2,1,1,"['framework', 'autosubmit']",2.0,0,14300600.0,0,0,0,0,3148890.457279,,0,1,0,False,"['te8uekm12', 'flutter-dashboard[bot]', 'JannieT']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#tests) to this rule, contact ""@test-exemption-reviewer"" in the #hackers channel in [Chat](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it! Use Discord!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. ValueKey<T>(..).toString() still doesn't work in Release mode, gives response as Instance of 'ValueKey<T>' in 3.22.3 

Closed issue https://github.com/flutter/flutter/issues/148983

Are there plans to fix that? Released in 3.24.0
How did I know this? I searched: 
```
149926 site:docs.flutter.dev/release/release-notes
```LGTM",LGTM,"toString methods are removed in AOT builds by the optimization in https://github.com/flutter/flutter/pull/144763

This PR disables that for Key subclasses because some applications rely on the previous behavior.

Fixes https://github.com/flutter/flutter/issues/148983",
155146,2024-09-13T07:12:01Z,2024-11-20T06:33:52Z,hongeSunCoder,0,0,1,2,1,2,2,"['team-release', 'd: docs/']",,0,5872913.0,0,0,0,0,3152423.598662,,0,1,0,False,[],"LGTM LGTM, thank you!","LGTM LGTM, thank you!","Correct the Quality-Assurance contributing doc's wrong git command.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] All existing and new tests are passing.",
158551,2024-11-13T04:16:50Z,2024-11-13T04:57:37Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,605882.0,0,0,0,0,3159565.709353,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/ef760d6e1f13...05c14d8b4cd7

2024-11-13 skia-flutter-autoroll@skia.org Roll Dart SDK from 5f42ef8f15d5 to c7d140d18895 (2 revisions) (flutter/engine#56552)
2024-11-13 jonahwilliams@google.com [engine] force semantics action to post a task. (flutter/engine#56514)
2024-11-13 chinmaygarde@google.com [Impeller] Wrap provided FBO instead of defaulting to FBO0 and cleanup/document the texture API. (flutter/engine#56543)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
156196,2024-10-04T05:05:37Z,2024-10-22T17:04:23Z,thejitenpatel,3,16,11,120,3,2,2,"['framework', 'f: material design', 'd: api docs', 'd: examples', 'autosubmit']",1243121.0,0,4050584.0,1,0,0,0,3167938.032986,,0,11,0,False,['thejitenpatel'],"Thanks for the review, @nate-thegrate! I’ve addressed all your suggestions and look forward to any further feedback you may have. > Thank you @thejitenpatel!
> 
> At this point I only see 1 small typo (though the change might affect the result of the test's `find.text()` calls).

Thanks for noticing @nate-thegrate. Resolved it! Thanks for the review @TahaTesser! I have made the necessary changes, please have a look and let me know if there's anything needs to be done.Thanks so much for adding this!

I have a lot of random thoughts & suggestions, so take a look when you have a chance :) Thank you @thejitenpatel!

At this point I only see 1 small typo (though the change might affect the result of the test's `find.text()` calls). LGTM, with a tiny whitespace suggestion.

Thanks so much for contributing!
(We'll be able to merge once the pull request has 2 approvals.) LGTM","Thanks so much for adding this!

I have a lot of random thoughts & suggestions, so take a look when you have a chance :) Thank you @thejitenpatel!

At this point I only see 1 small typo (though the change might affect the result of the test's `find.text()` calls). LGTM, with a tiny whitespace suggestion.

Thanks so much for contributing!
(We'll be able to merge once the pull request has 2 approvals.) LGTM","This PR introduces a basic example of how to use the `showDatePicker` function. The purpose of this PR is to simplify the onboarding process for new Flutter developers by providing a straightforward demonstration of handling the asynchronous Future returned by the showDatePicker. This will help users unfamiliar with the intricacies of asynchronous operations in Flutter.

Fixes #156157 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","A couple of ideas:
- Configuring the Scaffold here would provide a tiny performance boost (as `setState` calls wouldn't rebuild the Scaffold)
- Adding an AppBar here would make this consistent with other example files.

```suggestion
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: const Text('showDatePicker Example')),
        body: const Center(child: DatePickerExample()),
      ),
    );
``` (nit: remove empty line)

```suggestion
``` (very important suggestion)

```suggestion
          children: <Widget>[
``` optional suggestion:

```suggestion
/// Tapping the button calls [showDatePicker] and displays the selected date.
```

- The [style guide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#canonical-terminology) recommends using ""call"" over ""invoke"", so perhaps it should replace ""triggered"" as well for consistency.
- I slightly prefer ""active voice"" over ""passive voice"". A nice thing about stateful widgets is that they have access to the `context` outside the build method!

```suggestion
  Future<void> _selectDate() async {
``` If the `context` parameter is removed, this can be a tear-off!

```suggestion
              onPressed: _selectDate,
``` We should use pattern-matching here, even though it would make the code more difficult to understand:

```dart
    if (pickedDate case (!= selectedDate)?) {
```

just kidding :) Probably should add a `mounted` check though, just to set a good example:

```suggestion
    if (mounted && pickedDate != null && pickedDate != selectedDate) {
``` (Would be good to remove the Scaffold & Center widgets here, if they're added to the app's build method.) Thanks to https://github.com/flutter/flutter/pull/152890, Rows and Columns now have a convenient `spacing` parameter.

Perhaps it could replace this SizedBox, but it's not a big deal either way 🙂

 ```suggestion
          child: const Text('Select Date'),
``` ```suggestion
        Text(
          selectedDate != null
              ? '${selectedDate!.day}/${selectedDate!.month}/${selectedDate!.year}'
              : 'No date selected',
        ),
```

[relevant style guideline](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#if-you-have-a-newline-after-some-opening-punctuation-match-it-on-the-closing-punctuation) ```suggestion
    setState(() {
      selectedDate = pickedDate;
    });
```

This seems way too complicated than neccesary.  ```suggestion
/// Tapping the button calls [showDatePicker] and displays the selected date.
```

It seems little confusing, tapping the button doesn't display selected date in the example


Maybe
`Tapping the button displays a date picker which returns the selected date.`  Thanks for bringing this up! I can share the if-statement's rationale:

- `mounted`: Flutter currently has a [use_build_context_synchronously](https://dart.dev/lints/use_build_context_synchronously) lint to prevent a situation where a `context` is referenced after being disposed of. There's also a [proposal](https://github.com/dart-lang/linter/issues/4892) to have the same apply to `setState` calls as well.
- `pickedDate != null`: If the user taps ""OK"", then the future returned by `showDatePicker` completes with the selected DateTime value; otherwise its value is `null`. Including the null check in the if-statement ensures that tapping outside the date picker doesn't remove the previous selection.
- `pickedDate != selectedDate`: If these two are equal, then rebuilding isn't necessary.

The `mounted` check won't ever be false in this example app, but I feel that our documentation should still encourage this coding practice. 1. Regarding `mounted`, I'm not sure if it should used when the example has no issues that could benefit from it. When someone is reading this sample might get lost what it does without the level experience you've. They might think mounted is necessary.

2. `pickedDate != null`, if the user presses ok without selection, they're effectively not selecting a date so it the `selectedDate` should be reset IMO. This is an example so they can figure out the logic to not reset the date if they want. The goal of the example is to show how the widget works. Adding complex logic that might seems like it is required when using the widget. 

3. `pickedDate != selectedDate`, setState rebuilds is a common Flutter knowledge. Not sure if it is necessary in a simple widget sample. "
158541,2024-11-13T00:16:54Z,2024-11-13T01:08:13Z,engine-flutter-autoroll,0,0,8,4,2,1,1,['engine'],,0,609478.0,0,0,0,0,3170367.738702,,0,8,0,False,[],,,"
https://github.com/flutter/engine/compare/877abb9ad6ff...08348c9eebcc

2024-11-12 jason-simmons@users.noreply.github.com [Linux] Configure depth and stencil framebuffer attachments needed for Impeller (flutter/engine#56516)
2024-11-12 chris@bracken.jp macOS: ARC bridge casts for FlutterMetalTexture.user_data (flutter/engine#56518)
2024-11-12 jonahwilliams@google.com [Impeller] prevent no-op backend from throwing exceptions during image  decoding (flutter/engine#56522)
2024-11-12 skia-flutter-autoroll@skia.org Roll Dart SDK from 69170fac244c to 5f42ef8f15d5 (4 revisions) (flutter/engine#56539)
2024-11-12 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from BajfrJuYeyWvnBhuM... to z-cm2nR0aJ4lXfwZ0... (flutter/engine#56538)
2024-11-12 skia-flutter-autoroll@skia.org Roll Skia from aa099ff91e2f to 7d5c206fc873 (6 revisions) (flutter/engine#56541)
2024-11-12 jason-simmons@users.noreply.github.com [Impeller] In canvas_unittests, only create an MSAA offscreen texture if the platform supports MSAA (flutter/engine#56542)
2024-11-12 bruno.leroux@gmail.com [iOS] Fix slider semantics node answer to accessibility activate (flutter/engine#56427)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from BajfrJuYeyWv to z-cm2nR0aJ4l

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158545,2024-11-13T01:20:36Z,2024-11-13T02:35:18Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605655.0,0,0,0,0,3170368.823283,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/08348c9eebcc...ef760d6e1f13

2024-11-13 skia-flutter-autoroll@skia.org Roll Skia from 7d5c206fc873 to 02dd72c2fbc2 (4 revisions) (flutter/engine#56547)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159166,2024-11-19T20:47:57Z,2024-11-19T21:55:29Z,jmagman,2,0,1,4,1,1,1,[],424.0,1,13690.0,0,0,0,0,3173894.092225,,0,1,0,False,"['jmagman', 'andrewkolos']","@andrewkolos If you see tools PRs that are missing platform labels, please feel free to edit the labeler and add paths! > @andrewkolos If you see tools PRs that are missing platform labels, please feel free to edit the labeler and add paths!

TIL about .github/labeler.yml. Thanks!Thanks!",Thanks!,"Label PRs that touch any `*android*` files in flutter_tool with `platform-android`.  In particular this should catch the template android directories.

Labeler log: https://github.com/flutter/flutter/actions/runs/11921551623/job/33225914301?pr=159166#step:2:240

<details>

<summary>Included files</summary>

```
$ git ls-files 'packages/flutter_tools/*android**'
packages/flutter_tools/ide_templates/intellij/dev/manual_tests/android.iml.copy.tmpl
packages/flutter_tools/ide_templates/intellij/examples/flutter_gallery/android.iml.copy.tmpl
packages/flutter_tools/ide_templates/intellij/examples/hello_world/android.iml.copy.tmpl
packages/flutter_tools/ide_templates/intellij/examples/platform_channel/android.iml.copy.tmpl
packages/flutter_tools/ide_templates/intellij/examples/platform_view/android.iml.copy.tmpl
packages/flutter_tools/ide_templates/intellij/examples/stocks/android.iml.copy.tmpl
packages/flutter_tools/lib/src/android/README.md
packages/flutter_tools/lib/src/android/adb.dart
packages/flutter_tools/lib/src/android/android.dart
packages/flutter_tools/lib/src/android/android_builder.dart
packages/flutter_tools/lib/src/android/android_console.dart
packages/flutter_tools/lib/src/android/android_device.dart
packages/flutter_tools/lib/src/android/android_device_discovery.dart
packages/flutter_tools/lib/src/android/android_emulator.dart
packages/flutter_tools/lib/src/android/android_sdk.dart
packages/flutter_tools/lib/src/android/android_studio.dart
packages/flutter_tools/lib/src/android/android_studio_validator.dart
packages/flutter_tools/lib/src/android/android_workflow.dart
packages/flutter_tools/lib/src/android/application_package.dart
packages/flutter_tools/lib/src/android/build_validation.dart
packages/flutter_tools/lib/src/android/deferred_components_gen_snapshot_validator.dart
packages/flutter_tools/lib/src/android/deferred_components_prebuild_validator.dart
packages/flutter_tools/lib/src/android/deferred_components_validator.dart
packages/flutter_tools/lib/src/android/gradle.dart
packages/flutter_tools/lib/src/android/gradle_errors.dart
packages/flutter_tools/lib/src/android/gradle_utils.dart
packages/flutter_tools/lib/src/android/java.dart
packages/flutter_tools/lib/src/android/migrations/android_studio_java_gradle_conflict_migration.dart
packages/flutter_tools/lib/src/android/migrations/cmake_android_16k_pages_migration.dart
packages/flutter_tools/lib/src/android/migrations/min_sdk_version_migration.dart
packages/flutter_tools/lib/src/android/migrations/multidex_removal_migration.dart
packages/flutter_tools/lib/src/android/migrations/top_level_gradle_build_file_migration.dart
packages/flutter_tools/lib/src/build_system/targets/android.dart
packages/flutter_tools/lib/src/commands/android_analyze.dart
packages/flutter_tools/lib/src/isolated/native_assets/android/native_assets.dart
packages/flutter_tools/templates/app_shared/android-java.tmpl/app/build.gradle.kts.tmpl
packages/flutter_tools/templates/app_shared/android-java.tmpl/app/src/main/java/androidIdentifier/MainActivity.java.tmpl
packages/flutter_tools/templates/app_shared/android-java.tmpl/build.gradle.kts.tmpl
packages/flutter_tools/templates/app_shared/android-java.tmpl/projectName_android.iml.tmpl
packages/flutter_tools/templates/app_shared/android-kotlin.tmpl/app/build.gradle.kts.tmpl
packages/flutter_tools/templates/app_shared/android-kotlin.tmpl/app/src/main/kotlin/androidIdentifier/MainActivity.kt.tmpl
packages/flutter_tools/templates/app_shared/android-kotlin.tmpl/build.gradle.kts.tmpl
packages/flutter_tools/templates/app_shared/android-kotlin.tmpl/projectName_android.iml.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/.gitignore
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/debug/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/drawable-v21/launch_background.xml
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/drawable/launch_background.xml
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/mipmap-hdpi/ic_launcher.png
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/mipmap-mdpi/ic_launcher.png
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/mipmap-xhdpi/ic_launcher.png
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/values-night/styles.xml
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/main/res/values/styles.xml
packages/flutter_tools/templates/app_shared/android.tmpl/app/src/profile/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/gradle.properties.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/gradle/wrapper/gradle-wrapper.properties.tmpl
packages/flutter_tools/templates/app_shared/android.tmpl/settings.gradle.kts.tmpl
packages/flutter_tools/templates/module/android/deferred_component/build.gradle.tmpl
packages/flutter_tools/templates/module/android/deferred_component/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/module/android/gradle/build.gradle.tmpl
packages/flutter_tools/templates/module/android/gradle/gradle.properties.tmpl
packages/flutter_tools/templates/module/android/gradle/settings.gradle.tmpl
packages/flutter_tools/templates/module/android/gradle/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/build.gradle.tmpl
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/src/main/java/androidIdentifier/host/MainActivity.java.tmpl
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/src/main/res/drawable/launch_background.xml
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/src/main/res/mipmap-hdpi/ic_launcher.png
packages/flutter_tools/templates/module/android/host_app_common/app.tmpl/src/main/res/values/styles.xml
packages/flutter_tools/templates/module/android/host_app_editable/settings.gradle.copy.tmpl
packages/flutter_tools/templates/module/android/host_app_ephemeral/settings.gradle.copy.tmpl
packages/flutter_tools/templates/module/android/library_new_embedding/Flutter.tmpl/build.gradle.tmpl
packages/flutter_tools/templates/module/android/library_new_embedding/Flutter.tmpl/flutter.iml.copy.tmpl
packages/flutter_tools/templates/module/android/library_new_embedding/Flutter.tmpl/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/module/android/library_new_embedding/include_flutter.groovy.copy.tmpl
packages/flutter_tools/templates/module/android/library_new_embedding/settings.gradle.copy.tmpl
packages/flutter_tools/templates/module/common/projectName_android.iml.tmpl
packages/flutter_tools/templates/plugin/android-java.tmpl/build.gradle.tmpl
packages/flutter_tools/templates/plugin/android-java.tmpl/projectName_android.iml.tmpl
packages/flutter_tools/templates/plugin/android-java.tmpl/src/main/java/androidIdentifier/pluginClass.java.tmpl
packages/flutter_tools/templates/plugin/android-java.tmpl/src/test/java/androidIdentifier/pluginClassTest.java.tmpl
packages/flutter_tools/templates/plugin/android-kotlin.tmpl/build.gradle.tmpl
packages/flutter_tools/templates/plugin/android-kotlin.tmpl/projectName_android.iml.tmpl
packages/flutter_tools/templates/plugin/android-kotlin.tmpl/src/main/kotlin/androidIdentifier/pluginClass.kt.tmpl
packages/flutter_tools/templates/plugin/android-kotlin.tmpl/src/test/kotlin/androidIdentifier/pluginClassTest.kt.tmpl
packages/flutter_tools/templates/plugin/android.tmpl/.gitignore
packages/flutter_tools/templates/plugin/android.tmpl/settings.gradle.tmpl
packages/flutter_tools/templates/plugin/android.tmpl/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/templates/plugin_ffi/android.tmpl/build.gradle.tmpl
packages/flutter_tools/templates/plugin_ffi/android.tmpl/projectName_android.iml.tmpl
packages/flutter_tools/templates/plugin_shared/android.tmpl/.gitignore
packages/flutter_tools/templates/plugin_shared/android.tmpl/settings.gradle.tmpl
packages/flutter_tools/templates/plugin_shared/android.tmpl/src/main/AndroidManifest.xml.tmpl
packages/flutter_tools/test/android_java11_integration.shard/android_dependency_version_checking_test.dart
packages/flutter_tools/test/android_preview_integration.shard/README.md
packages/flutter_tools/test/android_preview_integration.shard/flutter_build_preview_sdk_test.dart
packages/flutter_tools/test/commands.shard/hermetic/android_analyze_test.dart
packages/flutter_tools/test/general.shard/android/adb_log_reader_test.dart
packages/flutter_tools/test/general.shard/android/android_device_discovery_test.dart
packages/flutter_tools/test/general.shard/android/android_device_port_forwarder_test.dart
packages/flutter_tools/test/general.shard/android/android_device_start_test.dart
packages/flutter_tools/test/general.shard/android/android_device_test.dart
packages/flutter_tools/test/general.shard/android/android_emulator_test.dart
packages/flutter_tools/test/general.shard/android/android_gradle_builder_test.dart
packages/flutter_tools/test/general.shard/android/android_install_test.dart
packages/flutter_tools/test/general.shard/android/android_project_migration_test.dart
packages/flutter_tools/test/general.shard/android/android_sdk_test.dart
packages/flutter_tools/test/general.shard/android/android_studio_test.dart
packages/flutter_tools/test/general.shard/android/android_studio_validator_test.dart
packages/flutter_tools/test/general.shard/android/android_workflow_test.dart
packages/flutter_tools/test/general.shard/android/build_validation_test.dart
packages/flutter_tools/test/general.shard/android/deferred_components_gen_snapshot_validator_test.dart
packages/flutter_tools/test/general.shard/android/deferred_components_prebuild_validator_test.dart
packages/flutter_tools/test/general.shard/android/gradle_errors_test.dart
packages/flutter_tools/test/general.shard/android/gradle_find_bundle_test.dart
packages/flutter_tools/test/general.shard/android/gradle_test.dart
packages/flutter_tools/test/general.shard/android/gradle_utils_test.dart
packages/flutter_tools/test/general.shard/android/java_test.dart
packages/flutter_tools/test/general.shard/android/migration/cmake_android_16k_pages_migration_test.dart
packages/flutter_tools/test/general.shard/android/template_test.dart
packages/flutter_tools/test/general.shard/android_plugin_test.dart
packages/flutter_tools/test/general.shard/build_system/targets/android_test.dart
packages/flutter_tools/test/general.shard/isolated/android/native_assets_test.dart
packages/flutter_tools/test/integration.shard/android_e2e_api_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_daemon_cache_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_deprecated_plugin_apply_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_flutter_source_path_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_java_version_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_legacy_flutter_plugins_strings_in_comments_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_outputs_app_link_settings_test.dart
packages/flutter_tools/test/integration.shard/android_gradle_print_build_variants_test.dart
packages/flutter_tools/test/integration.shard/android_plugin_compilesdkversion_mismatch_test.dart
packages/flutter_tools/test/integration.shard/android_plugin_example_app_build_test.dart
packages/flutter_tools/test/integration.shard/android_plugin_ndkversion_mismatch_test.dart
packages/flutter_tools/test/integration.shard/android_plugin_new_output_dir_test.dart
packages/flutter_tools/test/integration.shard/android_plugin_skip_unsupported_test.dart
packages/flutter_tools/test/integration.shard/flutter_build_android_app_project_builddir_test.dart
packages/flutter_tools/test/integration.shard/gradle_non_android_plugin_test.dart
packages/flutter_tools/test/src/android_common.dart
```

</details>

Expand https://github.com/flutter/flutter/pull/158970

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159156,2024-11-19T18:53:05Z,2024-11-20T00:13:29Z,matanlurey,2,0,1,22,3,1,1,['tool'],21.0,0,19226.0,0,0,0,0,3175250.86413,,0,1,0,False,"['yjbanov', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Sorry for jumping in with autosubmit. I'm using this PR to test my Cocoon changes.LGTM. Looks good for test-exemption as a non-behavioral change. Hopefully this doesn't fail google testing",LGTM. Looks good for test-exemption as a non-behavioral change. Hopefully this doesn't fail google testing,,
147621,2024-05-01T05:29:56Z,2024-05-13T22:12:50Z,EchoEllet,4,26,7,29,8,3,2,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",51755.0,0,17515350.0,0,0,0,0,3180116.606813,,0,7,0,False,"['goderbauer', 'EchoEllet']","Thanks for the clean-up. Looks like the analyzer is not happy, though: https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8749165137680142961/+/u/run_test.dart_for_analyze_shard_and_subshard_None/stdout

Could you look into that and fix whatever it is complaining about? > Thanks a bunch for the contribution!
> 
> Sorry to make a bunch of suggestions at once, but hopefully we can get all those tests to start passing soon 😄

Thank you, too, for all your amazing work in this framework, I wasn't planning on contributing to Flutter, but I found one of the widget in flutter source code that still passing it to the super class by manually creating the Key, so I searched using the IDE and found all of this. I will do what you suggested as soon as I can For some context: There is a `use_super_parameters` lint that is supposed to encourage the use of `super.` everywhere. Unfortunately, it has a bug and doesn't trigger when the type of the parameter changes (as is the case with all the instances in this PR), see https://github.com/dart-lang/sdk/issues/59226. > For some context: There is a `use_super_parameters` lint that is supposed to encourage the use of `super.` everywhere. Unfortunately, it has a bug and doesn't trigger when the type of the parameter changes (as is the case with all the instances in this PR), see https://github.com/dart-lang/sdk/issues/59226.

Thank you for the info. I didn't know about itThanks a bunch for the contribution!

Sorry to make a bunch of suggestions at once, but hopefully we can get all those tests to start passing soon 😄 Sorry to hear about your slow network connection! Let's see if we can get these tests passing… ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks again for the fantastic contribution! LGTM

Thank you very much!","Thanks a bunch for the contribution!

Sorry to make a bunch of suggestions at once, but hopefully we can get all those tests to start passing soon 😄 Sorry to hear about your slow network connection! Let's see if we can get these tests passing… ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks again for the fantastic contribution! LGTM

Thank you very much!","*Use `super.key` instead of manually passing the `Key` parameter using super(key: key) in the constructors.*

Since if you create a widget the new default will use `super.key` instead of `Key? key : super(key: key)` this small change is to maintain the consistency, it has no semantic change

also there are some other places that might need to be updated:

![image](https://github.com/flutter/flutter/assets/73608287/898f62f5-10f9-4d76-a46c-6def328177cb)

this file for example generate l10n project and it has all the dart code as String, it might have tests that validate the output somewhere that I might miss, also there are some other places like the `_Segment` class where it require `ValueKey` instead if `Key` so I didn't update them (even though it's possible)

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","This change is done by my IDE, I just noticed it now, should I revert? `BuildContext.size` is a nullable value:

https://github.com/flutter/flutter/blob/2e78ed0ff95ae21c20a98266b0eefcb3aaf762b8/packages/flutter/lib/src/widgets/framework.dart#L2335

It makes sense to revert these changes—there must be something funky going on in your IDE. Would you mind reverting this as well? I believe this (along with the `TestWidget` constructors) doesn't vibe with the Dart syntax, since `key` is a named (not positional) parameter.

`({super.key})` works fine, but `(super.key)` doesn't. Since the `StatefulWidget` key parameter is nullable, I believe we need to specify the type in this constructor.

```suggestion
    required Key super.key,
```

(The same applies to other files in this PR with non-nullable keys). You could either revert or change it to a named parameter (not a breaking change since it's just a test, but it'd involve more than just changing a single line). > `BuildContext.size` is a nullable value:
> 
> https://github.com/flutter/flutter/blob/2e78ed0ff95ae21c20a98266b0eefcb3aaf762b8/packages/flutter/lib/src/widgets/framework.dart#L2335
> 
> It makes sense to revert these changes—there must be something funky going on in your IDE.

Solved, but maybe we should not use `!` in a separate PR? > Would you mind reverting this as well?

Done, have no idea why my IDE did this, I disabled all the formatting options in my VS Code settings because the VS Code flutter project settings is not overriding my original for some reason, it might be because of some extension or its settings. > You could either revert or change it to a named parameter (not a breaking change since it's just a test, but it'd involve more than just changing a single line).

I would want to do the second option but I can't `flutter pub get` because of timeout (I don't remember what was the issue but I'm sure) it's due to my slow network connection ```suggestion
    required Key super.key,
``` ```suggestion
        sizeFactor: _resizeAnimation!,
``` ```suggestion
    required Key super.key,
``` ```suggestion
      key: _ReorderableItemGlobalKey(child.key!, index, this),
``` ```suggestion
        itemExtentBuilder: widget.itemExtentBuilder!,
``` ```suggestion
    required Key super.key,
``` ```suggestion
    itemSize = item.context.size!;
``` ```suggestion
        animation: _proxyAnimation!,
``` ```suggestion
            effectivePosition = Offset.lerp(dropPosition - overlayOrigin, effectivePosition, Curves.easeOut.transform(animation.value))!;
``` ```suggestion
  const UniqueWidget({required GlobalKey<T> super.key});
```

Might as well save a couple of lines 🙂 ```suggestion
``` ```suggestion
  const Leaf({ required Key super.key, required this.child });
``` ```suggestion
  const _AlwaysKeepAlive({ required Key super.key });
``` ```suggestion
  const _DeferringWidget({required Key super.key, required this.loader});
``` ```suggestion
  const TestWidget(Key? key) : super(key: key);
``` ```suggestion
  const DeactivateLogger({ required Key super.key, required this.log });
``` ```suggestion
  const TestWidget(Key? key) : super(key: key);
```"
129866,2023-07-01T03:28:08Z,2023-07-01T18:36:11Z,parlough,1,0,1,9,2,1,1,"['tool', 'framework', 'f: routes', 'autosubmit']",43874556.0,0,43874558.0,0,0,0,0,3180217.15191,,0,1,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.LGTM",LGTM,"Removes the remaining links to the old linter site, to the guaranteed dart.dev/lints redirect.

Contributes to https://github.com/dart-lang/sdk/issues/59186 and https://github.com/dart-lang/site-www/issues/4499
",
128620,2023-06-09T21:31:37Z,2023-06-10T18:02:15Z,ZhulanovAA,7,0,1,2,1,2,2,"['framework', 'f: material design', 'autosubmit']",3.0,0,45710303.0,0,0,0,0,3180263.972139,,0,1,0,False,"['Hixie', 'goderbauer', 'auto-submit[bot]', 'chunhtai', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Isn't there a lint that will catch this? test-exempt: refactor with no semantic change auto label is removed for flutter/flutter, pr: 128620, due to This PR has not met approval requirements for merging. You are not a member of flutter-hackers and need 1 more review(s) in order to merge this PR.

- Merge guidelines: You need at least one approved review if you are already part of flutter-hackers or two member reviews if you are not a flutter-hacker before re-applying the autosubmit label. __Reviewers__: If you left a comment approving, please use the ""approve"" review action instead. that was what i thought, too. we do enable unnecessary_parenthesis, but apparently it is not flagging this instance. cc @goderbauer do you know who should we talk to in this case? I would start by filing a bug with the linter: https://github.com/dart-lang/linter filed https://github.com/dart-lang/sdk/issues/59182LGTM LGTM",LGTM LGTM,"Fix unnecessary parentheses introduced in #128501

@chunhtai @HansMuller

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
",
137304,2023-10-26T00:29:14Z,2023-10-27T17:22:14Z,LongCatIsLooong,1,4,5,341,5,1,1,"['framework', 'a: accessibility', 'f: scrolling', 'autosubmit']",3528.0,0,33775895.0,0,0,0,0,3180815.93288,,0,5,0,False,['flutter-dashboard[bot]'],"This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/wiki/Writing-a-golden-file-test-for-package:flutter).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

LGTM",LGTM,"Fixes https://github.com/flutter/flutter/issues/54665

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","(I wish we had a lint for this, https://github.com/dart-lang/linter/issues/4365) Maybe add a `recursively` to this method name to indicate that it will also do so for the child's children (similarly to other methods like that that we have in the framework). Shouldn't the rootSemanticsNode also be considered invisible if it doesn't merge all descendants into it, has a childrenCount > 0, and an empty rect?

In other words, in the if branch, why is the rootNode not considered invisible if it has children and and empty rect? Maybe rename the name rootNode to just node here? It gets a little confusing because this is not necessarily gonna be the root root node for every call?"
126935,2023-05-16T17:51:18Z,2023-05-17T17:06:19Z,goderbauer,3,3,2,44,1,4,2,"['framework', 'f: material design', 'autosubmit']",3.0,0,47796569.0,0,0,0,0,3180818.482339,,1,2,0,False,"['goderbauer', 'flutter-dashboard[bot]', 'Hixie']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. cc @srawlins  test-exempt: removing codeLGTM, so nice and clean! LGTM :+1: ","LGTM, so nice and clean! LGTM :+1: ",Follow-up to https://github.com/flutter/flutter/pull/126926.,nit: avoid else after return Good call. We should probably have a lint for that... https://github.com/dart-lang/linter/issues/4363
119877,2023-02-03T01:12:42Z,2023-03-01T00:25:55Z,bebe0612,7,1,2,2,1,2,2,"['framework', 'autosubmit']",3.0,0,56665186.0,0,0,0,0,3184918.221914,,0,2,0,False,"['auto-submit[bot]', 'goderbauer', 'flutter-dashboard[bot]', 'Hixie']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Since this affects the IDE experience, it could be worthwhile to have a lint reminding us to always add function parameter names (cc @pq). @bebe0612 Would you mind filing a request for that at https://github.com/dart-lang/linter/issues/new/choose ? test-exempt: code style

but many bonus points would be applied if you could find a way to detect this kind of problem in the code (e.g. via a lint). Let's submit this as-is for now, I'll follow up with a PR to fix my (unrelated) nit. auto label is removed for flutter/flutter, pr: 119877, due to - Please get at least one approved review if you are already a member or two member reviews if you are not a member before re-applying this label. __Reviewers__: If you left a comment approving, please use the ""approve"" review action instead. auto label is removed for flutter/flutter, pr: 119877, due to Validations Fail. Filed lint proposal: https://github.com/dart-lang/sdk/issues/59047LGTM LGTM!",LGTM LGTM!,"When you're using ide like intelliJ, if function parameter is omitted, code completion suggests using paramter name like c0, c1... Below is example what i said.

<img width=""272"" alt=""스크린샷 2023-02-03 오전 10 09 24"" src=""https://user-images.githubusercontent.com/72788825/216486897-b56453d2-b309-47ea-885b-b0ec6ed1b648.png"">

It affects two main usage, `LayoutBuilder`, `SliverLayoutBuilder` and many people are using parameter name below. (coplilot recommended 👍 )

```dart
    LayoutBuilder( // or SliverLayoutBuilder
      builder: (context, constraints) {
        
      },
    );
```


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","Actually, per our style guide this should actually be using a typedef. Something like:

```suggestion
  final ConstrainedLayoutWidgetBuilder<ConstraintType> builder;
```

with 

```dart
/// The signature of the [ConstrainedLayoutBuilder] builder function.
typedef ConstrainedLayoutWidgetBuilder<ConstraintType extends Constraints> = Widget Function(BuildContext context, ConstraintType constraints);
```

Since you're in here, would you mind cleaning this up?"
119359,2023-01-27T19:13:33Z,2023-01-31T01:39:10Z,LongCatIsLooong,2,15,4,385,4,2,1,"['a: text input', 'framework', 'autosubmit']",285.0,0,57205029.0,0,0,0,0,3185025.468412,,0,4,0,False,"['flutter-dashboard[bot]', 'Hixie']","test-exempt: code refactor with no semantic change It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.LGTM",LGTM,"Part of https://github.com/flutter/flutter/issues/113725
The remaining post frame callbacks will be removed in the future.

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","per style guide: Please use a typedef. nit: move this below the setter or above the getter so that the getter-variable-setter sandwich stays together. For my own understanding: If this is set to true, the callback will not actually get called until this object is repainted. So the callback may miss some composition phases, if these happen without repainting the object. Is that the expected behavior (seems confusing)? Should we force a repaint if you enable it? typedef This seems kinda odd. I guess it works in _this_ case because `_hasInputConnection` is always false when the widget is inflated for the first time? Is that guaranteed?  This seems like a pattern we can and should lint for, maybe file a request at https://github.com/dart-lang/linter/issues/new/choose? How is this guaranteed? Also, why's this assert even relevant? Well looks like there's already a public typedef for that signature. Updated. Yeah the assumption is `_hasInputConnection` is always false when inflated. Connections are opened/closed on focus changes and when the state is inflated the connection is always closed and it won't open until the next microtask flush. The assert is there to make sure the assumption is correct. Looking at the EditableTextState code it seems if you give it a focused FocusNode when it mounts it will just pretend it's not focused. The class is private and doesn't have a global key, so it will never used by a different `EditableTextState`? https://github.com/dart-lang/linter/issues/4025. Thanks! > Looking at the EditableTextState code it seems if you give it a focused FocusNode when it mounts it will just pretend it's not focused.

This sounds like a bug?

> Also, why's this assert even relevant?

I still don't understand why the assert is relevant for the functionality and correctness of `_CompositionCallback`. If it is not needed, I would just remove it (because it is fairly confusing). And if it is needed to assert on some condition not really relevant to the `_CompositionCallback` class itself we should at least leave a comment here and explain that relationship to a future reader."
114290,2022-10-29T13:41:43Z,2022-11-01T06:54:30Z,fzyzcjy,4,0,2,1,1,2,2,"['framework', 'autosubmit']",190806.0,0,64998058.0,0,0,0,0,3187907.422322,,0,2,0,False,"['auto-submit[bot]', 'jiahaog', 'fzyzcjy', 'Hixie']","test-exemption: code refactor with no semantic change

That said, it would be great to file an issue on the linter to ask for a lint to catch this kind of thing. auto label is removed for flutter/flutter, pr: 114290, due to - The status or check suite [Google testing](http://flutter-rob/#/flutter/premerge_prs?pr=114290) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 > That said, it would be great to file an issue on the linter to ask for a lint to catch this kind of thing.

Totally agree, here it is: https://github.com/dart-lang/sdk/issues/58913 > auto label is removed for flutter/flutter, pr: 114290, due to - The status or check suite [Google testing](http://flutter-rob/#/flutter/premerge_prs?pr=114290) has failed. Please fix the issues identified (or deflake) before re-applying this label.

This seems to be some sort of infrastructure issue. I've overridden the ""Google testing"" status check and this PR should be ok to land. Googlers, please see b/256753114 for more details.![LGTM](http://junkyard.damowmow.com/578) LGTM",![LGTM](http://junkyard.damowmow.com/578) LGTM,"Find this when reading source code. Maybe next time it can be caught by a linter :)

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
",
153368,2024-08-13T16:00:19Z,2024-11-19T20:49:04Z,bernaferrari,10,2,6,174,2,2,1,[],2510475.0,0,8484525.0,0,0,0,0,3187524.719351,,0,6,0,False,"['jtmcdole', 'jmagman', 'bernaferrari', 'flutter-dashboard[bot]']","https://github.com/flutter/flutter/issues/153981 has merged, so hopefully you don't hit timeouts. Is there anything I need to make such as reduce the test to make it lighter, or should I try to reland? In my machine it didn't take so many minutes.  > Is there anything I need to make such as reduce the test to make it lighter, or should I try to reland? In my machine it didn't take so many minutes.

I vote try to reland, if you don't think your test should take much time. I made it twice as fast (if it is still slow, I can reduce further the number of iterations). I think it is ready for review. I'm terrified about it breaking the tree (again). You have some analyzer issues
```   
info â�¢ Sort directive sections alphabetically â�¢ dev/benchmarks/microbenchmarks/lib/benchmark_collection.dart:25:1 â�¢ directives_ordering
  error â�¢ The name 'execute' is being referenced through the prefix 'observer_list_bench', but it isn't defined in any of the libraries imported using that prefix â�¢ dev/benchmarks/microbenchmarks/lib/benchmark_collection.dart:97:65 â�¢ undefined_prefixed_name
``` This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 Ok, sorry (didn't see anything on IDE side). Checks working now. Friendly ping. @jtmcdole can you review or find someone to review? This fell between the cracks. I'll take a look tomorrowOne comment but this is directionally correct.",One comment but this is directionally correct.,"Reland https://github.com/flutter/flutter/pull/143799 which is part 1 of https://github.com/flutter/flutter/pull/138481 and https://github.com/flutter/flutter/issues/146211.

Could someone run this in device-lab so we are 100% sure it works? I don't know if it was a flake or what last time. Locally it works well.",There should be no reason to warm up; we don't jit in release mode. You should be able to validate this by running this test in release mode with and without the warmup (sampled a few times for regular noise).  I suspect we can just remove the extra calls to warmup. Thanks. I didn't know that.
158022,2024-11-01T20:49:40Z,2024-11-19T20:33:56Z,AbdeMohlbi,4,0,10,4,1,2,2,"['platform-android', 'tool']",840279.0,0,1554256.0,0,0,0,0,3188433.807595,,0,10,0,False,"['reidbaker', 'AbdeMohlbi', 'stuartmorgan']","test-exempt: code refactor with no semantic change will review after tests pass.  the errors are `OS Error: The process cannot access the file because it is being used by another process.`  done

> will review after tests pass.

it's done now",,"according to [Gradle](https://docs.gradle.org/current/userguide/task_configuration_avoidance.htmll) :`As of Gradle 5.1, we recommend that the configuration avoidance APIs be used whenever tasks are created.`
![writing-tasks-4](https://github.com/user-attachments/assets/407c79bb-7bfa-4bea-9b13-dec01c60dc1c)
what android studio lint is failing ?
![Capture d’écran 2024-11-01 214856](https://github.com/user-attachments/assets/af745305-6310-406c-b427-fb8a5dd5755c)


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
159051,2024-11-17T15:46:19Z,2024-11-19T19:34:12Z,AbdeMohlbi,2,0,2,2,1,3,3,"['platform-android', 'tool']",168534.0,0,186473.0,0,0,0,0,3192018.916287,,0,2,0,False,"['reidbaker', 'flutter-dashboard[bot]']","test-exempt: Lint change with no change in functionality.  It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.",,"`what android studio lint is failing ?`

![Capture d’écran 2024-11-19 110315](https://github.com/user-attachments/assets/d86605f6-0060-4721-9233-09d8ec5774d4)

![Capture d’écran 2024-11-19 110338](https://github.com/user-attachments/assets/7ee7465e-7a06-43db-bebb-ca87dda3cdc8)
see #147122
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
103620,2022-05-12T13:14:56Z,2022-08-24T17:22:22Z,newtaDev,9,4,4,43,8,3,3,"['a: text input', 'framework', 'f: material design', 'f: cupertino', 'f: routes', 'f: gestures', 'autosubmit']",3.0,0,79683957.0,0,0,0,0,3191618.193387,,0,4,0,False,"['Hixie', 'goderbauer', 'newtaDev', 'guidezpl', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. test-exempt: code refactor with no semantic change would be great to get a lint for this, is there a bug filed on the linter repo for one? > would be great to get a lint for this, is there a bug filed on the linter repo for one?

Yeah definitely,
I didn't find any open issues in the linter repo https://dart-lang.github.io/linter/lints/use_super_parameters.html, no? It's experimental, though cc @goderbauer  Filed https://github.com/dart-lang/sdk/issues/58829 and https://github.com/dart-lang/sdk/issues/58828. @newtaDev Could you rebase this to the latest master to make the checks happy? Thanks. > @newtaDev Could you rebase this to the latest master to make the checks happy? Thanks.

Rebased 🤗![LGTM](http://junkyard.damowmow.com/577) LGTM

Looks like the `use_super_params` lint is not flagging these... I'll file a bug with the linter. LGTM","![LGTM](http://junkyard.damowmow.com/577) LGTM

Looks like the `use_super_params` lint is not flagging these... I'll file a bug with the linter. LGTM","New language feature in Dart 2.17: https://github.com/dart-lang/language/issues/1855

used super parameters in 
 - packages/flutter/lib/src/cupertino
 - packages/flutter/lib/src/gestures
 - packages/flutter/lib/src/material
 - packages/flutter/lib/src/painting

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.
","missing space before `{` Thanks 🤗,
Added space in between ```suggestion
  _DelayedPointerState(super.initialPosition, Duration delay, super.kind, super.deviceGestureSettings)
``` nit: remove this space:

```suggestion
  );
```"
103833,2022-05-14T22:49:21Z,2022-07-20T21:29:05Z,bernaferrari,30,23,19,412,10,4,3,"['a: tests', 'framework', 'f: material design', 'autosubmit']",337107.0,0,79475484.0,1,0,0,0,3192828.161167,,0,19,0,False,"['auto-submit[bot]', 'gspencergoog', 'bernaferrari', 'Hixie']","Cc @gspencergoog. Kind of related to the PR you just reviewed 😅. This is a lot simpler. I think if we're going to add a new shape, then it should support lerping to all the other shapes.  The problem is that adding a new shape is exponential in the number of lerps you need to implement, since not only does this have to lerp to, say, rectangle, rectangle needs to lerp to it. For three shapes, you need three lerp functions.  For five, you need ten. If we had 32 shapes, we'd need 496 lerp functions. (x = n(n-1)/2). We don't have to support *every* lerp, but the more the better.  I'd say at least oval->rectangle, oval->rounded rect, oval->circle, oval->stadium, and back again.

It also makes the burden of adding a new shape exponentially harder, so we should consider if this is one of the shapes we *really* want to have.  It seems reasonably likely that it is, but we should choose carefully. What do you think if I made it as an attribute to CircleBorder? Like `isOval`? We would loose lerp between `oval = true` and `oval = false`, but it could be easier to update every Circle lerp. I like that better, since it doesn't increase the cost of adding a new shape. What about making it more ""lerpable"": instead of a bool, make the parameter a double that goes from 0.0 to 1.0, where 0.0 is an oval, and 1.0 is a circle. The problem is the name of this parameter: circularity? rotundity? ovalness (reverse sense)? I think I'm leaning towards `circularity`. Having it be a continuum will make it more useful anyhow: I can imagine wanting a semi-oval circle even when I don't want to lerp it. I'll test that, probably tomorrow. There is already a property like you described used in lerping. It will be kind of weird, but let's see the result. Because we are not lerping from round to square, it is round with min bounds to round without bounds. Yes, but I think the rect to circle lerp parameter isn't the same as this.  They probably need to be combined somehow, which might be complicated. Or it might just be a multiply in the right place, if you're lucky. :-)
 It should be simple, just the end result might be kind of weird. Let's see tomorrow. Here it goes!

I also updated the sample code with a complex example lerping everything. Test is failing for mysterious reasons, might be something broken in the tree. I'll try to rebase another day.

<img width=""1019"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/169870931-4f90bfb3-2c86-4bd0-b637-f8eaf235cbb8.png""> I'll take a look.  What about ""eccentricity"" for the name instead of ""ovalness""?
I'm not sure it matches the textbook definition, but it does make some sense: eccentricity of 0.0 is a circle, and 1.0 is a very ""eccentric"" ellipse.

""The eccentricity of an ellipse is the ratio of the distance from the center to the foci and the distance from the center to the vertices."" I replaced ovalness with your circularity idea.

I think 0.0 = ellipse and 1.0 = circle makes slightly more sense codewise while at the same time being weird to introduce a parameter that by default is 1.0, not 0.0. Both have pros and cons. I changed from ovalness to circularity to make this change. If you go back two or three commits you can see how it was and which way you prefer.

But eccentricity could also work. I guess first check the code, then we can discover the name we want. It could even be `fitEdgesRatio` or something that has zero relationship to a circle. What we are changing are the bounds from a square to a rectangle.  Now it is using eccentricity 👀 @bernaferrari are you still wanting to merge this?  I think we're really close here. Yes, I just don't know what else we need. You never reviewed the code.  Don't worry, I'll forgive you if you can help give an end to the round outside StrokeAlign saga (either Flutter stays with the current one, we merge the other PR or we merge other and propose a new way for the one you and I like) before it is too late :P - The status or check suite [Google testing](http://flutter-rob/#/flutter/premerge_prs?pr=103833) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 > I think if we're going to add a new shape, then it should support lerping to all the other shapes. The problem is that adding a new shape is exponential in the number of lerps you need to implement, since not only does this have to lerp to, say, rectangle, rectangle needs to lerp to it. For three shapes, you need three lerp functions. For five, you need ten. If we had 32 shapes, we'd need 496 lerp functions. (x = n(n-1)/2).

It's actually a bit more complicated than that, because some of the lerps actually generate new (otherwise inaccessible) types, which you then need to be able to lerp to/from. For example, _CompoundBorder, _RoundedRectangleToCircleBorder, _StadiumToRoundedRectangleBorder, etc. And do we need to support lerping from a _RoundedRectangleToCircleBorder to a _StadiumToRoundedRectangleBorder? How would we even implement that without making at least one public. :-) - The status or check suite [Google testing](http://flutter-rob/#/flutter/premerge_prs?pr=103833) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Ok, I fixed the issue and made some tiny changes:
- Added lerpTo to OvalBorder (lerpFrom/lerpTo is optional).
- Rename `RoundedRectangleBorder(..., 50% of the way to being a CircleBorder that is 20% circular)` to `20% oval` (since now 100% = totally oval, 0% = circle)
- Added that string to StadiumBorder lerp (ops).

Ready for Google Testing again. Someone needs to make a g3fix:

![Screenshot_20220719-143719_Discord.png](https://user-images.githubusercontent.com/351125/179814234-6bf5becb-7ec9-46fa-a971-42c9e7242100.png) > [BoxShape.oval] There is a comment saying new shapes shouldn't go here.

I should probably have included more information in the comment saying why:

 - Each new enum value is a lot of new code in a bunch of places, including in code we don't control (e.g. app code, that's why the Google tests are failing), so we'd need to write a migration guide and migrate a bunch of code.
 - Each new enum value requires new code in a bunch of places.
 - That new code likely won't get tree-shaken out, since I don't think the compiler can know which values are never used. So this has a permanent binary size cost even for people who don't use it.
 - In principle, we've moved to ShapeBorders rather than BoxShape for new shapes, and the existence of BoxShape is just a legacy feature at this point. Adding more shapes encourages people to use BoxShape in the future. Should I remove it then? It felt redundant because it is even simpler than the current circle option that's available there. I would probably recommend removing it, for the binary size issue. I agree that each individual bit of code that implements `BoxShape.oval` is simpler than the equivalent code for `BoxShape.circle`, but there's a lot of these, and they all add up, and they all end up being in the compiled binary even if the user doesn't ever use either BoxShape value.

(If we could remove BoxShape entirely, I would probably do that. But that would break code that uses it.)

If we don't remove BoxShape.oval then we have to go through the breaking change process:
https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes Removed 😥

What if we had this lint https://github.com/dart-lang/sdk/issues/58739 for BoxShape.circle only so that users 'upgrade' before removing ShapeBorder entirely? I don't think that lint necessarily is the right one (see e.g. https://github.com/dart-lang/sdk/issues/58739) but I could see having a specific lint that looks for BoxDecorations with BoxShape.circle and suggests using a ShapeDecoration with a CircleBorder instead, yeah. That would let us move towards deprecating BoxShape.

Actually we could just deprecate BoxShape.circle with a message saying to use ShapeDecoration with a CircleBorder instead. Is there anything that wouldn't be handled by that case? Everything would be handed in that case. But... 

I don't know how it would handle this. Probably somewhere in Image accepts a ShapeBorder? Or it would become the child? It is a weird case that happens everywhere (luckily most/all don't have a child, so putting as child would work).
```dart
decoration: const BoxDecoration(
    image: DecorationImage(
        image: AssetImage(
            'people/square/sandra.png',
             package: _kGalleryAssetsPackage,
        ),
    ),
    shape: BoxShape.circle,
),
```
And this, which is basically the only BoxShape usage in Flutter. Replace that with ShapeBorder?
<img width=""789"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/179826510-d126cb01-e472-4b61-9637-41610e546492.png"">
 I can make a PR that tries to fix all `BoxShape.circle` in the API, just tell me what should happen to InkWell:
<img width=""688"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/179827048-fae5dbc4-ba56-4399-a5c8-b9ec7647351c.png"">
 I think the example above just becomes:

```dart
decoration: const ShapeDecoration(
    image: DecorationImage(
        image: AssetImage(
            'people/square/sandra.png',
             package: _kGalleryAssetsPackage,
        ),
    ),
    shape: CircleBorder(),
),
```

InkHighlight is tricky. It's unrelated to decorations and just using it for its own purposes. I would probably not touch it (though I could also imagine porting the whole ink infrastructure to ShapeBorders). (That does mean that deprecating BoxShape.circle would be more difficult since it would affect users of InkHighlight... maybe we just deprecate `shape` on `BoxDecoration`?) Yeah, seems like so :(
Maybe move the BoxShape from BoxDecoration to InkHighlighter too. 
I'll open a PR, we can play with that.So sorry, these comments were sitting here in GitHub, I just forgot to submit them, so I thought I was still waiting for your response!

Anyhow, here are my suggestions...
 ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

With these last few nits, this looks good to go!

Thanks so much for the PR, and I'm sorry it took so long for me to notice that I hadn't submitted. ![LGTM](http://junkyard.damowmow.com/578)","So sorry, these comments were sitting here in GitHub, I just forgot to submit them, so I thought I was still waiting for your response!

Anyhow, here are my suggestions...
 ![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

With these last few nits, this looks good to go!

Thanks so much for the PR, and I'm sorry it took so long for me to notice that I hadn't submitted. ![LGTM](http://junkyard.damowmow.com/578)","Fix https://github.com/flutter/flutter/issues/103829

Flutter supports rectangles and circles, but doesn't support ovals (circles that are not squared). I adjusted two things:

1. Add `BoxShape.oval`. There is a comment saying new shapes shouldn't go here. I believe oval could be an exception to that, since `BoxShape.oval` is basically `BoxShape.circle` without constraints. It is easier to implement oval than circle. In most places, I just call `drawOval` instead of calculating the smaller side and drawing a circle. If you disagree, I can remove it, no problem 😀.
2.  Add OvalBorder. Works like CircleBorder, but it is unconstrained. I haven't solved lerp from Oval to Circular or from Oval to others, only it to itself (which lerps do you think are useful?). Stadium lerps to Circular and RoundedRectangle lerps to Circular.

Demo:
<img width=""789"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/168450448-50399f97-af41-4906-9bc7-8e5ef6d73ae8.png"">

```dart
import 'package:flutter/material.dart';

const Color darkBlue = Color.fromARGB(255, 18, 32, 47);

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: darkBlue,
      ),
      debugShowCheckedModeBanner: false,
      home: const Scaffold(
        body: Center(
          child: MyWidget(),
        ),
      ),
    );
  }
}

List<Widget> spaceRow(double gap, Iterable<Widget> children) => children
    .expand((item) sync* {
      yield SizedBox(width: gap);
      yield item;
    })
    .skip(1)
    .toList();

List<Widget> spaceColumn(double gap, Iterable<Widget> children) => children
    .expand((item) sync* {
      yield SizedBox(height: gap);
      yield item;
    })
    .skip(1)
    .toList();

class MyWidget extends StatelessWidget {
  const MyWidget({super.key});

  @override
  Widget build(BuildContext context) {
    const debugStrokeAlign = StrokeAlign.inside;
    return ListView(
      children: [
        const Text(""box decoration""),
        Row(
          children: [
            Container(
              width: 60,
              height: 120,
              decoration: const BoxDecoration(
                shape: BoxShape.oval,
                color: Colors.blue,
              ),
            ),
            Container(
              width: 60,
              height: 120,
              decoration: const BoxDecoration(
                shape: BoxShape.oval,
                color: Colors.blue,
                image: DecorationImage(
                  image: NetworkImage(
                      ""https://unsplash.it/200/300?image=1&blur=2""),
                ),
              ),
            ),
            Container(
              width: 60,
              height: 120,
              decoration: const BoxDecoration(
                shape: BoxShape.circle,
                color: Colors.blue,
              ),
            ),
            Container(
              width: 60,
              height: 120,
              decoration: const BoxDecoration(
                shape: BoxShape.circle,
                color: Colors.blue,
                image: DecorationImage(
                  image: NetworkImage(
                      ""https://unsplash.it/200/300?image=1&blur=2""),
                ),
              ),
            ),
          ],
        ),
        // const SizedBox(height: 16),
        const Text(""eccentricity growing""),
        Row(
          children: [
            for (double eccentricity in [0, 0.25, 0.5, 0.75, 1])
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Container(
                  width: 100,
                  height: 160,
                  clipBehavior: Clip.antiAlias,
                  decoration: ShapeDecoration(
                    color: Colors.red,
                    shape: CircleBorder(
                      eccentricity: eccentricity,
                      side: BorderSide(
                        color: Colors.white.withOpacity(0.5),
                        width: 8,
                        strokeAlign: StrokeAlign.inside,
                      ),
                    ),
                  ),
                ),
              ),
          ],
        ),
        Row(
          children: [
            for (double eccentricity in [0, 0.25, 0.5, 0.75, 1])
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Container(
                  width: 100,
                  height: 40,
                  clipBehavior: Clip.antiAlias,
                  decoration: ShapeDecoration(
                    color: Colors.red,
                    shape: CircleBorder(
                      eccentricity: eccentricity,
                      side: BorderSide(
                        color: Colors.white.withOpacity(0.5),
                        width: 8,
                        strokeAlign: StrokeAlign.inside,
                      ),
                    ),
                  ),
                ),
              ),
          ],
        ),
        const SizedBox(height: 32),
        const Text(""Lerp CircleBorder not oval -> CircleBorder oval""),
        const SizedBox(height: 16),
        Row(
          children: spaceRow(32, [
            for (double eccentricity in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: 100,
                height: 40,
                decoration: ShapeDecoration(
                  color: Colors.blue,
                  shape: CircleBorder(
                    eccentricity: 0,
                    side: BorderSide(
                      color: Colors.red.withOpacity(0.5),
                      width: 5,
                      strokeAlign: debugStrokeAlign,
                    ),
                  ).lerpTo(
                    CircleBorder(
                      eccentricity: eccentricity,
                      side: BorderSide(
                        color: Colors.white.withOpacity(0.5),
                        width: 5,
                        strokeAlign: debugStrokeAlign,
                      ),
                    ),
                    eccentricity,
                  )!,
                ),
              ),
          ]),
        ),
        const SizedBox(height: 32),
        const Text(""RoundedRectangle -> Circle""),
        const SizedBox(height: 16),
        const RoundedRectangleToCircle(width: 60, height: 120),
        const SizedBox(height: 16),
        const RoundedRectangleToCircle(width: 120, height: 60),
        const SizedBox(height: 64),
        const Text(""Stadium -> Circle""),
        const SizedBox(height: 16),
        const StadiumToCircle(width: 60, height: 120),
        const SizedBox(height: 16),
        const StadiumToCircle(width: 120, height: 60),
      ],
    );
  }
}

class StadiumToCircle extends StatelessWidget {
  const StadiumToCircle({
    required this.width,
    required this.height,
    Key? key,
  }) : super(key: key);

  final double width;
  final double height;

  @override
  Widget build(BuildContext context) {
    const debugStrokeAlign = StrokeAlign.inside;

    final stadiumLerp = StadiumBorder(
      side: BorderSide(
        color: Colors.red.withOpacity(0.5),
        width: 5,
        strokeAlign: StrokeAlign.inside,
      ),
    );

    ShapeBorder stadiumToCircleLerp(double t) => stadiumLerp.lerpTo(
        CircleBorder(
          eccentricity: 1,
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: StrokeAlign.inside,
          ),
        ),
        t)!;

    ShapeBorder stadiumToPartialCircleLerp(double t) => stadiumLerp.lerpTo(
        CircleBorder(
          eccentricity: 0.5,
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: debugStrokeAlign,
          ),
        ),
        t)!;

    ShapeBorder stadiumToCircleLerpFullyRound(double t) => StadiumBorder(
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: debugStrokeAlign,
          ),
        ).lerpTo(
            CircleBorder(
              eccentricity: 0.0,
              side: BorderSide(
                color: Colors.purple.withOpacity(0.5),
                width: 5,
                strokeAlign: debugStrokeAlign,
              ),
            ),
            t)!;

    return Column(
      children: [
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.red.withOpacity(0.25),
                  shape: stadiumToCircleLerp(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 1,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('1.0')),
            ),
          ]),
        ),
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.red.withOpacity(0.25),
                  shape: stadiumToPartialCircleLerp(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 0.5,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('0.5')),
            ),
          ]),
        ),
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.brown.withOpacity(0.25),
                  shape: stadiumToCircleLerpFullyRound(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 0.0,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('0.0')),
            ),
          ]),
        ),
      ],
    );
  }
}

class RoundedRectangleToCircle extends StatelessWidget {
  const RoundedRectangleToCircle({
    required this.width,
    required this.height,
    Key? key,
  }) : super(key: key);

  final double width;
  final double height;

  @override
  Widget build(BuildContext context) {
    const debugStrokeAlign = StrokeAlign.inside;

    final roundedLerp = RoundedRectangleBorder(
      side: BorderSide(
        color: Colors.red.withOpacity(0.5),
        width: 5,
        strokeAlign: StrokeAlign.inside,
      ),
    );

    ShapeBorder roundedToOvalLerp(double t) => roundedLerp.lerpTo(
        OvalBorder(
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: StrokeAlign.inside,
          ),
        ),
        t)!;

    ShapeBorder roundedToPartialCircleLerp(double t) => roundedLerp.lerpTo(
        CircleBorder(
          eccentricity: 0.5,
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: debugStrokeAlign,
          ),
        ),
        t)!;

    ShapeBorder roundedToCircleLerpFullyRound(double t) =>
        RoundedRectangleBorder(
          side: BorderSide(
            color: Colors.blue.withOpacity(0.5),
            width: 5,
            strokeAlign: debugStrokeAlign,
          ),
        ).lerpTo(
            CircleBorder(
              eccentricity: 0.0,
              side: BorderSide(
                color: Colors.purple.withOpacity(0.5),
                width: 5,
                strokeAlign: debugStrokeAlign,
              ),
            ),
            t)!;

    return Column(
      children: [
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.red.withOpacity(0.25),
                  shape: roundedToOvalLerp(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 1.0,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('1.0')),
            ),
          ]),
        ),
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.red.withOpacity(0.25),
                  shape: roundedToPartialCircleLerp(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 0.5,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('0.5')),
            ),
          ]),
        ),
        Row(
          children: spaceRow(32, [
            for (double t in [0, 0.25, 0.5, 0.75, 1])
              Container(
                width: width,
                height: height,
                decoration: ShapeDecoration(
                  color: Colors.brown.withOpacity(0.25),
                  shape: roundedToCircleLerpFullyRound(t),
                ),
              ),
            Container(
              width: width,
              height: height,
              decoration: ShapeDecoration(
                color: Colors.white.withOpacity(0.25),
                shape: CircleBorder(
                  eccentricity: 0.0,
                  side: BorderSide(
                    color: Colors.white.withOpacity(0.5),
                    width: 5,
                    strokeAlign: debugStrokeAlign,
                  ),
                ),
              ),
              child: const Center(child: Text('0.0')),
            ),
          ]),
        ),
      ],
    );
  }
}
```","I don't think you need to mention the ""squared space"", that is just a special case that should be expected: if the aspect ratio of the rectangle is 1:1, then the ""oval"" will be a circle, regardless of eccentricity.

Perhaps something like this?

```suggestion
  /// The [eccentricity] parameter describes how much the circle will deform to
  /// fit the rectangle it is a border for. A value of zero implies no
  /// deformation (a circle touching at least two sides of the rectangle), a
  /// value of one implies full deformation (an oval touching all sides of the
  /// rectangle).
``` ```suggestion
        final RRect bounds = RRect.fromRectAndRadius(Offset.zero & size, Radius.elliptical(size.width, size.height));
``` This should probably be a switch statement instead of an ""if"", just in case we add more shapes in the future. ```suggestion
    assert(shape == BoxShape.rectangle || borderRadius == null); // Can't have a border radius if you're a circle or an oval.
``` You might split these into separate asserts for readability, and so when they fire they are more useful.

You can also print the offending value in the assert message so it's more helpful. Like so:

```dart
assert(eccentricity >= 0.0, 'The eccentricity argument $eccentricity is not greater than or equal to zero.');
``` You should fill and wrap this at 80 columns:
```suggestion
/// Typically used with [ShapeDecoration] to draw an oval. Instead of centering
/// the [Border] to a square, like [CircleBorder], it fills the available space,
/// such that it touches the edges of the box. There is no difference between
/// `CircleBorder(eccentricity = 1.0)` and `OvalBorder()`. [OvalBorder] works as
/// an alias for users to discover this feature.
``` Fixed, but this is definitely not following the 80-column limit.
<img width=""640"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/178824485-70dd1a4d-0968-4d64-91df-ceae5ac3a4fc.png""> The 80 column limit is only strict for comments, and we regularly bend that rule for asserts. Done. Just question, do we need `eccentricity != null`? I never understood `side != null` since null safety kills that. It got slightly weird (wish you could return a switch :( hopefully soon), but it is there, I agree with the more shapes in future. Done, but changed 'the circle' to 'a circle'. Yeah, it does seem kind of silly, but there are people out there still running without strict null safety, which means that the asserts still do something.

We'll eventually make a pass and remove all such asserts with a tool once it's been long enough since we turned on null safety. Can you use the same wording as above?  ""a squared box"" doesn't make much sense to me. Add a blank doc comment line before this one. I thought even when null-safety was off when calling code that was null-safe it would be null-safe. Ok, adding `eccentricity != null` Formatting here is a little different from what we normally do:

```suggestion
    if (borderRadius == null &&
        (shape == BoxShape.oval || shape == BoxShape.oval) &&
        !assertOval(shapeClipper, matchState)) {
``` <img width=""710"" alt=""image"" src=""https://user-images.githubusercontent.com/351125/178827823-be18c27c-75a9-4692-9251-2f38e86d044a.png"">

yes, but that was the reason lol Ahh, OK.  Well, we don't usually format it like that. Changed to:
```
  /// Defines the ratio (0.0-1.0) from which the border will deform
  /// to fit a rectangle.
  /// When 0.0, it draws a circle touching at least two sides of the rectangle.
  /// When 1.0, it draws an oval touching all sides of the rectangle.
``` Fixed the others in https://github.com/flutter/flutter/pull/103833/commits/6cfd0938e0e5434bd052f784ee9953f09a0881db `t` can be > 1.0 or < 0.0, which will then fire the assert in the CircleBorder constructor. We should clamp the output of lerpDouble here. same here Oh, I never knew that! Fixed in https://github.com/flutter/flutter/pull/103833/commits/be598d0f3e00e96ef178571b62cd4ff46cf37397."
102536,2022-04-25T23:24:52Z,2022-04-26T20:29:08Z,jason-simmons,3,3,1,9,2,2,1,"['framework', 'a: animation']",10.0,0,81114872.0,0,0,0,0,3192909.38268,,0,1,0,False,"['jason-simmons', 'goderbauer', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. I noticed this while profiling some animations.  This improves performance by avoiding the construction and invocation of an `Iterator` for the `List` underlying the `ObserverList`.
`List.of` does have a special case that recognizes when the argument is another `List`.  But in this case, the `ObserverList` itself is not a `List`, so `List.of` has to go through the `ObserverList`'s `iterator.

The Dart team now recommends avoiding the `List.of` constructor (see https://stackoverflow.com/a/61541310)
 > The Dart team now recommends avoiding the List.of constructor (see https://stackoverflow.com/a/61541310)

I wonder if the recommendations given there could be encoded in lints to remind developers to do the right thing. Filed https://github.com/dart-lang/sdk/issues/58716 for that.Why is this more efficient? Is there a benchmark? LGTM

Thanks for the extra context!","Why is this more efficient? Is there a benchmark? LGTM

Thanks for the extra context!",,"should this specify ""growable: false""? same Changed this to `growable: false`

I didn't notice a performance difference, but looking at the Dart SDK sources it looks like using `toList(growable: false)` will save one allocation.
"
99881,2022-03-09T23:51:22Z,2022-03-22T18:00:23Z,goderbauer,8,2,1,106,17,3,2,"['team', 'tool']",764631.0,0,85173991.0,0,0,0,0,3193000.508986,,0,1,0,False,"['skia-gold', 'goderbauer', 'christopherfujino']","No code changes? > No code changes?

I was hoping that the repro was already clean from my clean-up a couple of months ago, but looks like the checks are proving me wrong. Will look at those failures. skp_generator is getting fixed in https://github.com/flutter/tests/pull/127. This is currently blocked on https://github.com/dart-lang/sdk/issues/58690. The remaining failures should all get resolved as soon as the fix for https://github.com/dart-lang/sdk/issues/58690 rolls into flutter. Gold has detected about 1 new digest(s) on patchset 7.
View them at https://flutter-gold.skia.org/cl/github/99881 Gold has detected about 1 new digest(s) on patchset 7.
View them at https://flutter-gold.skia.org/cl/github/99881 The Dart roll went in, tests are passing. This is ready now.![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png) LGTM",![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png) LGTM,Requires https://github.com/flutter/packages/pull/1165 to be published. (Tests will fail until that has happened.),"Can you make this explicit?
```suggestion
  vector_math: any
``` Will do!"
77099,2021-03-02T22:28:52Z,2021-03-04T01:29:02Z,gspencergoog,2,0,1,2717,128,1,1,"['a: tests', 'team', 'framework', 'f: material design', 'a: accessibility', 'f: cupertino', 'd: examples']",434.0,0,117313634.0,0,0,0,0,3199109.60802,,0,1,0,False,"['gspencergoog', 'goderbauer']","Note that `sized_box_for_whitespace` doesn't warn unless at least two of `width`, `height` or `child` are specified.

This confused me, so I filed this issue: https://github.com/dart-lang/sdk/issues/58340, but ended up closing it as working as intended, since those cases are not expected to be flagged.

I think there are many cases, however, where things like `Container(width: 100.0)` could be replaced with `SizedBox(width:100.0)`, it just isn't completely safe if you are worried about changing the render tree, since that would insert something different than `Container` would. Looks like ""google testing"" is failing due to an (unrelated) breakage in google.LGTM",LGTM,"## Description

This turns on the `sized_box_for_whitespace` lint 

## Related Issues

- https://github.com/flutter/flutter/issues/75663

## Tests

- Modified tests to look for SizedBox instead of Container in finders.
",
104550,2022-05-24T22:12:18Z,2022-05-25T16:38:09Z,goderbauer,3,0,2,415,23,1,1,"['a: text input', 'framework', 'f: material design', 'a: accessibility', 'f: scrolling', 'f: routes', 'f: gestures']",34.0,0,78607267.0,0,0,0,0,3199270.626133,,0,2,0,False,"['pq', 'goderbauer', 'incendial']","Regarding the dead code this tool found in tests: Ideally, we'd want to avoid accumulating this and there are a couple of lint proposals that would help: https://github.com/dart-lang/sdk/issues/57824, https://github.com/dart-lang/sdk/issues/57580, https://github.com/dart-lang/sdk/issues/58292. I believe, any of these would have avoided the dead code from making (or remaining) in the repository. (cc @pq) This is pretty amazing.  Nice.   Thanks for sharing.  And cheers to the `dart_code_metrics` folks! 🍻  @goderbauer hi, co-author of Dart Code Metrics here 🙂. So happy to see that the tool helped find and remove unused code! Could you please share more details about the false-positives part? If you don't think this PR is a great place to discuss it, feel free to open an issue here https://github.com/dart-code-checker/dart-code-metrics/issues/new/choose

> This is pretty amazing. Nice. Thanks for sharing. And cheers to the dart_code_metrics folks! 🍻

Thank you! ❤️ 

![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Excellent!","![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Excellent!","The dead code was found by running `dart run dart_code_metrics:metrics check-unused-code test` from https://pub.dev/packages/dart_code_metrics in `packages/flutter`. 

Other notes about the tool:
* The tool didn't find anything interesting in non-test code of the framework.
* There were a few false positives in the framework and in test code.",
93166,2021-11-05T22:57:54Z,2021-11-09T19:06:33Z,goderbauer,7,11,2,389,3,2,1,"['a: text input', 'framework']",245554.0,0,95885781.0,0,0,0,0,3198020.973669,,0,2,0,False,"['dnfield', 'skia-gold', 'goderbauer', 'zanderso', 'fluttergithubbot']","Also, it seems like we should have a test that routes do not rebuild when their ticker mode changes to muted and they are covered. Gold has detected about 18 new digest(s) on patchset 2.
View them at https://flutter-gold.skia.org/cl/github/93166 > Also, it seems like we should have a test that routes do not rebuild when their ticker mode changes to muted and they are covered.

That's what the test ""Ticking widgets in old route do not rebuild when new route is pushed"" in this PR is covering. This pull request is not suitable for automatic merging in its current state.

- The status or check suite [Linux web_canvaskit_tests_5](https://ci.chromium.org/b/8831105888299305505) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Curiously, the test that's failing on the `Linux web_canvaskit_tests_5` shard...

```
05:03 +616 ~16 -1: test/cupertino/context_menu_action_test.dart: turns grey when pressed and held [E]                                                                                                  
  Test failed. See exception logs above.
  The test description was: turns grey when pressed and held
```

... is supposed to be skipped: 

https://github.com/flutter/flutter/blob/2a17ce4ea1d21881dfcc37d71b659c34df1c8c38/dev/bots/test.dart#L135 Looks like the test has since been excluded from running: https://github.com/flutter/flutter/pull/93268

Rebasing and trying again... There were some nice improvements to flutter gallery frame build times on this change: https://flutter-flutter-perf.skia.org/e/?begin=1635352385&end=1637009732&keys=X868dfa49d7994e8de2106df6966dcc25&requestType=0&xbaroffset=26521Seems fine overall PTAL LGTM",Seems fine overall PTAL LGTM,"Fixes https://github.com/flutter/flutter/issues/93032.

Prior to this change, all widgets using the TickerProviderStateMixin would rebuild unnecessarily when the TickerMode changed. That's because the provider mixin created a dependency on TickerMode. The rebuild is unnecessary, because a changing ticker mode doesn't have any visual effects. All it needs to do is disable/enable the vended Tickers. When the Tickers start ticking again, their listeners may cause rebuilds independently e.g. to advance an animation.

Also fixes an issue where in certain cases EditableTextState would instantiate AnimationControllers in dispose only to dispose them.","How do we get a dispose without an init state? also nit: null the variable after disposing it? Express this more prescriptively: if the widget is moved, it must unsubscribe from the old notifier and subscribe to any new one that might be available, the correct place to do this is state.deactivate/activate. Explain the difference between establishing a dependency or not and why you'd want to avoid it (unnecessarily rebuilding to stop an animation controller, building anyway once the animation controller is started) > How do we get a dispose without an init state?

These weren't initialized in initState. Instead, the variable was marked as `late`, which initializes them on first access. If the floating cursor is never shown throughout the lifetime of this object (which is possible), then the first access was in dispose here. nulling out: Done. Re-wrote this section to incorporate that information. Re-wrote this section to incorporate that information. Can we add a test to make sure we don't regress this? Specifically a test that verifies we don't do whatever work these controllers would drive if we just immediately dispose the widget? Hm, I don't see a good way to test this. The test would have to verify that dispose doesn't instantiate any AnimationControllers. Ahh agreed, I misunderstood what's going on here. Filed https://github.com/dart-lang/linter/issues/3058 which could help with this."
158017,2024-11-01T19:04:54Z,2024-11-19T15:37:47Z,reidbaker,2,0,5,12,1,1,1,[],1477.0,0,1545744.0,0,0,0,0,3203239.721448,,0,5,0,False,"['reidbaker', 'flutter-dashboard[bot]']","Turns out the bots need to be updated to be able to use swangle. We cant land this pr until that happens.  This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

",,"Update to the latest definitions of emulator configurations.

Specifically to past https://crrev.com/c/5908894 which added `gpu_mode: ""swangle_indirect""` to the api 35 proto. This should help with emulator stability on versions past android 13. 
Related to  b/371020223
Related: https://github.com/flutter/engine/pull/56313 
Research notes / my findings for how this system works at go/flutter-android-ci-emulator
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide] and the [C++, Objective-C, Java style guides].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I added new tests to check the change I am making or feature I am adding, or the PR is [test-exempt]. See [testing the engine] for instructions on writing and running engine tests.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I signed the [CLA].
- [x] All existing and new tests are passing.
",
159117,2024-11-19T00:55:00Z,2024-11-19T16:17:58Z,matanlurey,3,0,3,34,1,1,1,['tool'],52144.0,0,55379.0,0,0,0,0,3203798.805656,,0,3,0,False,"['andrewkolos', 'matanlurey']","> ```shell
> flutter_tools % dart test test/integration.shard/break_on_framework_exceptions_test.dart
> 
> 02:38 +29: All tests passed!
> 
> 54692 ttys003    0:00.02 /opt/homebrew/bin/zsh -il
> ```

I am surprised there is a zombie process despite the test not timing out. Is this simply because `dart test` terminated before the OS terminated the zombie, or does this process never get terminated? > I am surprised there is a zombie process despite the test not timing out. Is this simply because `dart test` terminated before the OS terminated the zombie, or does this process never get terminated?

I think there is something to do with dart devtools where starting the VM paused and having it connected launches the process in a way where it doesn't close automatically. 

I don't understand this domain well enough though. Let's chat in the office today, maybe with Brian, because more of these changes might be necessary. SGTMLGTM with question",LGTM with question,"Towards https://github.com/flutter/flutter/issues/51421.

```sh
flutter_tools % dart test test/integration.shard/break_on_framework_exceptions_test.dart

02:38 +29: All tests passed!

54692 ttys003    0:00.02 /opt/homebrew/bin/zsh -il
```

Requires https://github.com/flutter/flutter/pull/159115 for the process cleanup to work properly, but this is safe to land as-is, otherwise we still accumulate `flutter` processes over and over as each test case runs which is not WAI.",
158506,2024-11-12T13:00:31Z,2024-11-12T16:36:54Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,606270.0,0,0,0,0,3214177.0236,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/b0a4ca92c49e...877abb9ad6ff

2024-11-12 skia-flutter-autoroll@skia.org Roll Skia from 75230dbc93e6 to aa099ff91e2f (3 revisions) (flutter/engine#56525)
2024-11-12 chinmaygarde@google.com [Impeller] Add OpenGL debugging utilities. (flutter/engine#56515)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jimgraham@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158488,2024-11-12T02:26:02Z,2024-11-12T03:16:34Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,606711.0,0,0,0,0,3251806.873771,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/a672f971c659...b0a4ca92c49e

2024-11-12 robert.ancell@canonical.com Add FlPointerManager to process pointer events from GTK in a form suitable for Flutter. (flutter/engine#56443)
2024-11-12 skia-flutter-autoroll@skia.org Roll Skia from 11046fd10394 to 75230dbc93e6 (1 revision) (flutter/engine#56517)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158487,2024-11-12T01:29:01Z,2024-11-12T02:13:11Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606532.0,0,0,0,0,3255406.885135,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/35041f118744...a672f971c659

2024-11-11 magder@google.com Add dependabot github-actions group (flutter/engine#56468)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159110,2024-11-18T23:20:18Z,2024-11-19T01:24:56Z,loic-sharma,0,0,1,193,4,2,2,"['platform-ios', 'tool', 'a: desktop']",,0,7478.0,0,0,0,0,3257384.129062,,0,1,0,False,[],LGTM,LGTM,"Previously, the Swift Package Manager app migration would only be registered if the feature was on. 

Now, the Swift Package Manager app migration is always registered but only runs if the SwiftPM feature is on. This change will make it easier to introduce a separate feature flag for just the SwiftPM app migration.

This is a refactoring with no semantic change.

Part of https://github.com/flutter/flutter/issues/151567

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158887,2024-11-13T22:27:54Z,2024-11-19T00:01:17Z,gspencergoog,0,0,6,78,8,1,1,"['a: text input', 'framework', 'f: material design', 'f: scrolling']",,0,437604.0,0,0,0,0,3262403.907,,0,6,0,False,[],LGTM :+1: ,LGTM :+1: ,"## Description

This adds a  `scrollBehavior` attribute to `SelectableText` so that the scrolling can be controlled more directly.

I added this specifically because it's not possible to turn off the scrollbar on a selectable text, even if you set the scroll physics to be `NeverScrollableScrollPhysics`.  We had a UI where we needed to have a clipped, multi-line selectable text field, but have it not be scrollable unless it was expanded in size, and it wasn't possible to hide the scrollbar, but still wanted it to be selectable.

## Tests
 - Added a test that makes sure that the scroll behavior makes it down to the `Scrollable` in the `EditableText`.",
158485,2024-11-12T00:35:43Z,2024-11-12T01:16:42Z,engine-flutter-autoroll,0,0,9,2,1,1,1,['engine'],,0,606130.0,0,0,0,0,3259009.025408,,0,9,0,False,[],,,"
https://github.com/flutter/engine/compare/7b3eacd20eb6...35041f118744

2024-11-11 skia-flutter-autoroll@skia.org Roll Dart SDK from a393f3ed040a to 69170fac244c (1 revision) (flutter/engine#56513)
2024-11-11 chris@bracken.jp iOS,macOS: Refactor TestMetalContext for ARC (flutter/engine#56510)
2024-11-11 jonahwilliams@google.com [Impeller] geometry changes to support line/point style. (flutter/engine#56340)
2024-11-11 skia-flutter-autoroll@skia.org Roll Skia from af6a4f9a85ee to 11046fd10394 (9 revisions) (flutter/engine#56508)
2024-11-11 jonahwilliams@google.com [Impeller] dont unnecessarily copy point data out of display list. (flutter/engine#56492)
2024-11-11 jonahwilliams@google.com [Impeller] fix line/polygon depth and GLES scissor state. (flutter/engine#56494)
2024-11-11 jason-simmons@users.noreply.github.com Do not stop flutter_tester if microtasks are still pending (flutter/engine#56432)
2024-11-11 skia-flutter-autoroll@skia.org Roll Skia from 261316c10484 to af6a4f9a85ee (5 revisions) (flutter/engine#56505)
2024-11-11 skia-flutter-autoroll@skia.org Roll Dart SDK from 4ea43aa234a4 to a393f3ed040a (1 revision) (flutter/engine#56506)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159099,2024-11-18T20:44:18Z,2024-11-18T23:38:53Z,matanlurey,0,2,4,108,25,3,2,['tool'],,0,10475.0,0,0,0,0,3263750.475423,,2,4,0,False,[],lgtm but consider adding an explicit delay between sending SIGKILL and testing _hasExited. ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/64c356d0-a986-4ca7-9abd-892f9f5c8adf),lgtm but consider adding an explicit delay between sending SIGKILL and testing _hasExited. ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/64c356d0-a986-4ca7-9abd-892f9f5c8adf),"Towards https://github.com/flutter/flutter/issues/51421.

Asserts some state we would not like to be hit by in integration tests using `Flutter*TestDriver`.

In addition, adds a tag that can be used to run all tests that currently use this pattern:

```sh
flutter test --tags flutter-test-driver
```

This showcases processes leaking quite a bit: <https://gist.github.com/matanlurey/190d9084d3a45bc5737b8406bc05b4cd>.","My guess is that this could be flakey since it looks like there's potentially no delay between sending SIGKILL for the `_killForcefully` case, and doing this test. Ah I see `_killForcefully` returns `_process!.exitCode`, which in turn means it _must_ to have exited - but we could get unlucky on the microtask queue. Will add an event loop delay and a comment, thanks for the callout."
65528,2020-09-10T07:17:33Z,2020-09-15T14:42:01Z,a14n,6,4,4,10468,123,3,1,"['framework', 'a: accessibility', 'f: cupertino']",136835.0,0,132250022.0,0,0,0,0,3264609.554648,,0,4,0,False,"['goderbauer', 'a14n']","**Note for google3:** cl/330814656 must be applied when this rolls into google3 (fix is scheduled in FROB). This change also requires https://github.com/dart-lang/sdk/commit/8008c8d54ef917588a2a3732da8660bb5b3bcda4, which has already landed in Flutter. > Google testing — Google testing failed. Please contact a Google developer to investigate.

@goderbauer feel free to merge this PR when you're available to follow up on google3 ""google testing"" failure was probably caused by an internal merge conflict. Should be resolved. I restarted the tests. Let's see what happens. ""google testing"" is passing. I've marked it as waiting for the tree to go green. This should fix the test failure: https://github.com/flutter/flutter/pull/65860.LGTM",LGTM,"## Description

* (1st commit) Reland #64672 reverted by #65488
* (2nd commit) remove non-nullable enforcement on AsyncSnapshot (see https://github.com/flutter/flutter/pull/64672#discussion_r485755370)
* (3rd commit) make data param non-nullable for `AsyncSnapshot.withData`

## Related Issues

* dart-lang/sdk#40146
","@a14n, could this be `String this.data` so that you can't pass nulls to the default constructor (i.e. `Text(null)` should be an error) ? Sure! Thanks for the review :) A lint could make sense to catch similar issue. Done. I also changed `Text.rich` textSpan parameter. Filed dart-lang/linter#2237"
65658,2020-09-11T20:30:14Z,2020-10-02T18:42:03Z,goderbauer,2,30,13,3341,13,3,0,"['framework', 'f: material design', 'f: cupertino']",12555.0,0,132116063.0,0,0,0,0,3264608.027539,,0,13,0,False,"['fluttergithubbot', 'Hixie']","Overall LGTM. Some minor comments. This pull request is not suitable for automatic merging in its current state.

- The status or check suite Mac framework_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.
All comments addressed. PTAL",All comments addressed. PTAL,"## Description

`WidgetsApp`, `MaterialApp`, and `CupertinoApp` now take a restoration ID to enable state restoration for the app (and the Navigator build by those widgets).

The navigator now takes a restoration id to restore its state by recreating the current history stack of `Route`s during state restoration and by restoring the internal state of those `Route`s. However, not all `Route`s on the stack can be restored:

 * `Page`-based routes restore a restoration ID is provided to them.
 * `Route`s added with the existing imperative API (`push`, `pushNamed`, and friends) can never restore their state.
 * A `Route` added with the newly added restorable imperative API (`restorablePush`, `restorablePushNamed`, and all other imperative methods with ""restorable"" in their name) restores its state if all routes below it up to and including the first `Page`-based route below it are restored. If there is no `Page`-based route below it, it only restores its state if all routes below it restore theirs.

If a `Route` is deemed restorable by the `Navigator`, they will insert their own `RestorationScope` into the tree that the widgets in the route can use to restore their own state.

## Related Issues

https://github.com/flutter/flutter/issues/62916

## Tests

I added the following tests:

Restoration tests for the Navigator and the newly added restorable API.

## Checklist

Before you create this PR, confirm that it meets all requirements listed below by checking the relevant checkboxes (`[x]`). This will ensure a smooth and quick review process.

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I signed the [CLA].
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] All existing and new tests are passing.
- [x] The analyzer (`flutter analyze --flutter-repo`) does not report any problems on my PR.
- [x] I am willing to follow-up on review comments in a timely manner.

## Breaking Change

Did any tests fail when you ran them? Please read [Handling breaking changes].

- [x] No, no existing tests failed, so this is *not* a breaking change.
- [ ] Yes, this is a breaking change. *If not, delete the remainder of this section.*
   - [ ] I wrote a design doc: https://flutter.dev/go/template *Replace this with a link to your design doc's short link*
   - [ ] I got input from the developer relations team, specifically from: *Replace with the names of who gave advice*
   - [ ] I wrote a migration guide: https://flutter.dev/go/breaking-changes-template *Replace this with a link to a pull request that adds the migration guide to https://flutter.dev/docs/release/breaking-changes*

<!-- Links -->
[issue database]: https://github.com/flutter/flutter/issues
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Test Coverage]: https://github.com/flutter/flutter/wiki/Test-coverage-for-package%3Aflutter
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[Handling breaking changes]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
","fyi there's a line above this, like, ""The identifier to use when enabling state restoration for the navigator."" or whatever, missing. (The first line of docs should be a noun phrase.) why ""nav""? Why not ""n"" or ""navigator"" or ""\0x01"" or ""$Navigator"" or something? docs throughout -> during

throughout implies it happening continually, during refers to a particular case of it happening ""...transitioning off screen, which triggers a notification on this field"" or some such. (Right now, you say ""as an example"" but don't actually then say why what you describe is an example of the previous sentence) ""in their names"" typo in ""navigator"" should this mention the default id that WidgetsApp uses? indentation put some punctuation between the prefix and the id (or use something other than letters), to avoid the risk of someone being offended if they use the id ""rick"" or something. declare this before first use ""endtempalte"" is a typo

might be good to have some sample code here the restorable* methods should be mentioned in their corresponding non-restorable version we should do that in this PR Yes. Any of those are valid as long as they are unique within the surrounding  restoration scope. Here, the navigator is the only thing in this scope. Children (the individual routes) have their own scope. Interestingly, the analyzer didn't warn about the missing docs here. Filed https://github.com/dart-lang/linter/issues/2238. WidgetsApp doesn't use a default id.

It internally specifies an ID for the Navigator it creates. However, that's an implementation detail that's not exposed to the public. lol, but good point. Added a ""+"". Does user have chance to use the RootRestorationScope? isn't this only used by the navigator widget or router widget? should this be nullable String? here and other places Couldn't the restorablePush just return the restorable future? if we asked user to provide their own restorationid to the route, I think we can probably restore this future with the logic similar to the _hookOntoRouteFuture? why do we use restorationScopeId here? At the time the PR was created, this file had not been migrated to NNBD, so this was correct. I am going to rebase this to the latest master, though, and then it will have to be nullable, yes. Rephrased. In other unmigrated files it cannot be marked as nullable just yet. After state restoration, how would the entity that pushed the route get access to the restorableRouteFuture again that was returned when the route was initially pushed?  Whenever the restorationScopeID changes, we need to rebuild the RestorationScope. Is this because there is no way to restore the future chain unless all the call back are static functions? Restore the route future is possible I think? but then caller will have to reattach their future chain again."
66663,2020-09-25T18:38:55Z,2020-10-01T00:03:41Z,goderbauer,9,30,13,1395,69,4,2,"['a: tests', 'team', 'framework', 'f: material design', 'f: cupertino']",433.0,0,130913064.0,1,0,0,0,3264687.513085,,1,13,0,False,"['skia-gold', 'gspencergoog', 'goderbauer']","Gold has detected about 12 untriaged digest(s) on patchset 1.
View them at https://flutter-gold.skia.org/cl/github/66663 Gold has detected about 39 untriaged digest(s) on patchset 2.
View them at https://flutter-gold.skia.org/cl/github/66663 Gold has detected about 3 untriaged digest(s) on patchset 3.
View them at https://flutter-gold.skia.org/cl/github/66663 Gold has detected about 3 untriaged digest(s) on patchset 3.
View them at https://flutter-gold.skia.org/cl/github/66663 Gold has detected about 6 untriaged digest(s) on patchset 4.
View them at https://flutter-gold.skia.org/cl/github/66663 Marking this PR as ready for review triggered a whole bunch of new checks. Probably worthwhile to wait and see if all those pass before starting a review. Looks like they passed. Yay! I'll take a look at this tomorrow. @a14n @gspencergoog All comments addressed. Thanks for the review! PTAL. While trying this change out in the google codebase I noticed a minor setback: `flutter_test` does import the material lib, which is not fully migrated yet. Specifically, `flutter_test` uses the `Tooltip` and the `Card` type to implement the `find.byTooltip` finder and the `isInCard` matcher. 

Since in google internally, a lib can only have null safety turned on when all its imports are also null safe, we will have to migrate material's `Tooltip` and `Card` (plus all their imports) first before we can submit this.

/cc @a14n @gspencergoog ![LGTM](http://junkyard.damowmow.com/579)",![LGTM](http://junkyard.damowmow.com/579),"## Description

Migrates `flutter_test` to null-safety.

I will migrate the tests of this package in a separate PR.

## Related Issues

Fixes #53908.

## Tests

I added the following tests:

n/a

## Checklist

Before you create this PR, confirm that it meets all requirements listed below by checking the relevant checkboxes (`[x]`). This will ensure a smooth and quick review process.

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I signed the [CLA].
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] All existing and new tests are passing.
- [x] The analyzer (`flutter analyze --flutter-repo`) does not report any problems on my PR.
- [x]  I am willing to follow-up on review comments in a timely manner.

## Breaking Change

Did any tests fail when you ran them? Please read [Handling breaking changes].

- [x] No, no existing tests failed, so this is *not* a breaking change.
- [ ] Yes, this is a breaking change. *If not, delete the remainder of this section.*
   - [ ] I wrote a design doc: https://flutter.dev/go/template *Replace this with a link to your design doc's short link*
   - [ ] I got input from the developer relations team, specifically from: *Replace with the names of who gave advice*
   - [ ] I wrote a migration guide: https://flutter.dev/go/breaking-changes-template *Replace this with a link to a pull request that adds the migration guide to https://flutter.dev/docs/release/breaking-changes*

<!-- Links -->
[issue database]: https://github.com/flutter/flutter/issues
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Test Coverage]: https://github.com/flutter/flutter/wiki/Test-coverage-for-package%3Aflutter
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[Handling breaking changes]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
","```suggestion
  Future<HttpClientResponse> get done async => _MockHttpResponse();
``` ```suggestion
        final RenderBox renderObject = element.renderObject! as RenderBox;
``` Perhaps throwing something is better here? `== true` could be removed. ```suggestion
    final RenderRepaintBoundary boundary = boundaryKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
``` ```suggestion
      renderObject = renderObject.parent! as RenderObject;
``` break? nit:
```suggestion
    unnecessary_null_comparison: false # https://github.com/dart-lang/language/issues/1018, turned off until https://github.com/flutter/flutter/issues/61042
``` Out of curiosity, why the word ""clear""? I don't think it adds anything, or maybe I don't understand what you mean. LOL...it's unclear. Nice fix.  Seems like this was a bug found by NNBD. This 12.0 should probably be a constant somewhere. So you can't get the current task count if not currently in a test, but do we want to throw?  Couldn't you just return zero if `!inTest`? Much better... Doesn't casting it to `Object` (as opposed to `Object?`) imply the `!`? Why is this no longer `Future<void>`? It doesn't appear to return anything. Can't you just do this for all of these, and avoid adding another function?

```dart
	onMetricsChanged?.call();
``` Same here:
```dart
	onLocaleChanged?.call();
``` All of these extra functions to test for nullness seem unnecessary to me. Yes! Yes, it does. But @a14n is working on a lint that will require you to specifically think about null and add the `!` to say that you thought about nullability and this cannot be null here.  Changed this back to void. I originally made this dynamic because the analyzer was complaining. Turns out, that was a bug in the analyzer: https://github.com/dart-lang/linter/issues/2185 Removed them per your suggestion.  That's actually pretty clever. I forgot about `call()`. Changed all of them. I think that accessing this outside of a test is meaningless and almost certainly means you have some kind of a bug. Therefore, it should throw. I am just changing this to an API we already have :P 

I think clearing the test value is _clearer_ than setting it to null. You are not really setting the physicalSize to null. You are removing/clearing a previously specified test value to make the actual value specified by the embedder ""come through"" again. OK, makes sense. Oh, I see. For some reason, I was reading it as an assignment, not a function call, which is what confused me. OK. When that lint is turned on, I'm sure we'll have a bunch of places to fix. Yeah, a14n has already been fixing up our code base in prep for that. that second bug is closed"
158470,2024-11-11T18:57:29Z,2024-11-13T23:34:08Z,srivats22,0,30,19,47,2,2,0,"['framework', 'f: cupertino']",,0,619989.0,0,0,0,0,3265449.485477,,1,19,0,False,[],,,"This PR is for issue #154792 
The Video recording shows the before and after
The first button with the text ""Go"" uses the default cursor
The second button with the text ""With Cursor"" uses a custom cursor that has been passed in the parameters
https://github.com/user-attachments/assets/e82ecd42-42b1-42c9-aa30-a6f3daddb436

Here is the code for the second button
```dart
CupertinoButton(
    onPressed: () {
        showCupertinoModalPopup<void>(
            context: context,
            builder: (BuildContext context) {
                return CupertinoActionSheet(
                    title: const Text('The title'),
                    message: const Text('Message'),
                    actions: <Widget>[
                        CupertinoActionSheetAction(
                            cursor: SystemMouseCursors.forbidden,
                            child: const Text('One'),
                            onPressed: () {},
                        ),
                    ],
                );
            },
        );
    },
    child: const Text('With Cursor'),
),
```

Fixes https://github.com/flutter/flutter/issues/154792
Part of https://github.com/flutter/flutter/issues/58192

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Wondering if we can use `mouseCursor` instead of `cursor` to be consistent with other material/cupertino APIs that offer a configurable mouse cursor. For example, refer to uses of [mouseCursor](https://github.com/search?q=repo%3Aflutter%2Fflutter%20this.mouseCursor&type=code) vs. that of [cursor](https://github.com/search?q=repo%3Aflutter%2Fflutter+this.cursor&type=code). Can the cursor be configured to accept `WidgetStateMouseCursor`s? It would be nice to have that functionality added right off the bat. ```suggestion
  /// Defaults to [MouseCursor.defer], except on web, where this defaults to [SystemMouseCursors.click].
```
'Default' makes 'If not passed' redundant. sure I can update it to use mouseCursor instead of cursor for consistency would like some help with this... not sure how to exactly approach it

would it be similar to this pr: https://github.com/flutter/flutter/pull/151788/files Is this better:
```dart
final WidgetStateProperty<MouseCursor> effectiveMouseCursor =
    WidgetStateProperty.resolveWith<MouseCursor>((Set<WidgetState> states) {
      return WidgetStateProperty.resolveAs<MouseCursor?>(widget.mouseCursor, states)
          ?? (kIsWeb && !states.contains(WidgetState.disabled)
              ? SystemMouseCursors.click
              : SystemMouseCursors.basic
          );
    });

    return MouseRegion(
      cursor: effectiveMouseCursor.resolve(<WidgetState>{}),
      child: MetaData(
        metaData: this,
        behavior: HitTestBehavior.opaque,
        child: ConstrainedBox(
          constraints: const BoxConstraints(
            minHeight: _kActionSheetButtonMinHeight,
          ),
          child: Semantics(
            button: true,
            onTap: widget.onPressed,
            child: Padding(
              padding: EdgeInsets.fromLTRB(
                _kActionSheetButtonHorizontalPadding,
                verticalPadding,
                _kActionSheetButtonHorizontalPadding,
                verticalPadding,
              ),
              child: DefaultTextStyle(
                style: style,
                textAlign: TextAlign.center,
                child: Center(child: widget.child),
              ),
            ),
          ),
        ),
      ),
    ); Only the `resolveAs` block is needed. The wrapping with `resolveWith` was done in the other PR because the  `buildToggleable` method required its mouse cursor to be a `WidgetStateProperty<MouseCursor>` instead of just a `MouseCursor`. But that is not the case here with `MouseRegion`. ```dart
final MouseCursor effectiveMouseCursor =
        WidgetStateProperty.resolveAs<MouseCursor?>(widget.mouseCursor, states)
            ?? (kIsWeb && !states.contains(WidgetState.disabled)
            ? SystemMouseCursors.click
            : SystemMouseCursors.basic
        );

    return MouseRegion(
      cursor: effectiveMouseCursor,
```
just a snippet of the code since everything else is pretty much the same I'm not sure CupertinoActionSheetAction has a `states` getter. So checking that an action is not disabled instead should be sufficient.

I recommend playing around with it locally and writing tests until they pass. It's easier to review commits vs comment snippets here and I personally find that playing with a system on my own vastly improves my understanding of it. True CupertinoActionSheetAction does not have state but I defined a state set to be used...

But yes let me play around more and see how far I can get and then will update the pr marking as resolved taken care in most recent PR marking as resolved taken care in recent pr marking as resolved taken care in most recent PR Detecting when a `WidgetState` is active is our responsibility. Typically it's done by having different flags that are activated depending on some metric. For example, if we want to track the `scrolledUnder` state, we would have to get the ScrollMetrics of the scroll view and do the math to calculate when the widget has been scrolled under (and when it has, add `WidgetState.scrolledUnder` to `states`.

It's more complex logic than anticipated, so it's okay to leave it out of this PR and handle it subsequently on a case-by-case basis (for each relevant state). oh ok, so do you want me to rollback to the original pr? i.e not using WidgetState but just using SystemMousecursor? marking as resolved taken care in recent commit ```suggestion
```
 What if a user wants to configure a mouse cursor on web (instead of just click)? The user provided property should always take priority. Outdent by two spaces. Use trailing commas. Consider using another cursor to make the logic in the test independent of the ""clickable on web"" behavior. If the test is checking that the mouse cursor provided is always respected, then it shouldn't differ in behavior on web vs on other platforms. will change it so ensure the mouseCursor is always respected instead of checking platform want a suggestion if I can do the following:
`final MouseCursor webCursor = (kIsWeb && widget.mouseCursor != MouseCursor.defer) ? 
    widget.mouseCursor : SystemMouseCursors.click;`

Since mouseCursor is defaulted to MouseCursor.defer when its web and the mouseCursor is not equal to MouseCursor.defer then we use the cursor passed by the user else we default to SystemMouseCursor.click Instead of making `mouseCursor` default to `MouseCursor.defer` in the constructor, you can make it nullable. Then when setting the `MouseRegion`s cursor, have `mouseCursor` null coalesce to either `.click` on web or `.defer` otherwise. https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-correct-grammar Missing a trailing comma. Outdent entire block by two spaces. Missing a trailing comma. Still uses `.click`."
19329,2018-07-13T00:28:10Z,2018-07-20T06:03:58Z,gspencergoog,3,9,5,276,47,4,1,[],84692.0,0,200528224.0,0,0,0,0,3266973.665552,,0,5,0,False,"['gspencergoog', 'liyuqian']","OK, PTAL.  The code now only checks for whitespace on changed files. The code looks good to me. However, some tests are failing... It seems that the branch master is not available on some test bots, and some unit tests are matching texts on those that we changed the white spaces. Maybe we can revert all those white spaces changes in this PR so it can pass the test, and then remove trailing spaces and refactor unit tests later? OK, I moved the presubmit check to #19412.  I'll address the lack of a master branch there.LGTM",LGTM,"There are only whitespace changes here, except for `packages/flutter/test/foundation/licenses_test.dart`, where I replace some raw whitespace (line feed) with their unicode equivalents.

I'm adding a presubmit check for this in #19412.","Shall we also include "".m"" and "".mm""? Shall we only check files that are changed in the PR? That way, the check could be faster and we don't have to remove all the trailing spaces in this PR. I like this. Copied to my PR: https://github.com/flutter/engine/pull/5733 Yeah, that's a good idea.  It also means that we won't encounter false-positive issues in generated files. Yes. Are these changes intentional? Yes.  You can't tell from the diff, but there were raw formfeed characters in between the `I` and the `J`.  I just changed these to make them more obvious and explicit.  Same for the other lines in this file. why? Because [this line](https://github.com/flutter/flutter/blob/a66ea0a628ef3bb31ba0b6c1cdf6ad657f0448a6/packages/flutter_tools/test/ios/mac_test.dart#L273) has an embedded space in the test, but I didn't want to just remove it, because it appeared that it was just mocking something that the real iOS tools output.

So I converted it to an escape sequence so that the whitespace presubmit check I have in the other PR won't fail because there's a space here.  I'd really prefer a [linter rule for EOL whitespace](https://github.com/dart-lang/linter/issues/1088), but it doesn't exist yet.

I'm happy to just fix the test and remove the whitespace if you think that won't be a problem.  If I did that, I'd just remove the last part of the string in the test."
159104,2024-11-18T22:01:06Z,2024-11-18T22:29:58Z,dependabot[bot],0,0,1,2,1,1,1,[],,0,1732.0,0,0,0,0,3267890.529274,,2,1,0,False,[],,,"Bumps the all-github-actions group with 1 update: [codecov/codecov-action](https://github.com/codecov/codecov-action).

Updates `codecov/codecov-action` from 4.6.0 to 5.0.2
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/codecov/codecov-action/releases"">codecov/codecov-action's releases</a>.</em></p>
<blockquote>
<h2>v5.0.2</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: override commit and pr values for PR cases by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1657"">codecov/codecov-action#1657</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.1...v5.0.2"">https://github.com/codecov/codecov-action/compare/v5.0.1...v5.0.2</a></p>
<h2>v5.0.1</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: use marketplace v5 badge by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1646"">codecov/codecov-action#1646</a></li>
<li>fix: update tokenless branch logic by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1650"">codecov/codecov-action#1650</a></li>
<li>chore(release): 5.0.1 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1656"">codecov/codecov-action#1656</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v5.0.0...v5.0.1"">https://github.com/codecov/codecov-action/compare/v5.0.0...v5.0.1</a></p>
<h2>v5.0.0</h2>
<h2>v5 Release</h2>
<p><code>v5</code> of the Codecov GitHub Action will use the <a href=""https://github.com/codecov/wrapper"">Codecov Wrapper</a> to encapsulate the <a href=""https://github.com/codecov/codecov-cli"">CLI</a>. This will help ensure that the Action gets updates quicker.</p>
<h3>Migration Guide</h3>
<p>The <code>v5</code> release also coincides with the opt-out feature for tokens for public repositories. In the <code>Global Upload Token</code> section of the settings page of an organization in codecov.io, you can set the ability for Codecov to receive a coverage reports from any source. This will allow contributors or other members of a repository to upload without needing access to the Codecov token. For more details see <a href=""https://docs.codecov.com/docs/codecov-tokens#uploading-without-a-token"">how to upload without a token</a>.</p>
<blockquote>
<p>[!WARNING]<br />
<strong>The following arguments have been changed</strong></p>
<ul>
<li><code>file</code> (this has been deprecated in favor of <code>files</code>)</li>
<li><code>plugin</code> (this has been deprecated in favor of <code>plugins</code>)</li>
</ul>
</blockquote>
<p>The following arguments have been added:</p>
<ul>
<li><code>binary</code></li>
<li><code>gcov_args</code></li>
<li><code>gcov_executable</code></li>
<li><code>gcov_ignore</code></li>
<li><code>gcov_include</code></li>
<li><code>report_type</code></li>
<li><code>skip_validation</code></li>
<li><code>swift_project</code></li>
</ul>
<p>You can see their usage in the <code>action.yml</code> <a href=""https://github.com/codecov/codecov-action/blob/main/action.yml"">file</a>.</p>
<h2>What's Changed</h2>
<ul>
<li>chore(deps): bump to eslint9+ and remove eslint-config-google by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1591"">codecov/codecov-action#1591</a></li>
<li>build(deps-dev): bump <code>@​octokit/webhooks-types</code> from 7.5.1 to 7.6.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1595"">codecov/codecov-action#1595</a></li>
<li>build(deps-dev): bump typescript from 5.6.2 to 5.6.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1604"">codecov/codecov-action#1604</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 8.8.0 to 8.8.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1601"">codecov/codecov-action#1601</a></li>
<li>build(deps): bump <code>@​actions/core</code> from 1.11.0 to 1.11.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1597"">codecov/codecov-action#1597</a></li>
<li>build(deps): bump github/codeql-action from 3.26.9 to 3.26.11 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1596"">codecov/codecov-action#1596</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 8.8.0 to 8.8.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1600"">codecov/codecov-action#1600</a></li>
<li>build(deps-dev): bump eslint from 9.11.1 to 9.12.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1598"">codecov/codecov-action#1598</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/codecov/codecov-action/commit/5c47607acb93fed5485fdbf7232e8a31425f672a""><code>5c47607</code></a> fix: override commit and pr values for PR cases (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1657"">#1657</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/3b1354a6c45db9f1008891f4eafc1a7e94ce1d18""><code>3b1354a</code></a> chore(release): 5.0.1 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1656"">#1656</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/2e2a9c6d5862d22e0f8cfb59d46bc47bf8eb1fe0""><code>2e2a9c6</code></a> fix: update tokenless branch logic (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1650"">#1650</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/cfc521b7a1dcdbcf0ecf149c162c19ff9bd9568c""><code>cfc521b</code></a> Update README.md</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/06425412c8015bc1ab2385b41c7ea204f77b91bf""><code>0642541</code></a> fix: use marketplace v5 badge (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1646"">#1646</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/968872560f81e7bdde9272853e65f2507c0eca7c""><code>9688725</code></a> Update README.md</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/2112eaec1bedbdabc7e93d5312449d0d62b07c60""><code>2112eae</code></a> chore(deps): bump wrapper to 0.0.23 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1644"">#1644</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/193421c5b3d1aca4209c9754f224ca0d85729414""><code>193421c</code></a> fixL use the correct source (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1642"">#1642</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/6018df70b05b191502ce08196e76e30ea3578615""><code>6018df7</code></a> fix: update container builds (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1640"">#1640</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/eff1a643d6887ee5935d4ca343e9076dc377d416""><code>eff1a64</code></a> fix: add missing vars (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1638"">#1638</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/codecov/codecov-action/compare/b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238...5c47607acb93fed5485fdbf7232e8a31425f672a"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=4.6.0&new-version=5.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)
- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)
- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)
- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency
- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions


</details>",
11685,2017-08-18T21:53:46Z,2017-09-20T00:39:04Z,xster,6,30,14,274,10,2,0,[],9380.0,0,228873957.0,0,0,0,0,3269707.45702,,0,14,0,False,"['cbracken', 'xster', 'Hixie']","Yeah, this is looking good. When do we have events without timestamps? Just tests? I wasn't sure about the ones like 
https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/rendering/proxy_box.dart#L2972 and
https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/gestures/multidrag.dart#L113 Ah, I see. If there's no timestamp I would just assume you lose the momentum. Replaced stopwatch with timestamp of pointer event from #11988 as requested.  ![lgtm](https://cloud.githubusercontent.com/assets/351029/21020368/0f1751e6-bd29-11e6-9c56-cb0f397bf810.jpg)",,"#11066 
- Leftover velocity from previous ballistic activities built on with a subsequent drag
- If drag slows to a still at any point, momentum is lost
- Only apply on drags in the same direction
- Clamp maximum velocity transfer into overscroll","nit: no braces This will never be true, since you never set _lastDetails when its primaryDelta would have been 0.0. ok instead of flipping the sign half a dozen times let's just change the earlier test to `if (!_reversed)` :-) avoid line breaks on lines where you use `=>` cupertinoMomentumCarryFunction, to avoid the case issues with ""ios"" in an identifier nit: never use filler text like ""note"" nit: grammar: the second sentence here ends with ""are"" but doesn't have an object. Please never compare enums with `==`, always use `switch`. The analyzer will then tell you all the places you need to fix when you add a value to the enum. nit: unnecessary blank line this seems out of place compared to the other things on this class. It would be like having the overscroll indicator glow color here. why do you get this from the context rather than just calling it on the physics directly? I wouldn't say ""on iOS"" here. It's the maximum velocity that can be transfered from the inertia of a ballistic scroll into overscroll in general, when this simulation is used. i'd prefer if the comment explaining the ignore was on the same line as the ignore, so it's clearer that they're linked This seems like something that belongs in the physics, not on the configuration. done ah thanks, shouldn't have moved it I'm a little worried that combining it would be shorter but a bit harder to read the reasoning done done done done removed nitty nit nit: please line up the `_lastDetails`s on both lines (probably putting the && on the previous line) removed Ya, good idea here and below. Moved the stuff out of the context and consolidated in the physics done done done it's a bit weird that we base this on frames (actually, we base it on user input) rather than on the timestamps. Suppose a platform came along that reported all events in real time, at 1000Hz. Now you lose momentum if you move less than one device pixel per millisecond, which seems a bit drastic, and is a lot more strict than on a device where you only sample the input at 10Hz (e.g. because of high load).

Can we actually use the timestamps somehow? I suppose we could track when was the last update that was non-zero, and cancel the momentum if we're still at zero and the last such update was more than a certain time ago? How about putting the minus sign on the line that first assigns velocity? I don't think that'd be any less understandable, but it would reduce the thrashing of the sign bit a little...

Right now when reading this function I get positively dizzy trying to keep track of what the sign means. :-)"
9854,2017-05-05T23:06:41Z,2017-05-08T21:09:00Z,goderbauer,5,3,3,209,9,3,0,['platform-windows'],574.0,0,237941489.0,0,0,0,0,3269800.878859,,0,3,0,False,"['goderbauer', 'tvolkert', 'skybrian']","LGTM Changes LGTM ... but Travis isn't happy. Maybe check for common package name conflicts as well, like we do in the IntelliJ plugin:

https://github.com/flutter/flutter-intellij/commit/83fe71d957400d06ee6dc828826ba72247930f92#diff-f1a44d57d2a0cf70016d6ef1c0e16213R178
 @skybrian We already check for that: https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/commands/create.dart#L286",,Fixes #9564,"Maybe change [this](https://github.com/flutter/flutter/blob/83d411f97962d08671ecca5a9df7c59203158265/packages/flutter_tools/test/src/common.dart#L66) to accept a message parameter, then use:

```
expect(runner.run(<String>['create', 'invalidName']), throwsToolExit(...))
``` Please file a bug with the linter package to request that this be exposed so that we don't have to cheat. Done: https://github.com/dart-lang/linter/issues/654"
10791,2017-06-16T19:26:22Z,2017-09-21T00:24:43Z,xster,8,30,7,69,10,5,0,[],1828850.0,0,234326000.0,0,0,0,0,3269709.130068,,0,7,0,False,"['a14n', 'xster', 'leafpetersen', 'Hixie']","(Drive-by comment: The linter is something that can change. If we're running into limitations of the linter, please file bugs and let the team know that they are important for us.) @Hixie filed one here: https://github.com/dart-lang/sdk/issues/57594

We can change all this stuff once they implement it What is the status of this PR? @xster ping? ![LGTM](http://junkyard.damowmow.com/577) The `// ignore: unawaited_future`s here added a noticeable chunk to our technical debt. We should see if we could improve the lint somehow or otherwise find a cleaner way to know when we can ignore a future and when we can't. Maybe an explicit language feature to ignore a future that doesn't need listening to...

cc @a14n @pq @leafpetersen  On the lint, maybe having a convention for this?  

e.g.
```
var _ = thingToIgnore
```
gets ignored by all the relevant lints.

We've talked on the language team about making `_` mean ""don't care"" instead of ""variable named _"", so that you can bind it multiple times, and also use various other heuristics.

 Today, a workaround could be:

```dart
void unwait<T>(Future<T> f){}

f() async {
  unwait(functionReturningFuture());
}
```

I also like Leaf's proposal.",,"#10754

I think there's some actual bugs here","this is one where i'd prefer the override on the same line but actually, don't we want to await this? Along with the delete below? For this specific kind of future we should have a string we can easily search for, something like:

```dart
  appStartedTimeRecorder.future.then( // ignore: unawaited_futures (this ""then"" callback can't throw)
``` nit: no braces ""dump"" implies that it goes somewhere.
Don't we want to wait for this, the opensslOutput, and the opensslProcess.exitCode together? this should definitely be on the same line. but i'm not sure i agree that we should be ignoring this future. Why don't we want the Process object? If nothing else, we need to be able to report if the process fails to run, right? We need to report an unexpected exitCode. same as with the `.then`, i'd rather this was all on one line with the parenthetical that can be searched for (and that mentions that nothing here throws -- the reason we don't want to await this isn't that the future is uninteresting, that's a tautology. it's that it's uninteresting because it won't throw.) though actually, why don't we want to await the exit code? Don't we want to make sure things are cleaned up at some point? I don't understand what this comment means. why 100ms? Why not 110ms? Seems like we'd be better off waiting all the futures here? same as earlier comment, though again, i don't understand why we're not awaiting these this comment doesn't accurately describe why we're not awaiting this future. In this case it's a combination of the specific closure not risking throwing anything, and the caller being the one in charge of the Process' lifetime. this comment doesn't explain why we don't want to wait for the controller itself to be done. as above, these comments should all just be on one line with the code they impact. ditto ditto also rather than ""below"", can you give more details? e.g.
```dart
  controller.sink.close(); // ignore: unawaited_futures (we await ""sink.done"" below instead)
``` Why are they uninteresting? It looks like above (line 268), we call this in a synchronous method with no `.then()` because we're relying on the `progressReporter` to notify the caller when it does its thing.  Thus, we should probably not wait here and just ignore the linter warning. @johnmccutchan maybe you're best for our understanding. Was the original intent here not to have some rpc completion confirmation but to wait a predefined amount of time? @devoncarew maybe you can help us. Is this method intended to end before the simulator is presumably closed? Yeah, we don't want to `await` here as the `_deviceProcess` will outlive the `_start()` method. (and, we don't really care about about the specific reason the tail process exits, we just want to clean up the lines controller when the tail process completes).

We may want to catch and ignore any exceptions from `_deviceProcess` however, so they don't bubble through to the zone handler. @zanderso wrote this code. I'll let him comment. @zanderso dito  Note that the progressReporter code is dead now. It was only used by the loading screen. This code is no longer there on head Unfortunately the linter doesn't allow that kind of syntax :(
https://github.com/dart-lang/linter/issues/706

Has to be on different lines. One hack is to do `// ignore: unawaited_futures, [our custom text]` but I'm worried it might bring up random linter bugs since the follow on text might be interpreted as linter instructions.  Done"
7207,2016-12-08T22:00:48Z,2016-12-09T23:37:42Z,a14n,5,0,1,64,17,0,0,[],9316.0,0,250731988.0,0,0,0,0,3270456.635903,,0,1,0,False,"['pq', 'Hixie']","I thought we had a lint that would catch these. Is it broken or something? How did we miss them? LGTM but I'm concerned that the lint isn't working. @pq, any idea why the lint didn't catch these? > @pq, any idea why the lint didn't catch these?

At first no and then I looked closer and it turns out the lint is only checking for: `!foo.isEmpty` and *not* the more obvious `foo.length != 0`.  (The name is actually a tip-off: `prefer_is_not_empty`.  Looks like we should have a `prefer_is_empty` too or have an uber-lint that handles both checks.)  Net-net: this *is* confusing.  We should fix it! Linter tracking issue opened: https://github.com/dart-lang/sdk/issues/57413.",,Follow [_Don't use length to see if a collection is empty_](https://www.dartlang.org/guides/language/effective-dart/usage#dont-use-length-to-see-if-a-collection-is-empty) rule of [Effective Dart](https://www.dartlang.org/guides/language/effective-dart/usage),
4697,2016-06-22T21:36:44Z,2016-06-23T17:03:50Z,pq,9,3,4,55,4,0,0,[],9.0,0,265334429.0,0,0,0,0,3271060.158699,,0,4,0,False,"['abarth', 'pq', 'Hixie']","cc @Hixie 
 So the problem with the trampoline thing here is that it defeats the performance benefit of taking the closures, as I understand it. cc @abarth.
 Hmmmm, and the build is red to boot.  Investigating...
 Correct.  We should add a trampoline to get the closure rather than to call it.
 Note: the trampoline to get the closure should be on the base class (so that it itself is monomorphic)
 Thanks for the feedbacks.  I updated the trampolines.  Let me know if I'm on the right track? 

cc @abarth

In the meantime, I'll puzzle out why my assertion is tripping on travis.
 The private is on the same class as the build method we were pulling before, but that's not the base class. Not sure if that's what @abarth meant or not.
 LGTM

This is slightly slower than before, but ok for now.  I think the ideal solution is to fix https://github.com/dart-lang/sdk/issues/57340 and remove these (and the other) trampolines.
 Thanks!  FWIW I bumped up the ask for a protected/strictProtected distinction in https://github.com/dart-lang/sdk/issues/57340 since this approach is clearly less than ideal.
",,"- brings in analyzer version (`0.27.4-alpha.14`) which corresponds to the current Dart SDK (`1.18.0-dev.2.0`)
- updates analysis to use preferred API for embedder URI resolution
- adds trampolines to `State` and `StatelessWidget` to allow for warning-free within-library `@protected` access (needed since we closed off access to `@protected` closures from outside subclasses)
- turns off cache dependency tracking for analysis (in DDC this amounted to a 10% speed improvement)
","we have a signature for these already somewhere. Builder maybe?
 WidgetBuilder
http://docs.flutter.io/flutter/widgets/WidgetBuilder.html
 Awesome.  Fixed!
"
2606,2016-03-11T07:26:09Z,2016-03-11T07:37:39Z,Hixie,5,2,1,519,41,0,0,[],216.0,0,274284388.0,0,0,0,0,3271336.273667,,0,1,0,False,"['abarth', 'pq', 'Hixie']","cc @abarth for review

fyi @chinmay for cassowary and newton
fyi @floitschG for scheduler
fyi @yjbanov for driver
fyi @vlidholt for markdown and sprites
fyi @devoncarew for tools
 oh and fyi @pq for all the lints!
 For the record, the lints I haven't yet enabled are:
- always_specify_types, which I'm working on doing on a separate branch and have already done about half of
- annotate_overrides, which I'll do next (this is just a mechanical change)
- avoid_as, which is blocked on https://github.com/dart-lang/sdk/issues/57292 making it through our system, but for which I've already done the relevant code changes in a previous PR
- avoid_return_types_on_setters, which is a mechanical change I'll do soon
- constant_identifier_names, which is blocked on getting `// ignore:` working
- implementation_imports, which is also blocked on `// ignore:` but for which I've already done the work in this PR
- one_member_abstracts, which is blocked on `// ignore:` but which is otherwise handled in this PR
- public_member_api_docs, because we haven't yet done ALL THE DOCS
- type_annotate_public_apis, which I believe is a subset of always_specify_types above

So the ones that still need work are always_specify_types, annotate_overrides, avoid_return_types_on_setters, constant_identifier_names, and of course public_member_api_docs.
 LGTM
 Needless to say, :metal: 
",,"Well, all the easy ones, anyway.

For some reason `// ignore:` isn't working for me so I've disabled
lints that need that. Also disabled those that require a ton of work
(which I'm doing, but not in this PR, to keep it reviewable).

This adds:
- avoid_init_to_null
- library_names
- package_api_docs
- package_names
- package_prefixed_library_names
- prefer_is_not_empty
- sort_constructors_first
- sort_unnamed_constructors_first
- unnecessary_getters_setters
","Oh, nice.
 Cheers to @hterkelsen for suggesting this check! :+1: 
"
12958,2017-11-10T00:02:36Z,2017-11-13T18:55:23Z,gspencergoog,7,13,8,1176,82,3,1,[],65615.0,0,221692837.0,0,0,0,0,3271902.175274,,0,8,0,False,"['gspencergoog', 'yjbanov', 'devoncarew']","awesome! taking a look now - After thinking about it overnight, I was thinking about two things:
1) I wonder if putting it in the templates directory is a bad idea: I think I can probably create an ""intellij"" project with `flutter create` now, which is not what I intended.  I might move it to ""ide_templates"" or something.
2) I wonder if I should leave the .iml files in the examples directories intact?  It might be non-intuitive to a newbie that no .iml files are in there, and if they just copy the examples to another directory then they'll have to set that up.  On the other hand, newbies really should be using `flutter create` to create new projects. Yeah, without looking through the full PR, my thoughts are:
- we should keep the iml and metadata files in examples/flutter_gallery - that's a great pedagogical example, and we should keep it easy for users to open
- creating the intellij metadata for the repo is something that will only be done by flutter repo developers; we should hide it somewhat from the main `flutter` command. So I think that's either making `flutter ide-config` a hidden command (like `flutter update-packages`), or making it part of update-packages itself - something like `flutter update-packages --gen-intellij` or similar. I like the second one, as it keeps the UI surface area of the flutter tool smaller

 OK, I'll make some of those changes and you can take another look.

- I think I'll just make it a hidden command: there are times when I'd like to just reset my IntelliJ setup without waiting for update-packages.
- I'll move the templates for the command into another directory so that it isn't picked up by `flutter create`.
- I'll restore the .iml and .idea files in flutter_gallery. OK, so after talking to some folks to gather opinions (n=3), we think that removing all of the `.iml` files and `.idea` directories in the examples should be fine.  The examples all exist in the top level `modules.xml` now, and there are run configurations for all of them.  We can put them back easily if anyone complains.

Ideally we should have a separate, curated, `flutter/examples` repo that is designed for people to copy things from.  As-is, they can run and modify the `flutter_gallery` and `hello_world` in place, and without the config files, the source is simpler to see what's part of Flutter and what's not, and it's IDE-agnostic. We should also be pointing them to `flutter create` to start new projects anyhow, since starting with a copy of the gallery is not really the best path to success.

So, I've removed all the `.idea` and `.iml`s in the examples, in addition to:
 - Moving all the templates to `packages/flutter_tools/ide_templates`, and updated the code to know that it should also ignore the regular templates directory.
 - Adding identical file detection so that we don't overwrite files that have no differences.
 - Removing the `codeStyleSettings.xml` (since it only points to a profile and doesn't actually set the settings).
 - Made the ide-config command a hidden command. I'm glad it can be opened without the metadata: thanks for checking that. Let's see how that works, and if it seems onerous, then we can simply add it back in. But now one can't use `git clean -xdf` without messing up their workspace?> The examples all exist in the top level modules.xml now, and there are run configurations for all of them.

I don't expect that regular users will run the `flutter ide-config` command though. Making the examples - and specifically flutter_gallery - easy to open is super useful for users, as it's a good app to mine for examples of how to do things (https://github.com/flutter/flutter-intellij/issues/535). `flutter create` doesn't really help them here.

I tested, and - after removing the IntelliJ metadata from flutter_gallery - we're still able to open it from IntelliJ w/o issues (you do need to have already configured a flutter sdk in IntelliJ). So I think it's ok to remove, but we may want to add some back in the future if we find out that it lowers the barrier to getting started for users.

> Made the ide-config command a hidden command.

Thanks, and thanks for for wrangling this metadata issue :)
","> The examples all exist in the top level modules.xml now, and there are run configurations for all of them.

I don't expect that regular users will run the `flutter ide-config` command though. Making the examples - and specifically flutter_gallery - easy to open is super useful for users, as it's a good app to mine for examples of how to do things (https://github.com/flutter/flutter-intellij/issues/535). `flutter create` doesn't really help them here.

I tested, and - after removing the IntelliJ metadata from flutter_gallery - we're still able to open it from IntelliJ w/o issues (you do need to have already configured a flutter sdk in IntelliJ). So I think it's ok to remove, but we may want to add some back in the future if we find out that it lowers the barrier to getting started for users.

> Made the ide-config command a hidden command.

Thanks, and thanks for for wrangling this metadata issue :)
","This PR creates a new flutter command 'ide-config' that will create and/or update existing .iml files and some files under the .idea directory.

It also:
 * Adds *.iml to the .gitignore
 * Removes existing .iml files from the repo, and moves them to the packages/flutter_tools/templates/intellij directory.
 * Adds a flag to ide-config ('--update-templates') that will take any new .iml files in the flutter tree and add them to the existing templates.
    - If --overwrite is also specified, then all existing templates will also be overwritten with the contents from the flutter tree, and any that have been deleted from the flutter tree will also be removed from the templates.
 * Added new run configurations for all existing app targets that will now also be automatically added to IntelliJ.
 * Setting up the environment also includes setting the coding style guidelines and the git VCS.

Note that after this PR lands, Flutter developers will need to run it once to re-create the .iml files and configuration files that have been removed.

After this PR lands, .iml files will no longer appear in the untracked files section for git.

Most of the PR is just moving things around or deleting things.  Main code changes are in:
 * `packages/flutter_tools/lib/src/commands/ide_config.dart`
 * `packages/flutter_tools/lib/src/template.dart`
 * `packages/flutter_tools/test/commands/ide_config_test.dart`","nit: 2017 nit: avoidable braces

>Avoid braces around one-line code blocks (e.g. in if statements) unless there's a chain (with else) and one of the elements in the chain has a multi-line block.

This nit applies at several places in the PR. nit: 2017 unnecessary else Actually, we recently relaxed this, the style guide only says that single-line bodies that wrap to more than one line need to have braces: the ""avoid"" section has been removed.  The Dart style guide is explicitly the other way, with ""DO use curly braces for all flow control structures."" Thanks, done. Done. Removed. Ok, thanks for the info.

I guess [this linter issue](https://github.com/dart-lang/linter/issues/142) should be updated to remove what I quoted. `deleted`? `deleted`? Fixed Fixed"
158946,2024-11-14T20:16:09Z,2024-11-18T19:54:41Z,bkonyi,1,3,5,77,3,2,1,"['platform-ios', 'tool', 'autosubmit']",22.0,0,344313.0,0,0,0,0,3277213.477767,,0,5,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.LGTM",LGTM,"It's possible that the tool can be in the process of shutting down, which could result in the temp directory being deleted after the shutdown hooks run before we check if `output` exists. If this happens, we shouldn't crash but just carry on as if no devices were found as the tool will exit on its own.

Fixes https://github.com/flutter/flutter/issues/141892
",Nit: consider renaming `isPossiblyShutdown` to `isToolPossiblyShutdown` or `toolPossbilyShutdown` Done.
158969,2024-11-15T00:29:44Z,2024-11-18T19:34:12Z,Piinks,0,9,2,46,1,2,1,"['team-infra', 'd: docs/']",,0,327869.0,0,0,0,0,3278442.512918,,1,2,0,False,[],LGTM!,LGTM!,"Spruced up a bit, added mention of edge case for older PRs.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
> **TL;DR** GitHub merge queue will be enabled in the `flutter/flutter` repo, which slightly changes the PR merge process, but you should not notice a change in your workflow.
``` ```suggestion
If you have an older PR from before this change, `autosubmit` may refuse to merge it. Resync your pull request to resolve this issue.
``` (Scary feature :P) I don't think there's any messaging in github that would allow people to contact users directly. Should this point people to a discord chat room where the FAQ can be answered?

Also, since this document reads like a FAQ, I would move this ""What if I have **other** questions?"" to the bottom, so people read the whole document before resorting to direct contact. ```suggestion
The main reason for this change is that `flutter/engine` and `flutter/flutter` repos will be combined into one ""monorepo"". In order to preserve the current lightweight dev cycle for the framework code, we need to provide pre-built engine artifacts. This way you don't need to compile any C++ code, or install extra tooling (e.g. `depot_tools`), when hacking on the framework alone. The merge queue is what will be building those engine binaries.
``` ```suggestion
On Friday November 15th, 2024, GitHub merge queue feature will be enabled in the `flutter/flutter` repo. After this change, pull requests will first need to pass merge queue tests before landing on the target branch (e.g. `main` or `master`). At this time, no additional tests will run in the merge queue. A PR that passes presubmit checks will be allowed to land on the target branch immediately.
``` Should we *encourage* people to use `autosubmit` instead of manually clicking the button? Folks already should be using the autosubmit label. Merging manually has been and is still discouraged. We have other docs that refer to Gtihub handles for contact. I think the expectation has been that they will ping on an issue, including if that issue is a question that needs answering. :)"
158464,2024-11-11T18:32:02Z,2024-11-11T19:16:23Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,606870.0,0,0,0,0,3280105.156336,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3cb6f4de89b6...7b3eacd20eb6

2024-11-11 robert.ancell@canonical.com Remove unused FlMockTextInputHandler (flutter/engine#56495)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159007,2024-11-15T22:08:48Z,2024-11-18T19:01:53Z,matanlurey,1,0,3,187,46,1,1,['tool'],246574.0,0,247986.0,0,0,0,0,3280383.492671,,1,3,0,False,['matanlurey'],"I'd like to attempt additional cleanups that make debugging test failures more viable (https://github.com/flutter/flutter/issues/158875), but I need to merge this first. Could I get a (hopefully trivial) review?",,"Towards https://github.com/flutter/flutter/issues/158875.

This should be a NOP, and just reduce the amount of copy-pasted code across tests.",
159011,2024-11-15T23:16:34Z,2024-11-18T18:24:15Z,matanlurey,3,0,1,1,1,1,1,['tool'],116.0,0,241663.0,0,0,0,0,3282640.846341,,0,1,0,False,"['auto-submit[bot]', 'matanlurey', 'zanderso']","If this lands before the engine revert, we could close the revert. > If this lands before the engine revert, we could close the revert.

I'll race you, looks like both trees are red :) auto label is removed for flutter/flutter/159011, due to - The status or check suite [Mac channels_integration_test](https://cr-buildbucket.appspot.com/build/8731161361363885041) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,Unblocks https://github.com/flutter/flutter/issues/151610.,
158456,2024-11-11T15:59:58Z,2024-11-11T16:45:30Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,605194.0,0,0,0,0,3290907.675682,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/e9a44820f302...3cb6f4de89b6

2024-11-11 mdebbar@google.com [web] Bump Firefox version to 132.0 (flutter/engine#56435)
2024-11-11 skia-flutter-autoroll@skia.org Roll Dart SDK from cde0e0dc084a to 4ea43aa234a4 (1 revision) (flutter/engine#56502)
2024-11-11 skia-flutter-autoroll@skia.org Roll Skia from 676b3b1a41be to 261316c10484 (1 revision) (flutter/engine#56503)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158744,2024-11-13T17:47:20Z,2024-11-15T00:43:15Z,bkonyi,0,0,2,70,2,1,1,"['tool', 'cp: beta']",,0,424342.0,0,0,0,0,3292518.029628,,0,2,0,False,[],LGTM. I think we should cherry-pick this to the beta channel.,LGTM. I think we should cherry-pick this to the beta channel.,"This started happening after moving DDS to launch from `dart development-service` rather than `DartDevelopmentService` (see 33b402d24c2131dcf97e272ec3d59c0249762e7f) . This state error was originally meant to be thrown when some string parsing failed, but is currently wrapping the `DartDevelopmentServiceException`.

Fixes https://github.com/flutter/flutter/issues/158537",
151627,2024-07-12T00:56:53Z,2024-07-26T20:01:56Z,angelosilvestre,5,30,13,169,2,4,1,"['framework', 'f: gestures', 'autosubmit']",2.0,0,11205473.0,0,0,0,0,3285614.23659,,0,13,0,False,"['angelosilvestre', 'nate-thegrate', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#tests) to this rule, contact ""@test-exemption-reviewer"" in the #hackers channel in [Chat](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it! Use Discord!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. I'm not sure which tests could be added here. Since this PR does not change any functionality maybe it doesn't need a test? It looks like there are a couple of test failures: one of them was caused by changes outside this branch, and the other is a dependency loop (that would have gone undetected if we'd kept the relative import).

Using the `Axis` enum in `DragGestureRecognizer` has caused **gestures.dart** and **painting.dart** to be codependent—in fact, I bet this is why `_DragDirection` was created in the first place!

In order to resolve this, we could revert to using a public `DragDirection` enum (or maybe just `bool horizontal`).

Or we could migrate some code to prevent the loop. Since [**painting/basic_types.dart**](https://github.com/flutter/flutter/blob/82b63ff27d7a15581837c84ca9304d3023934545/packages/flutter/lib/src/painting/basic_types.dart#L60) is already exporting a type from the **foundation** package, I think it'd be super straightforward to just move the enums in that file into [**foundation/basic_types.dart**](https://github.com/flutter/flutter/blob/82b63ff27d7a15581837c84ca9304d3023934545/packages/flutter/lib/src/foundation/basic_types.dart).

<br>

@angelosilvestre Sorry that the act of making a few things public is turning out to be more complex than anticipated. I don't think there's anything you need to do at this point; I'll reach out to some folks tomorrow and hopefully we can come up with a solid action plan. @nate-thegrate Thanks for the update. Please let me know if there is anything I should do. I created #151771 in order to hopefully unblock this PR. I guess we'll see how it goes!Hi @angelosilvestre, thanks for making this contribution!

I gave a bit of feedback, so take a look when you have a chance 🙂 Thanks very much for the update, this PR is looking fantastic!

I'll be happy to approve once we get a testing plan sorted out 👍 ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for putting in the work here! > Such methods include _considerFling, _hasSufficientGlobalDistanceToAccept, among others.

Can you update the PR description to list all of the methods that are being made public, and why? I am not sure all of them need to be exposed in this way. Apologies for the delayed response, I was away for a bit. Thanks for the updates!","Hi @angelosilvestre, thanks for making this contribution!

I gave a bit of feedback, so take a look when you have a chance 🙂 Thanks very much for the update, this PR is looking fantastic!

I'll be happy to approve once we get a testing plan sorted out 👍 ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for putting in the work here! > Such methods include _considerFling, _hasSufficientGlobalDistanceToAccept, among others.

Can you update the PR description to list all of the methods that are being made public, and why? I am not sure all of them need to be exposed in this way. Apologies for the delayed response, I was away for a bit. Thanks for the updates!","Resolves #151446

`DragGestureRecognizer` defines several private abstract methods that are implemented by its subclasses.
In the **super_editor** package, we'd like to extend `PanGestureRecognizer` to make it more aggressive, so it can win the gesture arena when placed inside a `CustomScrollview`. However, since we can't override private methods, tweaking this single function would involve copying the entire `DragGestureRecognizer` interface and its `PanGestureRecognizer` implementation.

<br>

Methods that were updated in this PR:

| Method | Rationale |
|---|---|
| `_hasSufficientGlobalDistanceToAccept` | This is the most important method for us. Overriding this method allows tweaking the PanGestureRecognizer to be more aggressive. |
| `_considerFling` | In **super_editor** we use the PanGestureRecognizer, but we want the fling gesture to behave as if it was a VerticalDragRecognizer. We'll use the fling gesture just to scroll vertically. |
| `_finalPosition` | I added a getter to be able to access it inside `_considerFling`. |
| `_globalDistanceMoved` | I added a getter to be able to access it inside `_hasSufficientGlobalDistanceToAccept`. |","My preference would be to replace `_DragDirection` with `Axis`, rather than exposing this congruent enum as a public API.

https://github.com/flutter/flutter/blob/c95977568aa2ddbe82b905c4c6853ebe49d8c2a4/packages/flutter/lib/src/painting/basic_types.dart#L128-L139 Maybe we could improve the API signature as part of this process!

```dart
Axis? get primaryDragAxis => null;
``` I feel about 80% confident that this is a fantastic improvement to the Flutter framework, but a small concern is that once something becomes public, the potential amount of future breaking changes increases.

What is the advantage of subclassing `DragGestureRecognizer` rather than extending `OneSequenceGestureRecognizer` directly? > I'm not sure which tests could be added here.

Yeah, that's valid. Feel free to request a test exemption as per the [bot comment](https://github.com/flutter/flutter/pull/151627/#issuecomment-2224231812), or if you'd like, you could add a custom `DragGestureRecognizer` subclass to [monodrag_test.dart](https://github.com/flutter/flutter/blob/master/packages/flutter/test/gestures/monodrag_test.dart) and add some tests to double-check that it works as expected. It's true that `OneSequenceGestureRecognizer` can be extended directly. However, for small changes, such as the one I described in the PR description, where we just want to customize the `PanGestureRecognizer` a little bit. 

It looks overwhelming to me that we need to copy the whole `DragGestureRecognizer` just to tweak `PanGestureRecognizer` a little bit.

What do you think? Yep, that sounds fair. Thanks! Here's an idea: since the goal is to create an aggressive pan gesture that beats a `CustomScrollView` in the arena, why don't you add a test that checks this behavior?

Then, if at some point someone makes a change that breaks this functionality, it would cause a test failure rather than potentially going unnoticed. Sounds good. I'll give it a shot. @nate-thegrate I added a test. I pumped a tree starting all the way up from the `MaterialApp`.  Please let me know if I need to change it. Awesome!

All we need now is 1 more PR approval :) Thanks. Do you happen to know who could be tagged for the second review? Unfortunately, the timing with this PR isn't great—we usually have weekly triage meetings, but this week got canceled since people are on vacation.

I'll try sending a message out once the weekend's over, and hopefully we can get a second reviewer within the next few days. Sorry, one more thing I completely glossed over: we usually do relative imports for files within the same package, and package imports otherwise.

```suggestion
import 'package:flutter/painting.dart' show Axis;
import 'package:flutter/scheduler.dart';

``` Updated. Would lastPosition be a better name here? What about all of the other methods?  Yeah, probably. Updated. To make the test simpler I didn't included the other methods. This test doesn't care about the fling gesture, so it wouldn't help here. I think the idea behind this comment was: each method that we make public should be included in the test framework. Understood. I'll update it. Updated. 

For our use-case, `primaryDragAxis` could be kept private, since it has a default implementation and we don't need to change it. However, if someone needs to write a custom `VerticalDragRecognizer` or a `HorizontalDragRecognizer` they will need to override `primaryDragAxis`. I think if only some of the methods are required for your use case, we should only expose those needed, rather than exposing all of them.

https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#lazy-programming Updated. Could you please take a look again @Piinks ? Hopefully it was all right for me to edit the original PR comment; I think that table makes it a bit easier to visually parse.

My guess is that a second approval will be contingent on re-privatizing `getDeltaForDetails` and `getPrimaryValueFromOffset`, since they aren't needed for your use case. I think that if those methods should be re-privatized, a default implementation should be provided. Otherwise, it won't be possible to subclass `DragGestureRecognizer` outside of the flutter package. Good point! I can see that as a reason to keep them as public.

…or, we could pull a [***pro gamer move***](https://en.meming.world/images/en/5/5e/I%27m_Gonna_Do_What%27s_Called_a_Pro_Gamer_Move.jpg) and turn `DragGestureRecognizer` into a [`sealed class`](https://dart.dev/language/class-modifiers#sealed). This could help streamline the logic within the framework, and since extending `DragGestureRecognizer` directly would no longer be possible, developers wouldn't waste any time trying to do it and could instead extend its subclasses (or the base `OneSequenceGestureRecognizer` class). Would it be possible to extend a class that extends a sealed class? I've never done that. If it works, it works for me that way, we could extend `PanGestureRecognizer`. I'd like to hear @Piinks opinion on that before making this change.  > Would it be possible to extend a class that extends a sealed class?

Yes sir! The main goal of a `sealed` class is to enable exhaustive pattern-matching:

```dart
void foo(DragGestureRecognizer recognizer) {
  switch (recognizer) {
    case HorizontalDragGestureRecognizer():
      // ...
    case VerticalDragGestureRecognizer():
      // ...
    case PanGestureRecognizer():
      // ...
  }
}
```

Fortunately, passing a subtype of `PanGestureRecognizer` doesn't break this behavior! Sounds good, I'll give it a try. Good choice leaving the documentation here—even if it's not public, it's still really nice to have!"
158453,2024-11-11T13:52:01Z,2024-11-11T14:36:26Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605671.0,0,0,0,0,3298109.853027,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/d90e9f4718b8...e9a44820f302

2024-11-11 skia-flutter-autoroll@skia.org Roll Dart SDK from ed9a5b1110ae to cde0e0dc084a (6 revisions) (flutter/engine#56500)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158443,2024-11-11T08:58:05Z,2024-11-11T09:44:05Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605306.0,0,0,0,0,3316111.118991,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/01c76e42c20f...d90e9f4718b8

2024-11-11 skia-flutter-autoroll@skia.org Roll Skia from 3333292a62c1 to 676b3b1a41be (2 revisions) (flutter/engine#56499)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158438,2024-11-11T02:56:42Z,2024-11-11T04:02:25Z,engine-flutter-autoroll,1,0,3,4,2,1,1,['engine'],1197.0,0,607656.0,0,0,0,0,3335444.337668,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158438, due to - The status or check suite [Windows build_tests_3_9](https://cr-buildbucket.appspot.com/build/8731600495830780209) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/9b4c3b3d5518...01c76e42c20f

2024-11-11 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from TZVo85tD5mpzhcafg... to BajfrJuYeyWvnBhuM... (flutter/engine#56497)
2024-11-11 skia-flutter-autoroll@skia.org Roll Skia from 778b21720a61 to 3333292a62c1 (7 revisions) (flutter/engine#56496)
2024-11-10 chris@bracken.jp fml: Improve CFTest.SupportsCustomRetainRelease test (flutter/engine#56480)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from TZVo85tD5mpz to BajfrJuYeyWv

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
159034,2024-11-16T19:40:55Z,2024-11-16T22:26:29Z,yaostyle,1,0,1,15,2,2,2,"['framework', 'd: api docs', 'd: examples']",4.0,0,10336.0,0,0,0,0,3440513.097467,,0,1,0,False,['google-cla[bot]'],"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/159034/checks?check_run_id=33086816463) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request.LGTM! LGTM!",LGTM! LGTM!,"Fix the NavigationBar example overflow alignment.

### Before: 
<img src=""https://github.com/user-attachments/assets/a6cf2cbb-ac32-482c-9aed-8cac15152a0d"" height=""450"" />


### After:
<img src=""https://github.com/user-attachments/assets/d476c617-edd3-449d-93cf-4a9a87c26d98"" height=""450"" />



*List which issues are fixed by this PR. You must list at least one issue. An issue is not required if the PR fixes something trivial like a typo.*

*If you had to change anything in the [flutter/tests] repo, include a link to the migration guide as per the [breaking change policy].*

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158418,2024-11-09T21:25:42Z,2024-11-09T22:03:26Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,605916.0,0,0,0,0,3443446.264618,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/690cdfd09beb...9b4c3b3d5518

2024-11-09 jason-simmons@users.noreply.github.com Remove the unsafe_html analysis rule (flutter/engine#56479)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158414,2024-11-09T15:25:49Z,2024-11-09T16:09:23Z,engine-flutter-autoroll,0,0,1,4,2,1,1,['engine'],,0,605909.0,0,0,0,0,3465046.436487,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/ca6f5110d9d3...690cdfd09beb

2024-11-09 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from aLUsXLv5iMZFOgcAS... to TZVo85tD5mpzhcafg... (flutter/engine#56478)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from aLUsXLv5iMZF to TZVo85tD5mpz

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158563,2024-11-13T09:20:14Z,2024-11-16T01:49:57Z,fluttergithubbot,0,0,2,1,1,1,1,['c: flake'],,0,232183.0,0,0,0,0,3515109.354051,,0,2,0,False,[],,,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux web_benchmarks_skwasm_st""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Linux%20web_benchmarks_skwasm_st%22).
This test can be marked as unflaky.
",
158411,2024-11-09T01:42:56Z,2024-11-09T03:07:32Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,608483.0,0,0,0,0,3511847.49553,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/2f097cfd3d2d...ca6f5110d9d3

2024-11-09 chris@bracken.jp iOS: Use fml::CFRef in place of Scoped (flutter/engine#56463)
2024-11-09 skia-flutter-autoroll@skia.org Roll Dart SDK from 307869c696e8 to ed9a5b1110ae (2 revisions) (flutter/engine#56465)
2024-11-08 chris@bracken.jp fml: delete unused scoped_policy (flutter/engine#56462)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158407,2024-11-08T23:35:01Z,2024-11-09T00:16:06Z,engine-flutter-autoroll,0,0,1,2,1,1,1,['engine'],,0,608971.0,0,0,0,0,3519034.569092,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/54df0b8a4784...2f097cfd3d2d

2024-11-08 a-siva@users.noreply.github.com Manual roll Dart SDK from cfa1826c3df1 to 307869c696e8 (1 revision) (flutter/engine#56460)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158405,2024-11-08T22:41:07Z,2024-11-08T23:22:12Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['engine'],,0,612205.0,0,0,0,0,3519036.372837,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/b7134d373ef8...54df0b8a4784

2024-11-08 rosscomputerguy@protonmail.com [Linux] Replace deprecated macros in fl_application_test.cc (flutter/engine#56257)
2024-11-08 jonahwilliams@google.com [iOS] fix tracking of previous platform views. (flutter/engine#56461)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158402,2024-11-08T21:55:59Z,2024-11-08T22:28:24Z,engine-flutter-autoroll,0,0,3,2,1,1,1,['engine'],,0,614912.0,0,0,0,0,3519037.570789,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/6b77347edfc5...b7134d373ef8

2024-11-08 chris@bracken.jp fml: Use CFRef where possible and add docs (flutter/engine#56436)
2024-11-08 mdebbar@google.com [web] Split all 1MB+ fallback fonts (including CJK) (flutter/engine#56388)
2024-11-08 chris@bracken.jp yapf: Add more detailed error message and TODO (flutter/engine#56458)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158565,2024-11-13T09:20:23Z,2024-11-16T00:18:09Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: tech-debt', 'c: flake']",,0,226666.0,0,0,0,0,3520619.681883,,0,1,0,False,[],LGTM,LGTM,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Windows windows_desktop_impeller""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Windows%20windows_desktop_impeller%22).
This test can be marked as unflaky.
",
159008,2024-11-15T22:18:08Z,2024-11-15T23:32:47Z,yjbanov,1,0,1,13,1,1,1,['d: docs/'],2291.0,0,4480.0,0,0,0,0,3523342.391932,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/159008, due to - The status or check suite [Windows build_tests_6_9](https://cr-buildbucket.appspot.com/build/8731165070519635825) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,Update list of frequent web contributors,
159004,2024-11-15T21:46:32Z,2024-11-15T22:55:55Z,matanlurey,1,0,1,141,13,1,1,['tool'],100.0,0,4164.0,0,0,0,0,3525554.638711,,1,1,0,False,['matanlurey'],/cc @reidbaker @gmackall @bkonyi @andrewkolos LGTM,LGTM,"Towards https://github.com/flutter/flutter/issues/159000 as part of debugging issues such as https://github.com/flutter/flutter/issues/158560.

On a `bringup: true` shard, run a number of `flutter build apk` tests in succession to try and routinely trigger timeouts and crashes, so we can test other hypotheses on how to fix this problem (i.e. potentially around increasing memory, changing daemon configuration, aggressively killing processes, etc).",
158994,2024-11-15T19:17:31Z,2024-11-15T22:41:31Z,gspencergoog,0,5,5,341,5,2,1,"['framework', 'f: material design', 'd: api docs', 'd: examples']",,0,12241.0,0,0,0,0,3526419.07353,,0,5,0,False,[],"LGTM with a nit about _localFocusNode :+1: . This is much simpler, good call!","LGTM with a nit about _localFocusNode :+1: . This is much simpler, good call!","## Description

This makes the `focusNode`  for `SelectableRegion` optional so that:
- Users of the widget are no longer required to use `SelectableRegion` from within a `StatefulWidget`
- They aren't likely to forget to dispose of a node they didn't supply.
- Simpler to use, and the node is not used very often anyhow.

Also made the `SelectableRegion` sample actually use `SelectableRegion`.

## Tests
 - Modified all the `SelectableRegion` tests to remove 3 identical lines of boilerplate from each (except 2, which actually used their focus nodes).","Good catch haha. Slight performance nit: I think Dart will still create this even in cases where it's never accessed. If the widget goes from having null passed to focusNode to having a FocusNode passed, then _localFocusNode won't be disposed until SelectableRegion is disposed. Is that ok? Also if later it goes back to null again, then it will start reusing the old _localFocusNode, including possibly switching from focused to unfocused.

Would it be any better to set _localFocusNode only when it's needed and then dispose it and set it to null whenever it's not? It won't be a problem: the focus node won't be in the focus tree anymore if it's not used, because the `Focus` widget here will detach it when the new one is assigned, and if it's reattached, then where it is attached (and whether `FocusManager.instance.primaryFocus` is equal to that node) will determine whether it has focus, not any internal state.

You know, now that I look at it, I think that the `Focus` widget is being used incorrectly here anyhow.  It should be using `Focus.withExternalFocusNode` instead.  WIll fix that... Yes, but on the other hand, it won't need to do work to unregister it, dispose it, and re-register it when it changes.

I'll convert it to keep it from allocating and registering it if it isn't used, but that does complicate the logic some."
159006,2024-11-15T22:01:48Z,2024-11-15T22:14:58Z,yjbanov,0,0,1,16,1,1,1,['d: docs/'],,0,791.0,0,0,0,0,3528013.481894,,0,1,0,False,[],LGTM,LGTM,Mostly just testing the MQ functionality,
158398,2024-11-08T21:07:59Z,2024-11-08T21:43:06Z,engine-flutter-autoroll,0,0,4,2,1,1,1,"['engine', 'autosubmit']",,0,607652.0,0,0,0,0,3529181.820414,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/1b567e80386e...6b77347edfc5

2024-11-08 chris@bracken.jp Add FlutterTaskRunnerDescription.destruction_callback (flutter/engine#56445)
2024-11-08 skia-flutter-autoroll@skia.org Roll Skia from d0ee80612f86 to 778b21720a61 (5 revisions) (flutter/engine#56457)
2024-11-08 skia-flutter-autoroll@skia.org Manual roll Dart SDK from 50c620224f27 to cfa1826c3df1 (2 revisions) (flutter/engine#56456)
2024-11-08 flar@google.com [Impeller] Switch to uniform arrays for gradient data on non-SSBO hardware (flutter/engine#56441)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158393,2024-11-08T19:19:05Z,2024-11-08T19:55:13Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,608638.0,0,0,0,0,3534731.527609,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/a08bd5a07c2a...1b567e80386e

2024-11-08 jason-simmons@users.noreply.github.com In the embedder Impeller render target, use a multisample texture for the depth buffer only if MSAA is supported (flutter/engine#56444)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
141373,2024-01-11T14:26:17Z,2024-03-27T23:43:10Z,maRci002,30,30,50,1597,14,4,0,"['framework', 'f: material design', 'f: cupertino', 'f: routes']",2872.0,0,26720165.0,0,0,0,0,3533572.621651,,2,50,0,False,"['justinmc', 'PaulGrandperrin', 'LongCatIsLooong', 'maRci002']","One aspect I'm considering is how to best align with the [Predictive Back design](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back), specifically the ""Back Preview"" experience.

The gesture-controlled route should incorporate two types of transitions. One type of transition would occur when the route is controlled programmatically, such as through the use of `Navigator.pop` / `Navigator.push`. Additionally, there should be a distinct transition tailored for the _Back Preview_ when the route is controlled by a gesture.

Considering that various Material components like [Bottom sheets](https://m3.material.io/components/bottom-sheets/guidelines#3d7735e2-73ea-4f3e-bd42-e70161fc1085), [Side sheets](https://m3.material.io/components/side-sheets/guidelines#d77245e3-1013-48f8-a9d7-76f484e1be13), and [Search](https://m3.material.io/components/search/guidelines#3f2d4e47-2cf5-4c33-b6e1-5368ceaade55) include back gesture animations, it is advisable to develop a generic, reusable component for managing these transitions.

Definitely needed the two different transitions; otherwise, this happens:

[predictive_back_single_animation.webm](https://github.com/flutter/flutter/assets/8436039/dc57cbb4-f9ab-412a-982c-728b44b4048f)
 This pull request seems prepared for review.

Currently, it lacks documentation and tests, which I plan to add once we confirm that the API is satisfactory. This also applies to the engine part flutter/engine#49093 > Currently, a user has to explicitly use AndroidBackGesturePageTransitionsBuilder in order to get the predictive back transition, right? I wonder if it should be built into any of the existing route transitions. That's probably beyond the scope of this PR, though.

Yes, to enable predictive back transitions, developers should explicitly use `AndroidBackGesturePageTransitionsBuilder`. This approach ensures compatibility with Android versions below API 34 as well. For these older Android versions or in cases where the back gesture transition is not applicable (_e.g., the Android platform is not in use, the Android version is below API 34, or navigation is triggered programmatically through methods like `Navigator.pop` or `Navigator.push`_), the transition logic falls back to the `final PageTransitionsBuilder parent;` field. This field, by default, is set to use `ZoomPageTransitionsBuilder` for transitions which might change in the future #142352.

> Do you know if this kind of predictive back transition is the default in native Android?

I don't really know the predictive back transitions, as recommended by [Android's Material Design guidelines](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back#motion-specs), have been incorporated in my implementation. However, effects like fading or barrier colors for better visual appeal haven't been added. In my demo, I cheated by applying a high contrast, using a dark page on top of a light page.

> What if someone wants to make a route transition that animates itself into some UI element on the parent route? Such as in the [predictive back spec](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back#full-screen-surfaces) (video below). Maybe you should include an example of doing something like that in the examples directory and link it in your docs.

These kinds of animations should be implemented using the package available at [https://pub.dev/packages/animations](https://pub.dev/packages/animations). I've made every effort to ensure the solution is as modular and flexible as possible. For instance, there's the `AndroidBackGesturePageTransitionsBuilder`, which supports parent transitions in the absence of a linear transition. Additionally, we have the `AndroidBackGestureDetector` for listening to predictive back events, and the `AndroidBackGestureTransition` which executes the actual transition. In the video referenced from the predictive back spec, the `AndroidBackGestureTransition` is utilized during an ongoing linear transition. However, a specific technique is required when a commit occurs, at which point the parent transition should be invoked. This means that [NavigatorState.didStopUserGesture](https://api.flutter.dev/flutter/widgets/NavigatorState/didStopUserGesture.html) should be called immediately and using the parent animation to end the transition. Alternatively, the `AndroidBackGestureDetectorWidgetBuilder` could include an additional parameter indicating the current status (`none`, `start`, `inProgress`, `cancel`, `commit`);  the latter approach is, I believe, better since it makes it easier to determine whether to use the `AndroidBackGestureTransition`, the parent transition, or even a secondary transition. That all sounds good, thanks for the detailed response! I'm going to check on 1. the default route transitions on native Android and 2. I'll play around with the animations package and see how easy it would be to tie into predictive back. I created a quick native Android app to check the route transitions that you get out of the box, gif below. This was after setting `android:enableOnBackInvokedCallback=""true""`.

I'll try to make sure that we can do this kind of transition as well as the kind with the `animations` package.

<details>

<summary>Gif of default Android pop transition</summary>

![output](https://github.com/flutter/flutter/assets/389558/b00eccfe-9937-4a3f-831a-2c4f4d95a0bb)

</details> > I'll try to make sure that we can do this kind of transition as well as the kind with the `animations` package.

In that case, you would want to add a new `PageTransitionsBuilder` to `AndroidBackGesturePageTransitionsBuilder`. Its build method would be invoked when the parent route has a `linearTransition`, in other words, when the parent (_the top most route_) is in back preview mode.

Anyway, when I change the `AndroidBackGestureDetector`'s builder logic from `final bool linearTransition = CupertinoRouteTransitionMixin.isPopGestureInProgress(route);` to `final bool linearTransition = startBackEvent != null && currentBackEvent != null;`, then, for some reason, the first screen's reverse animation is played. I think this could help. Maybe it happens because `userGestureInProgress` is set in a later frame.

Here is the video showing the reverse animation of the first screen. It demonstrates the topmost route being popped, which triggers the `ZoomPageTransitionsBuilder`'s reverse animation for the first screen.

<details>

https://github.com/flutter/flutter/assets/8436039/8351cd20-2f83-4af9-a852-2fd431b252e5

</details> You're saying that in your video, the ""First Screen"" is unexpectedly also animating during the back gesture?  I do see that.

I'm currently trying to gather some info on Android's default transition and will post back with more details later. I figured out what the transitions should be. The default should be the same default that we see on Android right now, which is a resizing and fading. I don't think there is an official spec for this, but I recorded a gif of it below.

And like I thought, we should make sure that the shared element transition is doable with predictive back. That animation does have a [spec](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back), and below is the video from it.

| Default transition | Possible with `animations` |
| --- | --- |
| ![unnamed](https://github.com/flutter/flutter/assets/389558/31763d84-8b23-4559-aca9-5003c4d9ec1e) | <video src=""https://github.com/flutter/flutter/assets/389558/8d27954c-fbb6-46fd-b321-1850c93c2b2c"" /> |






 @maRci002 Are you still available to work on this PR? I'm happy to take over work on this project myself if you're busy. > @maRci002 Are you still available to work on this PR? I'm happy to take over work on this project myself if you're busy.

Yes, this week I am going to address the unresolved conversations. Great, thanks and keep me posted! @justinmc, I am ready for a third review. I have found more documentation about predictive back [here](https://github.com/material-components/material-components-android/blob/master/docs/foundations/PredictiveBack.md). @maRci002 Can you push a merge commit? I think a bunch of checks are stuck.

I'll post a review soon, thanks for the quick turnaround! > ### Back button doesn't work
> If I try your example code at the top of this PR, just tapping the back button doesn't work. Sometimes nothing happens at all, and sometimes there is some weird jumpiness.

This isn't happening on my end. Do you receive any errors, or does this behavior start after some gestures?

I don't think this is related, but I don't run the engine locally. I just forward the `OnBackAnimationCallback` in my `MainActivity`:

<details>

```java
package com.example.swipe;

import android.annotation.TargetApi;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;

import android.os.Build;
import android.window.BackEvent;
import android.window.OnBackAnimationCallback;
import android.window.OnBackInvokedCallback;
import android.window.OnBackInvokedDispatcher;

import java.util.HashMap;
import java.util.Map;

import io.flutter.Log;
import io.flutter.embedding.android.FlutterActivity;
import io.flutter.embedding.engine.FlutterEngine;
import io.flutter.plugin.common.JSONMethodCodec;
import io.flutter.plugin.common.MethodChannel;

public class MainActivity extends FlutterActivity {

    public static final String TAG = MainActivity.class.getSimpleName();

    public MethodChannel channel;

    private final MethodChannel.MethodCallHandler defaultHandler = (call, result) -> result.success(null);

    @Override
    public void configureFlutterEngine(@NonNull FlutterEngine flutterEngine) {
        super.configureFlutterEngine(flutterEngine);

        channel = new MethodChannel(flutterEngine.getDartExecutor().getBinaryMessenger(), ""flutter/backGesture"", JSONMethodCodec.INSTANCE);
        channel.setMethodCallHandler(defaultHandler);
    }

    BackEvent startBackEvent;

    @TargetApi(34)
    @RequiresApi(34)
    public void startBackGesture(@NonNull BackEvent backEvent) {
        Log.i(TAG, ""startBackGesture: "" + backEvent.getProgress());
        startBackEvent = backEvent;
        channel.invokeMethod(""startBackGesture"", backEventToJsonMap(backEvent));
    }

    @TargetApi(34)
    @RequiresApi(34)
    public void updateBackGestureProgress(@NonNull BackEvent backEvent) {
        final double xDiff = Math.abs(backEvent.getTouchX() - startBackEvent.getTouchX());
        final double yDiff = Math.abs(backEvent.getTouchY() - startBackEvent.getTouchY());
        final int progress = Math.round(backEvent.getProgress() * 100);

        Log.i(TAG, ""progress: "" + progress + ""% xDiff: "" + xDiff + "" yDiff: "" + yDiff);

        channel.invokeMethod(""updateBackGestureProgress"", backEventToJsonMap(backEvent));
    }

    @TargetApi(34)
    @RequiresApi(34)
    public void commitBackGesture() {
        Log.i(TAG, ""commitBackGesture"");
        channel.invokeMethod(""commitBackGesture"", null);
    }

    @TargetApi(34)
    @RequiresApi(34)
    public void cancelBackGesture() {
        Log.i(TAG, ""cancelBackGesture"");
        channel.invokeMethod(""cancelBackGesture"", null);
    }

    @TargetApi(34)
    @RequiresApi(34)
    private Map<String, Object> backEventToJsonMap(@NonNull BackEvent backEvent) {
        Map<String, Object> message = new HashMap<>(4);
        message.put(""touchX"", Float.isNaN(backEvent.getTouchX()) ? null : backEvent.getTouchX());
        message.put(""touchY"", Float.isNaN(backEvent.getTouchY()) ? null : backEvent.getTouchY());
        message.put(""progress"", backEvent.getProgress());
        message.put(""swipeEdge"", backEvent.getSwipeEdge());

        return message;
    }

    @Override
    public void onBackPressed() {
        Log.i(TAG, ""onBackPressed"");

        super.onBackPressed();
    }

    private boolean hasRegisteredBackCallback = false;

    @Override
    public void registerOnBackInvokedCallback() {
        if (Build.VERSION.SDK_INT >= 33) {
            getOnBackInvokedDispatcher()
                    .registerOnBackInvokedCallback(
                            OnBackInvokedDispatcher.PRIORITY_DEFAULT, onBackInvokedCallback);
            hasRegisteredBackCallback = true;
        }
    }

    @Override
    public void unregisterOnBackInvokedCallback() {
        if (Build.VERSION.SDK_INT >= 33) {
            getOnBackInvokedDispatcher().unregisterOnBackInvokedCallback(onBackInvokedCallback);
            hasRegisteredBackCallback = false;
        }
    }

    private final OnBackInvokedCallback onBackInvokedCallback =
            Build.VERSION.SDK_INT < 33 ? null : createOnBackInvokedCallback();

    @NonNull
    @TargetApi(33)
    @RequiresApi(33)
    private OnBackInvokedCallback createOnBackInvokedCallback() {
        if (Build.VERSION.SDK_INT >= 34) {
            return new OnBackAnimationCallback() {
                @Override
                public void onBackInvoked() {
                    commitBackGesture();
                }

                @Override
                public void onBackCancelled() {
                    cancelBackGesture();
                }

                @Override
                public void onBackProgressed(@NonNull BackEvent backEvent) {
                    updateBackGestureProgress(backEvent);
                }

                @Override
                public void onBackStarted(@NonNull BackEvent backEvent) {
                    startBackGesture(backEvent);
                }
            };
        }

        return this::onBackPressed;
    }

    @Override
    public void setFrameworkHandlesBack(boolean frameworkHandlesBack) {
        Log.i(TAG, ""setFrameworkHandlesBack: "" + frameworkHandlesBack);

        if (frameworkHandlesBack && !hasRegisteredBackCallback) {
            registerOnBackInvokedCallback();
        } else if (!frameworkHandlesBack && hasRegisteredBackCallback) {
            unregisterOnBackInvokedCallback();
        }
    }

}
```
</details>


> ### No opacity animation
> When I swipe back slowly, there is a point at which the top route suddenly disappears. Looking at native Android it seems like there should be an opacity animation. It happens at the point where releasing the gesture would commit the pop. To me it seems to not be driven by the back gesture (so when the back gesture reaches the commit point, the opacity animation runs in a fixed amount of time).

What do you mean by ""`when the back gesture reaches the commit point`""? Do you mean vibration? I find this grammar a bit difficult for me. Could you clarify what the current behavior is and what the desired behavior should be?

It appears there is an issue because the commit point is not based on progress or any difference in axes, and the API does not specify when a commit will occur. Here is a video showing the commit points at various progress percentages: 5%, 11%, 15%, 52%, 54%, 18%, 80%, and 82%

https://github.com/flutter/flutter/assets/8436039/c950fd28-e2d7-4d06-bf91-fc00fad1665a

Note:
 - I recently updated my Xiaomi 11T phone to Android 14. Unfortunately, enabling Predictive Back in the developer options seems to disrupt system animations. I'm unable to peek behind app, and when there are multiple activities stacked on top of each other, there's no animation. As a result, I'm unable to observe the animations on a real device. However, the registered `OnBackAnimationCallback` still functions properly so animating inside app works. Interestingly, the commit point always occurs at 1/4 of a horizontal swipe, and at that point, my progress remains at 100%, regardless of whether I complete a full swipe to the other side.
 - In Jetpack Compose, they added the ability to seek back to [Navigation Compose](https://android-review.googlesource.com/c/platform/frameworks/support/+/2853474). It seems they just collect progress from the `backEvent` stream (`backEvent.collect { progress = it.progress }`), but they didn't add any predictive back transition. The modifications are available from [Navigation 2.8.0-alpha02](https://developer.android.com/jetpack/androidx/releases/navigation#2.8.0-alpha02). > Let me know if you need help with the tests or reproducing the back button bug.

Thank you for offering to help, I'd really appreciate it. I've been unable to reproduce the bug on my end. I just compiled the engine and checked out this feature branch, but everything seems to be working fine for me. For reference, I'm using a Pixel 2 XL emulator - API 34, with the `android:enableOnBackInvokedCallback=""true""` flag enabled.

[Screencast from 2024-03-14 03:22:18.webm](https://github.com/flutter/flutter/assets/8436039/5f2ee95c-ab2f-4feb-9f8d-41d56e2e74f3)
 @maRci002 No problem, I'm looking into it. I'm probably going to push some commits to this PR, let me know if you don't want me to. Usually I would just leave comments with advice, but I'm trying to make sure this gets landed in time for the next release. I've pushed commits to fix the bug. The problem was for taps on the back button that Android was picking up as a back drag.  We don't have a way for that to interact with Flutter's gesture arena, so the tap and the drag both were getting detected. The solution was to stop reacting to the back gesture if its route is no longer current (because a back has happened during the drag).

I'm going to look at further cleanup for this PR and will try to push some more commits.

*Edit*: The fix is similar to what we do when navigation happens during a Cupertino back gesture: https://github.com/flutter/flutter/pull/142248 (from your issue https://github.com/flutter/flutter/issues/141268) > I've pushed commits to fix the bug. The problem was for taps on the back button that Android was picking up as a back drag. We don't have a way for that to interact with Flutter's gesture arena, so the tap and the drag both were getting detected. The solution was to stop reacting to the back gesture if its route is no longer current (because a back has happened during the drag).

Great catch! You're welcome to make modifications. Meanwhile, I've made some changes based on your review. Thank you! Later today I'll be back to getting this ready to merge. I did some investigation on the default transition when pressing the back button. I think we're fine leaving it as the default ZoomPageTransitionBuilder for now. On native, it seems to do a slightly different transition, but not one that is related to predictive back:

https://github.com/flutter/flutter/assets/389558/94c66e72-0178-4233-98ce-af3225d948fe

 I pushed some simplifications. I'm trying to reduce the public API surface to make this PR a smaller first step, and then later think about what to expose to users. However, I guess we'll need something public in widgets/routes.dart since we need to access the protected AnimationController. Tomorrow I want to play around with whether or not GestureTransitionController is the best way to expose that. One problem that needs to be addressed before landing is the issue with nested `Navigator`s. The issue stems from the fact that typically, only the first `Navigator` participates in predictive back navigation. This happens because `WidgetsBinding` notifies the binding observers in the order they registered, stopping when one returns true.

This represents a significant problem, as evidenced by issue #145159, which is already affected by this. If the engine sends a `popRoute` event, then [_WidgetsAppState.didPopRoute](https://github.com/flutter/flutter/blob/ba393198430278b6595976de84fe170f553cc728/packages/flutter/lib/src/widgets/app.dart#L1523) will be the first to handle it.

For more details, see [WidgetsBinding.handlePopRoute](https://api.flutter.dev/flutter/widgets/WidgetsBinding/handlePopRoute.html):

> This first notifies the binding observers (using [WidgetsBindingObserver.didPopRoute](https://api.flutter.dev/flutter/widgets/WidgetsBindingObserver/didPopRoute.html)), in registration order, until one returns true, meaning that it was able to handle the request (e.g. by closing a dialog box). If none return true, then the application is shut down by calling [SystemNavigator.pop](https://api.flutter.dev/flutter/services/SystemNavigator/pop.html).

To mitigate this issue, I suggest we introduce a flag similar to [Navigator.reportsRouteUpdateToEngine](https://api.flutter.dev/flutter/widgets/Navigator/reportsRouteUpdateToEngine.html). However, this time, the flag should determine whether the `Navigator` participates in routing events, such as pop actions or back gestures. Thanks for flagging that, I'll try out how it affects this PR. I've noticed the same problem with notifying in registration order. There are several places in the codebase that rely on this, and they seem to be blatantly incorrect in certain cases. > #### WidgetsBindingObserver.handleStartBackGesture /update/commit/cancel
> Receives messages from the engine and allows listening. I debated pulling this out of WidgetsBinding into its own new class, but I think it makes sense to keep it there, since it's closely related to the existing handlePop infrastructure there.

Maybe the framework could send information to the engine about whether it handles animations. For instance, if using `PredictiveBackPageTransitionsBuilder`, then use [OnBackAnimationCallback](https://developer.android.com/reference/android/window/OnBackAnimationCallback); otherwise, just use [OnBackInvokedCallback](https://developer.android.com/reference/android/window/OnBackInvokedCallback). This way, `handlePop` can be decoupled from back gesture events, however, it might not be worth implementing since predictive back route transitions will be default on Android, and Android versions <= 13 won't send these animation events. This could be built into [`SystemNavigator.setFrameworkHandlesBack`](https://api.flutter.dev/flutter/services/SystemNavigator/setFrameworkHandlesBack.html).

The [Android documentation](https://developer.android.com/guide/navigation/custom-back/predictive-back-gesture#ui-logic) advises against opting in [OnBackAnimationCallback](https://developer.android.com/reference/android/window/OnBackAnimationCallback) if it is not related to UI logic.

> If your app enables a system back callback, the predictive animations don't run and you must handle the back event. **Don't create callbacks only to run non-UI logic.**
> 
> For example, if you're intercepting back events only to log, log within the Activity or Fragment lifecycle instead.

> #### PredictiveBackRoute
> This is the glue between the routes and the material library. I didn't want to have to expose anything in the routes, but I need access to the route's AnimationController in order to drive it based on the predictive back gesture, and it's protected. This is a pretty clean solution given that.

I think using a `mixin PredictiveBackRoute` is nice solution. Anyway the `CupertinoRouteTransitionMixin` exported protected access via a [static method](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/cupertino/route.dart#L245-L254), and [I did something similar](https://github.com/flutter/flutter/blob/af2b1b382d0c60802ded056df8b5ab1f1bbb578f/packages/flutter/lib/src/widgets/routes.dart#L187-L192). The static export can benefit Android by exporting `_AndroidBackGestureTransitionController`, iOS by exporting `_CupertinoBackGestureController`, and macOS could potentially export a custom controller, as discussed in [this issue](https://github.com/flutter/flutter/issues/76478#issuecomment-783223775).

> * Final check of API changes. Parameters that are now non-nullable?

Do you mean `PageTransitionsBuilder` because it's [discussed here](https://github.com/flutter/flutter/pull/141373#discussion_r1478949008)? @maRci002 Maybe you're right about the controller. If any reviewers have an opinion please let me know. I'm taking a closer look at the organization of that.

Thanks for the pointer to the PageTransitionBuilder discussion, I left a comment there and kept the parameters non-nullable. @goderbauer @LongCatIsLooong I've changed the event handlers in WidgetsBinding to save the observer that handled a `start` and send all events for the same gesture to the same observer: https://github.com/flutter/flutter/pull/141373/commits/ac0b088ee463ad197d5dcbc3012fb07f32b680a6

Next I plan to investigate a TargetPlatform change in the middle of a gesture. Lgtm Hi @maRci002 and @justinmc !

I might be interested in helping with fixing the back gesture animation (if I have enough free time).

At first, I just wanted to copy and customize `PredictiveBackPageTransitionsBuilder` to fix the front widget abruptly disappearing mid-animation (at 35% more precisely), but now I realize that it's impossible without changing the flutter SDK itself.

Maybe I'm mistaken because I'm a flutter newbie, but it seems that it's currently impossible to access the required attributes from `Backevent` and the current phase of the animation from the transition code (the `PredictiveBackPageTransition` class).

Here's what I think we need to successfully implement the back gesture animation:

- a way to know in which phase we are in: `preCommit` / `postCommit` / `postCancel`
- `backEvent.swipeEdge`
- `backEvent.touchOffset`

Then to implement the `preCommit` phase, compute the front page's offset from `backEvent.swipeEdge` and `backEvent.touchOffset`. This way, we can move the front page from the correct side, and move it up and down as it is done natively.

For the `postCommit` phase, we can use `backEvent.swipeEdge`, `backEvent.touchOffset` and `backEvent.progress` to implement the sliding animation starting from the `backEvent.touchOffset` at commit time, to the `backEvent.swipeEdge` where the gesture started, controlled by `backEvent.progress`.

Finally, for the `postCancel` phase, we can use the same general design as the `postCommit` phase but with the same animation as the `preCommit` phase.

Right now, it seems only (`1 - backEvent.progress`) is available and therefor used for everything, without any real distinction between the 3 phases, making it impossible to solve the current issues. For reference, I'm talking about this issue that was already discussed, but it seems not yet addressed: https://github.com/flutter/flutter/pull/141373#pullrequestreview-1917897426 Ah, I actually found a hacky way to fix the animation!
It still can't distinguish if the gesture started from the left or right, or up and down gestures, but at least the animation is fluid and continuous at all time.

Here my code, copied and adapted from the SDK, but doesn't to change the SDK itself:
(There are 4 comments indicating where changes have been made)
```dart
class MyPageTransition extends PageTransitionsBuilder {
  @override
  Widget buildTransitions<T>(
    PageRoute<T> route,
    BuildContext context,
    Animation<double> animation,
    Animation<double> secondaryAnimation,
    Widget child,
  ) {
    return MyPredictiveBackGestureDetector(
      route: route,
      builder: (BuildContext context) {
        // Only do a predictive back transition when the user is performing a
        // pop gesture. Otherwise, for things like button presses or other
        // programmatic navigation, fall back to ZoomPageTransitionsBuilder.
        if (route.popGestureInProgress) {
          return MyPredictiveBackPageTransition(
            animation: animation,
            secondaryAnimation: secondaryAnimation,
            getIsCurrent: () => route.isCurrent,
            child: child,
          );
        }

        return const ZoomPageTransitionsBuilder().buildTransitions(
          route,
          context,
          animation,
          secondaryAnimation,
          child,
        );
      },
    );
  }
}

class MyPredictiveBackGestureDetector extends StatefulWidget {
  const MyPredictiveBackGestureDetector({super.key, 
    required this.route,
    required this.builder,
  });

  final WidgetBuilder builder;
  final PredictiveBackRoute route;

  @override
  State<MyPredictiveBackGestureDetector> createState() =>
      MyPredictiveBackGestureDetectorState();
}

class MyPredictiveBackGestureDetectorState extends State<MyPredictiveBackGestureDetector>
    with WidgetsBindingObserver {
  /// True when the predictive back gesture is enabled.
  bool get _isEnabled {
    return widget.route.isCurrent
        && widget.route.popGestureEnabled;
  }

  /// The back event when the gesture first started.
  PredictiveBackEvent? get startBackEvent => _startBackEvent;
  PredictiveBackEvent? _startBackEvent;
  set startBackEvent(PredictiveBackEvent? startBackEvent) {
    if (_startBackEvent != startBackEvent && mounted) {
      setState(() {
        _startBackEvent = startBackEvent;
      });
    }
  }

  /// The most recent back event during the gesture.
  PredictiveBackEvent? get currentBackEvent => _currentBackEvent;
  PredictiveBackEvent? _currentBackEvent;
  set currentBackEvent(PredictiveBackEvent? currentBackEvent) {
    if (_currentBackEvent != currentBackEvent && mounted) {
      setState(() {
        _currentBackEvent = currentBackEvent;
      });
    }
  }

  // Begin WidgetsBindingObserver.

  @override
  bool handleStartBackGesture(PredictiveBackEvent backEvent) {
    final bool gestureInProgress = !backEvent.isButtonEvent && _isEnabled;
    if (!gestureInProgress) {
      return false;
    }

    widget.route.handleStartBackGesture(progress: 1 - backEvent.progress / 10); // SOME CHANGE HERE
    startBackEvent = currentBackEvent = backEvent;
    return true;
  }

  @override
  void handleUpdateBackGestureProgress(PredictiveBackEvent backEvent) {
    widget.route.handleUpdateBackGestureProgress(progress: 1 - backEvent.progress / 10); // SOME CHANGE HERE
    currentBackEvent = backEvent;
  }

  @override
  void handleCancelBackGesture() {
    widget.route.handleCancelBackGesture();
    startBackEvent = currentBackEvent = null;
  }

  @override
  void handleCommitBackGesture() {
    widget.route.handleCommitBackGesture();
    startBackEvent = currentBackEvent = null;
  }

  // End WidgetsBindingObserver.

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addObserver(this);
  }

  @override
  void dispose() {
    WidgetsBinding.instance.removeObserver(this);
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return widget.builder(context);
  }
}

class MyPredictiveBackPageTransition extends StatelessWidget {
  const MyPredictiveBackPageTransition({
    super.key, 
    required this.animation,
    required this.secondaryAnimation,
    required this.getIsCurrent,
    required this.child,
  });

  final Animation<double> animation;
  final Animation<double> secondaryAnimation;
  final ValueGetter<bool> getIsCurrent;
  final Widget child;

  Widget _primaryAnimatedBuilder(BuildContext context, Widget? child) { // SOME CHANGE HERE
    final Size size = MediaQuery.sizeOf(context);

    return Transform.translate(
      offset: Offset(Tween(begin: size.width, end: 0.0).animate(animation).value, 0),
      child: Transform.scale(
        scale: Tween(begin: 0.5, end: 1.0).animate(animation).value,
        child: Opacity(
          opacity: Tween(begin: 0.5, end: 1.0).animate(animation).value,
          child: child,
        ),
      ),
    );
  }
  @override
  Widget build(BuildContext context) { // SOME CHANGE HERE
    return AnimatedBuilder(
      animation: animation,
      builder: _primaryAnimatedBuilder,
      child: child,
    );
  }
}

```Thanks again for the PR and sorry for my delay in getting set up to run this! Overall the approach looks good and it looks and feels good when I try it out locally with the engine PR.

A few thoughts that came up as I was reviewing this:

Currently, a user has to explicitly use AndroidBackGesturePageTransitionsBuilder in order to get the predictive back transition, right? I wonder if it should be built into any of the existing route transitions. That's probably beyond the scope of this PR, though. Do you know if this kind of predictive back transition is the default in native Android?

Do you have any specific native app that you have been using to try to match this to? If I try the predictive back transition on Google Calendar it feels more stiff than this one, and there are probably other small differences. Maybe there should be a fadeout animation. These are small details, though.

What if someone wants to make a route transition that animates itself into some UI element on the parent route? Such as in the [predictive back spec](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back#full-screen-surfaces) (video below). Maybe you should include an example of doing something like that in the examples directory and link it in your docs.


https://github.com/flutter/flutter/assets/389558/03a85144-0880-4bca-82f3-61e546e1dae8


@goderbauer FYI in case you want to review this PR related to navigation. I think the main blockers that I see now are:

 1. The use of the protected `controller.animation`, commented on below. I think this is an architecture problem we'll have to figure out.
 2. The AndroidBackGestureTransition should match the animation that I posted a gif of.

I think we'll also need to make AndroidBackGestureTransition the default transition on Android, but I can do that in a separate PR, because it may be a breaking change.

For the shared element transitions that I mentioned before, I think I can add that ability to the `animations` package as a separate PR built on top of this. It looks possible using your API.

Also, reminder that this PR will need tests at some point.

I really appreciate you working with me to get this supported! @maRci002 Thanks so much for the update and for putting in the tedious work to match the animations. Some bugs that I found:

### Back button doesn't work
If I try your example code at the top of this PR, just tapping the back button doesn't work. Sometimes nothing happens at all, and sometimes there is some weird jumpiness.

https://github.com/flutter/flutter/assets/389558/8055263e-55b9-44ac-9bb7-65eef885148a


### No opacity animation
When I swipe back slowly, there is a point at which the top route suddenly disappears. Looking at native Android it seems like there should be an opacity animation. ~~It happens at the point where releasing the gesture would commit the pop~~ Actually it seems to happen after that point. To me it seems to not be driven by the back gesture (so when the back gesture reaches the commit point, the opacity animation runs in a fixed amount of time).

https://github.com/flutter/flutter/assets/389558/ce145ca8-db8a-4f99-bdf0-fa4d71b626a9

 ### Back button doesn't work
This is still happening for me. I was able to confirm that it happens both on an emulator and a physical device. I'm using your unmodified demo code from the top of this PR.

Edit: I see no errors in the console when this happens.

[Screencast from 2024-03-11 12-03-34.webm](https://github.com/flutter/flutter/assets/389558/8beb1004-384b-42e3-bec7-535455344ec6)


### No opacity animation
Playing around with this again, I think this PR's behavior is fine as it is right now.

To answer your question: by commit point, I meant the first point during the back gesture where releasing the gesture will result in navigating back instead of canceling. This seems to coincide with vibration on native, and to come before the route disappears, like this:

```
0%  ----------------------> x% -----------------------> y% ------------------------->
Begin                       Commit and                  Route disappears
                            Vibration
``` Let me know if you need help with the tests or reproducing the back button bug. This is more of a note for reviewers (CC @LongCatIsLooong, @goderbauer, @maRci002) than a review itself. I tried to keep this PR as simple as possible for now.

### Summary of new public APIs in this PR

#### PredictiveBackPageTransitionsBuilder
This what users will use to get predictive back route transitions. Note that it's opt-in right now.

```dart
    return MaterialApp(
      theme: ThemeData(
        pageTransitionsTheme: const PageTransitionsTheme(
          builders: {
            TargetPlatform.android: PredictiveBackPageTransitionsBuilder(),
          },
        ),
      ),
      // ...
    );
```

#### SystemChannels.backGesture
A new platform channel for handling predictive back.

#### PredictiveBackEvent (and SwipeEdge)
The data that's sent from the engine to the framework during a predictive back gesture. This needs to be public because it's used in both the material and services libraries.

#### WidgetsBindingObserver.handleStartBackGesture /update/commit/cancel
Receives messages from the engine and allows listening. I debated pulling this out of WidgetsBinding into its own new class, but I think it makes sense to keep it there, since it's closely related to the existing handlePop infrastructure there.

#### PredictiveBackRoute
This is the glue between the routes and the material library. I didn't want to have to expose anything in the routes, but I need access to the route's AnimationController in order to drive it based on the predictive back gesture, and it's protected. This is a pretty clean solution given that.

### TODOs for me
 * More tests.
 * ~~Double verify the behavior of this PR on other platforms.~~
 * Verify [my existing work](https://github.com/flutter/packages/pull/6321) on OpenContainer transitions works with the updated PR.
 * ~~Final check of API changes. Parameters that are now non-nullable?~~
 * ~~In the docs make sure I've thoroughly warned users that it's Android-only, and will fallback otherwise.~~ only looked at services and widgets so far.","Thanks again for the PR and sorry for my delay in getting set up to run this! Overall the approach looks good and it looks and feels good when I try it out locally with the engine PR.

A few thoughts that came up as I was reviewing this:

Currently, a user has to explicitly use AndroidBackGesturePageTransitionsBuilder in order to get the predictive back transition, right? I wonder if it should be built into any of the existing route transitions. That's probably beyond the scope of this PR, though. Do you know if this kind of predictive back transition is the default in native Android?

Do you have any specific native app that you have been using to try to match this to? If I try the predictive back transition on Google Calendar it feels more stiff than this one, and there are probably other small differences. Maybe there should be a fadeout animation. These are small details, though.

What if someone wants to make a route transition that animates itself into some UI element on the parent route? Such as in the [predictive back spec](https://developer.android.com/design/ui/mobile/guides/patterns/predictive-back#full-screen-surfaces) (video below). Maybe you should include an example of doing something like that in the examples directory and link it in your docs.


https://github.com/flutter/flutter/assets/389558/03a85144-0880-4bca-82f3-61e546e1dae8


@goderbauer FYI in case you want to review this PR related to navigation. I think the main blockers that I see now are:

 1. The use of the protected `controller.animation`, commented on below. I think this is an architecture problem we'll have to figure out.
 2. The AndroidBackGestureTransition should match the animation that I posted a gif of.

I think we'll also need to make AndroidBackGestureTransition the default transition on Android, but I can do that in a separate PR, because it may be a breaking change.

For the shared element transitions that I mentioned before, I think I can add that ability to the `animations` package as a separate PR built on top of this. It looks possible using your API.

Also, reminder that this PR will need tests at some point.

I really appreciate you working with me to get this supported! @maRci002 Thanks so much for the update and for putting in the tedious work to match the animations. Some bugs that I found:

### Back button doesn't work
If I try your example code at the top of this PR, just tapping the back button doesn't work. Sometimes nothing happens at all, and sometimes there is some weird jumpiness.

https://github.com/flutter/flutter/assets/389558/8055263e-55b9-44ac-9bb7-65eef885148a


### No opacity animation
When I swipe back slowly, there is a point at which the top route suddenly disappears. Looking at native Android it seems like there should be an opacity animation. ~~It happens at the point where releasing the gesture would commit the pop~~ Actually it seems to happen after that point. To me it seems to not be driven by the back gesture (so when the back gesture reaches the commit point, the opacity animation runs in a fixed amount of time).

https://github.com/flutter/flutter/assets/389558/ce145ca8-db8a-4f99-bdf0-fa4d71b626a9

 ### Back button doesn't work
This is still happening for me. I was able to confirm that it happens both on an emulator and a physical device. I'm using your unmodified demo code from the top of this PR.

Edit: I see no errors in the console when this happens.

[Screencast from 2024-03-11 12-03-34.webm](https://github.com/flutter/flutter/assets/389558/8beb1004-384b-42e3-bec7-535455344ec6)


### No opacity animation
Playing around with this again, I think this PR's behavior is fine as it is right now.

To answer your question: by commit point, I meant the first point during the back gesture where releasing the gesture will result in navigating back instead of canceling. This seems to coincide with vibration on native, and to come before the route disappears, like this:

```
0%  ----------------------> x% -----------------------> y% ------------------------->
Begin                       Commit and                  Route disappears
                            Vibration
``` Let me know if you need help with the tests or reproducing the back button bug. This is more of a note for reviewers (CC @LongCatIsLooong, @goderbauer, @maRci002) than a review itself. I tried to keep this PR as simple as possible for now.

### Summary of new public APIs in this PR

#### PredictiveBackPageTransitionsBuilder
This what users will use to get predictive back route transitions. Note that it's opt-in right now.

```dart
    return MaterialApp(
      theme: ThemeData(
        pageTransitionsTheme: const PageTransitionsTheme(
          builders: {
            TargetPlatform.android: PredictiveBackPageTransitionsBuilder(),
          },
        ),
      ),
      // ...
    );
```

#### SystemChannels.backGesture
A new platform channel for handling predictive back.

#### PredictiveBackEvent (and SwipeEdge)
The data that's sent from the engine to the framework during a predictive back gesture. This needs to be public because it's used in both the material and services libraries.

#### WidgetsBindingObserver.handleStartBackGesture /update/commit/cancel
Receives messages from the engine and allows listening. I debated pulling this out of WidgetsBinding into its own new class, but I think it makes sense to keep it there, since it's closely related to the existing handlePop infrastructure there.

#### PredictiveBackRoute
This is the glue between the routes and the material library. I didn't want to have to expose anything in the routes, but I need access to the route's AnimationController in order to drive it based on the predictive back gesture, and it's protected. This is a pretty clean solution given that.

### TODOs for me
 * More tests.
 * ~~Double verify the behavior of this PR on other platforms.~~
 * Verify [my existing work](https://github.com/flutter/packages/pull/6321) on OpenContainer transitions works with the updated PR.
 * ~~Final check of API changes. Parameters that are now non-nullable?~~
 * ~~In the docs make sure I've thoroughly warned users that it's Android-only, and will fallback otherwise.~~ only looked at services and widgets so far.","This pull request introduces Android's predictive back feature for routes. By leveraging the [OnBackAnimationCallback](https://developer.android.com/reference/android/window/OnBackAnimationCallback) API, this implementation gathers real-time information about back gestures, enabling the framework to dynamically update route transition animations. The callbacks for this feature are forwarded to the framework as detailed in flutter/engine#49093 PR.

Here's a brief video demo showcasing the Back Preview animation.

https://github.com/flutter/flutter/assets/8436039/96b6dc20-89c9-45db-b8b4-aec7e996477b

<details><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MainApp());
}

class MainApp extends StatelessWidget {
  const MainApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        brightness: Brightness.light,
        pageTransitionsTheme: const PageTransitionsTheme(
          builders: {
            TargetPlatform.android: PredictiveBackPageTransitionsBuilder(),
          },
        ),
      ),
      home: const FirstScreen(),
    );
  }
}

class FirstScreen extends StatelessWidget {
  const FirstScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('First Screen'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            Navigator.of(context).push(
              MaterialPageRoute(builder: (_) => const SecondScreen()),
            );
          },
          child: const Text('Go to Second Screen'),
        ),
      ),
    );
  }
}

class SecondScreen extends StatelessWidget {
  const SecondScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Theme(
      data: ThemeData(brightness: Brightness.dark),
      child: Scaffold(
        appBar: AppBar(
          title: const Text('Second Screen'),
        ),
        body: const Center(
          child: Text('Hello, Predictive back!'),
        ),
      ),
    );
  }
}
```

</details>

### Resources

Closes #131961
Depends on engine PR flutter/engine#49093

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
","@maRci002 could you use [CupertinoRouteTransitionMixin.popGestureEnabled](https://main-api.flutter.dev/flutter/cupertino/CupertinoRouteTransitionMixin/popGestureEnabled.html) here instead of making this public? If the route doesn't mix in CupertinoRouteTransitionMixin then I think the answer is false anway. If you merge master into this PR I think you'll get this change. Nit: Would it be worth sharing any code between this and cupertino/route.dart? I noticed some similarities in passing, but I haven't compared them side by side. Could be fine as-is. Nit just to be more succinct: ""Enum representing"" => ""Represents"" Nit: maybe ""swipe"" => ""swipe gesture"" Nit: In both of these, I would change ""edge swipe"" to just ""swipe"". I think it makes them more readable. By ""absolute"" do you mean ""global""? The first paragraph should be a single sentence (see the [styleguide](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#dartdoc-specific-requirements)). I think you can just break a new paragraph at the period here and it's fine. Nit: I think typically there should be an empty line of `///` before the list here. Reading these two points make me wonder when the vibration happens and the arrow appears. Does 0 mean that the vibration has happened? On my phone, it seems like I have to drag a little bit before the vibration happens.

Maybe it's worth it to add a paragraph or bullet point about the point at which releasing the gesture will trigger a pop versus trigger a cancel. Or maybe this is something that Android is determining internally and we don't really know? And this threshold seems to be different than the ""vibration"" threshold that I was talking about in my comment above. I would move the comma like this: ""In practice, when the back button is pressed, for instance if the user..."" Typically these long links should be on their own line. I'm embarrassed, thanks for improving the efficiency :grin: . Why are these no longer nullable? Can you make this animation match the Android default predictive back transition (gif below)? The incoming route should also be animating, which should be possible using secondaryAnimation.

![default_android_pback_transition](https://github.com/flutter/flutter/assets/389558/cfbb6235-4ea1-4be4-b1a4-0ba40ee834e3)

 This should be the default for Android in PageTransitionsTheme, but I guess we should probably do that in a separate PR, since it could be a breaking change. Could this be moved to PageRoute itself and shared in both places from there? Reminder to add docs here and for the public members. I say no capitalization needed: ""gesture navigation"". Since it's not a specific term that's defined elsewhere. ```suggestion
  int get hashCode => Object.hash(
    touchX,
    touchY,
    progress,
    swipeEdge,
  );
``` Generally I worry about these classes that interact with platform channels getting too big, so I think these should be split out into their own class that is specific to predictive back gestures.

I'm remembering that I mentioned this on the engine PR too (https://github.com/flutter/engine/pull/49093#discussion_r1479028490). I would say yes, you should create an entirely separate channel for this. You are calling addObserver in initState of AndroidBackGestureDetector. Is it guaranteed that the observer that you want will be called here?

I wonder if there is a better way for this use case. Maybe by finding the current route of the navigator or something?

handlePopRoute (above) also suffers from this, though, so this is an existing problem, and I guess it's acceptable if there is no easy way around it right now. Hmm this is a red flag. I think driving the route's animation in a widget like this is probably not intended...

For the record, TransitionRoute drives its animations in places like this: https://github.com/flutter/flutter/blob/84b5e799d3de03081ad0bcf770e84204020df8a0/packages/flutter/lib/src/widgets/routes.dart#L295

I wonder if you could somehow listen for the back gesture messages and update the controller from within the route? What if you split out just a simple ""gesture detector"" widget with callback parameters startBackGesture, updateBackGestureProgress, commitBackGesture, and cancelBackGesture? I feel like that might be nice to work with, even if it's just private. If I just press the back button on a native Android predictive back route, it doesn't look like the zoom transition. It looks like a sped up version of the predictive back animation, I think.

[Screen_recording_20240220_154728.webm](https://github.com/flutter/flutter/assets/389558/d827422f-f6a4-4042-86c9-1161f6db527e)
 We should watch out for this being a breaking change. If so it will be a very easy migration for users, though. Formatting:

```suggestion
  PageRoute<T> route,
  BuildContext context,
  Animation<double> animation,
  Animation<double> secondaryAnimation,
  Widget child,
  AndroidBackEvent? startBackEvent,
  AndroidBackEvent? currentBackEvent,
);
``` Any thoughts on this? ""on"" => ""representing"""
158932,2024-11-14T16:21:11Z,2024-11-15T20:04:42Z,mkustermann,1,2,8,577,12,3,2,"['tool', 'a: desktop']",92257.0,0,99811.0,0,0,0,0,3535833.011394,,1,8,0,False,['mkustermann'],"Thanks, @bkonyi !LGTM",LGTM,"Currently the `NativeAsset` target in flutter tools is responsible for two things:

  * performing the dart build (in the app as well as all transitive pub dependencies)
  * taking output (shared libraries) from this build and copying them around

This intermingling of responsibilities leads to more complex code and potentially unnecessary work: If the source code changed (e.g. `.c` files change) we have to run the dart build again. But doing so may result in the same shared libraries (e.g. adding comments to the `.c` code). Currently we're going to copy the shared libraries despite them having not changed, which then may cause upstream things to be dirtied (if it's based on timestamp of files) and re-built.

Instead this PR splits this `NativeAsset` into the two orthogonal pieces

* `DartBuild` target that is responsible for the dart build
* `InstallCodeAssets` that is responsible for copying shared libraries to the right place and producing a `native_assets.yaml`.

This decopuling is also prepration for a future where a dart build can produce other kinds of assets (e.g. data assets) and is used in the web build as well. (The web build would use `DartBuild` but not `InstalCodeAssets`).",Nit: newline between these constructors. Done.
158993,2024-11-15T19:04:40Z,2024-11-15T19:05:47Z,auto-submit[bot],0,0,1,22,2,1,1,['revert of'],,1,69.0,0,0,0,0,3539367.619846,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#158967
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: matanlurey
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: `--run-skipped` doesn't work in this repository (https://github.com/flutter/flutter/issues/158972).
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: matanlurey
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {andrewkolos}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
I have no idea if this will work, but `6_6` is currently the suite that seems to have the most problems.

Towards https://github.com/flutter/flutter/issues/158560.
<!-- end_revert_body -->
",
158967,2024-11-15T00:00:05Z,2024-11-15T00:45:50Z,matanlurey,1,0,2,22,2,1,1,[],68596.0,0,68678.0,0,0,0,0,3539433.673556,,1,2,0,False,['matanlurey'],Reason for revert: `--run-skipped` doesn't work in this repository (https://github.com/flutter/flutter/issues/158972).,,"I have no idea if this will work, but `6_6` is currently the suite that seems to have the most problems.

Towards https://github.com/flutter/flutter/issues/158560.",
151132,2024-07-01T19:57:08Z,2024-07-02T16:17:41Z,goderbauer,4,0,1,27,6,1,1,"['framework', 'a: accessibility', 'autosubmit']",3.0,0,11833026.0,0,0,0,0,3540063.238032,,0,1,0,False,"['srawlins', 'goderbauer', 'flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#tests) to this rule, contact ""@test-exemption-reviewer"" in the #hackers channel in [Chat](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it! Use Discord!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Would you mind opening a `comment_references` bug at https://github.com/dart-lang/linter/issues? You don't need a minimal repro. I suspect it's the newline in the middle but we can figure out what's going on. Done: https://github.com/dart-lang/sdk/issues/57104 test-exempt: configuration change",,"Part of https://github.com/flutter/flutter/issues/150800

Issues encountered:

- [ ] `comment_references` thinks this is an (invalid) reference; it's not a reference at all: https://github.com/flutter/flutter/blob/44622dac46a954b38111fc6ec1de6e2c74065de3/packages/flutter/lib/src/semantics/semantics.dart#L2424-L2425",
158970,2024-11-15T00:39:40Z,2024-11-15T15:27:24Z,jmagman,0,0,1,2,1,1,1,[],,0,53265.0,0,0,0,0,3552473.750812,,0,1,0,False,[],,,"Fixes https://github.com/flutter/flutter/issues/158951

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158378,2024-11-08T15:01:36Z,2024-11-11T18:44:16Z,engine-flutter-autoroll,11,0,8,2,1,1,1,[],2688.0,0,608129.0,0,0,0,0,3550693.770166,,0,8,0,False,"['reidbaker', 'matanlurey', 'auto-submit[bot]', 'camsim99', 'bkonyi', 'christopherfujino', 'engine-flutter-autoroll']","auto label is removed for flutter/flutter/158378, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8731826680540516257) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158378, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8731826680540516257) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 AutoRoller is stopped; closing the active roll. Seeing this failure from plugin_dependencies_test.dart in the framework:

```sh
[2024-11-08 09:24:18.258412] [STDOUT] ═════════════════╡ ••• Build plugin A example Android app ••• ╞═════════════════
[2024-11-08 09:24:18.258439] [STDOUT] 
[2024-11-08 09:24:18.258699] [STDOUT] Executing ""/Volumes/Work/s/w/ir/x/w/rc/tmpjbdca2y9/flutter sdk/bin/flutter build apk --target-platform android-arm --ci --debug-logs-dir=/Volumes/Work/s/w/ir/x/w/rc/flutter_logs_dir"" in ""/Volumes/Work/s/w/ir/x/t/flutter_plugin_dependencies.kGQbcR/plugin_a/example"" with environment {BOT: true, LANG: en_US.UTF-8}
[2024-11-08 09:24:19.763637] [STDOUT] stdout: Downloading android-arm-profile/darwin-x64 tools...              1,241ms
[2024-11-08 09:24:20.189095] [STDOUT] stdout: Downloading android-arm-release/darwin-x64 tools...                227ms
[2024-11-08 09:24:20.612530] [STDOUT] stdout: Downloading android-arm64-profile/darwin-x64 tools...              247ms
[2024-11-08 09:24:21.018244] [STDOUT] stdout: Downloading android-arm64-release/darwin-x64 tools...              213ms
[2024-11-08 09:24:21.418505] [STDOUT] stdout: Downloading android-x64-profile/darwin-x64 tools...                223ms
[2024-11-08 09:24:21.829678] [STDOUT] stdout: Downloading android-x64-release/darwin-x64 tools...                218ms
[2024-11-08 09:24:22.617304] [STDOUT] stdout: 
[2024-11-08 09:24:45.525262] [STDOUT] stdout: Running Gradle task 'assembleRelease'...                        
[2024-11-08 09:24:45.526159] [STDOUT] stderr: Your project is configured with Android NDK 26.1.10909125, but the following plugin(s) depend on a different Android NDK version:
[2024-11-08 09:24:45.526355] [STDOUT] stderr: - integration_test requires Android NDK 27.0.12077973
[2024-11-08 09:24:45.526458] [STDOUT] stderr: - plugin_a requires Android NDK 27.0.12077973
[2024-11-08 09:24:45.526511] [STDOUT] stderr: - plugin_b requires Android NDK 27.0.12077973
[2024-11-08 09:24:45.526623] [STDOUT] stderr: - plugin_d requires Android NDK 27.0.12077973
[2024-11-08 09:24:45.526666] [STDOUT] stderr: Fix this issue by using the highest Android NDK version (they are backward compatible).
[2024-11-08 09:24:45.527108] [STDOUT] stderr: Add the following to /Volumes/Work/s/w/ir/x/t/flutter_plugin_dependencies.kGQbcR/plugin_a/example/android/app/build.gradle.kts:
[2024-11-08 09:24:45.527165] [STDOUT] stderr: 
[2024-11-08 09:24:45.527268] [STDOUT] stderr:     android {
[2024-11-08 09:24:45.527469] [STDOUT] stderr:         ndkVersion = ""27.0.12077973""
[2024-11-08 09:24:45.527556] [STDOUT] stderr:         ...
[2024-11-08 09:24:45.527750] [STDOUT] stderr:     }
[2024-11-08 09:24:45.527813] [STDOUT] stderr: 
[2024-11-08 09:24:57.777666] [STDOUT] stdout: Font asset ""MaterialIcons-Regular.otf"" was tree-shaken, reducing it from 1645184 to 1324 bytes (99.9% reduction). Tree-shaking can be disabled by providing the --no-tree-shake-icons flag when building your app.
[2024-11-08 09:25:39.482461] [STDOUT] stdout: Running Gradle task 'assembleRelease'...                           76.8s
[2024-11-08 09:25:39.601726] [STDOUT] stdout: ✓ Built build/app/outputs/flutter-apk/app-release.apk (6.2MB)
[2024-11-08 09:25:39.617757] [STDOUT] 
[2024-11-08 09:25:39.617821] [STDOUT]
```
@matanlurey digging into this but do you have any insights here? not sure why packages would impact this test...looks like it is just building an app Unfortunately it's just really hard reading our error logs, but [here](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8731826680540516257/+/u/run_test.dart_for_tool_integration_tests_shard_and_subshard_2_9/stdout) is the issue:

```
            * What went wrong:
            Execution failed for task ':app:compressDebugAssets'.
            > A failure occurred while executing com.android.build.gradle.internal.tasks.CompressAssetsWorkAction
               > Java heap space
```

I previously filed https://github.com/flutter/flutter/issues/157640, perhaps @bkonyi we should raise priority on this?

/cc @christopherfujino as well from an infra-POV. > Unfortunately it's just really hard reading our error logs, but [here](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8731826680540516257/+/u/run_test.dart_for_tool_integration_tests_shard_and_subshard_2_9/stdout) is the issue:
> 
> ```
>             * What went wrong:
>             Execution failed for task ':app:compressDebugAssets'.
>             > A failure occurred while executing com.android.build.gradle.internal.tasks.CompressAssetsWorkAction
>                > Java heap space
> ```
> 
> I previously filed #157640, perhaps @bkonyi we should raise priority on this?
> 
> /cc @christopherfujino as well from an infra-POV.

I had tried landing https://github.com/flutter/flutter/pull/158330 yesterday to resolve this, but apparently it didn't help... > > Unfortunately it's just really hard reading our error logs, but [here](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8731826680540516257/+/u/run_test.dart_for_tool_integration_tests_shard_and_subshard_2_9/stdout) is the issue:
> > ```
> >             * What went wrong:
> >             Execution failed for task ':app:compressDebugAssets'.
> >             > A failure occurred while executing com.android.build.gradle.internal.tasks.CompressAssetsWorkAction
> >                > Java heap space
> > ```
> > 
> > 
> >     
> >       
> >     
> > 
> >       
> >     
> > 
> >     
> >   
> > I previously filed #157640, perhaps @bkonyi we should raise priority on this?
> > /cc @christopherfujino as well from an infra-POV.
> 
> I had tried landing #158330 yesterday to resolve this, but apparently it didn't help...

I don't think that change would have affected this test, as you edited `packages/flutter_tools/test/integration.shard/test_data/deferred_components_project.dart`, which I don't think [this test](https://github.com/flutter-pub-roller-bot/flutter/blob/packages-autoroller-branch-161/packages/flutter_tools/test/integration.shard/android_plugin_skip_unsupported_test.dart#L164) depends on. > > > Unfortunately it's just really hard reading our error logs, but [here](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8731826680540516257/+/u/run_test.dart_for_tool_integration_tests_shard_and_subshard_2_9/stdout) is the issue:
> > > ```
> > >             * What went wrong:
> > >             Execution failed for task ':app:compressDebugAssets'.
> > >             > A failure occurred while executing com.android.build.gradle.internal.tasks.CompressAssetsWorkAction
> > >                > Java heap space
> > > ```
> > > 
> > > 
> > >     
> > >       
> > >     
> > > 
> > >       
> > >     
> > > 
> > >     
> > >   
> > > I previously filed #157640, perhaps @bkonyi we should raise priority on this?
> > > /cc @christopherfujino as well from an infra-POV.
> > 
> > 
> > I had tried landing #158330 yesterday to resolve this, but apparently it didn't help...
> 
> I don't think that change would have affected this test, as you edited `packages/flutter_tools/test/integration.shard/test_data/deferred_components_project.dart`, which I don't think [this test](https://github.com/flutter-pub-roller-bot/flutter/blob/packages-autoroller-branch-161/packages/flutter_tools/test/integration.shard/android_plugin_skip_unsupported_test.dart#L164) depends on.

cc @reidbaker regarding not globally bumping the heap limit (my concern about not globally bumping it would be that we would be doing whack-a-mole). I can understand not globally bumping _if_ we had the tools to more easily debug this, i.e. this failure was flagged as such and there was a simple process to bump it (like in google3). Since we don't have that environment it seems very costly to just wait until the next Java process OOMs. I think the cause of this error is not going to be fixed with more memory but we are welcome to try to bump everything and see if it helps.  Going to merge this. Assuming further steps can be discussed in https://github.com/flutter/flutter/issues/157640 but let me know if that's not the case!",,"
https://github.com/flutter/packages/compare/bb5a25815cae...72356fda4684

2024-11-08 stuartmorgan@google.com [various] Update example app minSdkVersions (flutter/packages#8035)
2024-11-07 32538273+ValentinVignal@users.noreply.github.com [go_router] Activate leak testing (flutter/packages#7546)
2024-11-07 louisehsu@google.com [in_app_purchase_storekit] Add restore purchases and receipts (flutter/packages#7964)
2024-11-07 10687576+bparrishMines@users.noreply.github.com [interactive_media_ads] Adds remaining methods for internal wrapper of the Android native `BaseManager` (flutter/packages#7943)
2024-11-07 58529443+srujzs@users.noreply.github.com [google_sign_in/google_identity_services] Clear-up documentation of callbacks in various APIs and uses of those APIs (flutter/packages#8029)
2024-11-07 alex@mariuti.com [flutter_svg] wasm compatibility (flutter/packages#8014)
2024-11-06 jessiewong401@gmail.com Applied Gradle Plugins Declaratively for Multiple Plugin Example Apps (Part 2) (flutter/packages#8019)
2024-11-06 engine-flutter-autoroll@skia.org Roll Flutter from 29d40f7f6826 to 73546b3b71a7 (20 revisions) (flutter/packages#8028)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158984,2024-11-15T13:38:57Z,2024-11-15T15:23:24Z,mkustermann,1,0,2,399,5,1,1,"['tool', 'a: desktop']",6261.0,0,6267.0,0,0,0,0,3552715.402592,,0,2,0,False,['mkustermann'],"Thanks, @mraleph !",,"After the dart build is done, the flutter tool has to bundle the produced shared libraries, which it does that by copying them around.

Though the code assumed that all code assets are shared libraries to be bundled, whereas in fact one can have code assets without any actual code (ones that are installed on the target system already or artificial code assets whose symbols get resolved from executable / process).

=> Using non-bundled code assets currently results in null pointer exceptions and/or cast errors.
=> We update the copy code to only operate on code assets that have a shared library to bundle.

We also update the copy routines by removing copy&past'ed - but slightly different - printing code into the shared caller function.",
158980,2024-11-15T11:24:22Z,2024-11-15T14:05:43Z,mkustermann,1,0,2,294,8,1,1,"['tool', 'a: desktop']",9658.0,0,9681.0,0,0,0,0,3557377.819585,,0,2,0,False,['mkustermann'],"Thanks, @mraleph !",,"In release builds linking of native assets is enabled. The build step is only a temprary step, it's output is given to the link step which then returns all final assets (effectively a map-reduce system). Assets that aren't sent to a specific linker could be conceptually viewed as sent to a linker that will emit it's input as-is.

=> The code currently took output of build & link step and therefore accumulated assets that aren't explicitly sent to a linker twice.

=> This led to performing work twice for those (e.g. copying them twice)

This PR changes this such that if linking mode is enabled, we only rely on the output of the link phase.
That in return means many tests that mock the native asset builds need to be updated to mock the
output of the link phase.",
158375,2024-11-08T12:28:04Z,2024-11-08T15:32:29Z,engine-flutter-autoroll,2,0,3,4,2,1,1,"['engine', 'autosubmit']",3335.0,0,608073.0,0,0,0,0,3559963.890479,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158375, due to - The status or check suite [Mac_x64 tool_tests_commands](https://cr-buildbucket.appspot.com/build/8731836348732075313) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158375, due to - The status or check suite [Mac_x64 tool_tests_commands](https://cr-buildbucket.appspot.com/build/8731836348732075313) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/44d788f4651b...a08bd5a07c2a

2024-11-08 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from pG2aukmcwvp71aKuS... to aLUsXLv5iMZFOgcAS... (flutter/engine#56450)
2024-11-08 skia-flutter-autoroll@skia.org Roll Skia from 7ae36ecfe93d to d0ee80612f86 (2 revisions) (flutter/engine#56448)
2024-11-08 codefu@google.com Move off deprecated upload-artifactv3 (flutter/engine#56439)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from pG2aukmcwvp7 to aLUsXLv5iMZF

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158362,2024-11-08T02:12:36Z,2024-11-08T02:47:31Z,engine-flutter-autoroll,0,0,3,2,1,1,1,"['engine', 'autosubmit']",,0,606113.0,0,0,0,0,3598852.513102,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/8e19915c19fc...44d788f4651b

2024-11-08 jonahwilliams@google.com [Impeller] Add support for ImageFilter.shader (flutter/engine#53490)
2024-11-07 skia-flutter-autoroll@skia.org Roll Skia from 2ed9606702f1 to 7ae36ecfe93d (4 revisions) (flutter/engine#56442)
2024-11-07 skia-flutter-autoroll@skia.org Roll Dart SDK from 6a3684b96121 to 50c620224f27 (1 revision) (flutter/engine#56438)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158965,2024-11-14T23:46:30Z,2024-11-15T01:38:26Z,matanlurey,3,1,3,49,1,1,1,['tool'],3632.0,0,6717.0,0,0,0,0,3602215.970036,,1,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158965, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=158965) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158965, due to - The status or check suite [Mac tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8731246567745933425) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158965, due to - The status or check suite [Mac_x64 framework_tests_misc](https://cr-buildbucket.appspot.com/build/8731246568037834817) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,Closes https://github.com/flutter/flutter/issues/158962.,Ubernit: `DeferredComponentsConfig`
158966,2024-11-14T23:51:43Z,2024-11-15T01:34:49Z,matanlurey,0,0,1,6,1,2,2,['tool'],,0,6187.0,0,0,0,0,3602432.988717,,0,1,0,False,[],LGTM,LGTM,"Towards https://github.com/flutter/flutter/issues/158560.

Still occurred twice in the last 24h:

https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20tool_integration_tests_6_6/42/overview
https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20tool_integration_tests_6_6/44/overview

Let's continue to debug why these are so troublesome, but not block the tree doing so.",
157473,2024-10-23T21:59:03Z,2024-11-15T00:47:00Z,dependabot[bot],4,0,3,6,3,1,1,[],2.0,0,1910879.0,0,0,0,0,3605301.669438,,0,3,0,False,"['auto-submit[bot]', 'dependabot[bot]']","Dependabot tried to add `@christopherfujino`, `@jmagman` and `@keyonghan` as reviewers to this PR, but received the following error from GitHub:

```
POST https://api.github.com/repos/flutter/flutter/pulls/157473/requested_reviewers: 422 - Reviews may only be requested from collaborators. One or more of the users or teams you specified is not a collaborator of the flutter/flutter repository. // See: https://docs.github.com/rest/pulls/review-requests#request-reviewers-for-a-pull-request
``` auto label is removed for flutter/flutter/157473, due to - The status or check suite [Windows build_tests_1_8](https://cr-buildbucket.appspot.com/build/8733250045400264705) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/157473, Failed to merge flutter/flutter/157473 with Pull request flutter/flutter/157473 could not be merged: Required status check ""Merge Queue Guard"" is expected.. auto label is removed for flutter/flutter/157473, Failed to merge flutter/flutter/157473 with Pull request flutter/flutter/157473 could not be merged: Required status check ""Merge Queue Guard"" is expected..",,"Bumps [actions/checkout](https://github.com/actions/checkout) from 4.2.1 to 4.2.2.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/checkout/releases"">actions/checkout's releases</a>.</em></p>
<blockquote>
<h2>v4.2.2</h2>
<h2>What's Changed</h2>
<ul>
<li><code>url-helper.ts</code> now leverages well-known environment variables by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1941"">actions/checkout#1941</a></li>
<li>Expand unit test coverage for <code>isGhes</code> by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1946"">actions/checkout#1946</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v4.2.1...v4.2.2"">https://github.com/actions/checkout/compare/v4.2.1...v4.2.2</a></p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>
<blockquote>
<h1>Changelog</h1>
<h2>v4.2.2</h2>
<ul>
<li><code>url-helper.ts</code> now leverages well-known environment variables by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1941"">actions/checkout#1941</a></li>
<li>Expand unit test coverage for <code>isGhes</code> by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1946"">actions/checkout#1946</a></li>
</ul>
<h2>v4.2.1</h2>
<ul>
<li>Check out other refs/* by commit if provided, fall back to ref by <a href=""https://github.com/orhantoy""><code>@​orhantoy</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1924"">actions/checkout#1924</a></li>
</ul>
<h2>v4.2.0</h2>
<ul>
<li>Add Ref and Commit outputs by <a href=""https://github.com/lucacome""><code>@​lucacome</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1180"">actions/checkout#1180</a></li>
<li>Dependency updates by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a>- <a href=""https://redirect.github.com/actions/checkout/pull/1777"">actions/checkout#1777</a>, <a href=""https://redirect.github.com/actions/checkout/pull/1872"">actions/checkout#1872</a></li>
</ul>
<h2>v4.1.7</h2>
<ul>
<li>Bump the minor-npm-dependencies group across 1 directory with 4 updates by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1739"">actions/checkout#1739</a></li>
<li>Bump actions/checkout from 3 to 4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1697"">actions/checkout#1697</a></li>
<li>Check out other refs/* by commit by <a href=""https://github.com/orhantoy""><code>@​orhantoy</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1774"">actions/checkout#1774</a></li>
<li>Pin actions/checkout's own workflows to a known, good, stable version. by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1776"">actions/checkout#1776</a></li>
</ul>
<h2>v4.1.6</h2>
<ul>
<li>Check platform to set archive extension appropriately by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1732"">actions/checkout#1732</a></li>
</ul>
<h2>v4.1.5</h2>
<ul>
<li>Update NPM dependencies by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1703"">actions/checkout#1703</a></li>
<li>Bump github/codeql-action from 2 to 3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1694"">actions/checkout#1694</a></li>
<li>Bump actions/setup-node from 1 to 4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1696"">actions/checkout#1696</a></li>
<li>Bump actions/upload-artifact from 2 to 4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1695"">actions/checkout#1695</a></li>
<li>README: Suggest <code>user.email</code> to be <code>41898282+github-actions[bot]@users.noreply.github.com</code> by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1707"">actions/checkout#1707</a></li>
</ul>
<h2>v4.1.4</h2>
<ul>
<li>Disable <code>extensions.worktreeConfig</code> when disabling <code>sparse-checkout</code> by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1692"">actions/checkout#1692</a></li>
<li>Add dependabot config by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1688"">actions/checkout#1688</a></li>
<li>Bump the minor-actions-dependencies group with 2 updates by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1693"">actions/checkout#1693</a></li>
<li>Bump word-wrap from 1.2.3 to 1.2.5 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1643"">actions/checkout#1643</a></li>
</ul>
<h2>v4.1.3</h2>
<ul>
<li>Check git version before attempting to disable <code>sparse-checkout</code> by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1656"">actions/checkout#1656</a></li>
<li>Add SSH user parameter by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1685"">actions/checkout#1685</a></li>
<li>Update <code>actions/checkout</code> version in <code>update-main-version.yml</code> by <a href=""https://github.com/jww3""><code>@​jww3</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1650"">actions/checkout#1650</a></li>
</ul>
<h2>v4.1.2</h2>
<ul>
<li>Fix: Disable sparse checkout whenever <code>sparse-checkout</code> option is not present <a href=""https://github.com/dscho""><code>@​dscho</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1598"">actions/checkout#1598</a></li>
</ul>
<h2>v4.1.1</h2>
<ul>
<li>Correct link to GitHub Docs by <a href=""https://github.com/peterbe""><code>@​peterbe</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1511"">actions/checkout#1511</a></li>
<li>Link to release page from what's new section by <a href=""https://github.com/cory-miller""><code>@​cory-miller</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1514"">actions/checkout#1514</a></li>
</ul>
<h2>v4.1.0</h2>
<ul>
<li><a href=""https://redirect.github.com/actions/checkout/pull/1396"">Add support for partial checkout filters</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/checkout/commit/11bd71901bbe5b1630ceea73d27597364c9af683""><code>11bd719</code></a> Prepare 4.2.2 Release (<a href=""https://redirect.github.com/actions/checkout/issues/1953"">#1953</a>)</li>
<li><a href=""https://github.com/actions/checkout/commit/e3d2460bbb42d7710191569f88069044cfb9d8cf""><code>e3d2460</code></a> Expand unit test coverage (<a href=""https://redirect.github.com/actions/checkout/issues/1946"">#1946</a>)</li>
<li><a href=""https://github.com/actions/checkout/commit/163217dfcd28294438ea1c1c149cfaf66eec283e""><code>163217d</code></a> <code>url-helper.ts</code> now leverages well-known environment variables. (<a href=""https://redirect.github.com/actions/checkout/issues/1941"">#1941</a>)</li>
<li>See full diff in <a href=""https://github.com/actions/checkout/compare/eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871...11bd71901bbe5b1630ceea73d27597364c9af683"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=4.2.1&new-version=4.2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",
158354,2024-11-07T23:37:41Z,2024-11-08T00:26:24Z,engine-flutter-autoroll,0,0,4,2,1,1,1,"['engine', 'autosubmit']",,0,607822.0,0,0,0,0,3606442.117454,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/bcb281cde579...8e19915c19fc

2024-11-07 skia-flutter-autoroll@skia.org Roll Skia from e9a7546ef3d9 to 2ed9606702f1 (1 revision) (flutter/engine#56434)
2024-11-07 jason-simmons@users.noreply.github.com [Impeller] Use Matrix::MakeTranslateScale to compute the source-to-destination mapping in DrawImageRect (flutter/engine#56433)
2024-11-07 chris@bracken.jp iOS: Eliminate ScopedBlock, ScopedTypeRef, ScopedPolicy (flutter/engine#56410)
2024-11-07 jacksongardner@google.com [skwasm] Make sure to include the transfer list when using postMessage. (flutter/engine#56431)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
153459,2024-08-14T19:00:18Z,2024-11-14T21:48:15Z,kzrnm,3,11,22,496,4,3,2,['tool'],2433212.0,0,7969066.0,0,0,0,0,3605841.484355,,0,22,0,False,"['andrewkolos', 'kzrnm', 'bkonyi']","Should https://github.com/flutter/flutter/blob/b364c07c1fa6241dfc4c7cb427837f54dff0e4b9/packages/flutter_tools/lib/src/localizations/gen_l10n_types.dart#L397 be updated to also consider placeholder definitions from non-template arb files? @andrewkolos
I added support for cases where `format` is defined only in non-template and vice versa.

https://github.com/flutter/flutter/blob/d01e119f9cb95ec9f02319de1e8f933b0755edff/packages/flutter_tools/test/general.shard/generate_localizations_test.dart#L2683-L2759

There are two changes that accompany this change.

1. Always import package:intl/intl.dart
It is cumbersome to determine if it is necessary to import intl for each locale, so I changed it to always import it.
2. Compatibility Check
I added compatibility checks that will generate an error if a method is generated that is incompatible with the template. I am not a native English speaker, so if the error message is unnatural, please suggest a better fix.
https://github.com/flutter/flutter/blob/d01e119f9cb95ec9f02319de1e8f933b0755edff/packages/flutter_tools/lib/src/localizations/gen_l10n.dart#L131-L142 @kzrnm, FYI it looks like some checks are failing now.LGTM. I will find a second reviewer soon.

(I also just restarted the Google testing check) LGTM! Thanks for the contribution. I'll land this when the checks pass.","LGTM. I will find a second reviewer soon.

(I also just restarted the Google testing check) LGTM! Thanks for the contribution. I'll land this when the checks pass.","- Fixes #153457
- Fixes #116716

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","should we rename `placeholders` to `templatePlaceholders` to better differentiate between it and `localePlaceholders`? I renamed it. ```suggestion
  // Check the compatibility of template placeholders and locale placeholders.
``` Should we always check that types match regardless of whether `localePlaceholderType` is null?

Consider this example:

```
// lib/l10n/app_en.arb
{
  ""@@locale"": ""en"",
  ""springBegins"": ""Spring begins on {springStartDate}"",
  ""@springBegins"": {
    ""description"": ""The first day of spring"",
    ""placeholders"": {
      ""springStartDate"": {
        ""type"": ""DateTime"",
        ""format"": ""MMMd""
      }
    }
  }
}
```

// lib/l10n/app_ja.arb
```
{
  ""@@locale"": ""es"",
  ""springBegins"": ""春が始まるのは{springStartDate}"",
  ""@springBegins"": {
    ""placeholders"": {
      ""springStartDate"": {
        ""format"": ""MMMMd""
      }
    }
  }
}
```

In the `ja` locale, the localized text looks like `春が始まるのは2024-10-10 10:44:48.635339`, but if I add `""type"": ""DateTime""` to the `ja` placeholder, the text looks like `春が始まるのは10月10日`.
 If we are always going to import `package:intl` (which seems fine[^1]), then we'll need to add `// ignore: unused_import` before this line. Otherwise, the Dart compiler will report an `unused_import` error.

[^1]:  `package:intl` is a dependency of `package:flutter_localizations` and a documented requirement of this feature, so I think it should always be present. I would like to make the type explicit in this pull request. I think it would be better to loosen the type constraint in another pull request if necessary. Right, i'm saying that I _want_ the type check to be strict, so I always want the type in the template ARB and the other ARBs to always match.

```suggestion
    if (placeholder.type != localePlaceholderType) {
``` I understand. I have committed the fix. Note for second reviewer:

This change _could_[^1] break peoples' builds when they upgrade. Consider

```json
// app_en.arb
{
  ""@@locale"": ""en"",
  ""springBegins"": ""Spring begins on {springStartDate}"",
  ""@springBegins"": {
    ""description"": ""The first day of spring"",
    ""placeholders"": {
      ""springStartDate"": {
        ""type"": ""DateTime"",
        ""format"": ""MMMMd""
      }
    }
}
```

and
```json
// app_ja.arb
{
  ""@@locale"": ""ja"",
  ""springBegins"": ""春が始まるのは{springStartDate}"",
  ""@springBegins"": {
    ""description"": ""The first day of spring"",
    ""placeholders"": {
      ""springStartDate"": {
        ""type"": ""int"", // Type change.
        ""format"": ""compactCurrency""
      }
    }
  },
```

Then, trying to regenerate localization code will result in a failure:

```
Generating synthetic localizations package failed with 1 error:

Error: The placeholder, springStartDate, has its ""type"" resource attribute set to the ""int"" type in locale ""ja"", but it is ""DateTime"" in the template placeholders. For
compatibility with template placeholders, change the ""type"" attribute to ""DateTime"".
```

I think this failing the build makes sense here, and I believe there's no pre-existing behavior for users to be dependent on here (the `springStartDate` placeholder in the `ja` locale would have been silently ignored, hence this PR). I'm content with this landing without a breaking change announcement.

[^1]: And therefore _will_ 🙃  Nitpick: I think `placeholders` should be in its singular form here:

```suggestion
          'The placeholder, ${placeholder.name}, has its ""type"" resource attribute set to '
          'the ""${localePlaceholder.type}"" type in locale ""$locale"", but it is ""${placeholder.type}"" '
          'in the template placeholder. For compatibility with template placeholder, change '
          'the ""type"" attribute to ""${placeholder.type}"".');
``` I think that's reasonable."
158959,2024-11-14T22:25:37Z,2024-11-14T23:50:06Z,Piinks,1,7,4,34,1,2,1,"['team-infra', 'd: docs/']",43.0,0,5071.0,0,0,0,0,3608717.879697,,0,4,0,False,['Piinks'],I need to check in the images quickly elsewhere. We have wiki image storage in flutter/assets-for-api-docs,,"Adds information on the merge queue, to be used for announcement. Will update to final doc after the merge project is complete.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","It was pointed out to me that Friday is November 15 this year :) TIL. 😜  ```suggestion
![Squash and merge button](https://github.com/flutter/assets-for-api-docs/blob/main/assets/wiki/squash_merge.png)
``` ```suggestion
![Merge when ready button](https://github.com/flutter/assets-for-api-docs/blob/main/assets/wiki/merge_ready.png)
``` ```suggestion
![Remove from queue button](https://github.com/flutter/assets-for-api-docs/blob/main/assets/wiki/remove_queue.png)
``` ```suggestion
On Friday November 15, 2024, GitHub merge queue feature will be enabled in the flutter/flutter repo. After this change, pull requests will first need to pass merge queue tests before landing on the target branch (e.g. main or master). At this time, no additional tests will run in the merge queue. A PR that passes presubmit checks will be allowed to land on the target branch immediately.
``` ```suggestion
If you have any questions or concerns, or If you suspect you are unable to land your PRs for reasons other than the familiar test failures and flakes, please contact any of: @yjbanov, @jtmcdole, @christopherfujino, @Piinks.
```"
158569,2024-11-13T10:30:56Z,2024-11-14T22:26:30Z,fluttergithubbot,2,0,1,1,1,1,1,"['c: tech-debt', 'c: flake']",127638.0,0,129335.0,0,0,0,0,3613736.203021,,0,1,0,False,"['auto-submit[bot]', 'cbracken']","auto label is removed for flutter/flutter/158569, due to - The status or check suite [Windows tool_integration_tests_7_9](https://cr-buildbucket.appspot.com/build/8731258743627403585) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Mark one test as flaky... get different flakes on the patch to compensate.",,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_x64 hot_mode_dev_cycle_macos_target__benchmark""
}
-->
Issue link: https://github.com/flutter/flutter/issues/158568
",
158564,2024-11-13T09:20:19Z,2024-11-14T22:16:24Z,fluttergithubbot,0,0,2,1,1,2,2,['c: flake'],,0,132965.0,0,0,0,0,3614343.638195,,0,2,0,False,[],LGTM ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/5bbd9cd0-bd83-4a9d-9c44-3ae72b76d0be),LGTM ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/5bbd9cd0-bd83-4a9d-9c44-3ae72b76d0be),"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_arm64 mac_desktop_impeller""
}
-->
The test has been passing for [50 consecutive runs](https://data.corp.google.com/sites/flutter_infra_metrics_datasite/flutter_check_test_flakiness_status_dashboard/?p=BUILDER_NAME:%22Mac_arm64%20mac_desktop_impeller%22).
This test can be marked as unflaky.
",
156947,2024-10-16T09:02:37Z,2024-11-14T21:48:12Z,Gustl22,5,3,5,2,1,3,2,['tool'],3.0,0,2551827.0,0,0,0,0,3615744.057965,,0,5,0,False,"['parlough', 'bkonyi', 'flutter-dashboard[bot]', 'Gustl22']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. @parlough asking you for test-exemption, as the last dependency update also was not tested (https://github.com/flutter/flutter/pull/156011). If this needs testing you may can give me a hint how this could be done. > @parlough asking you for test-exemption, as the last dependency update also was not tested (https://github.com/flutter/flutter/pull/156011). If this needs testing you may can give me a hint how this could be done.

The templates are tested through dependency retrieval and analysis, so I opened https://github.com/flutter/cocoon/pull/3954 to mark these files as test exempt. Friendly ping, @eyebrowsoffire can you take a look when you have a chance? @eyebrowsoffire do you think you'll have a chance to look at this?Thanks! LGTM!",Thanks! LGTM!,"This adds support for web 1.x.x to be included in the plugin template, when creating a web plugin.

I don't have an issue referenced. Related to https://github.com/dart-lang/web/issues/316

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Is there a particular reason to still allow versions before 1.0? Since these templates are for new projects, I think it's fine to raise it so the project can safely use the newer APIs. It was out of caution. The app developer might expect this plugin to be compatible with other packages which still use web < 1.0. But I'm totally fine raising the version to ^1.0.0. I guess when this change is getting to stable and also the potential plugin is released, every package should have been upgraded to use 1.0.0 at least. And also the rest of this flutter repo is also working on ^1.0.0. ```suggestion
  web: ^1.0.0
```"
156181,2024-10-03T22:58:11Z,2024-11-14T21:29:30Z,andrewkolos,2,0,11,263,22,1,1,"['platform-ios', 'tool']",342058.0,0,3623480.0,0,0,0,0,3617158.742343,,0,11,0,False,['andrewkolos'],"If this is approved, I'll prepare a g3fix that adds the missing implementations of `provideVmService` to g3's implementations of `DeviceLogReader`. Phew, finally got the g3fix to work. I've sent out the cl for review.Sorry for the delay on this. LGTM!",Sorry for the delay on this. LGTM!,"Cleans up https://github.com/flutter/flutter/pull/155800. In summary, `ResidentRunner`/`FlutterDevice` have branching behavior around logging that depends on the type of `DeviceLogReader` on the `FlutterDevice` instance.  Let's instead move this behavior to the `DeviceLogReader` implementations.

My apologies for the large diff. Much of this is a refactor that was a bit too difficult to separate into its own commits. 

Here are the main two changes

* Replaces the mutable `connectedVmService` field on the `DeviceLogReader` class with a new method `provideVmService`. This serves largely the same purpose as the mutable field, but it allows for asynchronous code. This is where we put the logic that used to exist in `FlutterDevice.tryInitLogReader`.
* Removes the `tryInitLogReader` method from `FlutterDevice`. This method served to set the `appPid` field on the `FlutterDevice`'s `DeviceLogReader` instance. This was only used in the case of Android to filter out logs unrelated to the flutter app coming from the device, so we can move this logic to `AdbLogReader`'s implementation of `provideVmService`.


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.


If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158492,2024-11-12T03:37:20Z,2024-11-14T21:46:10Z,andrewkolos,4,4,4,116,1,2,1,['tool'],54587.0,0,238131.0,0,0,0,0,3616158.839646,,0,4,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158492, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731452378365134337) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158492, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731449821058231537) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158492, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8731444238681334529) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158492, due to - The status or check suite [Mac channels_integration_test](https://cr-buildbucket.appspot.com/build/8731444238897803281) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731444239150938225) has failed. Please fix the issues identified (or deflake) before re-applying this label.
Nice cleanup! LGTM overall with a couple of small comments.",Nice cleanup! LGTM overall with a couple of small comments.,"I was poking around in logger.dart when I noticed a few classes have unnecessary exposed member variables. This PR reduces visibility of these in the pursuit of making these classes slightly easier to grok.

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Does this still need to be marked as `@protected` (here and elsewhere where we have the annotation on library private members)? Do we set `ticks` in tests anywhere? If not, should this be a getter for a private field? Thanks for catching this! Fixed in [make ticks readonly, remove unnecessary protected annotations](https://github.com/flutter/flutter/pull/158492/commits/d81d598225749f37da3db436a6c6e34de00d430d) Fixed in [make ticks readonly, remove unnecessary protected annotations](https://github.com/flutter/flutter/pull/158492/commits/d81d598225749f37da3db436a6c6e34de00d430d)"
157638,2024-10-25T20:58:14Z,2024-10-30T21:20:25Z,LouiseHsu,0,18,13,57,2,3,1,"['tool', 'autosubmit', 'cp: beta', 'cp: stable']",,0,1729329.0,0,0,0,0,3617707.903328,,1,13,0,False,[],Looks good!,Looks good!,"Addresses https://github.com/flutter/flutter/issues/150131, but doesn't fix it, as there seem to be cases where the steps included in the messages added in this PR don't work.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Formatting nits, please:

1. Use two spaces for indentation
2. Add a trailing comma on the last argument
3. For multi-line function calls, place the closing parenthesis on a new line

(Can't wait for the new Dart formatter!)

```suggestion
      final Stream<PtrResourceRecord> ptrResourceStream;

      try {
        ptrResourceStream = client.lookup<PtrResourceRecord>(
          ResourceRecordQuery.serverPointer(dartVmServiceName),
          timeout: timeout,
        );
      } on SocketException {
        throwToolExit(
          'You may be having a permissions issue with your IDE. '
          'Please try going to '
          'System Settings -> Privacy & Security -> Local Network -> '
          '[Find your IDE] -> Toggle ON, then restarting your phone.',
        );
      }
``` Some folks in the thread reported that updating permissions didn't fix the issue ([example](https://github.com/flutter/flutter/issues/150131#issuecomment-2422824717)).

Should we include the original exception message of `SocketException: Send failed, OS Error: No route to host, errno = 65`? This might be useful information for folks where fixing the permissions doesn't help. Should we only output this error message on macOS? Something I learned from Shams recently, Google's technical writing guide [recommends using ""may"" only for official policy or legal contexts](https://developers.google.com/style/word-list#may). Otherwise, they recommend using ""might"".

```suggestion
        throwToolExit('You might be having a permissions issue with your IDE. '
``` 🫨 thats a crazy catch. I had no idea about this!!! I agree, we can print the error and let it throw so we can continue to get crash numbers on this. done - surfaced error and stack trace done done
i miss u dart formatter Minor formatting nit:

```suggestion
            'You might be having a permissions issue with your IDE. '
            'Please try going to '
            'System Settings -> Privacy & Security -> Local Network -> '
            '[Find your IDE] -> Toggle ON, then restarting your phone.',
``` Should we just `rethrow;` here instead? Or perhaps add a generic message like `Unable to listen for mDNS connections`? Ultra pendantic nit: errors in Dart are unrecoverable exceptions that shouldn't be caught (see [this doc](https://dart.dev/language/error-handling)). I'd consider renaming this to `socketExceptionOnStart` Ah, i think rethrow is better. I will add that.  Style nit:

```suggestion
          throwToolExit(
            'You might be having a permissions issue with your IDE. '
            'Please try going to '
            'System Settings -> Privacy & Security -> Local Network -> '
            '[Find your IDE] -> Toggle ON, then restart your phone.',
          );
``` wtf. I think my copy pasting is not perserving the spaces correctly. Hm I'm not sure how you're supposed to format a multi line string argument value... Maybe this?

```suggestion
          throwsToolExit(
            message:
              'You might be having a permissions issue with your IDE. '
              'Please try going to '
              'System Settings -> Privacy & Security -> Local Network -> '
              '[Find your IDE] -> Toggle ON, then restart your phone.',
           ),
``` You might have autoformat on, you should disable it for the Flutter repo (but you might want to keep it for the packages repo) i believe u"
158943,2024-11-14T19:22:10Z,2024-11-14T20:19:18Z,eyebrowsoffire,3,0,1,2,1,2,2,['engine'],3.0,0,3429.0,0,0,0,0,3621373.672559,,0,1,0,False,"['auto-submit[bot]', 'itsjustkevin', 'flutter-dashboard[bot]']","This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed. > Note this does not have a changelog update (which I have forgotten before)

Not necessary for beta releases.  auto label is removed for flutter/flutter/158943, due to - The status or check suite [Mac tool_integration_tests_2_5](https://cr-buildbucket.appspot.com/build/8731266731460863073) has failed. Please fix the issues identified (or deflake) before re-applying this label.
Note this does not have a changelog update (which I have forgotten before) ",Note this does not have a changelog update (which I have forgotten before) ,# Flutter beta 3.27.0-0.2.pre Framework,
157719,2024-10-28T13:58:41Z,2024-11-14T20:21:09Z,Neutrino2711,11,30,17,216,3,2,2,"['framework', 'f: scrolling', 'd: api docs', 'd: examples']",48186.0,0,1491749.0,0,0,0,0,3621262.856765,,0,17,0,False,"['nate-thegrate', 'Neutrino2711']","Yes @nate-thegrate i will be interested in doing so , i will start working on it

 Hey @nate-thegrate I have a query , as solution to #156819 is observable through resizing of browser window and as DartPad can't directly control the size of window so should I simulate resizing of window or I should just simply add the correct example which wont be observable.  <details open> <summary>DartPad does allow resizing the window:</summary>

![resize dartpad](https://github.com/user-attachments/assets/8b2dece0-11fd-4d7d-be2a-f3d0ca68f791)

</details>

Changing the height isn't possible however. Perhaps there could be a slider to control the scroll view items' heights. 

https://github.com/user-attachments/assets/36d83569-e255-41d8-ac88-355762d63b14

I created this please do review @nate-thegrate  That looks awesome!

Currently we have a [**decorated_sliver.0.dart**](https://github.com/Neutrino2711/flutter/blob/update-documentation/examples/api/lib/widgets/sliver/decorated_sliver.0.dart) file, which is referenced in the documentation:

https://github.com/flutter/flutter/blob/ec04707febc94bd9d6cfdecd6e6314f9c99c3538/packages/flutter/lib/src/widgets/decorated_sliver.dart#L31-L35

Would you be able to add a **decorated_sliver.1.dart** file with this example, and reference it here too? Thanks for the review. Yes I will be doing that. I have a query why decorated_sliver.0.dart is imported like this  ""import 'package:flutter_api_samples/widgets/sliver/decorated_sliver.0.dart' as example;"" in decorated_sliver.0_test.dart file can I import it like this 
""import 'package:flutter/examples/api/lib/widgets/sliver/decorated_sliver.0.dart""  @nate-thegrate Thank you for your guidance. > I have a query why decorated_sliver.0.dart is imported like this ""import 'package:flutter_api_samples/widgets/sliver/decorated_sliver.0.dart' as example;"" in decorated_sliver.0_test.dart file can I import it like this ""import 'package:flutter/examples/api/lib/widgets/sliver/decorated_sliver.0.dart""

Oh, forgot to answer your question, sorry! Specifying a namespace this way makes it easy to tell which classes are from the example and which ones aren't, and it's a convention followed consistently throughout example test files. @nate-thegrate one last help how can I ask for review or how does it work I am new to this. Sure, no prob!

The [Tree Hygiene](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/Tree-hygiene.md#who) wiki page has some info on this:

> PRs are assigned reviewers weekly. The precise process varies by team but tends to be combined with issue [triage](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/triage/README.md).

<br>

The next `team-framework` triage is tomorrow, so we'll figure out a second reviewer then :)Hi @Neutrino2711, thanks for contributing!

It looks like https://github.com/flutter/flutter/issues/156819 is asking for an example that turns off the parent ScrollView's clipping, and I agree that including an example would be ideal.

Would you be interested in creating an interactive DartPad code sample for this? Love this example, especially the color scheme you chose!

I have a lot of suggestions; most of which are whitespace-related.

<br>

One other thing that needs to be done: create a **decorated_sliver.1_test.dart** file based on [**decorated_sliver.0_test.dart**](https://github.com/flutter/flutter/blob/master/examples/api/test/widgets/sliver/decorated_sliver.0_test.dart), and add maybe 1 or 2 simple tests. Thanks for the update!

I believe this should be the last round of suggestions, though the autoformatter might make some of the whitespace changes difficult to perform.

You could get around this by committing via the GitHub site:
- head over to the [files tab](https://github.com/flutter/flutter/pull/157719/files)
- click **Add suggestion to batch** for all of them
- then there will be a button to commit the batch at the top of the screen LGTM, thanks for the contribution!

There were just a few analysis problems I missed previously, so go ahead and apply the suggestions when you get a chance. Then we'll be able to merge once the PR has 2 approvals.

<br>

There's a [wiki page](https://github.com/flutter/flutter/blob/master/docs/contributing/Setting-up-the-Framework-development-environment.md) that goes over how to set up your IDE so these linter rules are active while you're editing the file; feel free to check it out when you have a chance! LGTM, just one nitpicking","Hi @Neutrino2711, thanks for contributing!

It looks like https://github.com/flutter/flutter/issues/156819 is asking for an example that turns off the parent ScrollView's clipping, and I agree that including an example would be ideal.

Would you be interested in creating an interactive DartPad code sample for this? Love this example, especially the color scheme you chose!

I have a lot of suggestions; most of which are whitespace-related.

<br>

One other thing that needs to be done: create a **decorated_sliver.1_test.dart** file based on [**decorated_sliver.0_test.dart**](https://github.com/flutter/flutter/blob/master/examples/api/test/widgets/sliver/decorated_sliver.0_test.dart), and add maybe 1 or 2 simple tests. Thanks for the update!

I believe this should be the last round of suggestions, though the autoformatter might make some of the whitespace changes difficult to perform.

You could get around this by committing via the GitHub site:
- head over to the [files tab](https://github.com/flutter/flutter/pull/157719/files)
- click **Add suggestion to batch** for all of them
- then there will be a button to commit the batch at the top of the screen LGTM, thanks for the contribution!

There were just a few analysis problems I missed previously, so go ahead and apply the suggestions when you get a chance. Then we'll be able to merge once the PR has 2 approvals.

<br>

There's a [wiki page](https://github.com/flutter/flutter/blob/master/docs/contributing/Setting-up-the-Framework-development-environment.md) that goes over how to set up your IDE so these linter rules are active while you're editing the file; feel free to check it out when you have a chance! LGTM, just one nitpicking","Revised comments to clarify that clipping of child depends on clipBehavior of the parent widget, typically scrollable widgets that default to Clips.hard.
Noted that decoration features such as shadows , which render outside the widget boundary, may lead to undesirable effects.
Recommended using Clips.none in scenarios where shadow effects are used to avoid clipping issues.
Fixing Issue #156819

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Maybe we could also add a switch or checkbox here, so the user could toggle the clip behavior and see the result right away. Looks like there's a tiny extra bit of whitespace here.

```suggestion
  const DecoratedSliverClipExample({super.key});

  @override
``` I think the example does a great job of showing how it works, without this comment here :)

```suggestion
``` Instead of having this explanation in the example code, could we add it to the `{@tool dartpad}` description in decorated_sliver.dart? ```suggestion
              borderRadius: BorderRadius.all(
                Radius.circular(6),
              ),
``` ```suggestion
                    child: Text(
                      'Item $index',
                      style: const TextStyle(color: Color(0xFFA8A8A8)),
                    ),
                  ),
``` We could probably get rid of this one as well.

```suggestion
``` ```suggestion
// with clipping turned off in a parent [CustomScrollView].
``` ```suggestion
// Copyright 2014 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

``` ```suggestion
              Positioned(
                top: _height,
                left: 0,
                right: 0,
                child: SizedBox(
                  height: MediaQuery.sizeOf(context).height - _height,
                  width: double.infinity,
                ),
              ),
``` ```suggestion
                  const Icon(
                    Icons.add_box,
                    color: Color(0xFFA8A8A8),
                  ),
``` ```suggestion
  State<DecoratedSliverClipExample> createState() => _DecoratedSliverClipExampleState();
``` ```suggestion
class _DecoratedSliverClipExampleState extends State<DecoratedSliverClipExample> {
``` ```suggestion
    final ShapeDecoration shapeDecoration = decoratedSliver.decoration as ShapeDecoration;
``` ```suggestion
      // The clip behavior defaults to Clip.hardEdge if no argument is provided.
      clipBehavior: isClipped ? Clip.hardEdge : Clip.none,
``` ```suggestion
  testWidgets('CustomScrollView clipBehavior is Clip.none when is Clipped is false', (WidgetTester tester) async {
``` ```suggestion
  testWidgets('Verify the DecoratedSliver has shadow property in decoration', (WidgetTester tester) async {
``` ```suggestion
    final DecoratedSliver decoratedSliver = tester.widget(find.byType(DecoratedSliver));
``` ```suggestion
    final CustomScrollView customScrollView = tester.widget(find.byType(CustomScrollView));
``` ```suggestion
/// This example demonstrates how the [CustomScrollView.clipBehavior]
/// impacts a decorated sliver's appearance.
///
/// The [Switch] determines whether clipping is enabled, and
/// the [Slider] adjusts the height of window.
``` ```suggestion
/// This widget does not apply any additional clipping to its [child].
/// To clip a child based on the [Decoration]'s shape, consider using
/// a [ClipPath] widget.
```

([relevant style guideline](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-correct-grammar)) I believe ""the child is not clipped"" is intended to mean ""the child is not clipped by this `DecoratedSliver` widget"", but I agree that the wording has some room for improvement 👍 Wrapping a class name with [square brackets] creates a link to that class, both in the IDE and on the [docs website](https://main-api.flutter.dev/), but it needs to be structured as a doc comment for this to work.

```suggestion
/// Flutter code example for [DecoratedSliver]
/// with clipping turned off in a parent [CustomScrollView].
``` ```suggestion
                padding: const EdgeInsets.all(24.0),
```

Just to make it look nicer :) ```suggestion
      backgroundColor: const Color(0xFF1C1C1C),
``` ```suggestion
        children: <Widget>[
``` ```suggestion
            children: <Widget>[
``` ```suggestion
                onChanged: (bool value) {
``` ```suggestion
                onChanged: (double value) {
``` ```suggestion
            children: <Widget>[
```"
158915,2024-11-14T09:11:47Z,2024-11-14T09:52:18Z,bleroux,0,0,1,40,1,1,1,"['framework', 'f: material design']",,0,36875.0,0,0,0,0,3624551.171669,,0,1,0,False,[],LGTM!,LGTM!,"This PR adds a `MenuAnchor` test to check that `MenuAnchor.alignmentOffset` is correctly applied when `MenuAnchor.layerlink` is provided.
While reviewing https://github.com/flutter/flutter/pull/158255, I found that this new test would be useful.",
157748,2024-10-28T20:35:21Z,2024-11-05T23:38:51Z,nate-thegrate,0,0,2,80,2,1,1,"['a: text input', 'framework', 'f: material design', 'autosubmit', 'refactor']",,0,1462356.0,0,0,0,0,3626857.889018,,0,2,0,False,[],"Good catch, thanks for eliminating duplicate code to maintain!","Good catch, thanks for eliminating duplicate code to maintain!","I saw that there was a private `_Shaker` class in input_decorator.dart that does the exact same thing as the [MatrixTransition](https://main-api.flutter.dev/flutter/widgets/MatrixTransition-class.html) API.

(""hide whitespace"" for tiny diffs!)",
157619,2024-10-25T18:07:13Z,2024-10-30T00:46:11Z,nate-thegrate,1,1,2,16,1,2,1,"['framework', 'autosubmit']",369425.0,0,1730448.0,0,0,0,0,3626854.05759,,0,2,0,False,['nate-thegrate'],Much appreciated 🫡 ,,"Whoever reviewed the documentation changes in #154212 neglected to double-check that the information was accurate (it was me who did this).

Fixes #136508","This sentence (which was [written by me](https://github.com/flutter/flutter/pull/154212#discussion_r1735434443)) is unnecessarily confusing, since an unconstrained `ResizeImage`'s scaling to match logical pixels means that by default, it doesn't match the resolution of the actual device hardware."
158336,2024-11-07T18:23:37Z,2024-11-07T19:05:27Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,606231.0,0,0,0,0,3626887.240165,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/ac50b20ae5c9...371c86fb6b49

2024-11-07 jonahwilliams@google.com [Impeller] disable overdraw prevention for source draws. (flutter/engine#56403)
2024-11-07 chris@bracken.jp macOS: fix leak in CurrentKeyboardLayout (flutter/engine#56420)
2024-11-07 chris@bracken.jp macOS: Fix use after free in FlutterViewControllerTests (flutter/engine#56418)
2024-11-07 skia-flutter-autoroll@skia.org Roll Skia from 6f16a8c83bf4 to e9a7546ef3d9 (3 revisions) (flutter/engine#56426)
2024-11-07 skia-flutter-autoroll@skia.org Roll Skia from 8444ee0c8a76 to 6f16a8c83bf4 (1 revision) (flutter/engine#56425)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158933,2024-11-14T16:56:31Z,2024-11-14T18:35:16Z,bkonyi,1,0,2,2,1,2,2,['tool'],2909.0,0,5928.0,0,0,0,0,3627618.042775,,0,2,0,False,['bkonyi'],"> Want to leave a TODO pointing back to the original issue? Verbose is pretty noisy and makes it harder to read real errors in the log.

Good call! Done.

Want to leave a TODO pointing back to the original issue? Verbose is pretty noisy and makes it harder to read real errors in the log.

Supportive otherwise! LGTM","Want to leave a TODO pointing back to the original issue? Verbose is pretty noisy and makes it harder to read real errors in the log.

Supportive otherwise! LGTM","Hoping this will give some more insights into https://github.com/flutter/flutter/issues/157640
",
158898,2024-11-14T00:43:10Z,2024-11-14T16:59:50Z,matanlurey,0,0,2,48,2,1,1,['tool'],,0,58603.0,0,0,0,0,3633344.327866,,1,2,0,False,[],LGTM,LGTM,Closes https://github.com/flutter/flutter/issues/158896.,
158009,2024-11-01T17:15:05Z,2024-11-14T18:08:10Z,camsim99,1,7,12,157,3,2,1,['tool'],954381.0,0,1126386.0,1,0,0,0,3629246.547157,,0,12,0,False,['camsim99'],"Looks like I need to fix some tests that don't have the `dev_dependency` attribute as well.The overall testing approach SGTM, but I think we should be careful about over-testing or using version solving in a fragile way in this integration test. See comments below! Looks great, love this approach!","The overall testing approach SGTM, but I think we should be careful about over-testing or using version solving in a fragile way in this integration test. See comments below! Looks great, love this approach!","Adds whether or not the plugins in `.flutter-plugins-dependencies` are dev dependencies or not (as the `dev_dependency` attribute).

Fixes https://github.com/flutter/flutter/issues/157948.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Here and below: unless the `await` keyword is used, `async` isn't needed. Where you probably see it across Dart unit tests is that a lot of the setup and teardown work is _often_ asynchronous, but you're explicitly using the synchronous variants (`*Sync*`).

That's totally fine, just wanted to explain why these did nothing. nit: Try using the `exists` matcher instead (there should be other examples of this in the flutter_tools/test directory, look for `package:file_testing` I believe?). This might be over-testing for an integration test or fragile if the templates change. I might consider instead shelling out and using `flutter pub add`, i.e. `flutter pub add camera:0.11.0`.

The other problem though is I'd be worried that eventually when the current Flutter SDK moves past these versions, this will cause a breakage (cannot resolve X for Y).

A potentially cleaner, but slightly more cumbersome path might be to have the integration test create two (blank) plugins instead, i.e. a `plugin_a_real_dependency` and `plugin_b_dev_dependency`; then we could use `path: ...` dependencies and not worry about version solving in this integration test.

(Let me know if you could use more of an explanation or help doing this) Gotcha this approach simplifies things a lot so thank you! I'll make this change and then see if I'm still having trouble getting the plugins marked as dev dependencies. I couldn't find such a matcher. There are convenience methods I've seen but they just call this or similar methods. <https://pub.dev/documentation/file_testing/latest/file_testing/exists-constant.html>

No worries, this isn't critical. Thanks! Oh oops I see! I was looking in the wrong place :/"
158670,2024-11-13T15:51:15Z,2024-11-14T10:39:39Z,stuartmorgan,0,0,1,1,1,2,2,"['autosubmit', 'd: docs/']",,0,67707.0,0,0,0,0,3656157.061274,,0,1,0,False,[],LGTM LGTM,LGTM LGTM,"Adds special handling of the newly-imported `flutter_svg` and `vector_graphics` family of packages in the triage flow chart, as they should be directed to the engine team.",
158587,2024-11-13T15:16:09Z,2024-11-13T20:37:22Z,alestiago,0,0,2,18,1,1,1,['framework'],,0,60530.0,0,0,0,0,3665440.58234,,0,2,0,False,[],"LGTM, thanks for the addition.","LGTM, thanks for the addition.","## Description

Adding reference to the Human Interface documentation about Haptics in the `HapticFeedback` docs. 

The Human Haptic Guidelines documentation are excellent since they provide visualizations that show how these different haptics actually are with some interactive demos, for example with Impact haptics (see image below). Such helps developers decide what haptic to go for and understand when they should be used.

<img width=""675"" alt=""Screenshot 2024-11-13 at 15 13 10"" src=""https://github.com/user-attachments/assets/909240d3-1981-4e25-9bed-b3b52154e662"">

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158547,2024-11-13T01:46:25Z,2024-11-14T08:14:17Z,ValentinVignal,1,4,3,273,3,1,1,"['framework', 'd: api docs', 'd: examples']",49411.0,0,109673.0,0,0,0,0,3664881.766881,,0,3,0,False,['ValentinVignal'],"Nice suggestions @bleroux ! I've done the changes in [test: More detailed tests](https://github.com/flutter/flutter/pull/158547/commits/cbfc5c832345ee515532fcf2ee8d749ae8c9d81a), hope it is good enough :) 
Nice!

Because this example is somewhat complex, consider introducing several tests.
See my comment about factoring out the fake loader.

First test is the one you have (just removed the last step).
Second test would be the end of your test (switching brightness).
Third test would simulate selecting the second image and checking the color scheme has changed. Almost ready, see my comments ![image](https://github.com/user-attachments/assets/b62917cd-4bfd-48da-9227-609c4433b0b1)

Congratulations for finishing this missing example tests task :pray: ","Nice!

Because this example is somewhat complex, consider introducing several tests.
See my comment about factoring out the fake loader.

First test is the one you have (just removed the last step).
Second test would be the end of your test (switching brightness).
Third test would simulate selecting the second image and checking the color scheme has changed. Almost ready, see my comments ![image](https://github.com/user-attachments/assets/b62917cd-4bfd-48da-9227-609c4433b0b1)

Congratulations for finishing this missing example tests task :pray: ","Fixes https://github.com/flutter/flutter/issues/130459

Follow up of the reverted https://github.com/flutter/flutter/pull/158309

It adds a test for
- `examples/api/lib/material/color_scheme/dynamic_content_color.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","```suggestion

  final List<(ImageProvider<Object>, Brightness)> loadColorSchemeCalls = <(ImageProvider<Object>, Brightness)>[];

  Future<ColorScheme> fakeColorSchemeLoader(ImageProvider<Object> provider, Brightness brightness) async {
    loadColorSchemeCalls.add((provider, brightness));
    return provider == example.DynamicColorExample.images[1]
      ? ColorScheme.fromSeed(seedColor: Colors.lightBlue)
      : const ColorScheme.light();
  }

  setUp(() {
    loadColorSchemeCalls.clear();
  });

  testWidgets('The theme colors are created dynamically from the first image', (WidgetTester tester) async {
    await tester.pumpWidget(
      example.DynamicColorExample(loadColorScheme: fakeColorSchemeLoader),
    );
    await tester.pump();
```

Proposed way to share the fake loader between several tests. Starting there, it could be more readable to start a new test, maybe named 'Brightness can be changed'
(the content should be updated because the list containing calls is cleared between tests). Maybe make the test shorter by removing those lines as it was already tested on the other test and it is not what this test focus on. Is there a way to check the app color scheme is the new one?"
158308,2024-11-07T07:11:44Z,2024-11-07T18:11:09Z,engine-flutter-autoroll,1,0,1,4,2,1,1,"['engine', 'will affect goldens', 'autosubmit']",1889.0,0,605394.0,0,0,0,0,3668043.16238,,0,1,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/158308) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158308 at sha 8ccc15c1e1811527a8ccdbf20fc8b48675c3f756_

",,"
https://github.com/flutter/engine/compare/8a963cfc134c...ac50b20ae5c9

2024-11-07 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from z1otZzn3yKuGnu1st... to pG2aukmcwvp71aKuS... (flutter/engine#56424)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from z1otZzn3yKuG to pG2aukmcwvp7

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158304,2024-11-07T04:15:21Z,2024-11-07T05:01:38Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606096.0,0,0,0,0,3677924.624348,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/076688d95818...8a963cfc134c

2024-11-07 skia-flutter-autoroll@skia.org Roll Skia from cf33c4e96e81 to 8444ee0c8a76 (4 revisions) (flutter/engine#56422)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158303,2024-11-07T01:50:28Z,2024-11-07T02:33:29Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,610367.0,0,0,0,0,3682346.865022,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/94dac953a95f...076688d95818

2024-11-07 yjbanov@google.com [web:a11y] make header a <header> when non-empty and heading when empty (flutter/engine#55996)
2024-11-06 jonahwilliams@google.com [Impeller] make sure binding nullptr texture does not crash. (flutter/engine#56381)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158016,2024-11-01T18:40:51Z,2024-11-14T02:33:35Z,matanlurey,3,1,11,660,65,1,1,"['platform-ios', 'tool', 'a: desktop']",1052247.0,0,1065167.0,0,0,0,0,3685325.570277,,0,11,0,False,"['auto-submit[bot]', 'matanlurey']","> LGTM. Thanks for this :)

Thank you for the suggestion, it is _much_ nicer! auto label is removed for flutter/flutter/158016, due to Pull request flutter/flutter/158016 is not in a mergeable state. auto label is removed for flutter/flutter/158016, due to - The status or check suite [Mac_x64 tool_host_cross_arch_tests](https://cr-buildbucket.appspot.com/build/8731342859123487169) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM. Thanks for this :)",LGTM. Thanks for this :),"Closes https://github.com/flutter/flutter/issues/158012.

This is (effectively) a user-facing NOP, which is exchanging an on-by-default command-line argument (`--implicit-pubspec-resolution`) for an off-by-default global feature flag (`explicit-package-dependencies`). It matches the mental model better, is less painstaking to maintain and feed throughout, and will be easier to globally flip on/off in a future PR.","Is this a typo? Is there a `--config` option?

```suggestion
      'Cannot generate a synthetic package when explicit-package-dependencies is enabled.\n'
```"
158895,2024-11-13T23:41:36Z,2024-11-14T02:12:14Z,matanlurey,1,3,4,129,5,2,2,['tool'],1417.0,0,9039.0,0,0,0,0,3686608.910306,,0,4,0,False,['matanlurey'],"> Sounds good to me, perhaps worth adding a comment above the bringup: true line to not enable this (it's just for debugging ci)

Done!Sounds good to me, perhaps worth adding a comment above the bringup: true line to not enable this (it's just for debugging ci) ship it","Sounds good to me, perhaps worth adding a comment above the bringup: true line to not enable this (it's just for debugging ci) ship it","It would be nice to have somewhere to iterate and experiment with what we can do to either fix frequent timeout problems we have with `flutter build apk` (across platforms, to be clear, though I've just started with Linux) or get more information on why the crashes/timeouts happen.

Open to other ways to doing this (though preferably _not_ LED).","SGTM. However, if these randomly long builds are only clean builds (where nothing is cached), then I don't think this loop will accomplish much. IIRC I wrote a comment somewhere about whether or not these were only happening on first builds in test—I'll go look for it. Never mind, that was about Xcode builds: https://github.com/flutter/flutter/issues/157847#issuecomment-2455750155 Regardless, as long as _some_ build takes a shockingly time to complete, then this will probably timeout as desired (if 30 minutes is short enough of a timeout); so SGTM"
148856,2024-05-22T14:26:41Z,2024-11-14T01:19:09Z,Rexios80,30,30,86,296,5,3,0,"['framework', 'f: material design']",4.0,0,15159148.0,0,0,0,0,3689796.238216,,1,86,0,False,"['Rexios80', 'QuncCccccc', 'Piinks', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact ""@test-exemption-reviewer"" in the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc them here, they won't see it! Use Discord!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Hey @Rexios80 thanks for contributing! It looks like there are some failing checks here, can you take a look? @Piinks Should be good now I had kind of overengineered this anyways. The latest changes should hopefully maintain the expected behavior across platforms. CI is failing because of token templates which I'm not sure how to deal with. Running the specified command just deletes the default padding I added. Why is the default to have a fixed size? Is there a use-case for that? If no one actually needs that then this would be more of a bug fix than a breaking change.  I agree with @QuncCccccc. This new behavior should not be the default, but rather an option, so it does not break existing applications. I believe the current default is as defined by the material specification. > Why is the default to have a fixed size? Is there a use-case for that? If no one actually needs that then this would be more of a bug fix than a breaking change.

Usually we will follow the specifications from the Material design website and use the values there as defaults:) For search view, here is the specs to specify the min size for search view: https://m3.material.io/components/search/specs#3b239745-ea77-4b1a-873b-f72cd96ed2d9 Welp I can't argue with the material design specification. Let's see what we think about this round of changes. Flyby comment from triage, it looks like some tests are failing @Piinks My bad. They should be fixed now, but I'm having issues with the golden tests locally. This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 @Piinks @QuncCccccc Do you need anything more from me on this? Is that not the current default behavior of this PR? > Is that not the current default behavior of this PR?

I don't think so. With this PR change, it looks like we don't show anything if we provided a empty suggestion list, so the search view looks like still a search bar. That should only be true if `shrinkWrap` is set to true I asked the designer about this scenario(Whether we should still respect minimum constraints if we shrink wrap the suggestions list) yesterday, I will come back to this PR once I get any update. Thanks for your patience. The entire point of this PR is to _not_ have a bunch of empty space in the suggestions box. I'm not sure why anyone would even want that behavior to begin with. All I want is a normal looking search bar with a suggestions box that matches the height of the suggestions. Should we create a new widget for this? We shouldn't have to rely on third party packages ([that get abandoned](https://pub.dev/packages/material_floating_search_bar)) for this behavior. > Should we create a new widget for this? We shouldn't have to rely on third party packages ([that get abandoned](https://pub.dev/packages/material_floating_search_bar)) for this behavior.

I don't think anyone has suggested this @Rexios80. Since this component is aligned with the material design specification, it is important it models that spec by default. It is perfectly alright to add options to modify default behaviors, but following the spec will always be the default for the material library. I understand not wanting to change the default behavior especially if it matches the guidelines (whether I agree with them or not). As far as I can tell, this PR in its current state does not change the default behavior in any way. Please point out any deviations from the default and I will fix them. Actually @QuncCccccc was right there is no box if there are no suggestions right now. Let me fix that. @Piinks @QuncCccccc sorry for the confusion here. I thought we had fixed all the deviations from default a long time ago. Please let me know if there are any more. > CI is failing because of token templates which I'm not sure how to deal with. Running the specified command just deletes the default padding I added.

@Piinks I believe this will still be an issue right? How do we resolve this? > @Piinks I believe this will still be an issue right? How do we resolve this?

I am not sure, @QuncCccccc will have some guidance, but is currently OOO. I'll make a note to ensure we document how to resolve this in the docs/ folder when Qun is back. 👍  > > CI is failing because of token templates which I'm not sure how to deal with. Running the specified command just deletes the default padding I added.

To fix the linux analyzer, we should make sure the default `SearchViewThemeData` contents match the `SearchViewTemplate` in `dev/tools/gen_defaults/lib/search_view_template.dart` file. So the steps should be: 
1, we update the SearchViewTemplate to add `shrinkWrap` and `padding`
2, ran the dart command to generate the default theme data in `search_anchor.dart`
3. check the default theme data to make sure they are what we want:)

Also, I asked the designer about the shrinkWrap behavior. We allow nothing only when there is nothing in the search bar. When we set the shrinkWrap to true and there's nothing in the result list, we should still respect the minimum constraints (show an empty box). And in this case, we can set constraints to a smaller value or zero if we really want nothing. I think this makes sense to me because otherwise, it means `shrinkWrap` will just ignore `constraints` parameter and feels like a conflict. What do you think?

 @QuncCccccc I'm not opposed to that, but I'm not sure how it would work with how the view size is currently calculated:

```dart
final double viewWidth = clampDouble(anchorRect.width, effectiveConstraints.minWidth, effectiveConstraints.maxWidth);
final double viewHeight = clampDouble(screenSize.height * 2 / 3, effectiveConstraints.minHeight, effectiveConstraints.maxHeight);
``` Also the constraints aren't ignored if `shrinkWrap` is true, but there is no minimum:

```dart
        ConstrainedBox(
          constraints: BoxConstraints(
            maxWidth: _viewRect.width,
            maxHeight: _viewRect.height,
          ),
          child: ...
``` I noticed an inconsistency in padding between the bar and the view's bar so I added a property to handle it. Should this be a part of the theme? The existing code for the bar padding is weird so I'm not sure what to do about it. @QuncCccccc Is this what you meant by respecting the minimum constraints? Now that I'm looking at these constraint chances in an app, do we even need the shrinkWrap option anymore? We could just set the min constraints to 0 and have the list always set to shrink wrap (as it is currently in this PR)Thanks so much for the contribution! By default, if search anchor is used on mobile devices, the search view should be full-screen, but this change seems break the default behavior:) Thanks for the quick update!

I think this is a great improvement! But just feel if we directly add the change, there might be a lot of breaking behaviors as the nonfull-screen search view will not be a fixed size anymore. Can we introduce a property like `shrinkWrap` and make sure the change is hidden behind the flag? The `viewBottomPadding` makes sense to me. As for the clipping issue, if we use the new change, there seems still have some clipping problem(see the screenshot in my previous comment). Maybe we can just use the original implementation for now? As the main goal of this PR is to add the `shrinkWrap` function:) Based on the specs here: https://m3.material.io/components/search/specs#3b239745-ea77-4b1a-873b-f72cd96ed2d9, we should keep a min height 240dp as the default. My understanding is even if we want to ""shrinkWrap"" search results, the view should still at least have the default height unless we customize the viewConstraints. Thanks for the contribution! I like the shrinkWrap idea, but as I mentioned in this [comment](https://github.com/flutter/flutter/pull/148856#pullrequestreview-2123989055), by default, the search view should have a minimum height of 240 even if there's no content at all
![Screenshot 2024-07-09 at 12 13 17 PM](https://github.com/flutter/flutter/assets/36861262/33d3d0ed-801d-4c08-98b8-9c2d9c153226)
 Thanks for the update @Rexios80, it looks like there are some failing tests now. Can you take a look?
I think a rebase should help resolve the analyzer issue. Hey @Rexios80 it looks like the latest update failed some tests. Can you take a look?

I also wonder looking through this today if it is trying to resolve more than one thing in one PR. If so, splitting out into multiple PRs will make for easier review. We try not to address multiple things in one PR, especially if it might be reverted for one fix and we lose all the others. :)","Thanks so much for the contribution! By default, if search anchor is used on mobile devices, the search view should be full-screen, but this change seems break the default behavior:) Thanks for the quick update!

I think this is a great improvement! But just feel if we directly add the change, there might be a lot of breaking behaviors as the nonfull-screen search view will not be a fixed size anymore. Can we introduce a property like `shrinkWrap` and make sure the change is hidden behind the flag? The `viewBottomPadding` makes sense to me. As for the clipping issue, if we use the new change, there seems still have some clipping problem(see the screenshot in my previous comment). Maybe we can just use the original implementation for now? As the main goal of this PR is to add the `shrinkWrap` function:) Based on the specs here: https://m3.material.io/components/search/specs#3b239745-ea77-4b1a-873b-f72cd96ed2d9, we should keep a min height 240dp as the default. My understanding is even if we want to ""shrinkWrap"" search results, the view should still at least have the default height unless we customize the viewConstraints. Thanks for the contribution! I like the shrinkWrap idea, but as I mentioned in this [comment](https://github.com/flutter/flutter/pull/148856#pullrequestreview-2123989055), by default, the search view should have a minimum height of 240 even if there's no content at all
![Screenshot 2024-07-09 at 12 13 17 PM](https://github.com/flutter/flutter/assets/36861262/33d3d0ed-801d-4c08-98b8-9c2d9c153226)
 Thanks for the update @Rexios80, it looks like there are some failing tests now. Can you take a look?
I think a rebase should help resolve the analyzer issue. Hey @Rexios80 it looks like the latest update failed some tests. Can you take a look?

I also wonder looking through this today if it is trying to resolve more than one thing in one PR. If so, splitting out into multiple PRs will make for easier review. We try not to address multiple things in one PR, especially if it might be reverted for one fix and we lose all the others. :)","Refactors the `SearchAnchor` suggestions builder to not take up the whole screen

https://github.com/flutter/flutter/issues/148852

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","Just a question, why do we want to introduce this property to `SearchAnchor`? Probably unnecessary to have two similar properties(viewBuilder and sliverViewBuilder) existing at the same time and this doesn't appear directly related to the shrinkWrap change. +1  Turns out I overengineered that too I think we should keep this and `OverflowBox` below. They are to clip contents when we open/close the search view. For example, if the search view is opened from an icon/icon button and we have `ListTile`s in the view, an assertion from `ListTile` will be thrown when its width is too small to only fit in a leading widget. So I think we can leave these two(ClipRect and OverflowBox) here but also set `OverflowBox.fit` to `OverflowBoxFit.deferToChild` if we want to shrink wrap suggestions. I don't think we need this condition check since this class itself is showing the view content right? Maybe we can also remove `viewBottomPadding`? Just feel a little bit odd to have a padding only for bottom. But please let me know if there's a specific reason:) The analyzer error comes from here but if we decide to remove the bottomPadding, the error should be removed:) Nice! Thanks for catching this! The if statement below handles it

```dart
if (_controller.isOpen && (widget.showFullScreenView || result.isNotEmpty))
``` I prefer this method of avoiding the assertion issue instead of adding another widget to the tree unless you have an objection <img width=""1350"" alt=""Screenshot 2024-05-30 at 4 33 20 PM"" src=""https://github.com/flutter/flutter/assets/7896519/1c063d9c-958c-4b6b-994b-b60d19cb8424"">

Without this the search view touches the bottom of the window which is weird I agree it's weird to only have a parameter for bottom padding, but there isn't anywhere for other padding to have an effect I actually don't think this check will handle the issue because when we have some results to show, we need to clip the content during view animation, right? We will still have the following widgets and the same errors still happen. But please correct me if I misunderstood anything. Here's a code sample I used to reproduce the error with this PR change:)

<details>

```dart
// Copyright 2014 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import 'package:flutter/material.dart';

/// Flutter code sample for [SearchAnchor].

void main() => runApp(const SearchBarApp());

class SearchBarApp extends StatefulWidget {
  const SearchBarApp({super.key});

  @override
  State<SearchBarApp> createState() => _SearchBarAppState();
}

class _SearchBarAppState extends State<SearchBarApp> {
  final SearchController controller = SearchController();

  @override
  Widget build(BuildContext context) {
    final ThemeData themeData = ThemeData(useMaterial3: true);

    return MaterialApp(
      theme: themeData,
      home: Scaffold(
        appBar: AppBar(title: const Text('Search Anchor Sample')),
        body: Column(
          children: <Widget>[
            SearchAnchor(
                searchController: controller,
                builder: (BuildContext context, SearchController controller) {
                  return IconButton(
                    icon: const Icon(Icons.search),
                    onPressed: () {
                      if (controller.isOpen) {
                        controller.closeView(controller.text);
                      } else {
                        controller.openView();
                      }
                    },
                  );
                },
                suggestionsBuilder: (BuildContext context, SearchController controller) {
                  return List<ListTile>.generate(5, (int index) {
                    final String item = 'item $index';
                    return ListTile(
                      leading: const CircleAvatar(backgroundColor: Colors.amber),
                      title: Text(item),
                      onTap: () {
                        setState(() {
                          controller.closeView(item);
                        });
                      },
                    );
                  });
                }),
            Center(
              child: controller.text.isEmpty
                  ? const Text('No item selected')
                  : Text('Selected item: ${controller.value.text}'),
            ),
          ],
        ),
      ),
    );
  }
}

```
</details>


Here's the error message:
![Screenshot 2024-05-30 at 4 18 29 PM](https://github.com/flutter/flutter/assets/36861262/529c5c06-8064-4f9d-8ba1-6cdf9c371949)
 Looks like the bottomPadding itself is just to reduce the height of the view, I think we actually can also achieve this by using `viewConstraints`. We could but then developers have to do some calculations themselves to figure out what the height should be which is weird for something that should be default behavior.  I see! Do you think whether we can use a Padding to wrap the ViewContent and set viewBottomPadding over there, instead of doing the calculations here:) ? I thought about using Padding, but that would change where the search view starts relative to the top of the screen which I think is undesirable The tests are passing which I thought meant this issue was gone but I'll look into it more I removed the check for _controller.isOpen. The rest of the check is to not show the divider when there are no results to show. I was able to reproduce the issue with the code you provided. I added back the OverflowBox, but we shouldn't need the ClipRect since the Material widget is its direct parent and has the same clip property. Actually nevermind. Since we are using a ConstrainedBox now I just put the Padding inside of it. Actually I think we don't really need a default because I don't see this from Material specs. We can just keep this nullable and remove the default value so we won't cause any breaking changes to existing apps. Why we have this change here? Do you mean making the ListView lazy? Is that not best practice? @QuncCccccc See this line for the logic to shrink wrap or not Should this always be true? I thought it was weird to keep it always true but it renders correctly in all states. The Flexible widget outside seems to take precedence. Also passing `shrinkWrap` to the `viewBuilder` would probably be a breaking change Although it looks like making the list lazy here doesn't actually help performance. In testing with a lot of suggestion items there are still performance issues so maybe we can revert this. (Setting shrinkWrap to false doesn't help either)"
158297,2024-11-06T23:28:50Z,2024-11-07T00:09:12Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,608007.0,0,0,0,0,3693208.567655,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b36ca3319825...94dac953a95f

2024-11-06 jonahwilliams@google.com [Impeller] keep imgui hostbuffer alive. (flutter/engine#56409)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157998,2024-11-01T15:02:50Z,2024-11-14T00:10:14Z,Mairramer,2,0,2,41,3,2,2,"['framework', 'f: material design', 'a: internationalization']",6371.0,0,1069645.0,0,0,0,0,3693931.182913,,0,2,0,False,"['Mairramer', 'flutter-dashboard[bot]']","This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 > Were these changes generated by the script

Yep!
Hey @Mairramer thanks for the contribution! Were these changes generated by the script? LGTM thank you!",Hey @Mairramer thanks for the contribution! Were these changes generated by the script? LGTM thank you!,"Fixes https://github.com/flutter/flutter/issues/156565
This update corrects the `TimeOfDayFormat` mapping for the Hindi language. Previously, the format was incorrectly set to `a_space_h_colon_mm` - (a h:mm), but it should be `h_colon_mm_space_a` - (h:mm a) since Hindi is a LTR language.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158159,2024-11-05T08:26:49Z,2024-11-14T00:08:23Z,hgraceb,0,12,6,84,4,4,3,"['framework', 'f: material design', 'f: scrolling']",,0,747695.0,0,0,0,0,3694043.756767,,0,6,0,False,[],"@hgraceb thanks for the contribution!

The bug fix LGTM; I left some feedback on the test. ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the fix! LGTM pending review from someone more knowledgeable about SliverAppBar such as @Piinks. LGTM!","@hgraceb thanks for the contribution!

The bug fix LGTM; I left some feedback on the test. ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the fix! LGTM pending review from someone more knowledgeable about SliverAppBar such as @Piinks. LGTM!","Fixes #158158

Similar to 154484, but addressing more fundamental causes. We should call the child's `didUpdateWidget` before the child's `build` when states change.

1. Remove redundant code but keep the old test because we don't need it after this fix.
2. Add getters of `lastShrinkOffset` and `lastOverlapsContent` that are needed when `SliverAppBar.update`.
3. Add a test with a custom TabBar to avoid breaking when some changes to the default TabBar.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","(trivial nit: swap lines for consistency)

```suggestion
  // Regression test for https://github.com/flutter/flutter/issues/158158.
  testWidgets('SliverAppBar should update child before child build', (WidgetTester tester) async {
``` Looks like this section is back to where it was before your change in #154485.

I'm glad both the test here and the test from that PR are passing! One of our [style guidelines](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#make-each-test-entirely-self-contained) is ""make each test entirely self-contained"".

It's primarily for preventing accidental shared state between tests, but there are a few other reasons why we might want to factor out the `_TestLifecycleTabBar` class:

- If we can avoid declaring a private class at the top of the file that's only used for one test, it will make this library easier to understand & navigate.
- Tests are easier to debug when the failure is found in an `expect()` call, rather than an `assert` in a widget's build method.
- It'd be nice to test the `TabBar` widget, since that's what will most likely be used in the real world.

<br>

<details> <summary>Here's an idea for how we might restructure this test!</summary>

```dart
  // Regression test for https://github.com/flutter/flutter/issues/158158.
  testWidgets('SliverAppBar should update child before child build', (WidgetTester tester) async {
    List<Tab> tabs = <Tab>[];
    late StateSetter setState;
    late TabController controller;
    bool customTabBar = false;

    PreferredSizeWidget tabBar() {
      if (customTabBar) {
        return PreferredSize(
          preferredSize: const Size.fromHeight(kToolbarHeight),
          child: Builder(
            builder: (BuildContext context) {
              controller = DefaultTabController.of(context);
              return Row(children: tabs);
            },
          ),
        );
      }
      return TabBar(tabs: tabs);
    }

    await tester.pumpWidget(
      MaterialApp(
        home: StatefulBuilder(
          builder: (BuildContext context, StateSetter stateSetter) {
            setState = stateSetter;

            // Reset this widget's state when switching to a different TabBar.
            final Key key = ValueKey<bool>(customTabBar);
            return DefaultTabController(
              key: key,
              length: tabs.length,
              child: Scaffold(
                body: CustomScrollView(
                  slivers: <Widget>[
                    SliverAppBar(
                      actions: <Widget>[
                        TextButton(
                          child: const Text('Add Tab'),
                          onPressed: () {
                            setState(() {
                              tabs.add(Tab(text: 'Tab ${tabs.length + 1}'));
                            });
                          },
                        ),
                      ],
                      bottom: tabBar(),
                    ),
                  ],
                ),
              ),
            );
          },
        ),
      ),
    );

    // Initializes with zero tabs.
    expect(find.text('Tab 1'), findsNothing);
    expect(find.text('Tab 2'), findsNothing);

    await tester.tap(find.text('Add Tab'));
    await tester.pumpAndSettle();

    // No crash after tab is added.
    expect(find.text('Tab 1'), findsOneWidget);
    expect(find.text('Tab 2'), findsNothing);

    setState(() {
      tabs = <Tab>[];
      customTabBar = true;
    });

    await tester.pumpAndSettle();

    // Initializes with zero tabs.
    expect(tester.takeException(), isNull);
    expect(find.text('Tab 1'), findsNothing);
    expect(find.text('Tab 2'), findsNothing);
    expect(controller.length, tabs.length);

    await tester.tap(find.text('Add Tab'));
    await tester.pumpAndSettle();
    
    // No crash after tab is added.
    expect(tester.takeException(), isNull);
    expect(find.text('Tab 1'), findsOneWidget);
    expect(find.text('Tab 2'), findsNothing);
    expect(controller.length, tabs.length);
  });
```

</details> @nate-thegrate Thanks for your suggestions for the test. I tried it, but I don't know how to improve it continue.

1. Maybe we should take the exception check here.

```diff
 // No crash after tab is added.
 expect(find.text('Tab 1'), findsOneWidget);
 expect(find.text('Tab 2'), findsNothing);
+expect(tester.takeException(), isNull);

 setState(() {
   tabs = <Tab>[];
   customTabBar = true;
 });
```

2. The custom `TabBar` is declared top-level because the core reason for the issue is that `TabBar`'s lifecycle should be changed.  Actually, includes a called `DefaultTabController.of(context)` there are other necessary steps to reproduce it. We should update the tab's count in `didUpdateWidget` otherwise it's always equal.

```dart
expect(tester.takeException(), isNull);
expect(find.text('Tab 1'), findsOneWidget);
expect(find.text('Tab 2'), findsNothing);
expect(controller.length, tabs.length); // Always passed even has not current fix.
```

3. By the way. Should I offer more information on the issue somewhere? I was written some short descriptions in this PR on the top. Maybe like following are better.

Before:

```dart
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.didUpdateWidget: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 1 // Crashed here.
flutter: _TestLifecycleTabBar.didUpdateWidget: _tabs = 1, widget.tabs.length = 1
flutter: _TestLifecycleTabBar.build: _tabs = 1, widget.tabs.length = 1
```

After:

```dart
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.didUpdateWidget: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.build: _tabs = 0, widget.tabs.length = 0
flutter: _TestLifecycleTabBar.didUpdateWidget: _tabs = 1, widget.tabs.length = 1 // Update `_tabs` before `build`.
flutter: _TestLifecycleTabBar.build: _tabs = 1, widget.tabs.length = 1
``` Thanks for following up on this—and sorry for the delay, it's been a busy week!

In my personal opinion: it's probably not necessary to compare `controller.length` with `tabs.length`.
But I'm open to hearing other perspectives :)

<br>

> 1. Maybe we should take the exception check here.
> 
> ```diff
>  // No crash after tab is added.
>  expect(find.text('Tab 1'), findsOneWidget);
>  expect(find.text('Tab 2'), findsNothing);
> +expect(tester.takeException(), isNull);
> 
>  setState(() {
>    tabs = <Tab>[];
>    customTabBar = true;
>  });
> ```

Absolutely—I totally missed that, thanks! @nate-thegrate If unnecessary to compare controller.length with tabs.length, the custom TabBar is also unnecessary. So I removed it and just kept TabBar for the test. This change might be causing some google testing failures with the SliverPersistentHeader having a smaller size/length and thus clipping content. Any ideas as to why/how to fix?  @victorsanni Hi, can you provide more information about the error, such as test code, widget code, or something else? Still investigating on my end. But in the meantime I wonder if there are any edge cases that might have been missed in this refactor. Sorry, but I have no idea. But maybe we should call `markNeedsLayout` when `_SliverPersistentHeaderElement.update` because only there has changed? In fact, I don't understand what content clipping means. ```suggestion
      final _RenderSliverPersistentHeaderForWidgetsMixin renderObject = this.renderObject;
      _updateChild(newDelegate, renderObject.lastShrinkOffset, renderObject.lastOverlapsContent);
      renderObject.triggerRebuild();
```
This should fix the google testing failures. As you said, we should call `markNeedsLayout` in `_SliverPersistentHeaderElement.update`. I wonder if we can add a test. I want to add a test but I don't know what situation will need it. And there may be another deeper reason. I'll try to fix it and add a test if there are more details."
158880,2024-11-13T20:23:46Z,2024-11-13T20:57:13Z,matanlurey,4,3,2,5,1,3,1,"['tool', 'warning: land on red to fix tree breakage']",8384.0,0,8659.0,0,0,0,0,3698862.910475,,0,2,0,False,"['christopherfujino', 'matanlurey']","Actually looks like autosubmit merged this with a lot of failing builds. > Actually looks like autosubmit merged this with a lot of failing builds.

Yeah I wonder if this is a cocoon regression? I'm following up I filed https://github.com/flutter/flutter/issues/158892 to trackLGTM!",LGTM!,Work around for https://github.com/flutter/flutter/issues/158560.,Are you preparing for when the formatter is going to run here? ;) In my head the formatter is already on. gotta love `dynamic`
158890,2024-11-13T22:37:14Z,2024-11-13T22:38:56Z,MitchellGoodwin,1,0,1,2,1,1,1,"['tool', 'warning: land on red to fix tree breakage', 'autosubmit']",170.0,0,172.0,0,0,0,0,3699342.321762,,0,1,0,False,['MitchellGoodwin'],"> I have no idea why this merged :(

No idea. Looks like autosubmit didn't wait for the analyzer, and post submit decided to skip that check too.I have no idea why this merged :(",I have no idea why this merged :(,"#158880 causes the linux analyzer to complain for not having a skip message.
",
158891,2024-11-13T22:37:36Z,2024-11-13T22:38:18Z,auto-submit[bot],0,0,1,1,1,1,1,['revert of'],,1,43.0,0,0,0,0,3699450.885484,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#158242
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: LouiseHsu
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: Flake rate is low, and the arm64 macs in the staging pools are having difficulties
<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: fluttergithubbot
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {LouiseHsu}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_arm64_ios hot_mode_dev_cycle_ios__benchmark""
}
-->
Issue link: https://github.com/flutter/flutter/issues/158241

<!-- end_revert_body -->
",
158242,2024-11-06T09:00:53Z,2024-11-13T02:29:25Z,fluttergithubbot,2,0,2,1,1,1,1,['c: flake'],575288.0,0,653806.0,0,0,0,0,3699491.040612,,0,2,0,False,"['auto-submit[bot]', 'LouiseHsu']","auto label is removed for flutter/flutter/158242, due to - The status or check suite [Mac dart_plugin_registry_test](https://cr-buildbucket.appspot.com/build/8731429520296884993) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Reason for revert: Flake rate is low, and the arm64 macs in the staging pools are having difficulties",,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_arm64_ios hot_mode_dev_cycle_ios__benchmark""
}
-->
Issue link: https://github.com/flutter/flutter/issues/158241
",
158295,2024-11-06T22:25:51Z,2024-11-06T23:16:26Z,engine-flutter-autoroll,0,0,9,2,1,1,1,"['engine', 'autosubmit']",,0,605399.0,0,0,0,0,3699600.334402,,0,9,0,False,[],,,"
https://github.com/flutter/engine/compare/58ac1dadd69d...b36ca3319825

2024-11-06 jacksongardner@google.com [skwasm] Fix empty backdrop drawing. (flutter/engine#56385)
2024-11-06 jonahwilliams@google.com [Impeller] generate stroke vertices into point arena. (flutter/engine#56390)
2024-11-06 jason-simmons@users.noreply.github.com [Impeller] Do not capture the temporary ImpellerMapping struct pointer when storing release callbacks in libImpeller (flutter/engine#56411)
2024-11-06 68449066+zijiehe-google-com@users.noreply.github.com Roll ICU from 9408c6fd4a39 to 4239b1559d11 (2 revisions) (flutter/engine#56407)
2024-11-06 chris@bracken.jp iOS,macOS: Add Obj-C cflags to all Obj-C targets (flutter/engine#56386)
2024-11-06 skia-flutter-autoroll@skia.org Roll Skia from afaed8923682 to cf33c4e96e81 (5 revisions) (flutter/engine#56408)
2024-11-06 skia-flutter-autoroll@skia.org Manual roll Dart SDK from 1c1d0420539f to d456f613465a (6 revisions) (flutter/engine#56406)
2024-11-06 chinmaygarde@google.com [Impeller] Avoid errors due to triangle fans usage on Molten. (flutter/engine#56321)
2024-11-06 skia-flutter-autoroll@skia.org Roll Skia from b4df8dda7ffc to afaed8923682 (14 revisions) (flutter/engine#56404)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158213,2024-11-05T22:40:14Z,2024-11-13T21:45:07Z,loic-sharma,1,1,1,501,14,2,2,"['platform-ios', 'tool', 'a: desktop']",604024.0,0,687894.0,0,0,0,0,3702644.168496,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158213, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731438498982713825) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,"In the future, it will be possible for Swift Package Manager to be enabled on one but not all platforms (see https://github.com/flutter/flutter/issues/151567#issuecomment-2455941279).

This moves the `usesSwiftPackageManager` property from the platform-agnostic `Project` to the platform-specific `IosProject` and `MacOSProject`.

This will allow the `IosProject` and `MacOSProject` to return different values for `usesSwiftPackageManager` in the future. For now, both of these projects will always return the same value.

Part of https://github.com/flutter/flutter/issues/151567

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","It might be time to require Xcode 15, since Apple has required it for iOS App Store submissions since April https://github.com/flutter/flutter/issues/144582.  See https://github.com/flutter/flutter/pull/146367.



https://developer.apple.com/ios/submit/
> All iOS and iPadOS apps uploaded to App Store Connect must be built with a minimum of Xcode 15 and the iOS 17 SDK."
158283,2024-11-06T19:17:43Z,2024-11-06T19:57:09Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,605887.0,0,0,0,0,3710402.396345,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/f03f11300a9d...58ac1dadd69d

2024-11-06 jonahwilliams@google.com [Impeller] split downsample shader into GLES variant. (flutter/engine#56376)
2024-11-06 skia-flutter-autoroll@skia.org Roll Skia from 82175b411c80 to b4df8dda7ffc (1 revision) (flutter/engine#56398)
2024-11-06 matanlurey@users.noreply.github.com Add and document and explicit `toARGB32`. (flutter/engine#56329)
2024-11-06 skia-flutter-autoroll@skia.org Roll Fuchsia Test Scripts from _fkA2GjLQH4bc_n2p... to 6FgM4KTbxxmyYoiOs... (flutter/engine#56392)
2024-11-05 skia-flutter-autoroll@skia.org Manual roll Dart SDK from 3e840340c412 to 1c1d0420539f (2 revisions) (flutter/engine#56391)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158778,2024-11-13T18:15:31Z,2024-11-13T19:13:07Z,eyebrowsoffire,1,0,2,8,2,2,2,['engine'],2.0,0,3457.0,0,0,0,0,3711764.460205,,0,2,0,False,['flutter-dashboard[bot]'],"This pull request was opened from and to a release candidate branch. This should only be done as part of the official [Flutter release process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md). If you are attempting to make a regular contribution to the Flutter project, please close this PR and follow the instructions at [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) for detailed instructions on contributing to Flutter.

__Reviewers__: Use caution before merging pull requests to release branches. Ensure the proper procedure has been followed.CHANGELOG LGTM LGTM 
Confirmed that https://github.com/flutter/engine/tree/flutter-3.24-candidate.0 has a18df97ca57a249df5d8d68cd0820600223ce262 as the most recent commit. ","CHANGELOG LGTM LGTM 
Confirmed that https://github.com/flutter/engine/tree/flutter-3.24-candidate.0 has a18df97ca57a249df5d8d68cd0820600223ce262 as the most recent commit. ","# Flutter stable 3.24.5 Framework
",
158757,2024-11-13T18:07:51Z,2024-11-13T18:55:48Z,matanlurey,0,1,1,29,1,2,2,['tool'],,0,2878.0,0,0,0,0,3712805.494416,,0,1,0,False,[],,,Towards https://github.com/flutter/flutter/issues/158560.,"To make logging of failures clearer, we might want: 

```dart
await expectLater(process.exitCode, completion(equals(0));
```"
158526,2024-11-12T19:51:45Z,2024-11-13T18:03:59Z,matanlurey,1,0,2,11,1,2,2,['tool'],2008.0,0,79935.0,0,0,0,0,3715914.529797,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158526, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731446043493774753) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM. Thanks for the fix :)",LGTM. Thanks for the fix :),"Closes https://github.com/flutter/flutter/issues/157629.

Avoids failures in the style:
```txt
00:37 +4597 ~3 -1: /Users/matanl/Developer/flutter/packages/flutter_tools/test/commands.shard/permeable/build_appbundle_test.dart: analytics logs success [E]                                                                                                        
  Expected: contains Event:<{""eventName"":""flutter_command_result"",""eventData"":{""commandPath"":""create"",""result"":""success"",""commandHasTerminal"":false,""maxRss"":147013632}}>
    Actual: [
              Event:{""eventName"":""command_usage_values"",""eventData"":{""workflow"":""create"",""commandHasTerminal"":false,""createProjectType"":""app"",""createAndroidLanguage"":""kotlin"",""createIosLanguage"":""swift""}},
              Event:{""eventName"":""flutter_command_result"",""eventData"":{""commandPath"":""create"",""result"":""success"",""commandHasTerminal"":false,""maxRss"":143261696}},
              Event:{""eventName"":""timing"",""eventData"":{""workflow"":""flutter"",""variableName"":""create"",""elapsedMilliseconds"":527,""label"":""success""}},
              Event:{""eventName"":""command_usage_values"",""eventData"":{""workflow"":""appbundle"",""commandHasTerminal"":false,""buildAppBundleTargetPlatform"":""android-arm,android-arm64,android-x64"",""buildAppBundleBuildMode"":""release""}},
              Event:{""eventName"":""flutter_command_result"",""eventData"":{""commandPath"":""appbundle"",""result"":""success"",""commandHasTerminal"":false,""maxRss"":147013632}},
              Event:{""eventName"":""timing"",""eventData"":{""workflow"":""flutter"",""variableName"":""appbundle"",""elapsedMilliseconds"":10,""label"":""success""}}
            ]
     Which: does not contain Event:<{""eventName"":""flutter_command_result"",""eventData"":{""commandPath"":""create"",""result"":""success"",""commandHasTerminal"":false,""maxRss"":147013632}}>
```

I am guessing <https://api.flutter.dev/flutter/dart-io/ProcessInfo/maxRss.html> is not guaranteed to be stable while running, and as a result is not. This stabilizes the value for a test that I believe does not care about getting the ""real"" value anyway.",
158524,2024-11-12T19:26:05Z,2024-11-13T18:03:53Z,matanlurey,1,0,19,937,16,1,1,"['tool', 'a: desktop']",22802.0,0,81469.0,0,0,0,0,3715920.531212,,0,19,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158524, due to - The status or check suite [Linux tool_integration_tests_6_6](https://cr-buildbucket.appspot.com/build/8731426152495856305) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,"Closes https://github.com/flutter/flutter/issues/158396, closes https://github.com/flutter/flutter/pull/158370.",
158267,2024-11-06T15:01:35Z,2024-11-06T16:29:09Z,engine-flutter-autoroll,0,0,6,2,1,1,1,['autosubmit'],,0,609526.0,0,0,0,0,3722135.623463,,0,6,0,False,[],,,"
https://github.com/flutter/packages/compare/721943194945...bb5a25815cae

2024-11-06 magder@google.com [ci] Upload screenshots, logs, and Xcode test results for drive and integration_test runs (flutter/packages#7430)
2024-11-05 737941+loic-sharma@users.noreply.github.com Remove use_modular_headers! from Podfiles (flutter/packages#7796)
2024-11-05 30872003+misos1@users.noreply.github.com [camera_avfoundation] enable more than 30 fps (flutter/packages#7394)
2024-11-05 engine-flutter-autoroll@skia.org Roll Flutter from 8591d0c16a6c to 29d40f7f6826 (25 revisions) (flutter/packages#8027)
2024-11-05 stuartmorgan@google.com [ci] Add vector_graphics and flutter_svg to autolabeler (flutter/packages#8025)
2024-11-05 alex@mariuti.com [vector_graphics_compiler] wasm compatibility (flutter/packages#8021)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
154476,2024-08-31T17:24:13Z,2024-10-01T15:24:54Z,Sameri11,1,11,4,236,5,6,3,"['tool', 'autosubmit']",313767.0,0,6367495.0,0,0,0,0,3744408.965875,,0,4,0,False,['Sameri11'],"FYI @reidbaker based on activity in #153359 This lgtm, but I'd also like to get review from a member of the tools team before merging LGTM with nitpicks. Thanks!","This lgtm, but I'd also like to get review from a member of the tools team before merging LGTM with nitpicks. Thanks!","
This PR addresses an issue where the `--target-platform` flag was not being respected when building APKs in debug mode. Previously, debug builds would always include `x86` and `x64` architectures, regardless of the specified target platform. This change ensures that the `--target-platform` flag is honored across all build modes, including debug.

To achieve this, `BuildApkCommand` has been slightly changed to become responsible for list of archs that should be built in the current run,rather than just parsing arguments. Previously, this responsibility was distributed to gradle, which could be frustrating (in my opinion)

Fixes #153359 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","If this is only referenced in this file, should we make this private? Nit: this comment feels redundant to me Deleted it. Makes sense. Made private this and also `targetArchs`  Hey @Sameri11, I just noticed, that with the latest `Flutter Beta 3.27.0` which includes this PR, the `x86` platform is by default included when running `flutter build apk --debug`. This was not the case, prior this PR and let our ci builds fail. Here is [the issue](https://github.com/getsentry/sentry-dart/issues/2381). 

Was this decision intentional or by accident? 
As a workaround we now append `--target-platform=android-64` and everything works as expected. 

I just wanted to let you know and ask for the reasons of this change.

Thanks in advance. Actually, `x86` was included into debug builds by default before these changes, as you can see here, for example: https://github.com/flutter/flutter/pull/154476/files#diff-d6576605592ef666ab7c75963cce03509e2ff46a3db735e4372754c9f9809681L37

Comment indicates that `x86` was intentionally included along with `x86_64`, and issue was about to *not* include them if `--target-platform` specified. So, I guess in this case, this behaviour was preserved: if `--target-platform` is not set – apk will contain all 4 arches (3 for release mode).

In issue you linked, I can see that, despite `flutter build apk --debug` being called, `release` variant is being configured along with `debug` in gradle. This behaviour makes me think that there's something wrong with gradle configuration in that project.
But, I can't link these changes to the issue you provided right away, will need to investigate. Thank you @Sameri11 for the fast and detailed answer. We will investigate this in our project. @Sameri11 that's how the android gradle plugin works, even if you call `assembleDebug` it will still run the configuration phase for all variants (that is, release and debug by default), because it has to calculate the task graph and whatnot and is variant-agnostic at this stage of the build.

If I'm reading it right, the offending change is this line: https://github.com/flutter/flutter/pull/154476/files#diff-679494ea4187d01a5fa3d1272e537bc58c1f504cd407d99718be5e1fd49b3c93L51
It used to default to the 3 platforms when `--target-platform` was not specified, but now it defaults to 4 and that is what breaks. Hi @romtsn ! You're right about configuration phase, my bad. What I tried to say is that, for some reason, there is attempt to **resolve** dependencies during configuration time in getsentry example project, which is an error in many cases (but not always, though). You can see gradle warns about it if run build with `--verbose` flag.

As for ""default to the 3 platforms before"" – it's partially true because [this line](https://github.com/flutter/flutter/pull/154476/files#diff-679494ea4187d01a5fa3d1272e537bc58c1f504cd407d99718be5e1fd49b3c93L51) indicated that, but there was special logic in gradle build itself [here](https://github.com/flutter/flutter/pull/154476/files#diff-f0cdaf8963c97a175f64fe0fad130260d0614dd6cecd5cbe9580628bd51c5a4cL641-L644), this logic added `x86` in debug builds and, in the end, with `flutter build apk --debug` you got all 4 arches.

The line you pointing to as an offending sets default architectures for **debug** build. Further this file, there is also a list for `aot` architectures, which doesn't contain `x86` – these defaults are used for `release` builds. So `x86` was never meant to make it to `release` build.

What makes me think that error is the combination of Flutter build and [androidNativeBundle](https://github.com/howardpang/androidNativeBundle) is these lines from [issue](https://github.com/getsentry/sentry-dart/issues/2381) in getsentry:

```groovy
 > Could not resolve all dependencies for configuration ':app:releaseCompileClasspath'.
      > Could not find io.flutter:x86_release:1.0.0-af0f0d559c8a87d912a20971bbd84afc80a54b0f.
```

Question here is how `x86` even get to `releaseCompileClasspath`.

My best guess is that in previous Flutter versions, `x86` was added to desired archs **later** and inside actual gradle configuration, not before build.

it looked like this:
```groovy
       // this happens for each buildType in project, no matter which flutter build type is building now.

        List<String> platforms = getTargetPlatforms().collect() // default is android-x64, android-arm, android-arm64
        // Debug mode includes x86 and x64, which are commonly used in emulators.
        if (flutterBuildMode == ""debug"" && !useLocalEngine()) {
            platforms.add(""android-x86"")
            platforms.add(""android-x64"")
        }
        // `x86` was added only in debug configuration
        // If it's debug buildType, we have android-x64, android-arm, android-arm64, android-x86 – 4 deps.
        // If it's release buildType, we have android-x64, android-arm, android-arm64 – 3 deps.
        platforms.each { platform ->
            String arch = PLATFORM_ARCH_MAP[platform].replace(""-"", ""_"")
            // Add the `libflutter.so` dependency.
            addApiDependencies(project, buildType.name,
                     // Here dependencies added, 3 or 4, depending on buildType (calculated earlier).
                    ""io.flutter:${arch}_$flutterBuildMode:$engineVersion"")
        }
```

Now, desired architectures are known and set before gradle build, the just passed to it. It looks like this:

```groovy
       // this happens for each buildType in project, no matter which flutter build type is building now.

        List<String> platforms = getTargetPlatforms().collect() // default is android-x64, android-arm, android-arm64 AND android-x86

       // No additional logic for adding x86 in debug.
        // If it's debug buildType, we have android-x64, android-arm, android-arm64, android-x86 – 4 deps.
        // If it's release buildType, we have android-x64, android-arm, android-arm64, android-x86 – still 4 deps.
        platforms.each { platform ->
            String arch = PLATFORM_ARCH_MAP[platform].replace(""-"", ""_"")
            // Add the `libflutter.so` dependency.
            addApiDependencies(project, buildType.name,
                     // always 4 dependencies added.
                    ""io.flutter:${arch}_$flutterBuildMode:$engineVersion"")
        }
```

Main thing here, is that it's not an issue in standard Flutter build, because dependencies are not resolved during configuration for each variant there. And there can only be one build type building at single moment of time.

If you build with `--debug` – 4 arches added for every buildType, but only resolved for `debug` variant, which allowed to have `x86` dependency. So, `io.flutter.x86-release-....` added to release, but never resolved, because it's debug build happening now, and build works.

But, if I'm right, `androidNativeBundle` plugin tries to resolve all configurations inside it's `apply` method – in Gradle's configuration phase: https://github.com/howardpang/androidNativeBundle/blob/master/buildSrc/src/main/groovy/com/yy/android/gradle/nativedepend/NativeBundleImportPlugin.groovy#L175. And that breaks the build in configuration phase.

That said, feel free to open an issue in https://github.com/flutter/flutter/issues. I'm not in the right to decide if it'll be fixed because I'm not actual maintainer (just a 3rd party contributor), and this behaviour is a part of 3rd party gradle plugin also. I guess, for minimal reproduction it will be enough to just create empty flutter project with android  and add [androidNativeBundle](https://github.com/howardpang/androidNativeBundle) to build the way it added to build in getsentry.

Also, @gmackall and @reidbaker might be interested in this case.

 @Sameri11 thanks for spending your time looking into this, this all makes sense!

> But, if I'm right, androidNativeBundle plugin tries to resolve all configurations inside it's apply method – in Gradle's configuration phase: [howardpang/androidNativeBundle@master/buildSrc/src/main/groovy/com/yy/android/gradle/nativedepend/NativeBundleImportPlugin.groovy#L175](https://github.com/howardpang/androidNativeBundle/blob/master/buildSrc/src/main/groovy/com/yy/android/gradle/nativedepend/NativeBundleImportPlugin.groovy#L175). And that breaks the build in configuration phase.

Yep, you're right, the plugin should switch to a task that receives the configuration dependencies as a `Provider` to prevent eager config resolution. We'll take it from here! @Sameri11 thanks also from my side for your detailed explanation. I just wanted to mention, that the maintainer of the `androidNativeBundle` released a new version `1.1.5`, which fixes the incompatibility."
154817,2024-09-09T10:57:33Z,2024-10-30T18:14:11Z,TahaTesser,7,20,3,845,10,2,2,"['framework', 'f: material design', 'd: api docs', 'd: examples', 'autosubmit']",291835.0,0,5630289.0,0,0,0,0,3727215.215056,,0,3,0,False,"['justinmc', 'TahaTesser', 'QuncCccccc']","Thanks for the update😍! Sorry for the late response. I will review this one ASAP! Addressed feedback, I also fixed some properties which should've been nullable :)  This also cause a lot of breakages in G3. Like the Slider PR, we probably should do the same thing (even though we haven't decided which approach we are going to take:)) @QuncCccccc tbh I'm not surprised. This has similar changes as Slider. and that's why I filed this PR to see what happens. And there will be more PRs for RangeSlider and CircularProgressIndicator.

Maybe we need a global flag we decide to choose flag to opt-in for these updated widgets?  > Maybe we need a global flag we decide to choose flag to opt-in for these updated widgets?

I would prefer 4 flags for individual widgets(Slider, RangeSlider, Linear/Circular-progressIndicator). Because not too many widgets need this flag and I don't think there will be more token update for other Material 3 widgets, so one flag for each is probably okay. When we need to support Material 3+ in the future, a global flag is probably more desired? Add a new flag to get the previous M3 design, defaults to false. Similar to the Slider PR  Adding autosubmit but stop me if there was still something to address here!This looks great! Thanks a lot for the update!! LGTM:) Thanks for the fix! Somehow the Google testing is not triggered. I think there might be some breakages in g3. Sorry for the late response! I will catch up my review list this week! LGTM! Thanks a lot for adding the flag!",This looks great! Thanks a lot for the update!! LGTM:) Thanks for the fix! Somehow the Google testing is not triggered. I think there might be some breakages in g3. Sorry for the late response! I will catch up my review list this week! LGTM! Thanks a lot for adding the flag!,"Related to [Update both `ProgressIndicator` for Material 3 redesign](https://github.com/flutter/flutter/issues/141340)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatefulWidget {
  const MyApp({super.key});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  bool isRTL = false;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Directionality(
          textDirection: isRTL ? TextDirection.rtl : TextDirection.ltr,
          child: Center(
            child: Column(
              spacing: 2.0,
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                const Text('Default LinearProgressIndicator'),
                const Padding(
                  padding: EdgeInsets.all(16.0),
                  child: LinearProgressIndicator(
                    year2023: false,
                    value: 0.45,
                  ),
                ),
                const Text('Default indefinite LinearProgressIndicator'),
                const Padding(
                  padding: EdgeInsets.all(16.0),
                  child: LinearProgressIndicator(
                    year2023: false,
                  ),
                ),
                const Text('Updated height and border radius'),
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: LinearProgressIndicator(
                    year2023: false,
                    value: 0.25,
                    minHeight: 16.0,
                    borderRadius: BorderRadius.circular(16.0),
                  ),
                ),
                const Text('Updated stop indicator color and radius'),
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: LinearProgressIndicator(
                    year2023: false,
                    value: 0.74,
                    minHeight: 16.0,
                    borderRadius: BorderRadius.circular(16.0),
                    stopIndicatorColor: Theme.of(context).colorScheme.error,
                    stopIndicatorRadius: 32.0,
                  ),
                ),
                const Text('Track gap and stop indicator radius set to 0'),
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: LinearProgressIndicator(
                    year2023: false,
                    value: 0.50,
                    minHeight: 16.0,
                    borderRadius: BorderRadius.circular(16.0),
                    trackGap: 0,
                    stopIndicatorRadius: 0,
                  ),
                ),
              ],
            ),
          ),
        ),
        floatingActionButton: FloatingActionButton.extended(
          onPressed: () {
            setState(() {
              isRTL = !isRTL;
            });
          },
          label: const Text('Toggle Direction'),
        ),
      ),
    );
  }
}
```

</details>

### Preview

<img width=""824"" alt=""Screenshot 2024-09-09 at 13 53 10"" src=""https://github.com/user-attachments/assets/d12e56a5-f196-4011-8266-c7ab96be96b2"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Seems we can use token `md.comp.progress-indicator.active-indicator-track-space` here? ```suggestion
    )..addListener(() {
``` ```suggestion
    })
    ..repeat(reverse: true);
``` nit: Probably don't need indentation here? Seems the default style for Paint() is PaintingStyle.fill, so probably no need to set it specifically. Just a question, why this number is changed? Should we just make them default to `null`? Just feel it's not necessary to show some values that are not used at all:) Seems these new properties are specifically for `LinearProgressIndicator`. If so, maybe we can make it clear here:) The current LinearProgressIndicator renders the track rect as background track and draws active track on top of it. 

In the new M3 design, active track and back inactive track are split into two and there is a gap. As result first rect starts from 29.0 left instead of 0.0 left. Ah that makes sense. Thanks for the explanation! ```suggestion
  /// Defaults to true. If false, the [LinearProgressIndicator] will use the latest Material 3 Design appearance,
``` Should here default to true if the flag called `year2023`? I think from our discussion in the [design doc](https://docs.google.com/document/d/1JQogsq7WdDt9k4BeBxLfi6CwsA_795tLFZlcFDaB6Gk/edit?tab=t.0), we want the flag defaults to a value which doesn't cause breaking changes. Like in the doc, the original flag is called `gappedStyle` and we want it default to false to hide the latest look:). Similar to the Slider PR. Ohhh i was thinking opposite so we users just can just turn off new design manually but setting to `true` by default makes sense if we don't wanna any breaking changes initially. 

I updated the PR and looks like all existing tests are green 🎉 I'll write migration guide for the new flag as we're deprecating right away in this PR. WDYT? A migration guide would be super helpful! Thanks a lot! We can also create an example to toggle the two progress indicator themes so that when this flag is removed in the future, users can copy and paste the old theme from the example if they really want. Should this be:
```suggestion
    if (value != null && stopIndicatorRadius != null && stopIndicatorRadius! > 0) {
```
? ```suggestion
  testWidgets('LinearProgressIndicator default track gap when year2023 is false', (WidgetTester tester) async {
``` Great catch! As i started to write the migration guide i realized they've relatively small updates compare to Sliders. I think it'd be best to write single migration guide for both progress indicators (Linear and Circular).  Now that we've a clear direction with the flag. 

We can land this PR and I'm already working on circular progress indicator update PR. I'll include both widgets in a single progress indicators migration guide. It'd also be easier to track the changes for users.
 Sounds good! Since the flag will not be removed immediately, I think it's fine to have a single migration guide for both progress indicators! Thanks a lot!"
158518,2024-11-12T17:23:52Z,2024-11-13T01:04:01Z,matanlurey,3,0,3,52,2,1,1,['tool'],2054.0,0,27610.0,0,0,0,0,3777116.72437,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158518, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731455325990573009) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158518, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731453183745844193) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158518, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731447627133642017) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,Closes https://github.com/flutter/flutter/issues/158441.,
157100,2024-10-17T15:44:46Z,2024-11-13T01:01:21Z,flutteractionsbot,12,2,1,74,4,4,2,"['tool', 'cp: review']",2.0,0,2279796.0,0,0,0,0,3777277.203477,,0,1,0,False,"['gmackall', 'flutteractionsbot', 'reidbaker', 'stuartmorgan', 'itsjustkevin', 'bkonyi', 'mkustermann']"," @stuartmorgan please fill out the PR description above, afterwards the release team will review this request. @reidbaker @gmackall Thoughts on cherry-picking this to the new beta? It seems like getting this out sooner rather than later will slightly reduce problems overall, and it's low risk, but it's also something that individual developers could do themselves (if they know to). > @reidbaker @gmackall Thoughts on cherry-picking this to the new beta? It seems like getting this out sooner rather than later will slightly reduce problems overall, and it's low risk, but it's also something that individual developers could do themselves (if they know to).

I am for this CP  I agree it is low risk and helpful, which is enough reason for me!  @gmackall can I get you to reformat the change log description to follow these best practices. 

https://github.com/flutter/flutter/blob/master/docs/releases/Hotfix-Documentation-Best-Practices.md

In the past this was something a release engineer would do but we are moving to having cherry pickers do it since they have a better understanding of the change. 

(or tell me to do it, i can do this one i am just running through the CP's this morning.  @stuartmorgan this cherry-pick has failing tests that did not pass on rerun.  @itsjustkevin Those failures don't look related to the PR (e.g., one is that a hot reload test is expecting a very specific success message and what's being output is a different success message). Are any CPs passing right now? @stuartmorgan looks like `Mac tool_integration_tests_5_5` is also failing on https://github.com/flutter/flutter/pull/158131. @bkonyi I think was looking at failures on that test.  The failure on `Mac tool_integration_tests_2_5` has a fix up for review: https://github.com/flutter/flutter/pull/158271. I'm looking into the failure on `Mac tool_integration_tests_5_5` now. The failures on `Mac tool_integration_tests_5_5` seem to be related to this issue: https://github.com/dart-lang/native/issues/1698. > The failures on Mac tool_integration_tests_5_5 seem to be related to this issue: https://github.com/dart-lang/native/issues/1698.

The [check failure](https://github.com/flutter/flutter/pull/157100/checks?check_run_id=32553683214) from [build failure](https://ci.chromium.org/ui/p/flutter/builders/try/Mac%20tool_integration_tests_5_5/3289/overview) shows in the [log](https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8732087288775205121/+/u/run_test.dart_for_tool_integration_tests_shard_and_subshard_5_5/stdout)
```
07:29 +31 -1: test/integration.shard/isolated/native_assets_test.dart: flutter build apk succeeds without libraries [E]
  Exception: flutter build failed: 1
  Unhandled exception:
  FormatException: No value was provided for required key: out_dir_shared
  #0      MapJsonUtils.get (package:native_assets_cli/src/json_utils.dart:50:7)
  #1      MapJsonUtils.path (package:native_assets_cli/src/json_utils.dart:25:48)
  #2      new HookConfig (package:native_assets_cli/src/config.dart:88:38)
  #3      new BuildConfig (package:native_assets_cli/src/config.dart)
  #4      build (package:native_assets_cli/src/api/build.dart:99:18)
  #5      main (file:///Volumes/Work/s/w/ir/x/t/pZaMJY/package_with_native_assets/hook/build.dart:4:9)
  #6      _delayEntrypointInvocation.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:295:33)
  #7      _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:184:12)
  Building native assets for package:package_with_native_assets failed.
```

The root cause for this is if the test uses newest `package:native_assets_cli` instead of a fixed version (so CI isn't hermetic/deterministic, tests can change results if something got uploaded to pub - which happend in this case) - the new `0.9.0` version of `package:native_asset_cli` can only be used from 3a83e43ede5700dfe4ea92709fec2c2365cdef4f onwards.

The [offending code](https://github.com/flutter/flutter/blob/beta/packages/flutter_tools/test/integration.shard/isolated/native_assets_test.dart#L607)
```dart

  final ProcessResult result2 = await processManager.run(
    <String>[
      flutterBin,
      'pub',
      'add',
      'native_assets_cli',
    ],
    workingDirectory: packageDirectory.path,
  );
  expect(result2, const ProcessResultMatcher());
```

=> This was a problem in the test
=> I believe @matanlurey fix in cc90a424c98698ed78281b007a50cfb1da1c004d resolved this

@reidbaker @bkonyi You may need to cherr-pick cc90a424c98698ed78281b007a50cfb1da1c004d.

Iff the cherry-picks to branches also include updating pub dependencies (i.e. updated via `flutter upgrade-packages` on the branch - especially if `package:logging` is upgraded), then you may also want to cherry-pick another fix to native asset tests, namely 31c1292be3fa0b4bac3ed05f035a816ba028f5e1",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
Part of https://github.com/flutter/flutter/issues/156111

### Changelog Description:
Updates the Android plugin templates to use newer configurations that have better compatibility with recent versions of AGP.

### Impact Description:
Without this, plugins created by `flutter create` will have deprecation warnings out of the box for developers whose projects use new versions of AGP, and will eventually fail to compile without manual updates.

### Workaround:
Manually change the Java version after running `flutter create`

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [ ] Yes
  - [x] No

### Validation Steps:
1. `flutter create -t plugin some_plugin --platforms=android`
2. Update the example project to the latest version of AGP
3. Build

There should not be warnings about `source value 8 is obsolete` or `target value 8 is obsolete`.
",Is this change related to the bug listed? https://github.com/flutter/flutter/issues/156111 This was an issue from switching from the 3.26 branch target to the 3.27 branch target. I ended up doing a manual rebase and force pushed and that seems to have gotten rid of the unwanted changes.
158222,2024-11-06T00:29:39Z,2024-11-06T01:16:37Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,606111.0,0,0,0,0,3777869.327407,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/a3741d6248b7...f03f11300a9d

2024-11-05 robert.ancell@canonical.com Document fields in FlEngine (flutter/engine#56266)
2024-11-05 matanlurey@users.noreply.github.com Add missing TOC. (flutter/engine#56389)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158218,2024-11-05T23:30:32Z,2024-11-06T00:16:59Z,engine-flutter-autoroll,1,0,14,4,2,1,1,"['engine', 'autosubmit']",987.0,0,609658.0,0,0,0,0,3777871.374588,,0,14,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158218, due to - The status or check suite [Mac tool_integration_tests_2_5](https://cr-buildbucket.appspot.com/build/8732066454551718417) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/e5e06c97c33c...a3741d6248b7

2024-11-05 jason-simmons@users.noreply.github.com Increase timeouts for Linux Fuchsia and Linux Web Framework Tests builders (flutter/engine#56387)
2024-11-05 chris@bracken.jp iOS: Use standard Obj-C cflags for ios_test_flutter (flutter/engine#56384)
2024-11-05 robert.ancell@canonical.com Remove unnecessary method for getting engine switches (command line). (flutter/engine#56265)
2024-11-05 robert.ancell@canonical.com Remove FlScrollingViewDelegate (flutter/engine#56270)
2024-11-05 chris@bracken.jp fml: delete scoped_nsobject.h,mm (flutter/engine#56382)
2024-11-05 skia-flutter-autoroll@skia.org Roll Skia from b3be9cb59fe8 to 82175b411c80 (2 revisions) (flutter/engine#56383)
2024-11-05 jason-simmons@users.noreply.github.com [Impeller] Delete any remaining GL objects during destruction of the ReactorGLES (flutter/engine#56361)
2024-11-05 mdebbar@google.com [web] Switch all fonts to WOFF2 (non-split) (flutter/engine#56035)
2024-11-05 jonahwilliams@google.com [Impeller] exploit content context options' perfect hash function. (flutter/engine#56360)
2024-11-05 skia-flutter-autoroll@skia.org Roll Skia from 7989f782dbf4 to b3be9cb59fe8 (6 revisions) (flutter/engine#56380)
2024-11-05 skia-flutter-autoroll@skia.org Roll Dart SDK from b39c729740eb to 3e840340c412 (1 revision) (flutter/engine#56377)
2024-11-05 jonahwilliams@google.com [Impeller] match Skia's old VMA default block size. (flutter/engine#56368)
2024-11-05 chris@bracken.jp iOS: Refactor ShellTestPlatformViewMetal (flutter/engine#56370)
2024-11-05 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from amgHXcqtplha8LuI_... to z1otZzn3yKuGnu1st... (flutter/engine#56374)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from amgHXcqtplha to z1otZzn3yKuG

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158533,2024-11-12T21:46:28Z,2024-11-13T00:42:01Z,matanlurey,2,1,3,40,2,1,1,['tool'],3159.0,0,10703.0,1,0,0,0,3778271.329773,,0,3,0,False,"['auto-submit[bot]', 'andrewkolos']","auto label is removed for flutter/flutter/158533, due to - The status or check suite [Mac channels_integration_test](https://cr-buildbucket.appspot.com/build/8731437931995953809) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 YAYYYY 🎉 🎉 🎉 🎉 Formatting :p LGTM",Formatting :p LGTM,"Closes https://github.com/flutter/flutter/issues/152274.

I ran into https://github.com/flutter/flutter/issues/152274 myself, so seemed like an easy fix.","```suggestion
      '   List Flutter channels.\n'
```"
158408,2024-11-09T00:17:00Z,2024-11-13T00:38:16Z,jmagman,0,3,1,30,1,2,1,[],,1,347056.0,0,0,0,0,3778486.472871,,0,1,0,False,[],LGTM,LGTM,"1. Delete bundler and docker, these directories no longer exist and we have no Docker or Gemfiles any more.
2. Update outdated reviewer list which was blocking any reviewers from being added. https://github.com/flutter/flutter/pull/157473#issuecomment-2433542624
3. Change github action update from daily to weekly
4. Add a `group` so all github action dependencies are updated in the same PR, instead of one-per-dependency. The PR will look like:
__________

<img width=""400"" alt=""Screenshot 2024-11-08 at 11 08 52 AM"" src=""https://github.com/user-attachments/assets/eebedf69-3fae-409b-9c88-c3afc8036c52"">

__________

See also https://github.com/flutter/packages/pull/8044

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","What does this entry do? Run all github actions? Will this mean the labeler and release workflows will run only weekly? No, this `.github/dependabot.yml` config is telling dependabot to update the `uses` dependencies needed to run github actions.  

For example, dependabot opened https://github.com/flutter/flutter/pull/156366 and updated all the `.github/workflows/` yaml files to point to the latest version of `actions/checkout`
https://github.com/flutter/flutter/blob/c36ad608da8ccc0be9c4ee95df4eb594c8aa46b2/.github/workflows/coverage.yml#L22

This PR:
1. Groups all the dependabot updates for github-actions into one PR.  For example, if there were an update for `actions/checkout` and `codecov/codecov-action`, dependabot will send out one PR updating both instead of one PR per dependency.
https://github.com/flutter/flutter/blob/c36ad608da8ccc0be9c4ee95df4eb594c8aa46b2/.github/workflows/coverage.yml#L22-L26
2. Changes this dependabot version check from happening daily to happening weekly. Ahh ok, thanks for the clarification."
158529,2024-11-12T20:44:05Z,2024-11-12T21:22:57Z,christopherfujino,3,0,2,4,1,1,1,['warning: land on red to fix tree breakage'],7520.0,0,11504.0,0,0,0,0,3781214.94243,,0,2,0,False,"['christopherfujino', 'MitchellGoodwin']","Apparently this didn't work? https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20plugin_test/21536/infra I wonder if the dependency is a minimum instead of exact? > I wonder if the dependency is a minimum instead of exact?

I think the way that dimensions work is that each bot has a set of dimensions, which are key value string pairings, and if you set a desired dimension on the request then swarming looks for a bot that matches ALL of the dimensions.

In other words, I don't think it knows about semver, it just knows that some bots have the string `Ubuntu-20` defined as an OS value.LGTM",LGTM,"Work around propagation from https://github.com/flutter/flutter/issues/158521

",
158525,2024-11-12T19:42:21Z,2024-11-12T23:24:07Z,eyebrowsoffire,1,0,2,472,3,1,1,['tool'],627.0,0,13307.0,0,0,0,0,3783116.461079,,0,2,0,False,['matanlurey'],"Hmm:

```txt
  error â�¢ The function 'addLinkHookDepedendency' isn't defined â�¢ packages/flutter_tools/test/integration.shard/isolated/native_assets_test.dart:553:9 â�¢ undefined_function
   info â�¢ Unreachable member 'addLinkHookDependency' in an executable library â�¢ packages/flutter_tools/test/integration.shard/isolated/native_assets_test.dart:568:14 â�¢ unreachable_from_main
```",,"This is the same as https://github.com/flutter/flutter/pull/158395 but for stable. This is a test-only change, just to make sure that CI continues working on the stable branch.",
158528,2024-11-12T20:20:40Z,2024-11-12T22:07:59Z,reidbaker,1,0,2,20,2,2,2,[],2306.0,0,6440.0,0,0,0,0,3787684.561196,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158528, due to - The status or check suite [Linux plugin_test](https://cr-buildbucket.appspot.com/build/8731444232001487521) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"Follow @matanlurey's example and include how to run a test at the top of the test file. 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
",
158131,2024-11-04T20:32:57Z,2024-11-12T21:21:45Z,flutteractionsbot,4,0,4,26,3,1,1,"['tool', 'cp: review']",2.0,0,694129.0,0,0,0,0,3790460.263431,,0,4,0,False,"['itsjustkevin', 'flutteractionsbot', 'LouiseHsu']"," @LouiseHsu please fill out the PR description above, afterwards the release team will review this request. The cherry pick to stable is here https://github.com/flutter/flutter/pull/158125 @LouiseHsu this cherry-pick request has failing tests.  > @LouiseHsu this cherry-pick request has failing tests.

i think its getting blocked by this https://github.com/flutter/flutter/issues/158120",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/157359

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Prevents `flutter build ios-framework --xcframework` from copying an extraneous Flutter.xcframework.dSYM into the App.framework folder

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

Previously, `flutter build ios-framework --xcframework` would fail with
`error: Multiple commands produce '......./BuildProductsPath/Release-iphoneos/Flutter.framework.dSYM/Contents'`. 

Is there a workaround for this issue?

The workaround is to delete `App.xcframework/ios-arm64/dSYMs/Flutter.framework.dSYM`.

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

Try to build any example app with `flutter build ios-framework --xcframework`, then inspect the App.framework folder. It should only include  `App.framework.dSYM`, and not `Flutter.xcframework.dSYM `",
158138,2024-11-04T21:55:16Z,2024-11-12T20:01:26Z,loic-sharma,0,0,1,81,5,1,1,['tool'],,0,684371.0,0,0,0,0,3795279.645056,,1,1,0,False,[],LGTM,LGTM,"In the future, it will be possible for Swift Package Manager to be enabled on one but not all platforms (see https://github.com/flutter/flutter/issues/151567#issuecomment-2455941279).

This updates the `.flutter-plugin-dependencies` file format to separate iOS's and macOS's SwiftPM enablement. For now, these platforms will always have the same value.

This `.flutter-plugin-dependencies` file is read by our CocoaPods scripts to determine whether we should use CocoaPods or not to inject plugins.

Part of https://github.com/flutter/flutter/issues/151567

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158357,2024-11-08T00:31:45Z,2024-11-12T20:19:47Z,hannah-hyj,0,3,4,49,2,2,1,"['framework', 'f: material design']",,0,416882.0,0,0,0,0,3794179.704384,,0,4,0,False,[],LGTM! Thanks for the fix!,LGTM! Thanks for the fix!,"fix https://github.com/flutter/flutter/issues/128697 

PopupMenuButton can take customized child, in that case if ` widgt.style.tapTargetSize` is set to `padded`,  PopupMenuButton should support it. 

if child is null, default child is an iconButton, which is already 48x48. 


## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I think here we can default to the `ThemeData.materialTapTargetSize` value. Then here would be `final MaterialTapTargetSize tapTargetSize = widget.style?.tapTargetSize ?? popupMenuTheme.tapTargetSize ?? Theme.of(context).materialTapTargetSize;` We can also add this property to `PopupMenuTheme` so developers can control the button size easier:) 
```suggestion
      final MaterialTapTargetSize tapTargetSize = widget.style?.tapTargetSize ?? Theme.of(context).materialTapTargetSize;
``` I tried this but

if it defaults to  Theme.of(context).materialTapTargetSize, this PR will be a breaking change because some buttons' size will be increased to at least 48X48, looks like some flutter_cacoon tests are failing because of that.(some g3 tests too.)

since I can't apply a flutter_cacoon fix together with this PR. I'm thinking the only way to land this PR with  it default to Theme.of(context).materialTapTargetSize  is by 4 steps.
1.  Merge this PR with default to MaterialTapTargetSize.shrinkWrap so it's not a breaking change.
2. Update flutter_cacoon tests and g3 tests to use MaterialTapTargetSize.padded in its PopupMenuButton
3. Update PopupMenuButton to default to Theme.of(context).materialTapTargetSize
4. Remove now redundant MaterialTapTargetSize.padded in flutter_cacoon tests and g3 tests

wdyt?
 I see. Sounds good to me! If we want to add this property to PopupMenuTheme, we can also add a separate PR later. This PR LGTM!"
158194,2024-11-05T18:01:28Z,2024-11-05T18:52:40Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606864.0,0,0,0,0,3800416.392626,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/f56401062e42...e5e06c97c33c

2024-11-05 skia-flutter-autoroll@skia.org Roll Skia from b2bb3af36da3 to 7989f782dbf4 (1 revision) (flutter/engine#56358)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158481,2024-11-11T23:07:03Z,2024-11-12T18:14:45Z,andrewkolos,0,1,1,33,2,2,1,['tool'],,0,68863.0,0,0,0,0,3801682.75624,,0,1,0,False,[],,,"Fixes https://github.com/flutter/flutter/issues/153777.

To summarize that issue, `ErrorHandlingFileSystem.systemTempDirectory` calls [`LocalFileSystem.systemTempDirectory`](https://github.com/flutter/flutter/blob/45c8881eb289e3b68e890cefa0acd13dbf800147/packages/flutter_tools/lib/src/base/file_system.dart#L229), which makes a `Directory.createSync` call, which can throw exceptions that _should_ be handled and result in a graceful tool exit (e.g. insufficient storage). However, we aren't catching those, hence this issue. 

All we need to do is wrap that call with the `FileSystemException`-handling logic we already have in the tool. See the diff.

I don't think I'll be cherry-picking this since 1) it's not an extremely common crash and 2) users can probably pick apart the crash message and figure out that they need to clear some storage space to proceed.

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","To re-summarize, `delegate.systemTempDirectory` could do anything, including making file system calls, so we need to wrap this with `_runSync` to catch any `FileSystemException` (that should result in a graceful tool exit)."
157218,2024-10-19T06:14:07Z,2024-11-12T17:59:49Z,thejitenpatel,26,1,3,8,3,3,3,"['framework', 'a: fidelity', 'f: cupertino', 'will affect goldens']",3.0,0,2115943.0,1,0,0,0,3802579.273682,,0,3,0,False,"['dkwingsmt', 'victorsanni', 'MitchellGoodwin', 'thejitenpatel', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. This PR will need images with side-by-side comparisons with native, new tests, and fixes to existing tests. > This PR will need images with side-by-side comparisons with native, new tests, and fixes to existing tests.

Sure @victorsanni! I will add images with a side-by-side comparison with native, and also fix the existing tests. However, I'm having a bit of trouble understanding the golden test documentation. Could you please help me with the following:

Do we need to create or update the golden test case? If yes, what are the steps involved in doing so?
 Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/157218) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157218 at sha a1da43a44d4f2d63d8697084509d1ca0710b3797_

 > Sure @victorsanni! I will add images with a side-by-side comparison with native, and also fix the existing tests. However, I'm having a bit of trouble understanding the golden test documentation. Could you please help me with the following:
> 
> Do we need to create or update the golden test case? If yes, what are the steps involved in doing so?

Considering its a color change, the goldens are expected to change.
 > Do we need to create or update the golden test case? If yes, what are the steps involved in doing so?

Nothing you need to do. One of us with access to the golden test tool will triage it and approve the changes from this PR when it's ready to merge. As such, screenshots will be helpful. Can you explain how you got those numbers? And can you illustrate (probably with a side-by-side comparison, as mentioned by comments above) how you verify that those numbers produce native-like effects?

Thank you for you contribution! Hi @victorsanni, @MitchellGoodwin, @dkwingsmt, here's the side-by-side comparison with native.

| Native | Flutter |
|--------|--------|
| <img src=""https://github.com/user-attachments/assets/ac530161-6014-4a5d-ad8d-d2125cd9dff0"" width=""400""/> | <img src= ""https://github.com/user-attachments/assets/03828f23-1585-4b34-824d-7789a4437474"" width=""400""/>|
| <img src= ""https://github.com/user-attachments/assets/f2e20f31-238e-48ac-8ade-097b728ea941"" width=""400""/> | <img src= ""https://github.com/user-attachments/assets/cff2fd47-60b3-40c7-949a-d0acc2fc174b"" width=""400""/> | 

Also, @dkwingsmt, I derived those numbers from GitHub Issue #80921, where they were initially suggested for achieving native-like effects.

To verify the results, I created an alert dialog box in SwiftUI and manually compared the colors to ensure accuracy.  > Hi @victorsanni, @MitchellGoodwin, @dkwingsmt, here's the side-by-side comparison with native.

Are the Flutter images before or after this PR? It would be easy to see the changes if the images show native, flutter before, and flutter after. <img width=""764"" alt=""Screenshot 2024-10-29 at 11 29 22 AM"" src=""https://github.com/user-attachments/assets/fb9eecf3-659a-4fdf-9748-698a4a7a0e23"">
It looks like the separator between the actions and the main content needs to be lightened as well. > It looks like the separator between the actions and the main content needs to be lightened as well.

And the middle divider is also a little too light. Just from visually looking at it I wonder if the dividers are translucent. @thejitenpatel when trying to fix this, it might be helpful to draw the native dialog in different color backgrounds. 
 Hi @victorsanni, @MitchellGoodwin as requested, here's the detailed comparison of before and after PR changes with native.

**Before PR**
| Native | Flutter (master) |
|----------|----------|
| <img src=""https://github.com/user-attachments/assets/b4e1f13c-df70-44c1-a908-3734f3e6c56b"" width=""400""/> | <img src=""https://github.com/user-attachments/assets/d045a75c-c20f-48bd-b540-74003cd78fbc"" width=""400""/> |
| <img src=""https://github.com/user-attachments/assets/87dafba9-1ef2-4356-a0c6-0696d3eb328b"" width=""400""/> | <img src=""https://github.com/user-attachments/assets/3eeeaf0f-b637-40b6-8a61-357928523d4e"" width=""400""/> |

**After PR**

| Native | Flutter (PR #157218) |
|--------|--------|
| <img src=""https://github.com/user-attachments/assets/ac530161-6014-4a5d-ad8d-d2125cd9dff0"" width=""400""/> | <img src= ""https://github.com/user-attachments/assets/03828f23-1585-4b34-824d-7789a4437474"" width=""400""/>|
| <img src= ""https://github.com/user-attachments/assets/f2e20f31-238e-48ac-8ade-097b728ea941"" width=""400""/> | <img src= ""https://github.com/user-attachments/assets/cff2fd47-60b3-40c7-949a-d0acc2fc174b"" width=""400""/> | @thejitenpatel to add to @dkwingsmt's comment, there's no pressure to add the separator fix. But it would be nice to have that here as well, in order to close the linked issue entirely :) Thank you Victor for the addition, although I must note that the separator issue is actually really complicated, and I would recommend doing so in a different PR.

(I don't know why the current screenshots show almost no horizontal separators, maybe it's a bug)

I can't find the issues on this problem for now, but there has been back and forth on how the thickness of the separator is defined, and my latest discovery is that iOS devices draw them with 1 _physical_ pixel thick. Yes, this means that the separator on a low-res iPhone is thicker than a high-res one. But how should Flutter handle it? There used to be complaint on the separators looking differently on Android.

In short, fixing the separator might require further investigation and comparison. (Feel free to research on it though!) I saw there was another open issue for the separators: https://github.com/flutter/flutter/issues/61164

Maybe this issue can be closed with this PR and target the separator fix to that issue instead?
 > I saw there was another open issue for the separators: #61164
> 
> Maybe this issue can be closed with this PR and target the separator fix to that issue instead?

Sounds good! Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/157218).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157218 at sha a942ab03399d9fd3e1abc0d13094c94b71806494_

 > the separator issue is actually really complicated, and I would recommend doing so in a different PR.

> there has been back and forth on how the thickness of the separator is defined, and my latest discovery is that iOS devices draw them with 1 _physical_ pixel thick.

The thickness of the horizontal separator might be complicated, but what about just the color? It looks darker than native. Or maybe that is part of the thickness?
 Hi @MitchellGoodwin,

Thanks for the suggestion! I tried using `CupertinoColors.separator.resolveFrom(context)` &
`final Color dividerColor = CupertinoDynamicColor.resolve(CupertinoColors.separator, context);` as recommended, but it doesn't seem to be working as expected. The divider color still isn’t adapting to the theme correctly. Do you have any additional suggestions or insights on what might be going wrong? Any help would be appreciated! > Hi @MitchellGoodwin,
> 
> Thanks for the suggestion! I tried using `CupertinoColors.separator.resolveFrom(context)` & `final Color dividerColor = CupertinoDynamicColor.resolve(CupertinoColors.separator, context);` as recommended, but it doesn't seem to be working as expected. The divider color still isn’t adapting to the theme correctly. Do you have any additional suggestions or insights on what might be going wrong? Any help would be appreciated!

Have you checked whether the value of `dividerColor` has changed as intended? > The divider color still isn’t adapting to the theme correctly.

Is it showing as the same color as before? And is it not picking up the brightness, the elevation, or both?

`CupertinoDynamicColor.resolve` may need to be called further down. Possibly in the `_Divider` class itself. I haven't tested to be sure, but I believe that this PR didn't introduce that behavior, so it's not required to fix it in this PR. But my instinct is that the divider color will be an easy fix *somewhere*, it just may need some trial and error to find where it is. Give it a try and see what happens. If it doesn't work after a bit of trying, I'll approve the PR as-is and make a separate issue for that divider.  > > Hi @MitchellGoodwin,
> > Thanks for the suggestion! I tried using `CupertinoColors.separator.resolveFrom(context)` & `final Color dividerColor = CupertinoDynamicColor.resolve(CupertinoColors.separator, context);` as recommended, but it doesn't seem to be working as expected. The divider color still isn’t adapting to the theme correctly. Do you have any additional suggestions or insights on what might be going wrong? Any help would be appreciated!
> 
> Have you checked whether the value of `dividerColor` has changed as intended?

Hi @dkwingsmt,

I've checked that the `dividerColor` is changing as expected, but it seems the actual Divider itself isn't reflecting this change. > Is it showing as the same color as before? And is it not picking up the brightness, the elevation, or both?
> 
> `CupertinoDynamicColor.resolve` may need to be called further down. Possibly in the `_Divider` class itself.

@MitchellGoodwin, It’s showing as the same color as before—no noticeable change. It doesn’t seem to be picking up the brightness correctly, and the elevation appears to be slightly lower than expected. 

Attaching screenshot of this PR for your reference:

 <img src=""https://github.com/user-attachments/assets/268dda8d-20c5-4719-aec1-7db1b58bc6e6"" width=""400""/>

 Hi @MitchellGoodwin,

You’re correct that this PR didn’t introduce the behavior. The issue occurs specifically when a horizontal divider is drawn—it doesn’t resolve the color as expected _(screenshot 1.0)_. It is taking `elevatedColor` property if I'm not wrong, whereas the vertical divider resolves it correctly via the `_CupertinoAlertActionSection` class _(screenshot 1.1)._

To address this, I added `CupertinoDynamicColor.resolve` in the `_CupertinoAlertDialogState` class, which helps resolve the color issue for the horizontal divider. However, it still doesn’t fully address the brightness, and the elevation appears slightly less than expected.

To further address the color issue, as suggested, I also applied `CupertinoDynamicColor.resolve` directly in the Divider class _(screenshot 1.2)_. The Color got resolved but it's not taking brightness if I am not wrong and elevation seems little less as expected _(screenshot 2.0)_.

Interestingly, if there are more than two buttons, all horizontal dividers render with the correct color, except for the first one _(screenshot 3.0)_

**Screenshot 1.0:**
<img width=""1050"" alt=""Screnshot_1 0"" src=""https://github.com/user-attachments/assets/106be0af-814f-43ff-aadf-80e2fef31909"">

**Screentshot 1.1:**
<img width=""1047"" alt=""Screenshot_1 1"" src=""https://github.com/user-attachments/assets/a678a131-2c5c-453a-8b33-216aeb4592e7"">

[Screenshot 1.2:](https://github.com/user-attachments/assets/247f0895-5bfa-4ae0-8214-570c0c154826)
<img width=""1052"" alt=""Screenshot 2024-11-10 at 7 01 13 PM"" src=""https://github.com/user-attachments/assets/a1df5750-b7c9-4568-969b-a538df15a0fa"">

**Screenshot 2.0: Dialog with single button in this PR**
 <img src=""https://github.com/user-attachments/assets/d61e53d2-9b3c-452d-90b4-d05c44f5aa57"" width=""400""/>

**Screenshot 3.0: Current behavior after adding more than two buttons in this PR**
 <img src=""https://github.com/user-attachments/assets/247f0895-5bfa-4ae0-8214-570c0c154826"" width=""400""/> Oh! You're right. I think I made a mistake at 
https://github.com/flutter/flutter/pull/150410/files#diff-4ea2907696de4fecf42f2ca56278a7b1d90c28921b1259d18ae28b1a2553d8e8R378

The `dividerColor` is never resolved here before being passed to `_Divider`, which doesn't resolve either. Thank you for your investigation!LGTM! The colors indeed look much closer to native. Thank you for your contribution and explanation!

Although I wouldn't mark https://github.com/flutter/flutter/issues/80921 as fixed, because the issue also pointed out the problem of the separation line. Can you change the PR description so that it says something like ""Fix part of https://github.com/flutter/flutter/issues/80921"" and Github doesn't close the issue right away? LGTM! Thanks for the PR. It looks like the for the horizontal divider, the CupertinoDynamicColor, `CupertinoColors.separator` isn't resolving itself so it's using the same color for all themes. https://github.com/flutter/flutter/blob/a942ab03399d9fd3e1abc0d13094c94b71806494/packages/flutter/lib/src/cupertino/dialog.dart#L379

The vertical dividers within the actions are resolving so they don't have an issue. Adding a resolve to that line should fix that. @thejitenpatel thank you so much for looking into the divider, and submitting this PR in the first place. That officially sounds like a bigger pain to fix than I expected, so I'm going to approve this PR and create a separate issue for the divider. Thank you so much for the fix!","LGTM! The colors indeed look much closer to native. Thank you for your contribution and explanation!

Although I wouldn't mark https://github.com/flutter/flutter/issues/80921 as fixed, because the issue also pointed out the problem of the separation line. Can you change the PR description so that it says something like ""Fix part of https://github.com/flutter/flutter/issues/80921"" and Github doesn't close the issue right away? LGTM! Thanks for the PR. It looks like the for the horizontal divider, the CupertinoDynamicColor, `CupertinoColors.separator` isn't resolving itself so it's using the same color for all themes. https://github.com/flutter/flutter/blob/a942ab03399d9fd3e1abc0d13094c94b71806494/packages/flutter/lib/src/cupertino/dialog.dart#L379

The vertical dividers within the actions are resolving so they don't have an issue. Adding a resolve to that line should fix that. @thejitenpatel thank you so much for looking into the divider, and submitting this PR in the first place. That officially sounds like a bigger pain to fix than I expected, so I'm going to approve this PR and create a separate issue for the divider. Thank you so much for the fix!","This PR addresses an issue where the `CupertinoAlertDialog` was not fully visible in dark mode. The dialog now adapts better to dark mode themes, ensuring proper contrast and readability across different UI elements. 

Fixes: #80921 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",Can you teach me why this change is needed? Actually I can't even find the usage of this variable in Cupertino... 
158510,2024-11-12T15:18:59Z,2024-11-12T16:33:51Z,TahaTesser,1,0,1,123,2,1,1,"['framework', 'f: material design']",2331.0,0,6432.0,0,0,0,0,3805799.542425,,1,1,0,False,['TahaTesser'],"> LGTM!

Thanks Bruno.LGTM!",LGTM!,"Fixes [`NavigationBar` only allows `labelTextStyle` from `NavigationBarTheme` ](https://github.com/flutter/flutter/issues/158508)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    const TextStyle selectedTextStyle =
        TextStyle(fontSize: 15, color: Color(0xFF00FF00));
    const TextStyle unselectedTextStyle =
        TextStyle(fontSize: 15, color: Color(0xFF0000FF));
    const TextStyle disabledTextStyle =
        TextStyle(fontSize: 16, color: Color(0xFFFF0000));

    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
          navigationBarTheme: NavigationBarThemeData(
        labelTextStyle: WidgetStatePropertyAll(
          TextStyle(
            fontSize: 14,
            fontWeight: FontWeight.bold,
            color: Theme.of(context).colorScheme.primary,
          ),
        ),
      )),
      home: Scaffold(
        appBar: AppBar(
          title: const Text('NavigationBar Sample'),
        ),
        body: Center(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Text(
              ""NavigationBar labels are customized using NavigationBar.labelTextStyle"",
              style: Theme.of(context).textTheme.headlineSmall,
              textAlign: TextAlign.center,
            ),
          ),
        ),
        bottomNavigationBar: NavigationBar(
          labelTextStyle: const WidgetStateProperty<TextStyle?>.fromMap(
            <WidgetStatesConstraint, TextStyle?>{
              WidgetState.disabled: disabledTextStyle,
              WidgetState.selected: selectedTextStyle,
              WidgetState.any: unselectedTextStyle,
            },
          ),
          onDestinationSelected: null,
          destinations: const <Widget>[
            NavigationDestination(
              icon: Icon(Icons.home),
              label: 'Home',
            ),
            NavigationDestination(
              icon: Icon(Icons.favorite_rounded),
              label: 'Favorites',
            ),
            NavigationDestination(
              enabled: false,
              icon: Icon(Icons.settings),
              label: 'Settings',
            ),
          ],
        ),
      ),
    );
  }
}
```

</details>

### Preview

<img width=""719"" alt=""Screenshot 2024-11-12 at 17 18 00"" src=""https://github.com/user-attachments/assets/2b489bfa-78a3-4766-bc22-9273d76eadcd"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158179,2024-11-05T16:02:42Z,2024-11-05T16:48:20Z,engine-flutter-autoroll,0,0,11,2,1,1,1,['autosubmit'],,0,606798.0,0,0,0,0,3807610.826877,,0,11,0,False,[],,,"
https://github.com/flutter/packages/compare/796afa35071d...721943194945

2024-11-05 jonahwilliams@google.com [vector_graphics*] Relax dependency constraints of vector_graphics, vector_graphics_codec, vector_graphics_compiler, flutter_svg  (flutter/packages#8018)
2024-11-04 kallentu@google.com [various] Add `missing_code_block_language_in_doc_comment` lint to flutter/packages. (flutter/packages#6473)
2024-11-04 stuartmorgan@google.com [various] Update example apps to Kotlin 1.9.0 (flutter/packages#7998)
2024-11-04 cedvandenbosch@gmail.com [go_router] add current state getter (flutter/packages#7651)
2024-11-04 jessiewong401@gmail.com Applied Gradle Plugins Declaratively for Multiple Plugin Example Apps (flutter/packages#7968)
2024-11-04 engine-flutter-autoroll@skia.org Roll Flutter from f86b77721524 to 8591d0c16a6c (16 revisions) (flutter/packages#8015)
2024-11-04 stuartmorgan@google.com [camera_windows] Revert: Support image streams on Windows platform (flutter/packages#7951)
2024-11-02 stuartmorgan@google.com [camera] Use Pigeon for Windows C++->Dart (flutter/packages#8001)
2024-11-02 kevmoo@users.noreply.github.com [script/tool] update dependencies (flutter/packages#7992)
2024-11-01 engine-flutter-autoroll@skia.org Roll Flutter from 0fe615343bd9 to f86b77721524 (16 revisions) (flutter/packages#8000)
2024-11-01 kevmoo@users.noreply.github.com [path_parsing] deprecate utility functions that should be private (flutter/packages#7993)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158511,2024-11-12T16:04:44Z,2024-11-12T16:05:17Z,auto-submit[bot],0,0,1,233,3,1,1,"['framework', 'd: api docs', 'd: examples', 'revert of']",,1,35.0,0,0,0,0,3809452.282429,,0,1,0,False,[],,,"<!-- start_original_pr_link -->
Reverts: flutter/flutter#158309
<!-- end_original_pr_link -->
<!-- start_initiating_author -->
Initiated by: bleroux
<!-- end_initiating_author -->
<!-- start_revert_reason -->
Reason for reverting: added test is failing on CI

<!-- end_revert_reason -->
<!-- start_original_pr_author -->
Original PR Author: ValentinVignal
<!-- end_original_pr_author -->

<!-- start_reviewers -->
Reviewed By: {bleroux}
<!-- end_reviewers -->

<!-- start_revert_body -->
This change reverts the following previous change:
Fixes https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/material/color_scheme/dynamic_content_color.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes

<!-- end_revert_body -->
",
158169,2024-11-05T11:01:13Z,2024-11-05T11:51:27Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606878.0,0,0,0,0,3825621.848401,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/7207a8fbec93...f56401062e42

2024-11-05 skia-flutter-autoroll@skia.org Roll Dart SDK from 695831e9a70b to b39c729740eb (1 revision) (flutter/engine#56372)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jsimmons@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158309,2024-11-07T07:20:12Z,2024-11-12T11:49:25Z,ValentinVignal,5,4,3,233,3,2,1,"['framework', 'd: api docs', 'd: examples']",462840.0,0,463475.0,0,0,0,0,3809486.119273,,0,3,0,False,"['auto-submit[bot]', 'bleroux', 'TahaTesser']","@bleroux @ValentinVignal 
This is breaking the tree
https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8731474074401633873/+/u/run_test.dart_for_framework_tests_shard_and_subshard_misc/stdout This is the error thrown

```c
04:38 +712 ~2: /b/s/w/ir/x/w/flutter/examples/api/test/material/color_scheme/dynamic_content_color.0_test.dart: The theme colors are created dynamically from the first image
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly 6 matching candidates
  Actual: _TypeWidgetFinder:<Found 0 widgets with type ""Image"": []>
   Which: means none were found but some were expected
``` Reverting while we will try to figure out a fix. A reason for requesting a revert of flutter/flutter/158309 could
      not be found or the reason was not properly formatted. Begin a comment with **'Reason for revert:'** to tell the bot why
      this issue is being reverted. Reason for revert: added test is failing on CI
![image](https://github.com/user-attachments/assets/b62917cd-4bfd-48da-9227-609c4433b0b1)

Congratulations for finishing this missing example tests task :pray: ","![image](https://github.com/user-attachments/assets/b62917cd-4bfd-48da-9227-609c4433b0b1)

Congratulations for finishing this missing example tests task :pray: ","Fixes https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/material/color_scheme/dynamic_content_color.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","```suggestion
        // Loads the images.
        // Using runAsync forces the streams to complete. This is needed because loading the fake image
        // is a real async task.
```

Here is a proposed comment to give a clue about why the `runAsync` are needed. ```suggestion
  StreamSubscription<List<int>> listen(
    void Function(List<int> event)? onData, {
    Function? onError,
    void Function()? onDone,
    bool? cancelOnError,
  }) {
    return Stream<List<int>>.value(_blueSquarePng).listen(
      onData,
      onDone: onDone,
      onError: onError,
      cancelOnError: cancelOnError,
    );
  }
``` That's way better, I changed it in [format: Add better comment for the runAsyncs and better formatting](https://github.com/flutter/flutter/pull/158309/commits/90d28317d442abbfa4cb8c36f904a2d63f42a47b) Nice, I've updated it in [format: Add better comment for the runAsyncs and better formatting](https://github.com/flutter/flutter/pull/158309/commits/90d28317d442abbfa4cb8c36f904a2d63f42a47b) 😊 "
158156,2024-11-05T06:51:15Z,2024-11-05T07:47:24Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,607476.0,0,0,0,0,3840022.460423,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/418609dd5b58...7207a8fbec93

2024-11-05 skia-flutter-autoroll@skia.org Roll Dart SDK from 0addd35215d0 to 695831e9a70b (3 revisions) (flutter/engine#56371)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158152,2024-11-05T04:37:05Z,2024-11-05T05:21:22Z,engine-flutter-autoroll,0,0,3,2,1,1,1,"['engine', 'autosubmit']",,0,611927.0,0,0,0,0,3843623.063075,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/6271a92a376f...418609dd5b58

2024-11-05 jonahwilliams@google.com remove mock vulkan memory test. (flutter/engine#56367)
2024-11-05 ditman@gmail.com [web] injectPlatformView into correct flutterView (flutter/engine#56334)
2024-11-05 devoncarew@google.com [deps] removed unused deps (dart-lang browser_launcher, clock, bazel_worker, cli_util, csslib, html, json_rpc_2 (flutter/engine#56359)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158148,2024-11-05T01:14:09Z,2024-11-05T02:03:10Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,605927.0,0,0,0,0,3861799.133232,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/75acceedca41...6271a92a376f

2024-11-04 matanlurey@users.noreply.github.com Add and document `et cleanup`. (flutter/engine#56327)
2024-11-04 jonahwilliams@google.com [Impeller] check if memory type is host coherent, avoid flush. (flutter/engine#56350)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158137,2024-11-04T21:43:24Z,2024-11-04T22:35:16Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,608242.0,0,0,0,0,3872129.411772,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/f880b56b6ede...75acceedca41

2024-11-04 skia-flutter-autoroll@skia.org Roll Dart SDK from f238183cf168 to 0addd35215d0 (1 revision) (flutter/engine#56357)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158132,2024-11-04T20:46:25Z,2024-11-04T21:31:16Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,608061.0,0,0,0,0,3875731.385209,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/25c7e471e2ef...f880b56b6ede

2024-11-04 30870216+gaaclarke@users.noreply.github.com Made it so angle builds on linux (flutter/engine#56328)
2024-11-04 jonahwilliams@google.com [Impeller] combine translate* scale mat mul when computing shader transform. (flutter/engine#56352)
2024-11-04 49699333+dependabot[bot]@users.noreply.github.com Bump actions/checkout from 4.2.1 to 4.2.2 (flutter/engine#56191)
2024-11-04 chris@bracken.jp iOS: Eliminate fml::scoped_nsobject pointer use (flutter/engine#56295)
2024-11-04 skia-flutter-autoroll@skia.org Roll Skia from e2ad60ea8039 to b2bb3af36da3 (1 revision) (flutter/engine#56355)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158409,2024-11-09T00:18:25Z,2024-11-11T21:03:31Z,loic-sharma,2,0,1,19,1,2,2,"['tool', 'a: desktop']",23.0,0,247507.0,0,0,0,0,3877965.467775,,0,1,0,False,"['flutter-dashboard[bot]', 'stuartmorgan']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: code refactor with no semantic changeLGTM!",LGTM!,"This is a refactoring with no semantic changes. I will get a text exemption.

Part of https://github.com/flutter/flutter/issues/151567

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158127,2024-11-04T19:42:26Z,2024-11-04T20:34:17Z,engine-flutter-autoroll,0,0,12,4,2,1,1,"['engine', 'autosubmit']",,0,608300.0,0,0,0,0,3879331.603168,,0,12,0,False,[],,,"
https://github.com/flutter/engine/compare/05cb5d7f7939...25c7e471e2ef

2024-11-04 zanderso@users.noreply.github.com Retry mac_unopt one time in presubmit (flutter/engine#56319)
2024-11-04 jonahwilliams@google.com [Impeller] faster descriptor type mapping. (flutter/engine#56351)
2024-11-04 skia-flutter-autoroll@skia.org Roll Skia from 75740b68a282 to e2ad60ea8039 (8 revisions) (flutter/engine#56354)
2024-11-04 109111084+yaakovschectman@users.noreply.github.com Move detection of cutouts in Android engine to `onApplyWindowInsets` (flutter/engine#55992)
2024-11-04 skia-flutter-autoroll@skia.org Roll Dart SDK from 69cec5dc51f9 to f238183cf168 (1 revision) (flutter/engine#56353)
2024-11-04 skia-flutter-autoroll@skia.org Roll Skia from bab7d954758b to 75740b68a282 (1 revision) (flutter/engine#56349)
2024-11-04 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 07KmbdEtnhkg_tUhe... to amgHXcqtplha8LuI_... (flutter/engine#56348)
2024-11-03 skia-flutter-autoroll@skia.org Roll Skia from 6944cd128603 to bab7d954758b (2 revisions) (flutter/engine#56346)
2024-11-02 skia-flutter-autoroll@skia.org Roll Dart SDK from 61bf0877807e to 69cec5dc51f9 (2 revisions) (flutter/engine#56335)
2024-11-02 dkwingsmt@users.noreply.github.com Multiple touches of a stylus should be considered from the same device (flutter/engine#56075)
2024-11-02 skia-flutter-autoroll@skia.org Roll Skia from 89ac72bb4922 to 6944cd128603 (2 revisions) (flutter/engine#56331)
2024-11-02 tugorez@users.noreply.github.com [web] Transfer focus to view rootElement on blur/remove. (flutter/engine#55045)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 07KmbdEtnhkg to amgHXcqtplha

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158454,2024-11-11T14:36:33Z,2024-11-11T19:48:32Z,TahaTesser,0,0,1,44,2,1,1,"['framework', 'f: material design']",,0,19175.0,0,0,0,0,3882011.516744,,0,1,0,False,[],"![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Thanks Taha!","![32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d](https://user-images.githubusercontent.com/8867023/37737237-66e9c9dc-2d10-11e8-8797-13a405eace49.png)

Thanks Taha!","Fixes [Setting hoverColor on ThemeData breaks Chip hover functionality](https://github.com/flutter/flutter/issues/157622)

### Description

The bug is caused by `InkWell.hoverColor`. When `ThemeData.hoverColor` is provided, its drawn on top. To fix this, we can override `InkWell.hoverColor` when Chip state color is provided.

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        hoverColor: const Color(0xFFFF0000),
      ),
      home: Scaffold(
        body: Center(
            child: RawChip(
          color: WidgetStateProperty.resolveWith((states) {
            if (states.contains(WidgetState.hovered)) {
              return const Color(0xFF00fF00);
            }

            return const Color(0xFF0000FF);
          }),
          label: const Text('RawChip'),
          onPressed: () {},
        )),
      ),
    );
  }
}
```

</details>

### Before


https://github.com/user-attachments/assets/f8974af6-5af3-4d7d-9dbe-65bf170d5fa3



### After


https://github.com/user-attachments/assets/89a5315c-c7bd-4456-8594-e2092e43952d


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158379,2024-11-08T15:28:06Z,2024-11-11T15:18:10Z,bkonyi,3,0,2,166,14,1,1,['tool'],225738.0,0,258606.0,0,0,0,0,3898687.611844,,0,2,0,False,"['auto-submit[bot]', 'bkonyi']","auto label is removed for flutter/flutter/158379, due to - The status or check suite [Windows tool_integration_tests_5_9](https://cr-buildbucket.appspot.com/build/8731588813039488145) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158379, due to - The status or check suite [Mac_x64 tool_host_cross_arch_tests](https://cr-buildbucket.appspot.com/build/8731588813115291009) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 > LGTM. Thank you for the cleanup :)

Not a problem! :-)LGTM. Thank you for the cleanup :)",LGTM. Thank you for the cleanup :),Removes duplicated constants and ensures consistency by using package:vm_service as a source of truth for RPC error codes for requests made with package:vm_service.,
155488,2024-09-21T08:55:57Z,2024-11-11T02:47:32Z,goosetapa,7,6,16,105,2,3,3,['tool'],3.0,0,4384296.0,2,0,0,0,3943727.156556,,0,16,0,False,"['goosetapa', 'auto-submit[bot]', 'google-cla[bot]', 'bkonyi', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/155488/checks?check_run_id=30466215560) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request. This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 To pass the PR checks, I have made several commits, resulting in a lengthy commit history. Therefore, I have performed a rebase and force-pushed the final code submission. > Actually, it looks like we're missing some imports in `gradle_test.dart`. Can you add those, fix the trailing space on line 893, and run the test to make sure it's passing?

Yes, I've made the changes as suggested. I've moved the test code from the general.shard to the integration.shard and taken care of it. Thanks @goosetapa! Looks good to me! auto label is removed for flutter/flutter/155488, due to This PR has not met approval requirements for merging. The PR author is not a member of flutter-hackers and needs 1 more review(s) in order to merge this PR.

- Merge guidelines: A PR needs at least one approved review if the author is already part of flutter-hackers or two member reviews if the author is not a flutter-hacker before re-applying the autosubmit label. __Reviewers__: If you left a comment approving, please use the ""approve"" review action instead.Sorry for the delay on this review. LGTM! Actually, it looks like we're missing some imports in `gradle_test.dart`. Can you add those, fix the trailing space on line 893, and run the test to make sure it's passing? LGTM, but it looks like there was a mistake during rebasing here. LGTM :)","Sorry for the delay on this review. LGTM! Actually, it looks like we're missing some imports in `gradle_test.dart`. Can you add those, fix the trailing space on line 893, and run the test to make sure it's passing? LGTM, but it looks like there was a mistake during rebasing here. LGTM :)","**PR Title:**

Remove block and line comments when detecting `'.flutter-plugins'` in `settings.gradle`

---

**Description:**

This PR modifies the `configureLegacyPluginEachProjects` function to remove block (`/* ... */`) and line (`// ...`) comments from the `settings.gradle` or `settings.gradle.kts` file content before checking for the presence of the `'.flutter-plugins'` string. This ensures that only uncommented, meaningful code is considered during the detection, preventing false positives when the string appears within comments.

**Why is this change necessary?**

In some cases, the `'.flutter-plugins'` string may be present inside comments in the `settings.gradle` file. The existing implementation does not account for this and may incorrectly detect the string even when it's commented out. This can lead to unintended behavior, such as configuring plugin projects when it is not necessary.

By removing comments before performing the check, we prevent false positives and ensure that the detection logic is accurate, only acting when the `'.flutter-plugins'` string is present in active code.

**Changes Made:**

- **Added comment removal logic:**
  - Removed block comments (`/* ... */`) using the regular expression `/(?s)\/\*.*?\*\//`.
    - The `(?s)` flag enables dot-all mode, allowing `.` to match newline characters.
  - Removed line comments (`// ...`) using the regular expression `/(?m)\/\/.*$`.
    - The `(?m)` flag enables multi-line mode, so `^` and `$` match the start and end of each line.
  - Combined both comment removal steps into a single chain for efficiency.

- **Updated the string detection:**
  - The check for `'.flutter-plugins'` is now performed on the uncommented content of the `settings.gradle` file.
  - This ensures that only meaningful, uncommented code is considered during detection.

**Issue Fixed:**

- Fixes [#155484](https://github.com/flutter/flutter/issues/155484)

---

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

---

If you need any further assistance or have questions, feel free to reach out!

---

**Links:**

- [Contributor Guide]
- [Tree Hygiene]
- [Flutter Style Guide]
- [Features we expect every widget to implement]
- [CLA]
- [flutter/tests]
- [breaking change policy]
- [Discord]
- [Data Driven Fixes]

[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I think this regex would fail if nested block comments are nested.

Consider `/*/**/ */` in which only `/*/**/` would be matched. Then again I don't think nested block comments are supported in Groovy, so disregard. @andrewkolos Thank you for your review. Is this test addition unintentional? It looks like it might the result of a mistaken merge conflict resolution (I'm guessing due to https://github.com/flutter/flutter/pull/157380).

 ```suggestion
  test('should build Android app with commented-out "".flutter-plugins"" in settings.gradle', () async {
``` > Is this test addition unintentional? It looks like it might the result of a mistaken merge conflict resolution (I'm guessing due to #157380).

Yes it is. So I removed it and re-commit. Thanks @andrewkolos"
158217,2024-11-05T23:24:47Z,2024-11-10T21:49:25Z,andrewkolos,0,0,2,15,1,1,1,[],,0,426279.0,0,0,0,0,3961615.627048,,0,2,0,False,[],,,"Cleans up https://github.com/flutter/flutter/pull/158196 and https://github.com/flutter/flutter/pull/158146


<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158244,2024-11-06T09:00:59Z,2024-11-10T22:30:39Z,fluttergithubbot,0,0,2,1,1,1,1,['c: flake'],,0,394181.0,0,0,0,0,3959141.749988,,0,2,0,False,[],,,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux analyzer_benchmark""
}
-->
Issue link: https://github.com/flutter/flutter/issues/158243
",
154695,2024-09-05T23:59:28Z,2024-09-09T21:49:09Z,nate-thegrate,5,11,2,918,13,3,1,"['a: text input', 'framework', 'f: material design', 'd: api docs', 'd: examples', 'autosubmit', 'refactor']",331173.0,0,5689640.0,0,0,0,0,3966574.541544,,0,2,0,False,"['auto-submit[bot]', 'rydmike', 'nate-thegrate']","> I wonder if there's anywhere in the docs where we should encourage people to use `.fromMap` for performance reasons?

As it so happens, I have [another PR](https://github.com/flutter/flutter/pull/154298) aimed to improve documentation; I'll definitely be pushing an update there once this guy lands :) auto label is removed for flutter/flutter/154695, due to - The status or check suite [Windows tool_integration_tests_2_7](https://cr-buildbucket.appspot.com/build/8737244757573222833) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Thanks @nate-thegrate for working on this, expanding the `fromMap` usage as proposed @justinmc looks like a really good solution for this issue. Also the syntax and usage is much nicer, double win imo, exciting stuff! 😄 👍🏻 

**Question about this comment:**
> (Equality checks are still broken for WidgetStateProperty.resolveWith(), and any other non-const objects that implement the interface.)

Did you mean that some `resolveWith` methods do not yet have a `fromMap` equivalent and thus we cannot and not use them yet in `ThemeData` component theming for all `resolveWith` use cases?

If so, any plans on addressing it? 

Or did you mean to that consumers of `resolveWith`, like the default constructors in component defaults and default themes, will have to replace their own `resolveWith` themes, with corresponding `fromMap` versions to get the benefits?

I am bringing this up, because, if custom themes use even a single `resolveWith`in their theming in any component theme, they break `ThemeData` equality, as I noted and demoed in the original issue. The hole situation then becomes pointless, as `MaterialApp` and `ThemeData` triggered rebuilds won't be reduced if 99% of custom themes use `fromMap`, but you have just a single `resolveWith` in there somewhere.

All more involved custom theming in Flutter currently rely heavily on using many different versions of `resolveWith()` not the most common one `WidgetStateProperty.resolveWith((Set<WidgetState> states) {}`, things like:

* `WidgetStateProperty.resolveWith<Type>` with specific types, e.g. type Color and Icon are quite common too.

Then we have specialized ones like e.g.:
* `WidgetStateBorderSide.resolveWith`
* `MaterialStateUnderlineInputBorder.resolveWith`
* `MaterialStateOutlineInputBorder.resolveWith`

They are all used and needed a lot when you make custom themes. Are there now with these updates, `fromMap` variants for them all that we can use to not break `ThemeData` equality when we theme?

We really need that. To then teach users to use `.fromMap`, is of course a matter of documentation and communication.

These would also be a great target for a **Flutter lint**, to at least detect any `resolveWith`  usage and recommend the move to `fromMap`. A **dartfix** might probably be tricky to deliver for it, but would of course be fantastic.

In any cases, awesome work, thanks! 👏🏻 💙 

 > Did you mean that some `resolveWith` methods do not yet have a `fromMap` equivalent and thus we cannot and not use them yet in `ThemeData` component theming for all `resolveWith` use cases?

Nope! Fortunately, any configuration that can be represented using a `resolveWith()` callback can easily be converted to a [`WidgetStateMap`](https://main-api.flutter.dev/flutter/widgets/WidgetStateMap.html). The only caveat is that depending on the logic, sometimes using a callback is the more efficient/less verbose way to do it.

> Or did you mean to that consumers of `resolveWith`, like the default constructors in component defaults and default themes, will have to replace their own `resolveWith` themes, with corresponding `fromMap` versions to get the benefits?

Yes indeed! This PR was specifically targeted at the `.styleFrom()` methods; they should have reliable equality checks from now on.

<br>

> Then we have specialized ones like e.g.:
> 
> * `WidgetStateBorderSide.resolveWith`
> * `MaterialStateUnderlineInputBorder.resolveWith`
> * `MaterialStateOutlineInputBorder.resolveWith`
> 
> They are all used and needed a lot when you make custom themes. Are there now with these updates, `fromMap` variants for them all that we can use to not break `ThemeData` equality when we theme?

Yes! Any situation where you could use `.resolveWith()` also allows `.fromMap()`. I think there are a couple of constructors I overlooked earlier, but they should be added soon :)

<br>

> These would also be a great target for a **Flutter lint**, to at least detect any `resolveWith` usage and recommend the move to `fromMap`.

I've considered opening a PR to deprecate the `.resolveWith()` constructors in order to promote more stable equality checks. But to be honest, I don't think it's a huge deal most of the time.

It's a very noticeable issue when a `MaterialApp` is rebuilt with different theme data, since its `AnimatedTheme` triggers a rebuild on every frame throughout the duration, for every widget using `Theme.of(context)`.

But my guess would be that most of the less-experienced developers are going to prefer `ButtonStyle.styleFrom()` and/or `.fromMap()` constructors, since (not to brag or anything) they're simpler and easier to work with than the `.resolveWith()` callbacks we'd been using previously. So even in cases where an equality check could potentially cause a large amount of consecutive rebuilds, it doesn't worry me very much. Awesome, thanks for the response with clarifications @nate-thegrate 🙏🏻 💙 

Looking forward to replacing all the `resolveWith` with corresponding `fromMap` in **FlexColorScheme** and many other projects too, when this lands in stable.

> I've considered opening a PR to deprecate the .resolveWith() constructors in order to promote more stable equality checks. But to be honest, I don't think it's a huge deal most of the time.

Might be a good idea to do so. I would be totally onboard with it too, even if it is a lot of re-work for me, but I plan to do it anyway 😄 

If you make even a bit more advanced themes, you will have a lot of `resolveWith` usage. I checked, I have around 78 of them in FlexColorScheme, that is probably extreme though. 

Still, getting a nagging deprecation reminder to replace them is even better than a lint. Only way to get rid of the wrongly triggered rebuilds of `AnimatedTheme`, is to replace all `resolveWith`s, if you use a single one the issue remains. 

This `AnimatedTheme` and broken `ThemeData` deep equality is btw an issue I have observed for years when working with theming. So I knew exactly what triggers it and why. That is why I jumped into the issue with explanations of why it happens, even with a simple `ThemeData` equality test to show the root cause: https://github.com/flutter/flutter/issues/89127#issuecomment-1846438499

Seems like some found this second explanation more clear https://github.com/flutter/flutter/issues/89127#issuecomment-2041105684

Anyway, thanks again for coming up with a fix for this and as a bonus a much nicer syntax! 💙 

@navaronbracke thanks very much for the review! LGTM :+1: 

This looks like a huge win to me. It's nice seeing all of the new `consts`. I wonder if there's anywhere in the docs where we should encourage people to use `.fromMap` for performance reasons?

Thanks for jumping on this.","@navaronbracke thanks very much for the review! LGTM :+1: 

This looks like a huge win to me. It's nice seeing all of the new `consts`. I wonder if there's anywhere in the docs where we should encourage people to use `.fromMap` for performance reasons?

Thanks for jumping on this.","This PR is _almost_ able to close issue #89127.

Sadly, no `InheritedModel` or custom `RenderObject`s today; instead the [WidgetState operators](https://main-api.flutter.dev/flutter/widgets/WidgetStateOperators.html) have been restructured to support equality checks.

`WidgetStateProperty.fromMap()` is now capable of accurate equality checks, and all of the `.styleFrom()` methods have been refactored to use that constructor.

(Equality checks are still broken for `WidgetStateProperty.resolveWith()`, and any other non-`const` objects that implement the interface.)

<br><br>

credit for this idea goes to @justinmc: https://github.com/flutter/flutter/issues/89127#issuecomment-2313187703","Can't we use package:collection 's `const MapEquality()` `hashCode` utility here? Or is that not needed/overkill? Since both `first` and `second` have the same type, do we make these required named arguments, to avoid mixups when adding new subclasses? I get it why you want to ""reuse"" the `int get hashCode => Object.hash(first, second);` implementation. However, seeing the ignores feels a bit off to me personally.

When reading this code, one would probably wonder why we step away from the usual ""hashCode + operator=="" pattern. I did a quick search and the framework does not have any other `ignore: hash_and_equals` instances.

I would prefer to remove the ignore and define the `int get hashCode => Object.hash(first, second);` in the subclasses anyway. Then we don't break from the familiar pattern _and_ do not introduce an ignore.

Is just a preference, though.

 Yeah, in general, named arguments are great for preventing confusion. But in the case of `first` and `second`, IMO positional args are more intuitive. Yeah, that's fair.

My mindset was: duplicated logic affects compile sizes, whereas comments do not. ooh, I hadn't heard of `MapEquality()` till now! I wonder how its performance compares to the current getter 🤔 What if we have a private static method on the super class `_WidgetStateCombo` ? Since this is a `sealed` hierarchy, it has to stay in the same library unit (= Dart file) anyway. I believe an instance method that calls a static method might have a performance impact, similar to https://github.com/flutter/flutter/issues/144156#issuecomment-1967607869 I see both points here... I think with the little description `since == is defined in subclasses`, it's easy enough to look up what the == operation will be, so personally I don't mind keeping it as-is. I definitely feel safer using [MapEquality.hash](https://main-api.flutter.dev/flutter/package-collection_collection/MapEquality/hash.html). Any real performance argument I could make seems like splitting hairs looking at the implementation of that versus [hashAll](https://main-api.flutter.dev/flutter/dart-core/Object/hashAll.html)... But I feel more confident using the method that's built for this. Sounds good to me! Thank you both for the feedback 😄"
158038,2024-11-02T01:32:13Z,2024-11-02T02:24:06Z,engine-flutter-autoroll,0,0,4,4,2,1,1,"['engine', 'autosubmit']",,0,606277.0,0,0,0,0,4119573.787053,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/38b6165f137d...05cb5d7f7939

2024-11-02 matanlurey@users.noreply.github.com Refactor `BuildPlan`, better document and explain `--config`. (flutter/engine#56324)
2024-11-01 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from MjcuejuzYvYGobbFM... to 07KmbdEtnhkg_tUhe... (flutter/engine#56322)
2024-11-01 jonahwilliams@google.com [Impeller] implement external texture gl for embedder. (flutter/engine#56277)
2024-11-01 skia-flutter-autoroll@skia.org Roll Dart SDK from 789763468d6b to 61bf0877807e (2 revisions) (flutter/engine#56323)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from MjcuejuzYvYG to 07KmbdEtnhkg

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158252,2024-11-06T10:30:50Z,2024-11-09T19:45:40Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: tech-debt', 'c: flake']",,0,292490.0,0,0,0,0,4055443.844772,,0,1,0,False,[],![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/2e28133a-aefa-4ecc-89ca-ba311c334166),![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/2e28133a-aefa-4ecc-89ca-ba311c334166),"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_benchmark complex_layout_scroll_perf_macos__timeline_summary""
}
-->
Issue link: https://github.com/flutter/flutter/issues/158251
",
158034,2024-11-01T23:50:16Z,2024-11-02T00:37:35Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,608794.0,0,0,0,0,4123174.646611,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/7dfdcacd8ae4...38b6165f137d

2024-11-01 jonahwilliams@google.com [Impeller] fix downsample with decal tile mode. (flutter/engine#56316)
2024-11-01 skia-flutter-autoroll@skia.org Roll Skia from dfbb0e6bc974 to 89ac72bb4922 (6 revisions) (flutter/engine#56320)
2024-11-01 jacksongardner@google.com Remove superfluous dart2wasm test suites/bundles. (flutter/engine#56315)
2024-11-01 jason-simmons@users.noreply.github.com Write run_tests console logs to stdout instead of stderr (flutter/engine#56312)
2024-11-01 jonahwilliams@google.com [impeller] use greater equal rather than greater depth compare. (flutter/engine#56310)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158395,2024-11-08T20:19:48Z,2024-11-08T23:24:09Z,matanlurey,3,0,2,468,3,1,1,"['tool', 'cp: review', 'cp: merge-to-beta']",3.0,0,11062.0,0,0,0,0,4128735.989301,,0,2,0,False,"['zanderso', 'matanlurey', 'flutter-dashboard[bot]']","This pull request was opened against a branch other than _master_. Since Flutter pull requests should not normally be opened against branches other than master, I have changed the base to master. If this was intended, you may modify the base back to beta. See the [Release Process](https://github.com/flutter/flutter/blob/master/docs/releases/Release-process.md) for information about how other branches get updated.

__Reviewers__: Use caution before merging pull requests to branches other than master, unless this is an intentional hotfix/cherrypick. I think this should be targeting the release candidate branch `flutter-3.27-candidate.0`. > I think this should be targeting the release candidate branch `flutter-3.27-candidate.0`.

Thanks!",,"Cherry-pick https://github.com/flutter/flutter/pull/158141.

Unblocks https://github.com/flutter/flutter/pull/157100#issuecomment-2465138790.

This is a test-only change that works around `native_assets_cli` now being `0.9.0`.",
158021,2024-11-01T20:42:16Z,2024-11-01T21:33:22Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,605376.0,0,0,0,0,4137874.029526,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/7b176f4f25da...7dfdcacd8ae4

2024-11-01 jacksongardner@google.com Reland single threaded Skwasm (flutter/engine#56282)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158141,2024-11-04T23:18:30Z,2024-11-05T01:39:25Z,matanlurey,8,3,7,244,3,3,2,"['tool', 'autosubmit', 'cp: beta']",617.0,0,335158.0,0,0,0,0,4139518.966146,,0,7,0,False,"['flutteractionsbot', 'reidbaker', 'matanlurey', 'auto-submit[bot]', 'christopherfujino']","> LGTM with the caveat that I know nothing about flutter tools/native assets/pub.

No sweat, just wanted to give the gardener visibility into this potentially re-landing. FYI @bkonyi  auto label is removed for flutter/flutter/158141, due to - The status or check suite [Mac tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8732156662689684305) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158141, due to - The status or check suite [Linux analyze](https://cr-buildbucket.appspot.com/build/8732153499657070001) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Failed to create CP due to merge conflicts.<br>You will need to create the PR manually. See [the cherrypick wiki](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md) for more info. > Failed to create CP due to merge conflicts.You will need to create the PR manually. See [the cherrypick wiki](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md) for more info.

@reidbaker LMK if you need help manually cherry-picking/merging. I can do it but this is like 4 or 5 things deep on my priority list. If someone else hits this issue feel free to add me as a reviewer to the 3.27 branch.  I am waiting for some help from the iOS team, so I can pick this up:

https://github.com/flutter/flutter/pull/158395LGTM, thanks! LGTM with the caveat that I know nothing about flutter tools/native assets/pub.","LGTM, thanks! LGTM with the caveat that I know nothing about flutter tools/native assets/pub.","Closes https://github.com/flutter/flutter/issues/158120.

This PR restores the skipped test, moving it (and the test utility only used by the test) into a standalone file that can be more easily understood. As part of the change the version of `native_assets_cli` is now derived from the (checked-in) `package_ffi/pubspec.yaml.tmpl`, meaning that it should be hard to get into a bad state again.

/cc @christopherfujino (You are welcome to review, but otherwise will defer to Brandon and Victor).","```suggestion
/// ... then this function would return `'^0.8.0'`.
``` Just to note: This test isn't FFI-related, but I like that we can share the version pin. Agreed!"
158018,2024-11-01T19:38:29Z,2024-11-01T20:29:46Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,605604.0,0,0,0,0,4141475.272437,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/3a090b46dd35...7b176f4f25da

2024-11-01 skia-flutter-autoroll@skia.org Roll Skia from 3b50199d27bb to dfbb0e6bc974 (2 revisions) (flutter/engine#56305)
2024-11-01 skia-flutter-autoroll@skia.org Roll Dart SDK from 09c8281e66cc to 789763468d6b (2 revisions) (flutter/engine#56303)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158323,2024-11-07T15:05:29Z,2024-11-08T18:26:05Z,stonemaster,1,2,1,16,2,2,3,"['a: text input', 'framework', 'autosubmit']",4.0,0,98437.0,0,0,0,0,4146622.422408,,0,1,0,False,['google-cla[bot]'],"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

View this [failed invocation](https://github.com/flutter/flutter/pull/158323/checks?check_run_id=32662548603) of the CLA check for more information.

For the most up to date status, view the checks section at the bottom of the pull request.LGTM w/ small nits, thanks for the contribution! LGTM, Thanks for the PR!!","LGTM w/ small nits, thanks for the contribution! LGTM, Thanks for the PR!!","This PR  adds `TextInputType.webSearch` that allows to show a keyboard with ready access to a ""."" key on iOS. On Android this is re-mapped to `url` which shows the same behaviour as `webSearch` on iOS. This fixes issue #157562.

There also is a [corresponding *engine* PR](https://github.com/flutter/engine/pull/56428).

Screenshot from iOS demo app:

![image](https://github.com/user-attachments/assets/94d48752-4cfe-4113-acf9-b3a981952dc7)

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.
",nit: `Optimize` -> `Optimized`. nit: I don't think we need another check for street address after the first one.
156709,2024-10-14T13:22:37Z,2024-10-14T20:36:25Z,hannah-hyj,1,4,3,91,2,1,1,"['framework', 'f: material design', 'autosubmit']",2177097.0,0,2177098.0,0,0,0,0,4147734.228327,,0,3,0,False,['gspencergoog'],@hannah-hyj Just a heads-up that this may be causing an accessibility issue with some dropdowns: see b/378048044Thanks a lot for the fix! LGTM,Thanks a lot for the fix! LGTM,"fixes https://github.com/flutter/flutter/issues/133742 

fixes https://github.com/flutter/flutter/issues/143848 

because the _initialMenu is invisible, we should not add semantics nodes to it

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","nit: probably don't need to break the line:) ```suggestion
``` ```suggestion
``` nit: probably we don't need StatefulBuilder as well. Just wanted to simplify this test:)"
158349,2024-11-07T22:05:27Z,2024-11-08T17:30:26Z,pq,2,0,4,6,3,2,2,['tool'],23.0,0,69902.0,0,0,0,0,4149961.542064,,0,4,0,False,"['matanlurey', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: lint upgrade.Thank you!",Thank you!,"An upcoming fix to the analyzer will (correctly) catch these args as redundant (https://dart-review.googlesource.com/c/sdk/+/394004/2/pkg/analyzer/lib/src/dart/ast/ast.dart).

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158003,2024-11-01T16:15:57Z,2024-11-01T17:07:54Z,engine-flutter-autoroll,0,0,15,2,1,1,1,['autosubmit'],,0,606079.0,0,0,0,0,4153154.570201,,0,15,0,False,[],,,"
https://github.com/flutter/packages/compare/7cc1caa0cc36...796afa35071d

2024-11-01 stuartmorgan@google.com [google_maps_flutter] Update Android for non-nullable generics (flutter/packages#7990)
2024-11-01 stuartmorgan@google.com [various] Minor cleanup in recently imported packages (flutter/packages#7995)
2024-11-01 stuartmorgan@google.com [go_router] Update example app to Kotlin 1.9.0 (flutter/packages#7997)
2024-10-31 engine-flutter-autoroll@skia.org Manual roll Flutter from fe71cadf1959 to 0fe615343bd9 (18 revisions) (flutter/packages#7989)
2024-10-31 kevmoo@users.noreply.github.com [vector_garphics] fix execution on the web with WebAssembly (flutter/packages#7991)
2024-10-31 49699333+dependabot[bot]@users.noreply.github.com [url_launcher]: Bump androidx.annotation:annotation from 1.9.0 to 1.9.1 in /packages/url_launcher/url_launcher_android/android (flutter/packages#7986)
2024-10-31 stuartmorgan@google.com [flutter_svg] Initial import (flutter/packages#7944)
2024-10-31 stuartmorgan@google.com [vector_graphics] Initial import (flutter/packages#7941)
2024-10-30 stuartmorgan@google.com [ci] Ensure repo tool is autoformatted (flutter/packages#7963)
2024-10-30 zanderso@users.noreply.github.com Updates path_parsing README.md with a note about Dan (flutter/packages#7949)
2024-10-30 stuartmorgan@google.com [tool] Support third_party for --current-package (flutter/packages#7967)
2024-10-30 stuartmorgan@google.com [tool] Fix third_party dependency overrides (flutter/packages#7966)
2024-10-30 jessiewong401@gmail.com Applied Gradle Plugins Declaratively for `path_provider` (flutter/packages#7822)
2024-10-30 stuartmorgan@google.com [palette_generator] Remove unmanaged code snippet (flutter/packages#7962)
2024-10-30 engine-flutter-autoroll@skia.org Roll Flutter from 42132e879b42 to fe71cadf1959 (12 revisions) (flutter/packages#7961)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158260,2024-11-06T13:37:09Z,2024-11-08T14:19:18Z,TahaTesser,3,0,1,259,5,1,1,"['framework', 'f: material design', 'autosubmit']",68842.0,0,175662.0,0,0,0,0,4161100.507472,,0,1,0,False,"['auto-submit[bot]', 'TahaTesser']",">  what's the expected behavior after we add paddings for each label? If cutting the text (like the screenshot in the PR description) is expected, then it's fine.

It is expected to overflow with ellipses on Android when providing long label. 

<img width=""651"" alt=""image"" src=""https://github.com/user-attachments/assets/5542499b-f75e-41fd-8bc4-45f72358c215"">


But it's not a default feature in Flutter. The user should provide custom overflow when using padding.  

```dart
      theme: ThemeData(
          navigationBarTheme: const NavigationBarThemeData(
        labelTextStyle:
            WidgetStatePropertyAll(TextStyle(overflow: TextOverflow.ellipsis)),
        labelPadding: EdgeInsets.symmetric(horizontal: 16, vertical: 4),
      )),
```

Since the default label text style doesn't  set a overflow behavior 

https://github.com/flutter/flutter/blob/673d6046b7ce285383ae2d41e0637a77c0a6e1bf/packages/flutter/lib/src/material/navigation_bar.dart#L1385-L1396 auto label is removed for flutter/flutter/158260, due to - The status or check suite [Mac plugin_dependencies_test](https://cr-buildbucket.appspot.com/build/8731892621056314305) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158260, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=158260) has failed. Please fix the issues identified (or deflake) before re-applying this label.
The change LGTM.

Just have one question, what's the expected behavior after we add paddings for each label? If cutting the text (like the screenshot in the PR description) is expected, then it's fine. But if the expected look is to make the text become 2 lines, then it may cause some alignment issue on the icons because destinations are placed in center of the bar.

![Screenshot 2024-11-06 at 12 21 20 PM](https://github.com/user-attachments/assets/75241b11-78be-4bc8-b7cd-a72ccd9543cf)
 I see! LGTM! Thanks for adding this feature and helping to improve file format!

> But it's not a default feature in Flutter. The user should provide custom overflow when using padding.

I think it's okay since changing the default feature may also cause breaking change haha.","The change LGTM.

Just have one question, what's the expected behavior after we add paddings for each label? If cutting the text (like the screenshot in the PR description) is expected, then it's fine. But if the expected look is to make the text become 2 lines, then it may cause some alignment issue on the icons because destinations are placed in center of the bar.

![Screenshot 2024-11-06 at 12 21 20 PM](https://github.com/user-attachments/assets/75241b11-78be-4bc8-b7cd-a72ccd9543cf)
 I see! LGTM! Thanks for adding this feature and helping to improve file format!

> But it's not a default feature in Flutter. The user should provide custom overflow when using padding.

I think it's okay since changing the default feature may also cause breaking change haha.","Fixes [Long NavigationBar tab titles can't be padded from the sides of the screen](https://github.com/flutter/flutter/issues/158130)

### Code sample

<details>
<summary>expand to view the code sample</summary> 

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
          navigationBarTheme: const NavigationBarThemeData(
        labelTextStyle:
            WidgetStatePropertyAll(TextStyle(overflow: TextOverflow.ellipsis)),
        labelPadding: EdgeInsets.symmetric(horizontal: 16, vertical: 4),
      )),
      home: Scaffold(
        body: Center(
          child: Text(
            'Custom NavigationBar label padding',
            style: Theme.of(context).textTheme.titleMedium,
          ),
        ),
        bottomNavigationBar: NavigationBar(
          destinations: const [
            NavigationDestination(
              icon: Icon(Icons.favorite_rounded),
              label: 'Long Label Text',
            ),
            NavigationDestination(
              // icon: SizedBox.shrink(),
              icon: Icon(Icons.favorite_rounded),
              label: 'Long Label Text',
            ),
            NavigationDestination(
              icon: Icon(Icons.favorite_rounded),
              label: 'Long Label Text',
            ),
          ],
        ),
      ),
    );
  }
}

```

</details>

### Default `NavigationDestination.label` padding  with long label

<img width=""458"" alt=""Screenshot 2024-11-06 at 14 30 52"" src=""https://github.com/user-attachments/assets/637e5e66-e05f-49fa-a4ae-72083b6ff884"">


### Custom `NavigationDestination.label` padding with long label

<img width=""458"" alt=""Screenshot 2024-11-06 at 14 32 02"" src=""https://github.com/user-attachments/assets/23ebf715-30d3-433c-92cd-c8f0fdb1571b"">


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157994,2024-11-01T12:49:49Z,2024-11-01T13:41:22Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,608291.0,0,0,0,0,4163312.633076,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/0a0d5c9be6ff...3a090b46dd35

2024-11-01 chris@bracken.jp fml: Delete weak_nsobject.h,mm (flutter/engine#56289)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158326,2024-11-07T15:32:31Z,2024-11-08T13:17:07Z,stuartmorgan,0,0,2,18,1,2,2,"['package', 'team-ecosystem', 'autosubmit', 'd: docs/']",,0,78279.0,0,0,0,0,4165162.766678,,0,2,0,False,[],LGTM,LGTM,"Adds general instructions for updating generated code in flutter/packages, covering the common cases of Pigeon and Mockito generation.

Fixes https://github.com/flutter/flutter/issues/158321

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157991,2024-11-01T10:38:50Z,2024-11-01T11:33:26Z,engine-flutter-autoroll,0,0,3,2,1,1,1,"['engine', 'autosubmit']",,0,605349.0,0,0,0,0,4174114.562223,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/bacc5e1e73b7...0a0d5c9be6ff

2024-11-01 skia-flutter-autoroll@skia.org Roll Skia from 6035cb5a879c to 3b50199d27bb (1 revision) (flutter/engine#56300)
2024-11-01 skia-flutter-autoroll@skia.org Roll Skia from 696528fe7d07 to 6035cb5a879c (1 revision) (flutter/engine#56299)
2024-11-01 skia-flutter-autoroll@skia.org Roll Dart SDK from 32bebf22c765 to 09c8281e66cc (1 revision) (flutter/engine#56298)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157982,2024-11-01T06:41:49Z,2024-11-01T07:45:20Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,608770.0,0,0,0,0,4184915.606221,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/d7e928911ac2...bacc5e1e73b7

2024-11-01 skia-flutter-autoroll@skia.org Roll Skia from a5e3b3556739 to 696528fe7d07 (1 revision) (flutter/engine#56296)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157978,2024-11-01T04:04:25Z,2024-11-01T04:44:32Z,engine-flutter-autoroll,0,0,4,2,1,1,1,"['engine', 'autosubmit']",,0,606300.0,0,0,0,0,4196829.942428,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/cd46383cd55e...d7e928911ac2

2024-11-01 matanlurey@users.noreply.github.com Further de-duplicate and refactor `build_plan_test`. (flutter/engine#56284)
2024-11-01 skia-flutter-autoroll@skia.org Roll Dart SDK from bd93105c4fb6 to 32bebf22c765 (2 revisions) (flutter/engine#56290)
2024-11-01 jason-simmons@users.noreply.github.com Remove the quiet flag from invocations of run_tests.py on macOS CI builders (flutter/engine#56288)
2024-11-01 jason-simmons@users.noreply.github.com [Impeller] Fix handling of destination opacity in advanced blends (flutter/engine#56251)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157441,2024-10-23T14:09:24Z,2024-10-27T04:54:30Z,yiiim,5,5,7,43,2,2,1,"['framework', 'f: material design', 'autosubmit']",128736.0,0,1342509.0,0,0,0,0,4201923.067295,,0,7,0,False,"['yiiim', 'nate-thegrate', 'maxfrees']","What is making `Google testing` unhappy? > What is making `Google testing` unhappy?

I'm not a Googler so idk, sorry 😔

Maybe you could see if a rebase fixes it? If not, we can get somebody else to step in. ![success](https://github.com/user-attachments/assets/dce6ffee-604c-42cb-8cc0-2c9e3778f535)

woohoo! @yiiim  @nate-thegrate  @Piinks   when will it be released, or how can I use it in advance > @yiiim @nate-thegrate @Piinks when will it be released, or how can I use it in advance

Currently, it can only be used on the master channel. You can switch to the master channel using `flutter channel master`, but it is highly discouraged to do so as the master channel is usually very unstable.Thanks for fixing this! LGTM, thanks again for the fix!

Feel free to land this one if current diffs look good to you :)","Thanks for fixing this! LGTM, thanks again for the fix!

Feel free to land this one if current diffs look good to you :)","Fixes: #157316

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","nit: might be easier to read if it's spaced out more.

```suggestion
    await tester.pumpWidget(buildFrame());
    expect(tester.getSize(find.byKey(bodyKey)).height, 600);

    await tester.pumpWidget(buildFrame(keyboardHeight: 100));
    expect(tester.getSize(find.byKey(bodyKey)).height, 600);

    await tester.pumpWidget(buildFrame(keyboardHeight: 200));
    expect(tester.getSize(find.byKey(bodyKey)).height, 400);
``` Great to see the simple fix here!

<br>

A couple thoughts with regards to readability:

- One of our [style guidelines](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-correct-grammar) involves using correct capitalization.
(The original code failed to do this, but we might as well improve it now!)
- If we can avoid shadowing the nonlocal variable, that'd be awesome.

I'll share my idea, both as a suggestion and to double-check that I understand this logic correctly:

```dart
      // When extendBody is true, the body is visible underneath the bottom widgets.
      // This does not apply when the area is obscured by the device keyboard.
      if (extendBody && minInsets.bottom <= bottomWidgetsHeight) {
        bodyMaxHeight += bottomWidgetsHeight;
        bodyMaxHeight = clampDouble(bodyMaxHeight, 0.0, looseConstraints.maxHeight - contentTop);
        assert(bodyMaxHeight <= math.max(0.0, looseConstraints.maxHeight - contentTop));
      } else {
        bottomWidgetsHeight = 0.0;
      }

      final BoxConstraints bodyConstraints = _BodyBoxConstraints(
        maxWidth: fullWidthConstraints.maxWidth,
        maxHeight: bodyMaxHeight,
        materialBannerHeight: materialBannerSize.height,
        bottomWidgetsHeight: bottomWidgetsHeight,
        appBarHeight: appBarHeight,
      );
```

Let me know what you think! Ah, looks like the first part of my comment was used but not the `else` clause.

I'll probably go ahead and push a change here, feel free to revert the commit if you don't like it :) Thanks for doing this! I like this, I missed the code after the else before. :)"
157972,2024-11-01T00:59:29Z,2024-11-01T02:53:17Z,engine-flutter-autoroll,2,0,11,4,2,1,1,"['engine', 'autosubmit']",1485.0,0,610196.0,0,0,0,0,4204031.741197,,0,11,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157972, due to - The status or check suite [Mac_arm64 build_tests_4_4](https://cr-buildbucket.appspot.com/build/8732513881929866097) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/157972, due to - The status or check suite [Mac_arm64 build_tests_4_4](https://cr-buildbucket.appspot.com/build/8732513881929866097) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/bb77cf867aef...cd46383cd55e

2024-10-31 30870216+gaaclarke@users.noreply.github.com reland: Allow BufferViews to have non-owning references to DeviceBuffers (flutter/engine#56286)
2024-10-31 skia-flutter-autoroll@skia.org Roll Skia from 9168ad248c69 to a5e3b3556739 (1 revision) (flutter/engine#56283)
2024-10-31 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""Allow BufferViews to have non-owning references to DeviceBuffers (#56224)"" (flutter/engine#56285)
2024-10-31 chris@bracken.jp macOS: migrate third_party/accessibility to ARC (flutter/engine#56281)
2024-10-31 30870216+gaaclarke@users.noreply.github.com Allow BufferViews to have non-owning references to DeviceBuffers (flutter/engine#56224)
2024-10-31 flar@google.com [Impeller] Do not use fast mask blur for stroked shapes (flutter/engine#56247)
2024-10-31 jonahwilliams@google.com [Impeller] make desktop GL render. (flutter/engine#56274)
2024-10-31 matanlurey@users.noreply.github.com Vastly rewrite and expand `et/README.md` (flutter/engine#56250)
2024-10-31 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from dDWvmfG4AxSEs0BQA... to MjcuejuzYvYGobbFM... (flutter/engine#56280)
2024-10-31 skia-flutter-autoroll@skia.org Roll Dart SDK from f3e3dc44b1dc to bd93105c4fb6 (2 revisions) (flutter/engine#56278)
2024-10-31 chris@bracken.jp Embedder: migrate Metal surfaces to ARC (flutter/engine#56279)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from dDWvmfG4AxSE to MjcuejuzYvYG

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
147080,2024-04-19T18:33:34Z,2024-11-07T23:00:53Z,Renzo-Olivares,6,30,24,444,3,3,4,"['a: text input', 'framework', 'autosubmit']",2.0,0,17468839.0,0,0,0,0,4216545.086172,,0,24,0,False,"['chunhtai', 'Piinks', 'flutter-dashboard[bot]', 'Renzo-Olivares']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact ""@test-exemption-reviewer"" in the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc them here, they won't see it! Use Discord!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Friendly bump for review. Also if this needs more tests let me know, I can add them (maybe a separate test file?) but initially didn't because the functionality of the delegate is verified in `selectable_region_test.dart`. Hi @Renzo-Olivares, are you still planning on coming back to this pr?  @chunhtai I plan to come back to this soon. This pull request executed golden file tests, but it has not been updated in a while (20+ days). Test results from Gold expire after as many days, so this pull request will need to be updated with a fresh commit in order to get results from Gold.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 (PR triage): What is the status if this PR? :)LGTM :+1: but maybe @chunhtai should also give a final sign off. Sorry for the slow review! LGTM but I'm still deferring to @chunhtai for final approval.

Does this PR also solve the problem of https://github.com/flutter/flutter/pull/146625?

Also just a general question about SelectionContainer, probably unrelated to this PR. Can I just stick the SelectionContainer directly under the SelectableRegion if I want to affect everything that it makes selectable? Just thinking that that's probably how most people will use this. Renewing my LGTM 👍  LGTM, except for the comments","LGTM :+1: but maybe @chunhtai should also give a final sign off. Sorry for the slow review! LGTM but I'm still deferring to @chunhtai for final approval.

Does this PR also solve the problem of https://github.com/flutter/flutter/pull/146625?

Also just a general question about SelectionContainer, probably unrelated to this PR. Can I just stick the SelectionContainer directly under the SelectableRegion if I want to affect everything that it makes selectable? Just thinking that that's probably how most people will use this. Renewing my LGTM 👍  LGTM, except for the comments","This change makes `_SelectableRegionContainerDelegate` public so it can be reused and extended by users of `SelectionContainer`. Extending `MultiSelectableRegionContainerDelegate` does not by default provide selection managing across multiple selectables, so often users will copy the implementation found in `_SelectableRegionContainerDelegate`.

`_SelectableRegionContainerDelegate` -> `StaticSelectionContainerDelegate`.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","This should probably start with something like

`A delegate that manages ...` why would this become public? I think the synthesize selection events logic is implementation details. ah this is for subclass to implement their selection logic. It would be good if we can provide some sort of low level selection API, for example
```dart
void updateInternalStateBeforeAndAfterSelection(child, callback) {
  ensureChildUpdated(child);
  callback();
   _hasReceivedStartEvent.add(child);
   _hasReceivedEndEvent.add(child);
}
```

and then subclass can do

```dart
SelectionResult handleSelectParagraph(event) {
 for(..) {
    updateInternalStateBeforeAndAfterSelection(selectable,() {_handleSelectParagraph} )
 }
}
```

If we can't completely hide these internal state, at least make them readonly, so that only one class is updating the state. I think i missed this, why do we need to duplicate these two method in this class? I did this to handle the behavior where to keep the origin boundary within the selection we swap the selection edges when they invert. We didn't need this for word boundary because a word boundary is guaranteed to be within one `_SelectableFragment`, but with paragraphs the origin boundary may span multiple `_SelectableFragment`s so I needed to account for these swaps at the container level so it has an accurate `currentSelectionStartIndex` and `currentSelectionEndIndex`. Nit: Maybe point people towards MultiSelectableSelectionContainerDelegate for cases that DO move around? If that's not already obvious. Nit: Should it mention the `null` case of forEnd? Nit: ""event"" => ""events""? Or ""the most up to date selection event""? Oh was this PR prompted by the issue about putting a newline between copied widgets? Could this be done near the top of the widget tree for a big app with a single SelectionContainer, so that nearly everything has this newline behavior? Or would you need to do a bunch of SelectionContainers? should this call super directly? Yes, and anyone trying to use `SelectionContainer` has to re-implement or copy and paste a lot of this logic since it requires a `SelectionContainerDelegate`. It would still need multiple SelectionContainers because `getSelectedContent` does not propagate down the tree. before a [SelectionEvent] is dispatched to a [Selectable] The naming for these method should be describing what condition will trigger this method instead of describing what the internal logic does. Something like
`didReceiveSelectionEdgeEventFor();`.

The current name may not make sense after several level of subclassing
 Can you also mention in what condition subclass may want to override/calling this method?
 same, this should probably named didReceiveSelectionBoundaryEvents same for other methods is there any subclass that uses this method? Just wanted to check if this name would be any better if it was shorter. Maybe `MultiStaticSelectableDelegate` or `StaticSelectablesSelectionContainerDelegate`? Looking at this nowadays, not sure if I understood correctly but there is a reference to MultiSelectableSelectionContainerDelegate in the ""See also"" so seems good now. Or maybe handleSelectionEdgeEventFor? I always look at this in the style guide but not sure if it applies here: https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#naming-rules-for-typedefs-and-function-variables Super nit: I wonder if it's better to put the SelectionContainer above the Center? I'm guessing most people will use this to cover everything under as single SelectableRegion. Or is there any benefit to keeping this as-is? I think `handle*` may be confusing since we already have methods like `handleSelectWord`, and `handleSelectionEdgeUpdate`. `didReceive` makes a good distinction since these methods are only tracking the events and not actually doing any of the logic that moves a selection edge. Not at the moment, but it is used by public methods like `remove` and `dispatchSelectionEventToChild`, so I think if someone extends this delegate they may want access to this method. That makes sense to me, updated. Updated to `StaticSelectionContainerDelegate`, open to other suggestions. We have a private `_ScrollableSelectionContainerDelegate`, so I think this name makes sense given that convention. Nit: Maybe a `switch` on forEnd? If we expose `clearInternalSelectionStateForSelectable`, this should be a for loop to call clearInternalSelectionStateForSelectable the doc should mention sub class should clean up state they added in didReceive- method"
158346,2024-11-07T21:49:10Z,2024-11-07T22:39:19Z,jason-simmons,1,0,1,10,3,1,1,"['tool', 'engine', 'autosubmit']",24.0,0,3009.0,0,0,0,0,4217839.162819,,0,1,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.",,Includes changes required by the new Dart formatter.,
158345,2024-11-07T21:06:49Z,2024-11-07T22:13:46Z,Piinks,0,2,2,6,1,2,1,['autosubmit'],,0,4018.0,0,0,0,0,4219372.51199,,1,2,0,False,[],,,"Adds a reference to tree hygiene to help clarify expectations for review timelines.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
Thanks for filing a pull request!
``` ```suggestion
Reviewers are typically assigned within a week of filing a request.
```"
157960,2024-10-31T21:46:35Z,2024-10-31T22:53:24Z,engine-flutter-autoroll,0,0,6,2,1,1,1,"['engine', 'autosubmit']",,0,605042.0,0,0,0,0,4220763.251501,,0,6,0,False,[],,,"
https://github.com/flutter/engine/compare/f2154ef3e31c...bb77cf867aef

2024-10-31 chris@bracken.jp iOS: migrate Metal testing types to ARC (flutter/engine#56156)
2024-10-31 chris@bracken.jp iOS,macOS: migrate shell/gpu to ARC (flutter/engine#56157)
2024-10-31 skia-flutter-autoroll@skia.org Roll Skia from 3c628426f85f to 9168ad248c69 (3 revisions) (flutter/engine#56272)
2024-10-31 jonahwilliams@google.com [Impeller] Reland: disable AHBs on devices that were upgraded to 29. (flutter/engine#56221)
2024-10-31 matanlurey@users.noreply.github.com Add `timeout` to `local_engine`. (flutter/engine#56271)
2024-10-31 matanlurey@users.noreply.github.com Refactor `ArgParser.usage` tests for `BuildPlan` to reduce duplication. (flutter/engine#56254)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158330,2024-11-07T16:26:55Z,2024-11-07T20:24:25Z,bkonyi,7,0,1,2,1,2,1,['tool'],5521.0,0,14252.0,0,0,0,0,4225933.376435,,0,1,0,False,"['reidbaker', 'christopherfujino', 'bkonyi']","I think this is correct but am leaving a breadcrumb for myself. If it turns out this issue is actually about the number/length of command line args then GRADLE_OPS documented in https://docs.gradle.org/current/userguide/build_environment.html is the right next place to expand.  Also, per https://github.com/flutter-pub-roller-bot/flutter/commit/225e4aabb50ecd0676ab0871e6022769974e17f2, should we bump the MaxMetaspaceSize and add a flag for ReservedCodeCacheSize?

I'm genuinely asking. I don't understand any of these, and going into swap would be bad too, maybe worse since it's be hard to detect? > When I `grep -rnI 'Xmx4G'`, I get a lot of hits. Should we just mass update them all?

I dont think we should update all of the heap sizes. Lets see if this helps. 4 gigs is really big > > When I `grep -rnI 'Xmx4G'`, I get a lot of hits. Should we just mass update them all?
> 
> I dont think we should update all of the heap sizes. Lets see if this helps. 4 gigs is really big

I agree that 4gb is REALLY big. I'm not happy about upping this. I also have no better idea... > > When I `grep -rnI 'Xmx4G'`, I get a lot of hits. Should we just mass update them all?
> 
> I dont think we should update all of the heap sizes. Lets see if this helps. 4 gigs is really big

I'm ok with updating just this one app. Yeah, I'm not happy with it either but... *shrugs*

@reidbaker should we also update `MaxMetaspaceSize` and `ReservedCodeCacheSize` as @christopherfujino suggested? My gut its that we should only update the ones we think will do something. 
https://stackoverflow.com/questions/31455644/should-i-set-a-maxmetaspacesize indicates that the cost of bumping that value is proably low. 

From https://stackoverflow.com/questions/7513185/what-are-reservedcodecachesize-and-initialcodecachesize we are not seeing the logs that would have me think that value would help. Honestly I wonder if dropping these memory settings to nothing might be a better solution. 

FWIW I dont expect bumping to 8 gb will help but I dont have better solutions for you. 
When I `grep -rnI 'Xmx4G'`, I get a lot of hits. Should we just mass update them all?","When I `grep -rnI 'Xmx4G'`, I get a lot of hits. Should we just mass update them all?",Should help resolve https://github.com/flutter/flutter/issues/156953,
158337,2024-11-07T19:21:19Z,2024-11-07T20:15:01Z,flutter-pub-roller-bot,0,0,1,8,2,1,1,['autosubmit'],,0,3222.0,0,0,0,0,4226500.584897,,0,1,0,False,[],,,This PR was generated by `flutter update-packages --force-upgrade`.,
158335,2024-11-07T18:14:16Z,2024-11-07T18:16:18Z,matanlurey,0,0,1,1,1,1,1,"['tool', 'warning: land on red to fix tree breakage']",,0,126.0,0,0,0,0,4233620.388881,,1,1,0,False,[],LGTM,LGTM,"https://github.com/flutter/flutter/pull/158204 collided with https://github.com/flutter/flutter/pull/157462.

Fortunately the change is 1-line in 1-test.",
157462,2024-10-23T19:42:33Z,2024-11-07T18:09:22Z,matanlurey,7,3,25,1112,27,4,4,"['platform-ios', 'tool', 'a: desktop', 'autosubmit']",171065.0,0,1290409.0,0,0,0,0,4234040.750904,,1,25,0,False,['matanlurey'],"Shoot, there are still `commands.shard` tests that need updates, I'll work on those. Updated tests in `commands.shard`.

I'm slowed down by running into test failures that only occur locally but seem unrelated:

- https://github.com/flutter/flutter/issues/157627
- https://github.com/flutter/flutter/issues/157629 Sigh, this is blocked by https://github.com/flutter/flutter/issues/102983 and https://github.com/flutter/flutter/issues/73870. Will need to be resolved by adding a flag (`--implicit-pubspec-resolution`) and make this code rely on it:

https://github.com/flutter/flutter/issues/157819

Blocked/moving to draft for now. Please re-review, I merged this with https://github.com/flutter/flutter/pull/157879. > There's a lot of unintentional-looking formatting here :/

Yeah my mistake, I really messed up my default workspace - will fix that going forward. Ping - looking for another once-over so I can unblock https://github.com/flutter/flutter/pull/158009.

Thanks!So i think the overall approach SGTM. I don't really have much to nit about the code, but I don't really work in the tool anymore.

LGTM There's a lot of unintentional-looking formatting here :/ Sorry for the delay. LGTM","So i think the overall approach SGTM. I don't really have much to nit about the code, but I don't really work in the tool anymore.

LGTM There's a lot of unintentional-looking formatting here :/ Sorry for the delay. LGTM","Work towards https://github.com/flutter/flutter/issues/56591.

I explicitly want an LGTM from @andrewkolos @jmagman @jonahwilliams before merging.

---

After this PR, `<Plugin>.isDevDependency` is resolved based on the following logic, IFF:

- The plugin comes from a package _A_ listed in the app's package's `dev_dependencies: ...`
- The package _A_ is not a normal dependency of any transitive non-dev dependency of the app

See [`compute_dev_dependencies_test.dart`](https://github.com/flutter/flutter/blob/51676093a3b67434405aacf4d56088573863630a/packages/flutter_tools/test/general.shard/compute_dev_dependencies_test.dart) for probably the best specification of this behavior.

We (still) do not write the property to disk (i.e. it never makes it to `.flutter-plugins-dependencies`), so there is no impact to build artifacts at this time; that would come in a follow-up PR (and then follow-up follow-up PRs for the various build systems in both Gradle and Xcode to actually use that value to omit dependencies).

Some tests had to be updated; for the most part it was updating the default `ProcessManager` because a call to `dart pub deps --json` is now made in code that computes what plugins are available, but there should be no change in behavior.

_/cc @jonasfj @sigurdm for FYI only (we talked on an internal thread about this; see https://github.com/dart-lang/sdk/issues/56968)._

_/cc @camsim99 @cbracken @johnmccutchan for visibility on the change._","I don't think this is likely, but you could also check that this is a map too... Is an infinite loop possible? No, clarified in both the comment and with a local variable above."
157926,2024-10-31T15:44:31Z,2024-10-31T16:47:58Z,engine-flutter-autoroll,1,0,8,2,1,1,1,"['engine', 'autosubmit']",3088.0,0,607200.0,0,0,0,0,4240332.672019,,0,8,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157926, due to - The status or check suite [Mac_arm64 build_tests_2_4](https://cr-buildbucket.appspot.com/build/8732548796124978257) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/c40b0b602822...f2154ef3e31c

2024-10-31 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""Skwasm single threaded (#56206)"" (flutter/engine#56264)
2024-10-31 skia-flutter-autoroll@skia.org Roll Skia from 4f8f2ecadfb6 to 3c628426f85f (1 revision) (flutter/engine#56261)
2024-10-31 skia-flutter-autoroll@skia.org Roll Skia from 7e79a516284b to 4f8f2ecadfb6 (1 revision) (flutter/engine#56255)
2024-10-31 skia-flutter-autoroll@skia.org Roll Dart SDK from 6a8058eef22c to f3e3dc44b1dc (1 revision) (flutter/engine#56253)
2024-10-31 skia-flutter-autoroll@skia.org Roll Skia from 3c62d4a94d78 to 7e79a516284b (1 revision) (flutter/engine#56252)
2024-10-31 jonahwilliams@google.com [Impeller] use primitive restart for faster tessellation: write directly into host buffer. (flutter/engine#56173)
2024-10-31 jacksongardner@google.com Skwasm single threaded (flutter/engine#56206)
2024-10-31 jonahwilliams@google.com [Impeller] expose reference to tessellator instead of shared_ptr. (flutter/engine#56244)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158324,2024-11-07T15:17:00Z,2024-11-07T16:11:28Z,stuartmorgan,2,0,1,3,1,1,1,['autosubmit'],1741.0,0,3270.0,0,0,0,0,4241114.545248,,1,1,0,False,"['huycozy', 'stuartmorgan']","I just noticed `flutter_svg` and `path_parsing` packages are under `third_party` path but in some places, the title remains `Flutter's first-party packages`:

- https://github.com/flutter/flutter/issues/new/choose
- https://github.com/flutter/flutter/issues/new?assignees=&labels=&projects=&template=9_first_party_packages.yml

Do we need to sync this? They are first-party packages in that we publish and maintain the packages. The directory structure is an implementation detail of how code with non-Flutter-team copyright has to be managed.LGTM. Thank you!",LGTM. Thank you!,"Adds path_parsing, vector_graphics, and flutter_svg to the list of 1P packages to select from when reporting issues. (vector_graphics_codec/compiler and flutter_svg_test are not listed separately since they are conceptually part of a package group, not unlike federated plugin packages.)",
157896,2024-10-31T01:42:40Z,2024-10-31T02:29:54Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,607717.0,0,0,0,0,4290327.823729,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/090c33aeae83...c40b0b602822

2024-10-31 chris@bracken.jp iOS: Eliminate strong retain loop in Scenario tests (flutter/engine#56249)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157893,2024-10-31T00:36:40Z,2024-10-31T01:30:25Z,engine-flutter-autoroll,0,0,4,2,1,1,1,"['engine', 'autosubmit']",,0,611677.0,0,0,0,0,4290328.731652,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/9295eeb6d3ce...090c33aeae83

2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 85b77db25fa3 to 3c62d4a94d78 (1 revision) (flutter/engine#56248)
2024-10-30 skia-flutter-autoroll@skia.org Roll Dart SDK from 4566845d8e30 to 6a8058eef22c (1 revision) (flutter/engine#56246)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from f334411b0a08 to 85b77db25fa3 (5 revisions) (flutter/engine#56245)
2024-10-30 matanlurey@users.noreply.github.com Add and use `mergeGnArgs` with `--gn-args` from `et`. (flutter/engine#56228)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157866,2024-10-30T16:12:19Z,2024-11-07T00:23:04Z,polina-c,0,0,5,24,2,1,1,"['team', 'framework', 'autosubmit', 'd: docs/']",,0,634246.0,0,0,0,0,4298021.634763,,0,5,0,False,[],,,See http://flutter.dev/go/leak-tracker-make-bots-blocking ,
154574,2024-09-03T18:16:23Z,2024-11-06T18:07:18Z,yjbanov,0,3,1,14,3,4,1,['autosubmit'],,0,5546939.0,0,0,0,0,4302685.006281,,0,1,0,False,[],LGTM,LGTM,"Fix the `--ab` option in the benchmark harness:

- Make `--local-engine-host` optional. The web engine doesn't need it, so it doesn't build it. But the tool crashes by failing to find it.
- Disable icon tree shaking because `--ab` runs against local engine build, whose Dart kernel version is out of sync with the framework, which crashes the const finder.
","...meaning tree shaking icons doesn't work? Or causes crashes? It causes crashes. This issue will be gone when we do the monorepo, because then we'd be building everything from sources and so everything should sync up. These crashes are indeed annoying (and to me, seemingly random)"
158240,2024-11-06T08:57:25Z,2024-11-06T23:04:55Z,p-salmon,0,0,1,100,2,2,2,"['framework', 'f: cupertino', 'autosubmit']",,0,50850.0,0,0,0,0,4302712.740902,,0,1,0,False,[],"LGTM, thank you for the contribution!","LGTM, thank you for the contribution!","Adding control over the cursor to CupertinoSearchTextField: cursorWidth, cursorHeight, cursorRadius, cursorOpacityAnimates and cursorColor.

fixes https://github.com/flutter/flutter/issues/158239

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158281,2024-11-06T18:46:36Z,2024-11-06T19:37:10Z,flutter-pub-roller-bot,0,2,2,1652,69,2,1,"['a: tests', 'tool', 'framework', 'a: internationalization', 'd: api docs', 'd: examples', 'platform-web', 'f: integration_test', 'autosubmit']",,0,12587.0,0,0,0,0,4305625.958644,,1,2,0,False,[],,,This PR was generated by `flutter update-packages --force-upgrade`.,Thanks @mkustermann ! FYI @bkonyi 
158271,2024-11-06T16:18:25Z,2024-11-06T22:14:19Z,bkonyi,1,0,1,12,1,1,1,"['tool', 'autosubmit']",1860.0,0,21356.0,0,0,0,0,4305748.15881,,1,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158271, due to - The status or check suite [Mac_x64 plugin_lint_mac](https://cr-buildbucket.appspot.com/build/8732003060020729233) has failed. Please fix the issues identified (or deflake) before re-applying this label.
Wow, nice!","Wow, nice!","The test was immediately checking the contents of stdout after the daemon indicated that the hot reload had completed. This could cause a race since the reloaded code may not have had time to execute.

Fixes https://github.com/flutter/flutter/issues/158245",
157882,2024-10-30T21:10:23Z,2024-10-30T22:49:15Z,engine-flutter-autoroll,1,0,5,4,2,1,1,"['engine', 'will affect goldens', 'autosubmit']",2929.0,0,606323.0,0,0,0,0,4308063.819962,,0,5,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/157882) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157882 at sha de4ac0e1baeaf2a68455e414d2160422cc1219d0_

",,"
https://github.com/flutter/engine/compare/2bd854e23b61...9295eeb6d3ce

2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 77779dfed911 to f334411b0a08 (1 revision) (flutter/engine#56243)
2024-10-30 jonahwilliams@google.com [engine] add back opt out for merged thread mode. (flutter/engine#56242)
2024-10-30 jason-simmons@users.noreply.github.com [Impeller] Remove the use of a subpixel minimum stroke size for MSAA (flutter/engine#56223)
2024-10-30 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from zuDYsDZHnJMZVvrc8... to dDWvmfG4AxSEs0BQA... (flutter/engine#56241)
2024-10-30 skia-flutter-autoroll@skia.org Roll Dart SDK from 36aed3607108 to 4566845d8e30 (1 revision) (flutter/engine#56240)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from zuDYsDZHnJMZ to dDWvmfG4AxSE

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158223,2024-11-06T00:34:18Z,2024-11-06T18:21:07Z,jmagman,0,0,1,963,23,1,1,['autosubmit'],,1,73764.0,0,0,0,0,4309989.147339,,0,1,0,False,[],,,"Delete the Android V2 embedding smoke test now that the V1 embedding has been deleted https://github.com/flutter/flutter/issues/143531.

Additionally, this was in bringup for months.

Fixes https://github.com/flutter/flutter/issues/158221

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157560,2024-10-24T21:12:23Z,2024-11-06T21:34:23Z,gmackall,4,3,11,118,23,3,1,"['tool', 'd: examples', 'autosubmit']",73210.0,0,1124520.0,0,0,0,0,4308148.438917,,0,11,0,False,"['AbdeMohlbi', 'gmackall']","hey @gmackall  ,i guess `android\app\build.gradle.kts` should look like this  :
```kotlin
allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.layout.buildDirectory.set(file(""../build""))
subprojects {
    project.layout.buildDirectory.set(file(""${rootProject.layout.buildDirectory.dir(""/${project.name}"").get()}""))
}
subprojects {
    project.evaluationDependsOn("":app"")
}

tasks.register<Delete>(""clean"") {
    delete(rootProject.layout.buildDirectory)
}

```
yep it works locally . > hey @gmackall ,i guess `android\app\build.gradle.kts` should look like this :
> 
> ```kotlin
> allprojects {
>     repositories {
>         google()
>         mavenCentral()
>     }
> }
> 
> rootProject.layout.buildDirectory.set(file(""../build""))
> subprojects {
>     project.layout.buildDirectory.set(file(""${rootProject.layout.buildDirectory.dir(""/${project.name}"").get()}""))
> }
> subprojects {
>     project.evaluationDependsOn("":app"")
> }
> 
> tasks.register<Delete>(""clean"") {
>     delete(rootProject.layout.buildDirectory)
> }
> ```
> 
> yep it works locally .

I ended up going with a slightly different syntax, as the `set` wouldn't cause any errors, but I noticed that it wasn't properly creating the `build` directory (but looked like it worked at first if that directory hadn't been cleaned up). Thanks for chiming in regardless though! > > hey @gmackall ,i guess `android\app\build.gradle.kts` should look like this :
> > 
> > ```kotlin
> > allprojects {
> >     repositories {
> >         google()
> >         mavenCentral()
> >     }
> > }
> > 
> > rootProject.layout.buildDirectory.set(file(""../build""))
> > subprojects {
> >     project.layout.buildDirectory.set(file(""${rootProject.layout.buildDirectory.dir(""/${project.name}"").get()}""))
> > }
> > subprojects {
> >     project.evaluationDependsOn("":app"")
> > }
> > 
> > tasks.register<Delete>(""clean"") {
> >     delete(rootProject.layout.buildDirectory)
> > }
> > ```
> > 
> > yep it works locally .
> 
> I ended up going with a slightly different syntax, as the `set` wouldn't cause any errors, but I noticed that it wasn't properly creating the `build` directory (but looked like it worked at first if that directory hadn't been cleaned up). Thanks for chiming in regardless though!

If i recall i tried it with a new project that uses kotlin (build.gradle.kts) 
Tried running without any plugins worked.
Flutter Clean then flutter pub add sharedPrefernces and worked .maybe it has something to do with agp (8.7.1)and gradle(8.10) , also i guess i have a flutter.groovy script that is differnt then the master's branch .  I'll close #157468 then nice small thingie:)",nice small thingie:),"Replace deprecated `Project.buildDir` [getter](https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html#getBuildDir()) and [setter](https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html#setBuildDir(java.io.File)) uses.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","The change to use [`Directory.dir`](https://docs.gradle.org/current/javadoc/org/gradle/api/file/Directory.html) makes this start off as a child directory, so we need one more `../` I made the templates be slightly more readable than the version in tests/the lockfile generation script.

The latter version is sort of forced to be one line, so that it can conveniently be the same for Kotlin/Groovy (as `def`/`val` force to be Groovy/Kotlin specific), so that the lockfile generation script can be agnostic between the Groovy/Kotlin dsl while we still use both > I made the templates be slightly more readable than the version in tests/the lockfile generation script.
> 
> The latter version is sort of forced to be one line, so that it can conveniently be the same for Kotlin/Groovy (as `def`/`val` force to be Groovy/Kotlin specific), so that the lockfile generation script can be agnostic between the Groovy/Kotlin dsl while we still use both

One thing to consider: multiple files have the same content. Why not unify their usage?"
157878,2024-10-30T18:54:24Z,2024-10-30T20:18:01Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606252.0,0,0,0,0,4316295.788062,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/906a7ad88052...2bd854e23b61

2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from d022fe64116f to 77779dfed911 (1 revision) (flutter/engine#56239)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157875,2024-10-30T17:36:29Z,2024-10-30T18:42:07Z,engine-flutter-autoroll,0,0,13,2,1,1,1,"['engine', 'autosubmit']",,0,607327.0,0,0,0,0,4319897.401237,,0,13,0,False,[],,,"
https://github.com/flutter/engine/compare/57ed5d338e7e...906a7ad88052

2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 03600bc22ab8 to d022fe64116f (1 revision) (flutter/engine#56237)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 948b01e28f48 to 03600bc22ab8 (1 revision) (flutter/engine#56236)
2024-10-30 skia-flutter-autoroll@skia.org Roll Dart SDK from b319b2e53bfa to 36aed3607108 (2 revisions) (flutter/engine#56235)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 1a47627e627a to 948b01e28f48 (1 revision) (flutter/engine#56231)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 5410f1c6f86c to 1a47627e627a (1 revision) (flutter/engine#56230)
2024-10-30 skia-flutter-autoroll@skia.org Roll Dart SDK from 70eca740f23f to b319b2e53bfa (1 revision) (flutter/engine#56229)
2024-10-30 chris@bracken.jp iOS: make unopt debug builds unopt and debug (flutter/engine#56226)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 7385b2d99fe9 to 5410f1c6f86c (1 revision) (flutter/engine#56227)
2024-10-30 skia-flutter-autoroll@skia.org Roll Dart SDK from fcc2bc69db3e to 70eca740f23f (2 revisions) (flutter/engine#56225)
2024-10-30 skia-flutter-autoroll@skia.org Roll Skia from 6e0c0a255166 to 7385b2d99fe9 (5 revisions) (flutter/engine#56222)
2024-10-29 aam@google.com Roll buildroot to 3f1a1f0. (flutter/engine#56214)
2024-10-29 ditman@gmail.com [web] Prioritize split font fallbacks over monolythic ones. (flutter/engine#56187)
2024-10-29 skia-flutter-autoroll@skia.org Roll Skia from 5758d9c344e3 to 6e0c0a255166 (3 revisions) (flutter/engine#56215)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158220,2024-11-06T00:01:34Z,2024-11-06T17:11:15Z,chunhtai,0,0,1,2,1,2,2,"['autosubmit', 'd: docs/']",,0,61782.0,0,0,0,0,4323937.533479,,0,1,0,False,[],LGTM LGTM,LGTM LGTM,"Since we skipped all website cms pr during critical triage anyway

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158247,2024-11-06T09:39:20Z,2024-11-06T16:40:15Z,ValentinVignal,0,3,3,59,2,1,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",,0,25255.0,0,0,0,0,4325798.877995,,0,3,0,False,[],"LGTM! Nice!
Some minor typos and one suggestion.","LGTM! Nice!
Some minor typos and one suggestion.","Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/image/image.frame_builder.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","Maybe consider checking that the AnimatedOpacity child is the given SizedBox? ```suggestion
      frameBuilder(context, const SizedBox(key: key), null,  true),
``` ```suggestion
      frameBuilder(context, const SizedBox() ,null,  false),
```"
158248,2024-11-06T10:00:38Z,2024-11-06T14:26:29Z,ValentinVignal,0,0,1,66,2,1,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",,0,15951.0,0,0,0,0,4333826.577164,,0,1,0,False,[],LGTM! Perfect!,LGTM! Perfect!,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/image/image.loading_builder.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
",
157864,2024-10-30T15:01:15Z,2024-10-30T15:55:07Z,engine-flutter-autoroll,0,0,5,2,1,1,1,['autosubmit'],,0,605828.0,0,0,0,0,4330712.688993,,0,5,0,False,[],,,"
https://github.com/flutter/packages/compare/028027e6b1f1...7cc1caa0cc36

2024-10-30 stuartmorgan@google.com [tool] Update build-all app creation (flutter/packages#7955)
2024-10-30 srawlins@google.com Disable two lint rules which are being removed. (flutter/packages#7959)
2024-10-29 matanlurey@users.noreply.github.com Bump `path_provider_android` to `^2.2.5` due to Android v1 embedder. (flutter/packages#7935)
2024-10-29 engine-flutter-autoroll@skia.org Roll Flutter from 3fb95c7dd21d to 42132e879b42 (19 revisions) (flutter/packages#7958)
2024-10-29 stuartmorgan@google.com [webview_flutter] Fix macOS 14+ test hangs (flutter/packages#7953)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158214,2024-11-05T22:41:24Z,2024-11-06T13:12:35Z,mkustermann,1,0,3,968,24,1,1,"['tool', 'a: desktop']",52263.0,0,52271.0,0,0,0,0,4338260.947108,,0,3,0,False,['mkustermann'],"Thanks, @mraleph ",,"Almost all of the code is just adopting to changes to the APIs of
`package:native_assets_builder`, `package:native_assets_cli` and `package:native_toolchain_c`

There's only two semantic changes

* Removes a test that checks for a verification error if a build hook produces a static library if the preferred linking mode is dynamic:
  => The test is written in a very hacky way. By monkey patching the build config.json that flutter build actually made. This monkey patching relies on package:cli_config which is now no longer used.
  => The actual code that checks for this mismatch lives in dart-lang/native repository and is tested there. So there's really no need to duplicate that.

* The `package:native_assets_builder` no longer knows about code assets. This is something a user of that package (e.g. flutter tools) adds. Now the dry-run functionality will invoke build hooks who produce code assets without an architecture.
  => The `package:native_assets_builder` used to expand such a code asset to N different code assets (one for each supported architecture)
  => This logic was now moved to flutter tools. => In the near future we're going to this dry-run complexity, which will then also get rid of this uglyness (of expanding to all archs of an OS).
",
158237,2024-11-06T07:33:51Z,2024-11-06T08:34:37Z,bleroux,0,2,1,181,5,2,1,"['framework', 'f: scrolling', 'd: api docs', 'd: examples', 'autosubmit']",,0,4164.0,0,0,0,0,4354423.049343,,0,1,0,False,[],"LGTM

(modulo the potential conflict with https://github.com/flutter/flutter/pull/158101)","LGTM

(modulo the potential conflict with https://github.com/flutter/flutter/pull/158101)","## Description

Fix the formatting of some `RawScrollbar` examples.
Fix and rename one test file (name without `_test` suffix).","I see https://github.com/flutter/flutter/pull/158101 is also modifying this file, maybe we can remove this change from this PR since https://github.com/flutter/flutter/pull/158101 is deleting it? It would avoid conflicts Interesting, because the test was already there but misnamed, I think it would be easier to track the change by first 'activating' the existing test and then see if the test can be improved."
158175,2024-11-05T14:32:17Z,2024-11-06T07:14:05Z,bleroux,1,1,1,31,3,1,1,"['framework', 'f: material design', 'autosubmit']",30102.0,0,61309.0,0,0,0,0,4358572.29926,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158175, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=158175) has failed. Please fix the issues identified (or deflake) before re-applying this label.
Solid cleanup, thank you! LGTM :+1: 

Good point about utils functions showing up in autocomplete, I didn't think about that. I'm fine with keeping these local.","Solid cleanup, thank you! LGTM :+1: 

Good point about utils functions showing up in autocomplete, I didn't think about that. I'm fine with keeping these local.","## Description

This PR fixes some typos on `MenuAnchor` and improve the readability of a `DropdownMenu` test utility function.

@justinmc I'm still considering creating a test utils file for DropdownMenu but there are few utilities and I'm worried that helper functions in utils file will cripple completion results (not a big deal because it is just for people working on the framework) but I think this should be used carefully. For instance the function `getButtonMaterial` would have to be renamed to something less generic if exposed more broadly (`getMenuItemButtonMaterial` for instance).
",I don't know how this weird formatting got everywhere but thanks for fixing it!
152069,2024-07-20T14:14:11Z,2024-11-05T18:54:34Z,rkishan516,30,16,4,209,4,3,3,"['framework', 'f: material design']",780647.0,0,9397106.0,1,0,0,0,4355061.779172,,0,4,0,False,"['rkishan516', 'bleroux', 'Piinks', 'justinmc', 'rayliverified']","Sure @bleroux, Let me do the respective changes and notify once done. @bleroux I have made changes for `TextDirection.rtl`. Please have a look. Hey @bleroux, I have added both test you mentioned. But as you said, there are many more test related to `TextDirection.rtl`  as pending, I feel I can cover few of them. Do you want me to continue on `this PR` or should I create a new one for those tests ?  > Hey @bleroux, I have added both test you mentioned. But as you said, there are many more test related to `TextDirection.rtl` as pending, I feel I can cover few of them. Do you want me to continue on `this PR` or should I create a new one for those tests ?

@rkishan516 It would be better to add other tests on a new PR because we don't know if this one will be merged (it could be blocked on Google internal testing or being reverted after being merged due to an internal customer having an issue with it).
Adding tests on a separate PR will make it possible to land them without waiting for this PR.
 > @rkishan516 It would be better to add other tests on a new PR because we don't know if this one will be merged (it could be blocked on Google internal testing or being reverted after being merged due to an internal customer having an issue with it). Adding tests on a separate PR will make it possible to land them without waiting for this PR.

Sure, I will create a new PR.
 @rkishan516
Can you have a look at the test failures in step 'Linux framework_tests_libraries '?
You can get details on those failures in two different ways:
- Follow the 'Details' link near that CI check, then tap the link 'View more details on flutter-dashboard' and then the link 'stdout[raw]'.
- Running the whole framework test suite locally (go to flutter/packages/flutter directory and run 'flutter test'). Sure @bleroux, I can fix them. There are a few tests where the field has broken onto more lines now than before, due to the increased width of the prefix/suffix. I want to double check with the owners that that's ok. Otherwise the failures are expected. Good catch @bleroux! Hopefully that helps with the Google tests. Hey @rkishan516 thanks for the updates! Can you check the failing tests here? @rkishan516 https://github.com/flutter/flutter/pull/154098 has been merged, thanks for updating your PR to satisfy those new tests (you will have to update `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`). > @rkishan516 #154098 has been merged, thanks for updating your PR to satisfy those new tests (you will have to update `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`).

@bleroux What kind of update is required, because I currently see both uses children sizes > What kind of update is required, because I currently see both uses children sizes

@rkishan516 In case you did not look at the right ones, here are the methods that needs to be updated (`prefixToInputGap` and/or `inputToSuffixGap` should be added when prefix and/or suffix are not null):

https://github.com/flutter/flutter/blob/e167992911f7cfdc95e8a7f77e3a075d61b00561/packages/flutter/lib/src/material/input_decorator.dart#L1171-L1193

 @bleroux I have updated `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`. @justinmc This PR is ready now. Thank you in advance for checking the Google testing failures.
Especially if the ones you mentioned in https://github.com/flutter/flutter/pull/152069#issuecomment-2307918459 are still there or were fixed with the update of `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`. Sorry for the delay here, I'm currently looking at the Google test failures. I see a few instances where the cursor is sitting in the middle of the first character of the hint, where before this PR it was correctly to the left of the first letter. It's as if the cursor has moved but the hint has not. Any reason why that might happen here?

If I try a simple naive example I don't see the bug (tried on Mac, as pictured the cursor is in the correct place):

<img width=""107"" alt=""Screenshot 2024-09-25 at 3 31 17 PM"" src=""https://github.com/user-attachments/assets/f1d184ff-630f-4e2c-bdab-18eae3ae01c4"">


<details>

<summary>Example app that doesn't seem to reproduce it</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatelessWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(title),
      ),
      body: const Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              decoration: InputDecoration(
                prefixIcon: Icon(Icons.cake),
                hintText: 'hint',
              ),
            ),
          ],
        ),
      ),
    );
  }
}
```

</details> I believe the bug is actually something that needs to be fixed inside of Google's code. I am trying to suggest a fix and contact the team. Thanks @justinmc, I will wait for get it fixed from team. I'm struggling to figure out how to land this, but I just need to track someone down to help me and then we can move forward. I'm writing myself a reminder to check on this next week.

Basically we need to accept visual diff test changes AND make a small change to a customer's code. The Material suffix padding specs looks and feels very bad and would not pass design review at most companies.

**Issue**
The suffix right padding is 12dp which cuts off the splash which is 4dp too large. There's no option to customize the size of the splash, nor the right padding.

![image](https://github.com/user-attachments/assets/0d76db6a-89fe-43af-b8b8-614d2e82130f)

![image](https://github.com/user-attachments/assets/0c434860-b8a9-43de-9e0f-c8c03f865956)


So while it technically meets the Material Design specs, the actual result is that the suffix icon is almost unusable because it won't pass design review. So, what changes do you suggest @rayliverified ? SuffixIconPadding perhaps.

There's already `contentPadding`. Would match the API pattern.



 Sure, I will add suffixIconPadding with default to 4.0 Amazing, thank you! 

What would the decision be because the clipping is what happens if you follow the material specs exactly (default 0 padding). Adding 4 padding would fix the clipping, but not follow the materials specs.  I think @bleroux or @justinmc can take a call on that because I think both are not possible together (either we can follow m3 spec or avoid clipping). @rayliverified @rkishan516
This is an interesting point. It will more actionnable to discuss that on a separate issue.
Getting this PR merged as-is is already far from easy so let's keep this PR discussion focused on the main goal. Sure @bleroux, Then I will wait until google test are fixed. Once it's merged, we can create another issue. @rayliverified Would you be able to create a separate issue with the information in https://github.com/flutter/flutter/pull/152069#issuecomment-2395883216 and tag me? Sure, the icon is also bugged where it doesn't respect any size configurations. You can't customize the size of the trailing icon.Thanks for attempting to fix this! Can you take a look at the test failures? Changes to InputDecorator's layout can be pretty finicky. Thanks for working on this.
I’m ok with the approach (adding prefix/suffix gaps).

As Justin mentioned, be aware that it might be difficult to get this change landed because it will probably break some internal Google tests and maybe some customer tests.
Another difficulty is that `InputDecoration` test coverage is not perfect because the migration of the tests from Material 2 to Material 3 is still in progress (for instance there are missing tests for the RTL text direction).


See my comments on specific lines of the PR but I noticed that the rendering is wrong for RTL.



<details><summary>Here is a code sample that we can use to make this more visual</summary>

```dart

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SafeArea(
        child: Material(
          child: Container(
            color: const Color.fromARGB(255, 200, 206, 182),
            padding: const EdgeInsets.all(8.0),
            child: const Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(height: 10),
                IconsMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.ltr,
                ),
                SizedBox(height: 16),
                FloatingLabelMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.ltr,
                  labelText: 'Label text',
                ),
                SizedBox(height: 30),
                IconsMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.rtl,
                ),
                SizedBox(height: 16),
                FloatingLabelMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.rtl,
                  labelText: 'Label text',
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class InputDecoratorWithIcons extends StatelessWidget {
  const InputDecoratorWithIcons({super.key, required this.textDirection, this.labelText});

  final TextDirection textDirection;
  final String? labelText;

  @override
  Widget build(BuildContext context) {
    return Directionality(
      textDirection: textDirection,
      child: SizedBox(
        width: 200,
        child: InputDecorator(
          isEmpty: false,
          isFocused: false,
          decoration: InputDecoration(
            labelText: labelText,
            prefixIcon: const Icon(Icons.search),
            suffixIcon: const Icon(Icons.cancel),
            filled: true,
            border: const OutlineInputBorder(),
          ),
          child: Container(
            width: 200, // Too long but will be cut.
            height: 24, // Simulate default font height.
            color: Colors.blueGrey,
            child: Center(
              child: Text(
                textDirection == TextDirection.rtl ? 'RTL' : 'LTR',
                style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
              ),
            ),
          ),
        ),
      ),
    );
  }
}

class IconsMetrics extends StatelessWidget {
  const IconsMetrics({super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 12,
      child: Row(
        children: [
          // Based on https://m3.material.io/components/text-fields/specs#1ad2798c-ab41-4f0c-9a97-295ab9b37f33.
          Container(color: Colors.purple, width: 12),
          Container(color: Colors.white, width: 24),
          Container(color: Colors.purple, width: 16),
          Container(color: Colors.blueGrey, width: 96), // 200 - 52 - 52
          Container(color: Colors.purple, width: 16),
          Container(color: Colors.white, width: 24),
          Container(color: Colors.purple, width: 12),
        ],
      ),
    );
  }
}

class FloatingLabelMetrics extends StatelessWidget {
  const FloatingLabelMetrics({super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 12,
      child: Row(
        children: [
          // Based on https://m3.material.io/components/text-fields/specs#1ad2798c-ab41-4f0c-9a97-295ab9b37f33.
          Container(color: Colors.red, width: 12 + 4), // 16
          Container(color: Colors.white, width: 168),  // 200 - 16 - 16
          Container(color: Colors.red, width: 12 + 4), // 16
        ],
      ),
    );
  }
}

```

</details>

See the following screenshot where I added red arrows to point out to two problems with the rendering in RTL direction
(the colored lines above the decorations are based on the expected padding from the M3 spec):

![image](https://github.com/user-attachments/assets/021a8b24-28a0-474e-b5f0-28f1882a392e)

 Thanks for the last changes.
There were some missing tests related to RTL, can you add them? (see my review comments). LGTM! Thanks for keeping up on this PR.
Let me approve the PR and see how it goes with the 'Google testing' CI check. Unfortunately this is failing the Google tests, but I guess that's expected. Pretty much any field with a prefix or suffix in a visual diff test will break with this PR. I'll look through them and see if we can approve the changes. While working on InputDecorator intrinsic size, I noticed that this PR needs to update intrinsic width computation.
I filed https://github.com/flutter/flutter/pull/154098 to migrate the intrinsic width test to M3.

@justinmc Thanks in advance for reviewing https://github.com/flutter/flutter/pull/154098
@rkishan516 Once https://github.com/flutter/flutter/pull/154098 will be merged, thanks for updating your PR to satisfy those new tests (you will have to update `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`).

Fixing this might help with some of the Google testing failures. LGTM! Thanks for this hard work 🙏 ","Thanks for attempting to fix this! Can you take a look at the test failures? Changes to InputDecorator's layout can be pretty finicky. Thanks for working on this.
I’m ok with the approach (adding prefix/suffix gaps).

As Justin mentioned, be aware that it might be difficult to get this change landed because it will probably break some internal Google tests and maybe some customer tests.
Another difficulty is that `InputDecoration` test coverage is not perfect because the migration of the tests from Material 2 to Material 3 is still in progress (for instance there are missing tests for the RTL text direction).


See my comments on specific lines of the PR but I noticed that the rendering is wrong for RTL.



<details><summary>Here is a code sample that we can use to make this more visual</summary>

```dart

import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SafeArea(
        child: Material(
          child: Container(
            color: const Color.fromARGB(255, 200, 206, 182),
            padding: const EdgeInsets.all(8.0),
            child: const Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(height: 10),
                IconsMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.ltr,
                ),
                SizedBox(height: 16),
                FloatingLabelMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.ltr,
                  labelText: 'Label text',
                ),
                SizedBox(height: 30),
                IconsMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.rtl,
                ),
                SizedBox(height: 16),
                FloatingLabelMetrics(),
                SizedBox(height: 4),
                InputDecoratorWithIcons(
                  textDirection: TextDirection.rtl,
                  labelText: 'Label text',
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class InputDecoratorWithIcons extends StatelessWidget {
  const InputDecoratorWithIcons({super.key, required this.textDirection, this.labelText});

  final TextDirection textDirection;
  final String? labelText;

  @override
  Widget build(BuildContext context) {
    return Directionality(
      textDirection: textDirection,
      child: SizedBox(
        width: 200,
        child: InputDecorator(
          isEmpty: false,
          isFocused: false,
          decoration: InputDecoration(
            labelText: labelText,
            prefixIcon: const Icon(Icons.search),
            suffixIcon: const Icon(Icons.cancel),
            filled: true,
            border: const OutlineInputBorder(),
          ),
          child: Container(
            width: 200, // Too long but will be cut.
            height: 24, // Simulate default font height.
            color: Colors.blueGrey,
            child: Center(
              child: Text(
                textDirection == TextDirection.rtl ? 'RTL' : 'LTR',
                style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
              ),
            ),
          ),
        ),
      ),
    );
  }
}

class IconsMetrics extends StatelessWidget {
  const IconsMetrics({super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 12,
      child: Row(
        children: [
          // Based on https://m3.material.io/components/text-fields/specs#1ad2798c-ab41-4f0c-9a97-295ab9b37f33.
          Container(color: Colors.purple, width: 12),
          Container(color: Colors.white, width: 24),
          Container(color: Colors.purple, width: 16),
          Container(color: Colors.blueGrey, width: 96), // 200 - 52 - 52
          Container(color: Colors.purple, width: 16),
          Container(color: Colors.white, width: 24),
          Container(color: Colors.purple, width: 12),
        ],
      ),
    );
  }
}

class FloatingLabelMetrics extends StatelessWidget {
  const FloatingLabelMetrics({super.key});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 12,
      child: Row(
        children: [
          // Based on https://m3.material.io/components/text-fields/specs#1ad2798c-ab41-4f0c-9a97-295ab9b37f33.
          Container(color: Colors.red, width: 12 + 4), // 16
          Container(color: Colors.white, width: 168),  // 200 - 16 - 16
          Container(color: Colors.red, width: 12 + 4), // 16
        ],
      ),
    );
  }
}

```

</details>

See the following screenshot where I added red arrows to point out to two problems with the rendering in RTL direction
(the colored lines above the decorations are based on the expected padding from the M3 spec):

![image](https://github.com/user-attachments/assets/021a8b24-28a0-474e-b5f0-28f1882a392e)

 Thanks for the last changes.
There were some missing tests related to RTL, can you add them? (see my review comments). LGTM! Thanks for keeping up on this PR.
Let me approve the PR and see how it goes with the 'Google testing' CI check. Unfortunately this is failing the Google tests, but I guess that's expected. Pretty much any field with a prefix or suffix in a visual diff test will break with this PR. I'll look through them and see if we can approve the changes. While working on InputDecorator intrinsic size, I noticed that this PR needs to update intrinsic width computation.
I filed https://github.com/flutter/flutter/pull/154098 to migrate the intrinsic width test to M3.

@justinmc Thanks in advance for reviewing https://github.com/flutter/flutter/pull/154098
@rkishan516 Once https://github.com/flutter/flutter/pull/154098 will be merged, thanks for updating your PR to satisfy those new tests (you will have to update `computeMinIntrinsicWidth` and `computeMinIntrinsicWidth`).

Fixing this might help with some of the Google testing failures. LGTM! Thanks for this hard work 🙏 ","Gap between `prefixIcon` and `input` field was not compliant with M3 spec i.e. 16.0 rather it was 12.0
and similar situation was also happening with `suffixIcon` and `input` field.

Now with these changes, its compliant with M3 spec of input decoration.

Fixes #149408 
Fixes #149409 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Can you reflow these comments so that the first line isn't so short? This change is for the `TextDirection.rtl` case, I would also expect a similar change for the prefix (probably at line 1382) This change is for the `TextDirection.ltr` case, I would also expect a similar change for the suffix (probably at line 1438) ```suggestion
          // Label left padding is 16.0 (12.0 right padding for a decoration with icons + 4.0 extra padding for the floating label)
``` Remove this reference to the issue, this link was required for the TODO (it no more required now). Remove this reference to the issue, this link was required for the TODO (it no more required now). @bleroux For both cases we are increasing size of box (line 1008 & 1009). So for `TextDirection.rtl` we are adding gap between `suffix` and `input`. On the other side for `TextDirection.ltr` we are adding gap between `prefix` and `input`. So, I don't think we need to add prefix gap (for `TextDirection.rtl`) or suffix gap (for `TextDirection.ltr`). Because that is already handled by size of the box. The size of the box is correct but the placements in RTL is wrong (too much padding on the left side not enough on the right, see the screenshot I posted).
Testing locally, when adding the logic I pointed, I can get the correct result in RTL but maybe there are other ways to get the correct result. Yup, make sense. Sorry, I didn't checked the images. I have pushed respective changes. Consider adding a test similar to the one above but for RTL? Similarly, consider adding a test similar to the one above but for RTL? Do you know why this line is not impacted? Oh, weird. I don't know. But let me check. It was happening because I forgot to add padding when leading icon is not there. I have fixed and pushed the change. Great 👍  Rather than setting leadingPadding twice can you set it to a local variable first?"
119565,2023-01-30T21:52:25Z,2023-02-03T18:14:59Z,justinmc,2,2,4,99,5,3,2,"['a: text input', 'framework', 'f: material design', 'f: cupertino', 'autosubmit']",157416.0,1,55761702.0,0,0,0,0,4359773.306584,,2,4,0,False,['justinmc'],"Heads up @camsim99 this may break your iOS spell check toolbar because I've moved kToolbarScreenPadding from TextSelectionToolbar to CupertinoTextSelectionToolbar so that it's available to be reused everywhere.  Should be an easy fix at least! Google testing appeared stuck overnight, so I pushed a merge commit.LGTM",LGTM,"Looks like I had the math reversed when positioning the context menu below its target (when it's too close to the top of the device) on iOS.  This fixes it.

Fixes https://github.com/flutter/flutter/issues/119441","Nice!! For the line of code 'anchorBelow.dy - _kToolbarContentDistance + paddingAbove', why is _kToolbarContentDistance subtracted and paddingAbove added? This doesn't seem to have any connection"
157833,2024-10-29T23:51:23Z,2024-10-30T17:24:09Z,engine-flutter-autoroll,1,0,5,2,1,1,1,"['engine', 'will affect goldens', 'autosubmit']",2628.0,0,612385.0,0,0,0,0,4378752.436751,,0,5,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/157833) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157833 at sha a9a94aeef97e53817bd12303eedf177c2ad717ba_

",,"
https://github.com/flutter/engine/compare/999797a2f690...57ed5d338e7e

2024-10-29 bdero@google.com [Flutter GPU] Fix MSAA sample size and HostBuffer alignment. (flutter/engine#56218)
2024-10-29 flar@google.com Change default TileMode for blur ImageFilter objects to null (flutter/engine#55552)
2024-10-29 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[Impeller] Reland: disable AHBs on devices that were upgraded to 29. (#56213)"" (flutter/engine#56220)
2024-10-29 30870216+gaaclarke@users.noreply.github.com Made et compilation errors relative to the CWD (flutter/engine#56177)
2024-10-29 jonahwilliams@google.com [Impeller] Reland: disable AHBs on devices that were upgraded to 29. (flutter/engine#56213)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158206,2024-11-05T20:59:20Z,2024-11-06T01:08:54Z,LouiseHsu,2,3,4,23,3,2,1,"['tool', 'a: desktop', 'autosubmit']",6521.0,0,14974.0,0,0,0,0,4381687.148038,,0,4,0,False,"['loic-sharma', 'LouiseHsu']","Could we also bump the recommended CocoaPods version:

https://github.com/flutter/flutter/blob/b6fef5cfda2d32eefd06b873490f234a167884ed/packages/flutter_tools/lib/src/macos/cocoapods.dart#L77-L78

This will make `flutter doctor` recommend a CocoaPods upgrade. > Could we also bump the recommended CocoaPods version?
> 
> https://github.com/flutter/flutter/blob/b6fef5cfda2d32eefd06b873490f234a167884ed/packages/flutter_tools/lib/src/macos/cocoapods.dart#L77-L78

🫡 LGTM, thanks for updating this!","LGTM, thanks for updating this!","Update to https://github.com/flutter/flutter/issues/156733
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Nit: Google technical writing style prefers ""might"" over ""may"" unless it's a legal context

```suggestion
        'Error: Your Cocoapods might be out-of-date and unable to support synchronized groups/folders. '
``` ```suggestion
          'Error: Your Cocoapods might be out-of-date and unable to support synchronized groups/folders. '
``` i want a writing style formatter"
158204,2024-11-05T20:47:36Z,2024-11-06T01:05:02Z,matanlurey,1,0,2,30,1,1,1,"['tool', 'autosubmit']",432.0,0,15446.0,0,0,0,0,4381920.777394,,1,2,0,False,['matanlurey'],"Ahah, well it does time out on CI:

```txt
00:18 +2369 ~2 -1: test/general.shard/ios/ios_device_start_nonprebuilt_test.dart: IOSDevice.startApp succeeds in release mode with concurrent build failures [E]
  TimeoutException after 0:00:02.000000: Test timed out after 2 seconds.
  dart:isolate  _RawReceivePort._handleMessage
```

Strange, I'll take a look.LGTM",LGTM,"Closes https://github.com/flutter/flutter/issues/60675.

From what I can tell `FakeAsync` wasn't necessary to making this be testable (or at least it isn't anymore?)",
158145,2024-11-05T00:25:48Z,2024-11-06T00:07:08Z,matanlurey,3,0,3,25,2,1,1,"['framework', 'f: cupertino', 'autosubmit']",498.0,0,85280.0,0,0,0,0,4385395.222127,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158145, due to - The status or check suite [Linux web_canvaskit_tests_6](https://cr-buildbucket.appspot.com/build/8732153376330796417) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Linux analyzer_benchmark](https://cr-buildbucket.appspot.com/build/8732153614258278049) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158145, due to - The status or check suite [Linux analyzer_benchmark](https://cr-buildbucket.appspot.com/build/8732152913984683873) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158145, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=158145) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"Unblocks landing https://github.com/flutter/engine/pull/56329.

@jtmcdole monorepo can't come soon enough...",
156338,2024-10-07T16:36:52Z,2024-11-06T00:55:06Z,kirya355,4,10,6,36,2,3,2,"['framework', 'f: scrolling', 'autosubmit']",3.0,0,2535495.0,0,0,0,0,4382516.960904,,0,6,0,False,"['kirya355', 'Piinks', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. (PR triage): @kirya355 thanks for contributing. Do you plan to continue working on this change? > (PR triage): @kirya355 thanks for contributing. Do you plan to continue working on this change?

Yes, I do plan to continue working on this change. Thank you for your attention!
 I have added a test to verify that DraggableScrollableSheet respects the shouldCloseOnMinExtent property. Please take a look when you have a chance.
cc: @chunhtai, @nate-thegrateLooks great!

Only thing we're missing is a test—gotta make sure we don't accidentally break or revert this in the future. change looks good to me, but we need a test Thanks @kirya355!

Would you be able to [do a rebase](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/testing/Fix-failing-checks.md#ciyaml-validation) so we can get those checks running? Thanks for following up on this! Just have a couple of small suggestions :) ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the contribution! LGTM","Looks great!

Only thing we're missing is a test—gotta make sure we don't accidentally break or revert this in the future. change looks good to me, but we need a test Thanks @kirya355!

Would you be able to [do a rebase](https://github.com/nate-thegrate/flutter/blob/fix-checks-wiki-page/docs/contributing/testing/Fix-failing-checks.md#ciyaml-validation) so we can get those checks running? Thanks for following up on this! Just have a couple of small suggestions :) ![Flutter_LGTM](https://user-images.githubusercontent.com/16964204/169392212-02bb74fe-c6b9-4eb7-aa62-6ddb43a70d5b.png)

Thanks for the contribution! LGTM","This PR fixes the `shouldCloseOnMinExtent` flag in `draggable_scrollable_sheet.dart`.

*The `shouldCloseOnMinExtent` flag was not functioning correctly in the `DraggableScrollableSheet` widget. This PR ensures that the flag is properly handled, preventing the sheet from closing when it reaches the minimum extent if the flag is set to false. Before/after screenshots are not applicable for this change.*

In the code sample below, before my fix, the sheet would close when scrolled down. After my fix, it behaves as expected by respecting the `shouldCloseOnMinExtent` parameter.

### Code Sample
```dart

import 'package:flutter/material.dart';

Future<void> main() async {
  runApp(const MaterialApp(
    home: Home(),
  ));
}

class Home extends StatelessWidget {
  const Home({
    super.key,
  });

  @override
  Widget build(BuildContext context) => Scaffold(
        body: Center(
          child: FilledButton(
            onPressed: () async => showModalBottomSheet(
              context: context,
              isScrollControlled: true,
              isDismissible: false,
              builder: (context) => DraggableScrollableSheet(
                expand: false,
                maxChildSize: 0.9,
                minChildSize: 0.25,
                initialChildSize: 0.5,
                shouldCloseOnMinExtent: false,
                builder: (context, scrollController) => Navigator(
                  onGenerateRoute: (settings) => MaterialPageRoute(
                    settings: settings,
                    builder: (context) => ListView.builder(
                      controller: scrollController,
                      itemExtent: 100,
                      itemCount: 100,
                      itemBuilder: (context, index) => Center(
                        child: Text('$index'),
                      ),
                    ),
                  ),
                ),
              ),
            ),
            child: const Text('Open sheet'),
          ),
        ),
      );
}
```


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
","I guess whether these are `required` doesn't matter too much since it's a private class… I like how it looks though 👍 Nice job catching this! tiny whitespace suggestion:

```suggestion
  testWidgets('DraggableScrollableSheet respects shouldCloseOnMinExtent', (WidgetTester tester) async {
``` A couple of thoughts relating to this test:
- Generally, `tester.pumpWidget()` only needs to be called more than once if the widget is rebuilding with a different configuration.
- It might be nice to null out `receivedNotification` to make sure the notification isn't just a leftover value from the previous fling.

```suggestion
    await tester.pumpWidget(boilerplateWidget(
      null,
      controller: controller,
      shouldCloseOnMinExtent: false,
      onDraggableScrollableNotification: (DraggableScrollableNotification notification) {
        receivedNotification = notification;
        return false;
      },
    ));

    Future<void> fling() async {
      await tester.flingFrom(const Offset(0, 325), const Offset(0, -325), 200);
      await tester.pumpAndSettle();
    }

    await fling();
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);

    receivedNotification = null;
    controller.jumpTo(0.5);

    await fling();
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);
``` The test is designed to call didUpdateWidget, and currently _replaceExtent function is always called in didUpdateWidget,  there is no check for equality between the old and new widget inside. My test verifies that shouldCloseOnMinExtent is correctly assigned within _replaceExtent Different controllers can be used so that if didUpdateWidget is modified in the future to compare with the previous widget, the function will still be called cause the controller is new. Here example
```dart
    DraggableScrollableController controller = DraggableScrollableController();
    DraggableScrollableNotification? receivedNotification;

    Future<void> pumpWidgetAndFling() async {
      await tester.pumpWidget(boilerplateWidget(
        null,
        controller: controller,
        shouldCloseOnMinExtent: false,
        onDraggableScrollableNotification: (DraggableScrollableNotification notification) {
          receivedNotification = notification;
          return false;
        },
      ));

      await tester.flingFrom(const Offset(0, 325), const Offset(0, -325), 200);
      await tester.pumpAndSettle();
    }

    await pumpWidgetAndFling();
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);
    controller.jumpTo(0.5);
    
    controller = DraggableScrollableController();
    await pumpWidgetAndFling();
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);
```

Do it like this? Ah, my apologies! I hadn't noticed thanks to narrow GitHub diffs, but you're right that this method is called from `didUpdateWidget` and not anywhere else.

I think the current implementation is fine, thanks for improving my understanding! 😄 I think we do still want to null out `receivedNotification` here, to make sure it's not just holding a leftover value.

It'd also be helpful to have a comment here to explain the rationale.

```suggestion
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);

    receivedNotification = null;
    controller.jumpTo(0.5);

    // Construct the widget a second time, to ensure didUpdateWidget is called.
    await pumpWidgetAndFling();
```

 Hadn't noticed this till now, but it looks like `DraggableScrollableController` is a `ChangeNotifier`, so we'll want to `dispose` of it to prevent memory leaks.

```suggestion
    expect(receivedNotification!.shouldCloseOnMinExtent, isFalse);
    controller.dispose();
  });
``` private class should have required since we own all the call site"
158202,2024-11-05T20:25:04Z,2024-11-05T23:49:01Z,matanlurey,3,0,1,6,1,1,1,"['tool', 'autosubmit']",1461.0,0,12237.0,0,0,0,0,4386483.880021,,0,1,0,False,"['matanlurey', 'bkonyi']","Removing this flag SGTM once this PR is cleaned up. > Removing this flag SGTM once this PR is cleaned up.

Yeah woah I wonder what I did here. There we go.Much better! LGTM :)",Much better! LGTM :),I checked google3 as well and couldn't find any reference.,
158205,2024-11-05T20:50:36Z,2024-11-05T23:43:50Z,matanlurey,0,2,2,7,1,2,1,"['tool', 'autosubmit']",,0,10394.0,0,0,0,0,4386795.582181,,0,2,0,False,[],,,Description intentionally left blank :),This line can be removed now that the expectation is checking the result. Done.
157424,2024-10-23T09:30:57Z,2024-11-05T23:34:44Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: flake', 'autosubmit']",,0,1173827.0,0,0,0,0,4387342.030829,,0,1,0,False,[],,,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Mac_benchmark animated_complex_opacity_perf_macos__e2e_summary""
}
-->
Issue link: https://github.com/flutter/flutter/issues/157423
",
158196,2024-11-05T18:20:57Z,2024-11-05T23:20:10Z,andrewkolos,2,2,2,52,1,3,2,['autosubmit'],2214.0,0,17954.0,0,0,0,0,4388216.285351,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158196, due to - The status or check suite [Windows tool_integration_tests_7_9](https://cr-buildbucket.appspot.com/build/8732085927562225633) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/158196, due to - The status or check suite [Windows build_android_host_app_with_module_aar](https://cr-buildbucket.appspot.com/build/8732075249725284609) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM as I do think think this is needed, but feel free to defer to Ben as well.","LGTM as I do think think this is needed, but feel free to defer to Ben as well.","I've noticed Linux tool_integration_tests 5_5 has come very close to timing out. See https://github.com/flutter/flutter/issues/155317 for more context, I am not 100% confident that increasing the subsharding here will help given that we just very recently increased subsharding from 4 to 5, but the results could be interesting regardless.

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",We have to mark all of these as bringup because we're renaming the shard? yep
158161,2024-11-05T09:43:24Z,2024-11-05T23:07:57Z,ValentinVignal,0,1,1,56,5,1,1,"['framework', 'f: scrolling', 'd: api docs', 'd: examples', 'autosubmit']",,0,48273.0,0,0,0,0,4388950.843708,,0,1,0,False,[],"LGTM! :pray: 
See my comment about improving the existing examples.","LGTM! :pray: 
See my comment about improving the existing examples.","Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/scrollbar/raw_scrollbar.2.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","Good catch for those missing dispose :tada: 

Consider renaming the `_firstController` variable to `_controller` or `_scrollController` and do the same for the other scrollbar examples.

`raw_scrollbar.0.dart` is also wrongly formatted, consider fixing it, as you want."
158201,2024-11-05T20:11:54Z,2024-11-05T23:00:05Z,andrewkolos,0,0,3,24,3,1,1,"['tool', 'autosubmit']",,0,10091.0,0,0,0,0,4389423.10468,,0,3,0,False,[],,,"While doing some hacking on `Cache` in https://github.com/flutter/flutter/pull/158081, I noticed that [`Cache.test`](https://github.com/flutter/flutter/blob/de9318275391a6d2f10ae33c576f4113b25fd156/packages/flutter_tools/lib/src/cache.dart#L139) allows the caller to tell Cache to use some given directory as the flutter root (instead of depending on the static global [`Cache.flutterRoot`](https://github.com/flutter/flutter/blob/4f3976a4f2b722d26c3353158dcd26590859dde0/packages/flutter_tools/lib/src/cache.dart#L206)). This has a default value, `/cache`. However, `/cache` is an unintuitive name for the root directory of a Flutter installation.

This led to confusion when updating some tests. I wanted to create `/bin/cache/engine-dart-sdk.stamp` for tests, but in reality I needed to create `/cache/bin/cache/engine-dart-sdk.stamp`.

This PR changes this default to the current directory of the file system (which I'm guessing is `/` for all intents and purposes). 

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>


<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157825,2024-10-29T19:58:23Z,2024-10-29T23:01:25Z,engine-flutter-autoroll,2,0,1,2,1,1,1,"['engine', 'autosubmit']",3783.0,0,605397.0,0,0,0,0,4399729.487929,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157825, due to - The status or check suite [Linux tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8732714020377368113) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/157825, due to - The status or check suite [Linux tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8732714020377368113) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/795b5492f1b9...999797a2f690

2024-10-29 jonahwilliams@google.com [Impeller] disable Adreno 506. (flutter/engine#56210)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157881,2024-10-30T20:46:02Z,2024-11-05T19:56:37Z,flutteractionsbot,2,0,1,1033,46,1,1,"['tool', 'cp: review', 'autosubmit']",2.0,0,515435.0,0,0,0,0,4400432.925312,,0,1,0,False,"['gmackall', 'flutteractionsbot']"," @gmackall please fill out the PR description above, afterwards the release team will review this request. cc @craiglabenz ",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

This allows host Android apps using Kotlin Gradle files to depend on a Flutter module as source, see
https://docs.flutter.dev/add-to-app/android/project-setup#add-the-flutter-module-as-a-dependency. 

Previously they wouldn't be able to, because we expected the host app to use `setBinding` in it's Gradle files, which is Groovy syntax that doesn't have a parallel in the Kotlin Gradle DSL. They could still depend on a flutter module if built as an aar.

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Allows host Android apps using Kotlin Gradle files to include a Flutter module.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

Without this change, Android apps using Kotlin Gradle files are unable to depend on a Flutter module as source (they would still be able to as an aar).

### Workaround:
Is there a workaround for this issue?

Build the flutter module as an aar.

### Risk:
What is the risk level of this cherry-pick?

  - [ ] Low
  - [x] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [ ] Yes
  - [x] No

### Validation Steps:
What are the steps to validate that this fix works?

Create a new Android app (probably in Android studio).
Create a Flutter module (`flutter create foobar --template=module`).
Apply [this diff](https://github.com/flutter/flutter/commit/1f1e92ac79403745d609220ce74c09a446eb4e6c), matching names to your specific case, to the Android app.
",
157820,2024-10-29T18:36:31Z,2024-10-29T19:45:22Z,engine-flutter-autoroll,0,0,5,2,1,1,1,"['engine', 'autosubmit']",,0,606710.0,0,0,0,0,4403329.258072,,0,5,0,False,[],,,"
https://github.com/flutter/engine/compare/725c8e4bc379...795b5492f1b9

2024-10-29 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""[Impeller] disable AHBs on devices that were upgraded to 29. (#56202)"" (flutter/engine#56212)
2024-10-29 aam@google.com Remove --time run of gen_snapshot. (flutter/engine#56204)
2024-10-29 jason-simmons@users.noreply.github.com [Impeller] Clip the DrawImageRect source rect to the bounds of the image (flutter/engine#56183)
2024-10-29 jonahwilliams@google.com [Impeller] disable Maleoon GPU from using Vulkan. (flutter/engine#56203)
2024-10-29 jonahwilliams@google.com [Impeller] disable AHBs on devices that were upgraded to 29. (flutter/engine#56202)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157646,2024-10-25T22:40:44Z,2024-11-05T19:01:02Z,jmagman,2,1,2,60,4,3,2,"['tool', 'a: desktop', 'autosubmit']",429343.0,1,937257.0,0,0,0,0,4403730.842884,,0,2,0,False,"['jmagman', 'andrewkolos']","> To convince `xcdevice observe` to redirect to stdout it's being launched in an interactive shell `/usr/bin/script -t 0 /dev/null /usr/bin/arch -arm64e xcrun xcdevice observe --usb`

Where does the output usually go if not stdout? > > To convince `xcdevice observe` to redirect to stdout it's being launched in an interactive shell `/usr/bin/script -t 0 /dev/null /usr/bin/arch -arm64e xcrun xcdevice observe --usb`
> 
> Where does the output usually go if not stdout?

If I recall from https://github.com/flutter/flutter/pull/58137#discussion_r431531425 (though it was 4 years ago) it eventually goes to stdout but it waited until the buffer hit some size before writing it, so the output wasn't up-to-date and so we couldn't reliably parse the json since it was output in chunks.

I learned the trick from @cbracken in https://github.com/flutter/flutter/pull/12079/files#diff-5a9a07600dceb28cbe887a5a64a24b0aR502-R504, who filed an issue about a different command with a similar issue https://openradar.appspot.com/34420207
LGTM ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/1820b2e0-0993-4956-a8ee-6d3255ec9f22)",LGTM ![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/1820b2e0-0993-4956-a8ee-6d3255ec9f22),"To convince `xcdevice observe` to redirect to stdout it's being launched in an interactive shell `/usr/bin/script -t 0 /dev/null /usr/bin/arch -arm64e xcrun xcdevice observe --usb`
https://github.com/flutter/flutter/blob/1cc8a07ace699de12fcd31ac9e8fcfa14f1017e2/packages/flutter_tools/lib/src/macos/xcdevice.dart#L261-L263

When the `flutter` command exits, the interactive script process is terminated, but not its jobs `xcdevice observe --usb`.

Instead of `-9` sigterm killing the interactive script, send it a [`SIGHUP`](https://linux.die.net/Bash-Beginners-Guide/sect_12_01.html#sect_12_01_01_02) (signal hangup) during `XCDevice.dispose()`, which will exit its processes.  Add a shutdown hook to ensure `dispose` is run when the process exits.

Fixes https://github.com/flutter/flutter/issues/73859

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion

```"
157946,2024-10-31T19:54:46Z,2024-11-05T18:42:52Z,flutteractionsbot,1,0,1,94,2,1,1,"['tool', 'cp: review', 'autosubmit']",2.0,0,427686.0,0,0,0,0,4404860.140723,,0,1,0,False,['flutteractionsbot']," @gmackall please fill out the PR description above, afterwards the release team will review this request.",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/156304

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Provides guidance on how to fix a common error encountered when using Java 21 and Android Gradle Plugin versions less than 8.2.1, a combination that many users are encountering due to a recent Android Studio upgrade.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

Flutter apps fail to build on Android when using the previously mentioned combination (Java 21/AGP < 8.2.1). This error handler guides users on fixing the problem.

### Workaround:
Is there a workaround for this issue?

Users can upgrade their AGP version, or specify a lower Java version. But they would be unlikely to know this, because the (unhandled) error message is not helpful for Flutter developers.

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

Try building an app with the mentioned combination, verify that the handler triggers (i.e., the message includes `flutter fix...`
",
158125,2024-11-04T19:16:47Z,2024-11-05T18:42:51Z,flutteractionsbot,2,0,1,26,3,1,1,"['tool', 'cp: review', 'autosubmit']",1.0,0,84364.0,0,0,0,0,4404861.493281,,0,1,0,False,"['flutteractionsbot', 'LouiseHsu']"," @LouiseHsu please fill out the PR description above, afterwards the release team will review this request. The cherry pick to beta is here https://github.com/flutter/flutter/pull/158131",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/issues/157359

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

Prevents `flutter build ios-framework --xcframework` from copying an extraneous Flutter.xcframework.dSYM into the App.framework folder

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

Previously, `flutter build ios-framework --xcframework` would fail with
`error: Multiple commands produce '......./BuildProductsPath/Release-iphoneos/Flutter.framework.dSYM/Contents'`. 

Is there a workaround for this issue?

The workaround is to delete `App.xcframework/ios-arm64/dSYMs/Flutter.framework.dSYM`.

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

Try to build any example app with `flutter build ios-framework --xcframework`, then inspect the App.framework folder. It should only include  `App.framework.dSYM`, and not `Flutter.xcframework.dSYM `",
158146,2024-11-05T00:38:16Z,2024-11-05T18:27:16Z,andrewkolos,0,0,2,59,1,1,1,['autosubmit'],,0,64141.0,0,0,0,0,4405796.971778,,0,2,0,False,[],,,"Helps with https://github.com/flutter/flutter/issues/157845. See that thread for more info.


<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>



<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158133,2024-11-04T21:21:33Z,2024-11-05T02:09:36Z,polina-c,5,2,3,2,1,2,1,"['tool', 'autosubmit']",24.0,0,75769.0,2,0,0,0,4405972.312084,,0,3,0,False,"['matanlurey', 'flutter-dashboard[bot]', 'polina-c']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. You _can_ do this, but I think this is better done as a G3Fix when rolling, no? Polina, any update? There are issues with G3Fix: b/377380166 This PR bypassed testing exempt, because it was high priority to re-land PRs.
If the PR is not test-exemptable, please, let me know and I will follow up.Let's consider a G3Fix instead of this approach, if able.","Let's consider a G3Fix instead of this approach, if able.","This is to handle Google testing failures for  https://github.com/flutter/flutter/pull/158126.

We want to update G3 to provide this parameter before merging the full change.

Testing is not needed because the change is no-op.","Do you need to add back the parameter? oh, thanks, added"
157306,2024-10-21T23:34:45Z,2024-11-05T18:09:15Z,andrewkolos,3,0,2,102,2,2,2,"['tool', 'cp: review', 'cp: approved', 'autosubmit']",137361.0,0,1276470.0,0,0,0,0,4406879.693254,,0,2,0,False,"['reidbaker', 'andrewkolos']","@andrewkolos I am cutting the hotfix build today and there are failing tests. Is this something you still want to land. 

As a release engineer I support this change.  > @andrewkolos I am cutting the hotfix build today and there are failing tests. Is this something you still want to land.
> 
> As a release engineer I support this change.

I don't see any checks failing on this PR > > @andrewkolos I am cutting the hotfix build today and there are failing tests. Is this something you still want to land.
> > As a release engineer I support this change.
> 
> I don't see any checks failing on this PR

There were failures but then I updated this branch with tip of tree. Release engineer approval. Merge when you are ready. ",Release engineer approval. Merge when you are ready. ,"Fixes https://github.com/flutter/flutter/issues/155755 on the beta branch so that this will be available with the 3.27 release.

<details>

<summary> Pre-launch checklist </summary> 


- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

</details>

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157813,2024-10-29T17:22:50Z,2024-10-29T21:20:08Z,engine-flutter-autoroll,0,0,9,2,1,1,1,['autosubmit'],,0,607537.0,0,0,0,0,4406929.073771,,0,9,0,False,[],,,"
https://github.com/flutter/packages/compare/e0c4f55cd355...028027e6b1f1

2024-10-29 stuartmorgan@google.com [various] Remove multiDexEnabled (flutter/packages#7956)
2024-10-28 engine-flutter-autoroll@skia.org Roll Flutter from 5a11904383d1 to 3fb95c7dd21d (16 revisions) (flutter/packages#7948)
2024-10-28 10687576+bparrishMines@users.noreply.github.com [interactive_media_ads] Adds internal wrapper for iOS native `IMACompanionAdSlot` and `IMACompanionDelegate` (flutter/packages#7889)
2024-10-27 49699333+dependabot[bot]@users.noreply.github.com Bump actions/checkout from 4.2.1 to 4.2.2 (flutter/packages#7919)
2024-10-26 engine-flutter-autoroll@skia.org Roll Flutter from 4faa4a415ec9 to 5a11904383d1 (67 revisions) (flutter/packages#7937)
2024-10-25 kevmoo@users.noreply.github.com Drop deprecated web library (flutter/packages#7926)
2024-10-25 127771428+ahmedbilal008@users.noreply.github.com [video_player_web] Don't modify volume when muting video (flutter/packages#7845)
2024-10-25 engine-flutter-autoroll@skia.org Roll Flutter (stable) from 2663184aa790 to 603104015dd6 (3 revisions) (flutter/packages#7930)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157022,2024-10-16T18:59:20Z,2024-11-05T17:48:57Z,flutteractionsbot,1,0,1,59,2,1,1,"['tool', 'a: desktop', 'cp: review', 'cp: approved', 'autosubmit']",1.0,0,1723777.0,0,0,0,0,4408099.618649,,0,1,0,False,['flutteractionsbot']," @LouiseHsu please fill out the PR description above, afterwards the release team will review this request.",,"This pull request is created by [automatic cherry pick workflow](https://github.com/flutter/flutter/blob/main/docs/releases/Flutter-Cherrypick-Process.md#automatically-creates-a-cherry-pick-request)
Please fill in the form below, and a flutter domain expert will evaluate this cherry pick request.

### Issue Link:
What is the link to the issue this cherry-pick is addressing?

https://github.com/flutter/flutter/pull/156758#event-14687226898

### Changelog Description:
Explain this cherry pick in one line that is accessible to most Flutter developers. See [best practices](https://github.com/flutter/flutter/blob/main/docs/releases/Hotfix-Documentation-Best-Practices.md) for examples

CocoaPods does not work properly with Xcode 16 currently, so this change adds a warning to the tool to provide a work around.

### Impact Description:
What is the impact (ex. visual jank on Samsung phones, app crash, cannot ship an iOS app)? Does it impact development (ex. flutter doctor crashes when Android Studio is installed), or the shipping production app (the app crashes on launch)

None. 

### Workaround:
Is there a workaround for this issue?

This change adds a warning to the tool which links to workaround steps

### Risk:
What is the risk level of this cherry-pick?

  - [x] Low
  - [ ] Medium
  - [ ] High

### Test Coverage:
Are you confident that your fix is well-tested by automated tests?

  - [x] Yes
  - [ ] No

### Validation Steps:
What are the steps to validate that this fix works?

- Use latest version of Flutter stable channel (Dart 3.5.3, Flutter 3.24.3) with latest CocoaPods (1.15.2) and Xcode 16.
- Clone **flutter/packages** repo and cd into a plugin that have support for macOS but doesn't have native UI/Unit tests. https://github.com/flutter/packages/tree/main/packages/image_picker/image_picker_macos/example/macos is an example.
- Run `pod install` in the example macOS app or run the Flutter app directly with `flutter run -d macos`.
- Follow the steps in https://github.com/flutter/flutter/blob/master/docs/ecosystem/testing/Plugin-Tests.md#enabling-xctests-or-xcuitests to enable **XCTests** or **XCUITests**.
- Run the Unit test directly in Xcode, works as expected.
- Run `pod install`.
- An error should pop up with a workaround linking to 
https://github.com/flutter/flutter/issues/156733#issuecomment-2415359014
",
156545,2024-10-10T20:12:26Z,2024-11-05T17:46:53Z,jtmcdole,0,0,1,11,3,1,1,"['tool', 'cp: review', 'autosubmit']",,0,2237667.0,0,0,0,0,4408223.892018,,0,1,0,False,[],,,Cherry pick request to get correct analytics,
158184,2024-11-05T16:57:43Z,2024-11-05T17:42:57Z,polina-c,5,0,1,214,3,1,1,"['tool', 'warning: land on red to fix tree breakage']",1587.0,0,2743.0,0,0,0,0,4408432.31423,,1,1,0,False,"['auto-submit[bot]', 'johnmccutchan', 'polina-c']","auto label is removed for flutter/flutter/158184, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=158184) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Bypassing G3 failures because fix is merged: https://github.com/flutter/flutter/pull/158126 Should i bypass tree status? if all tests are passing, go for it Its interesting that label did not trigger merge this time.",,Reverts flutter/flutter#158078,
157808,2024-10-29T17:04:29Z,2024-10-29T17:53:33Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,605031.0,0,0,0,0,4410538.72895,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/4cb4478016b5...725c8e4bc379

2024-10-29 skia-flutter-autoroll@skia.org Roll Skia from 6d8a5ebeb76c to 5758d9c344e3 (7 revisions) (flutter/engine#56201)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158078,2024-11-03T16:11:09Z,2024-11-03T17:12:20Z,polina-c,2,0,1,214,3,1,1,"['tool', 'warning: land on red to fix tree breakage', 'autosubmit']",301.0,0,175573.0,0,0,0,0,4411196.952032,,2,1,0,False,"['auto-submit[bot]', 'polina-c']","Is it ok to merge this revert in spite of tree status? Time to revert pull request flutter/flutter/158078 has elapsed.
          You need to open the revert manually and process as a regular pull request.I don't have access to b/377107864, but according to the [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) page, ""regressions should be reverted first and questions asked later"" 👍","I don't have access to b/377107864, but according to the [Tree Hygiene](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md) page, ""regressions should be reverted first and questions asked later"" 👍","Reverts flutter/flutter#157934 to unblock https://github.com/flutter/flutter/pull/158076 and then flutter roll.

Reason: b/377107864",
158126,2024-11-04T19:25:46Z,2024-11-05T16:49:42Z,polina-c,1,0,4,451,57,2,3,"['tool', 'autosubmit']",76310.0,0,77039.0,0,0,0,0,4411655.417258,,0,4,0,False,['polina-c'],Bypassed google testing because the fix is already submitted.,,Reverts flutter/flutter#158076,
157792,2024-10-29T14:56:27Z,2024-10-29T15:51:27Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,606337.0,0,0,0,0,4416916.752935,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b95da8106b98...4cb4478016b5

2024-10-29 skia-flutter-autoroll@skia.org Roll Dart SDK from 52af705f878b to fcc2bc69db3e (1 revision) (flutter/engine#56199)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158170,2024-11-05T11:20:04Z,2024-11-05T15:08:34Z,mkustermann,1,5,2,48,1,2,1,['tool'],2274.0,0,13710.0,0,0,0,0,4417727.518699,,0,2,0,False,['mkustermann'],"Thanks, @mraleph !LGTM with changes",LGTM with changes,"Currently the bot that runs `flutter update-packages` makes PRs that fail due to native asset integration tests failing.

The root cause is due to incompatible versions on `package:logging`. The bot tries to upgrade `package:logging` from `1.2.0` to `1.3.0`.

Here's what seems to happen:

  * `flutter update-packages` will update `dev/integration_tests/link_hook/pubspec.yaml` with `package:logging` to `1.3.0` (as it does with all other `pubspec.yaml` files in the flutter repository)

  * `flutter create  --template=package_ffi` will generate a template with `package:logging` `^1.2.0`

  * The test in question
    * creates ffi template (which will use `^1.2.0`)
    * make it depend on `dev/integration_tests/link_hook` (which uses `=1.3.0`)
    * changes logging dependency from the template from `^1.2.0` to `=1.2.0`

IMHO

  * `flutter update-packages` is doing what it's supposed to

  * `flutter create --template=package_ffi` can generate templates with versions it determines (maybe there are use cases where we want to generate templates with older versions)

  * The problematic part is the test:

     * it makes the generated template depend on `link_hook` and
     * changes template generated pubspec to use pinned dependencies

This PR makes the test package (created via template) use the pinned package versions from `dev/integration_tests/link_hook` (for dependencies that are common among the two).
All other dependencies that the template has on top of `dev/integration_tests/link_hook` it can pin as it does currently.

This will give us deterministic CI behavior (as we use flutter pined packages and remaining deps being pinned via template) It avoids changing the `flutter update-packages` and `flutter create --template=package_ffi` (as their behavior seems reasonable)

Should fix https://github.com/flutter/flutter/issues/158135","nit: there is a rogue whitespace before `.`. nit: `to` is typed as nullable here, but we always pass non-null values into it.  Maybe:

```dart
for (final String packageName in to.keys) {
  to[packageName] = from[packageName] ?? to[packageName];
}
``` Done. Thanks (yes, I added bang operator on call sites, as this is guaranteed to be non nullable)

Done."
157787,2024-10-29T12:47:28Z,2024-10-29T13:36:17Z,engine-flutter-autoroll,0,0,1,4,2,1,1,"['a: text input', 'engine', 'autosubmit']",,0,606876.0,0,0,0,0,4424118.795205,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/5fa7a123b14a...b95da8106b98

2024-10-29 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from RXUZ9eDc7cS4NpKoh... to zuDYsDZHnJMZVvrc8... (flutter/engine#56197)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from RXUZ9eDc7cS4 to zuDYsDZHnJMZ

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157471,2024-10-23T21:19:56Z,2024-11-05T14:49:26Z,AbdeMohlbi,9,5,17,51,1,3,2,"['tool', 'autosubmit']",695018.0,0,1099770.0,1,0,0,0,4418877.015244,,0,17,0,False,"['reidbaker', 'AbdeMohlbi', 'flutter-dashboard[bot]', 'stuartmorgan']","windows tests fail , mac tests pass. 
mac tests pass , windows tests fail 🤔 test-exempt: code refactor with no semantic change @AbdeMohlbi I am going to give this a pass but can you update the title and pr description to give a more precise description of what is being refactored and why? It is helpful when reviewing all commits post release and also gives your code reviews more context.  > @AbdeMohlbi I am going to give this a pass but can you update the title and pr description to give a more precise description of what is being refactored and why? It is helpful when reviewing all commits post release and also gives your code reviews more context. 

No problem  Test-exemption: This pr should not land with any behavioral changes. If there are behavioral changes then tests need to be added.  > Unlike some of the other pr's this one has a mix of lint style fixes and some opinion style fixes. 
> FWIW I think moving from `if (something == null)` set a default to using the ?: syntax is a bit more readable. 
> 
> Adding static where possible is a good change. 
> reducing the scope of methods that dont need to be public is ok but I need to do a pass to make sure we dont actually depend on those methods someplace else. 

Well the file contains multiple instances of both , i tried unify the usage to ?: It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. > > Unlike some of the other pr's this one has a mix of lint style fixes and some opinion style fixes.
> > FWIW I think moving from `if (something == null)` set a default to using the ?: syntax is a bit more readable.
> > Adding static where possible is a good change.
> > reducing the scope of methods that dont need to be public is ok but I need to do a pass to make sure we dont actually depend on those methods someplace else.
> 
> Well the file contains multiple instances of both , i tried unify the usage to ?:

Yeah sorry I this was mostly a list of things I liked in the pr.  related #158020 Unlike some of the other pr's this one has a mix of lint style fixes and some opinion style fixes. 
FWIW I think moving from `if (something == null)` set a default to using the ?: syntax is a bit more readable. 

Adding static where possible is a good change. 
reducing the scope of methods that dont need to be public is ok but I need to do a pass to make sure we dont actually depend on those methods someplace else. ","Unlike some of the other pr's this one has a mix of lint style fixes and some opinion style fixes. 
FWIW I think moving from `if (something == null)` set a default to using the ?: syntax is a bit more readable. 

Adding static where possible is a good change. 
reducing the scope of methods that dont need to be public is ok but I need to do a pass to make sure we dont actually depend on those methods someplace else. ","removed public modifier from this methods :`getVersionCode` , `getVersionName`.
add static to :`pluginSupportsAndroidPlatform` ,`buildGradleFile`,`settingsGradleFile`
`getCompileSdkFromProject` ,`getAssembleTask` 
refactor `==null` usage  to `:?` to unify the usage 

see https://github.com/flutter/flutter/issues/147122 for context

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","Semantically I don't think this is the same. Specifically I think a number like 8.6-rc-2 would crash on the first 2 lines.  yep it should be `List<String>` but still this does not resolve cases like `8.6-rc-2` , like the TODO above says. 
hmmm , should i work for an overall fix for this or just let it be list<String> ? Most of this pr is good, lets remove this change and land the rest. Then you can either tackle this or not based on what you prefer.  currenlty i'm seeing [a list of all gradle versions ](https://services.gradle.org/distributions/) (3160 as of today) ,i see that there is only the special case of `rc` , but i have no idea how to compare them for exemple is `8.7-rc-1` with `8.8` , i guess 8.8 is newer well i found some script , tweaked it a bit and it seam to wrok :
(could u kindly confirm that this the intended behavior ?)
```groovy
def compareGradleVersions(String version1, String version2) {

    def v1Parts = version1.tokenize('.-')
    def v2Parts = version2.tokenize('.-')

    
    for (int i = 0; i < Math.max(v1Parts.size(), v2Parts.size()); i++) {
        
        def v1Part = i < v1Parts.size() ? v1Parts[i] : '0'
        def v2Part = i < v2Parts.size() ? v2Parts[i] : '0'

        
        def v1Num = v1Part.isNumber() ? v1Part.toInteger() : 0
        def v2Num = v2Part.isNumber() ? v2Part.toInteger() : 0

        if (v1Num != v2Num) {
            return v1Num > v2Num ? version1 : version2
        }

        // like -rc-1 cass
        if (v1Part.isNumber() && !v2Part.isNumber()) {
            return version1
        } else if (!v1Part.isNumber() && v2Part.isNumber()) {
            return version2
        } else if (v1Part != v2Part) {
            return comparePreReleaseIdentifiers(v1Part, v2Part) ? version1 : version2
        }
    }
    return version1 
    // If both are same return one of thm 
}

def comparePreReleaseIdentifiers(String v1Part, String v2Part) {
    // i tested ""rc-1"" vs ""rc-2"" worked (rc-2)
    // i tested ""8.7-rc-1"" vs ""8.7"" worked (8.7)
    // i tested ""8.7-rc-1"" vs ""8.7.2"" worked (8.7.2)
    // i tested ""8.7.1"" vs """"8.7.2"""" worked (8.7.2)
    def v1PreRelease = v1Part.replaceAll(""\\D"", """")
    def v2PreRelease = v2Part.replaceAll(""\\D"", """")
    
    return v1PreRelease < v2PreRelease
}


def newerVersion = compareGradleVersions(""8.7.1"", ""8.7.2"")
println ""The newer version is: $newerVersion""

```"
157780,2024-10-29T09:44:28Z,2024-10-29T10:37:26Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,607056.0,0,0,0,0,4434919.567365,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/0c8f0bf4d740...5fa7a123b14a

2024-10-29 skia-flutter-autoroll@skia.org Roll Dart SDK from 6e55dfe77483 to 52af705f878b (2 revisions) (flutter/engine#56195)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC chinmaygarde@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158094,2024-11-04T10:20:16Z,2024-11-05T08:21:20Z,ValentinVignal,0,0,2,35,2,1,1,"['framework', 'f: scrolling', 'd: api docs', 'd: examples', 'autosubmit']",,0,79264.0,0,0,0,0,4442164.969136,,0,2,0,False,[],LGTM!,LGTM!,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/scrollbar/raw_scrollbar.shape.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
",
157774,2024-10-29T07:10:31Z,2024-10-29T08:02:39Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,605493.0,0,0,0,0,4445721.16658,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/c05af6f939fc...0c8f0bf4d740

2024-10-29 49699333+dependabot[bot]@users.noreply.github.com Bump actions/setup-python from 5.2.0 to 5.3.0 (flutter/engine#56192)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157913,2024-10-31T08:42:57Z,2024-11-05T06:11:32Z,bleroux,1,2,1,234,2,2,1,"['framework', 'f: material design', 'autosubmit', 'refactor']",1720.0,0,423243.0,0,0,0,0,4449625.86887,,1,1,0,False,['bleroux'],@QuncCccccc I extracted this PR from https://github.com/flutter/flutter/pull/157496 because I think those refactorings are valuable whether we move forward or not on https://github.com/flutter/flutter/pull/157496.LGTM :+1: Thanks for cleaning this up.,LGTM :+1: Thanks for cleaning this up.,"## Description

This PR introduces some utility functions to simplify some DropdownMenu tests.
The main purpose is to centralize and document how tests should find menu items, because it is tricky as there are two occurrences of each widgets and using '.last' is mandatory:

```dart
  Finder findMenuItemButton(String label) {
    // For each menu items there are two MenuItemButton widgets.
    // The last one is the real button item in the menu.
    // The first one is not visible, it is part of _DropdownMenuBody
    // which is used to compute the dropdown width.
    return find.widgetWithText(MenuItemButton, label).last;
  }
```

## Related Issue

This is extracted from https://github.com/flutter/flutter/pull/157496.

## Tests

Refactors many existing tests.
","Sometimes I'll create a utils file to share methods like these that are used in multiple test files (e.g. [editable_text_utils.dart](https://github.com/flutter/flutter/blob/master/packages/flutter/test/widgets/editable_text_utils.dart)). Probably not worth it in this case but up to you. Great reminder :pray: 
I have 3 DropdownMenu/MenuAnchor PRs on the work, I will try to figure out if such a utils file is possible."
156956,2024-10-16T10:00:55Z,2024-11-05T04:53:08Z,fluttergithubbot,0,0,1,1,1,2,1,"['c: flake', 'autosubmit']",,0,1709683.0,0,0,0,0,4454509.001664,,0,1,0,False,[],"Didn't knew you can use flaky on ci, this awesome!","Didn't knew you can use flaky on ci, this awesome!","<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux_pixel_7pro flavors_test""
}
-->
Issue link: https://github.com/flutter/flutter/issues/156955
",
158143,2024-11-04T23:45:15Z,2024-11-05T04:31:13Z,matanlurey,0,0,1,10,2,1,1,"['framework', 'autosubmit']",,0,17158.0,0,0,0,0,4455974.167994,,0,1,0,False,[],![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"... to mention because without HTML they work the same as the native renderer! Yay!

Post-submit follow-up cleanups to https://github.com/flutter/flutter/pull/158035#pullrequestreview-2414359559 (https://github.com/flutter/flutter/issues/157547).",
157767,2024-10-29T02:13:48Z,2024-10-29T03:06:39Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,605709.0,0,0,0,0,4463310.910978,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b394e0c98fa0...c05af6f939fc

2024-10-29 skia-flutter-autoroll@skia.org Roll Skia from bdd225968dab to 6d8a5ebeb76c (3 revisions) (flutter/engine#56185)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157766,2024-10-29T01:15:46Z,2024-10-29T02:00:25Z,engine-flutter-autoroll,0,0,4,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,605592.0,0,0,0,0,4466911.133588,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/ed587dcf61fd...b394e0c98fa0

2024-10-29 skia-flutter-autoroll@skia.org Roll Dart SDK from c9180e9de9e8 to 6e55dfe77483 (1 revision) (flutter/engine#56184)
2024-10-28 1961493+harryterkelsen@users.noreply.github.com [canvaskit] Deduplicate golden test file names (flutter/engine#56143)
2024-10-28 bdero@google.com [Flutter GPU] Replace HostBuffer with Dart version. (flutter/engine#56054)
2024-10-28 jonahwilliams@google.com [Impeller] add basic Impeller+Vulkan support to embedder API. (flutter/engine#55490)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158035,2024-11-01T23:57:07Z,2024-11-04T23:28:38Z,matanlurey,0,2,1,14,4,2,1,"['team', 'framework', 'autosubmit', 'd: docs/']",,0,258509.0,0,0,0,0,4473113.355766,,1,1,0,False,[],LGTM,LGTM,Closes https://github.com/flutter/flutter/issues/157547.,"Which I think now simply means it's always supported, and we don't need this paragraph at all. ditto: this paragraph can go"
154298,2024-08-28T21:35:34Z,2024-11-04T22:35:13Z,nate-thegrate,1,20,1,183,15,2,1,"['a: text input', 'framework', 'f: material design', 'autosubmit']",1031112.0,0,5878812.0,0,0,0,0,4477304.771411,,0,1,0,False,['nate-thegrate'],"https://github.com/flutter/flutter/pull/154695 is going to generate a few conflicts here, so I'll need to make some updates once it's merged.Thank you for the updates. Left some nits, but I'm not sure if the proposed documentation on using on non-WidgetState arguments are completely correct. Thanks very much for the review! LGTM! This should be much clearer.","Thank you for the updates. Left some nits, but I'm not sure if the proposed documentation on using on non-WidgetState arguments are completely correct. Thanks very much for the review! LGTM! This should be much clearer.","Changes:
- Remove 2<sup>nd</sup> person language from docs ([relevant style guideline](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple))
- Update a bunch of spots to be more explicit about `WidgetStateMouseCursor`.
- `WidgetStateFoo` constructors now accurately describe what happens when used incorrectly.
- Gave `WidgetStateProperty` a little section about equality checks.","Both of these paragraphs unfortunately are inaccurate. (the second one also breaks a [style guideline](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#use-the-passive-voice-recommend-do-not-require-never-say-things-are-simple)) Describing what happens if you use the object the wrong way perhaps isn't extremely helpful. copy-pasted documentation 😍 I can imagine someone reading this and then being confused as to why their `WidgetStateProperty<MouseCursor>` object doesn't work as an argument for `mouseCursor`.

There are other similar files that include a description of `WidgetStateMouseCursor` as a footnote, but I think ideally the explanation should focus on this type. I sort of forgot that `MaterialStateUnderlineInputBorder` and `MaterialStateOutlineInputBorder` also exist 😅 Looks like some copy pasting of documentation may have happened here. Looks like from MaterialStateColor/WidgetStateColor.  Didn't even notice that part 😂 I agree that we should lead with directing people to not use these classes outside of their intended use cases. Only telling them how they work when used on a regular property is almost directing people to hack. But it might be worth leaving in a description of their behavior when used on a property that doesn't handle them may be useful for debugging purposes. These classes in particular of pretty specific properties make me want union types... > may be useful for debugging purposes

Excellent point, will update 👍 This wording feels odd. Maybe something like this?
```suggestion
  /// If [mouseCursor] is a [WidgetStateMouseCursor], then its `resolve` method
  /// can define the behavior of the cursor depending on whether the [WidgetState.selected] state is active.
```
Or something similar to the other documentation comments. ```suggestion
  /// If used as a regular [InputBorder], it acts the same as
  /// an empty `OutlineInputBorder()` constructor.
```
nit: prefer to have this as a normal sentence. I'm not sure it's necessary to remove all of this. Have we made updates that makes it easier to make a const constructor? Are there any pitfalls we should point out to not allow const constructors? Is this true? Or will it resolve against no states, or `any` if set in the mapper? In general I don't think this is always true, for this and documentation changes in this PR like this. If the resolve method resolves for no states, or `any`, then it will return not the default wherever used.  yes, I like your wording better 🙂👍 I believe the current documentation is correct, since the resolve method is never called when it's used as a normal input border.

```dart
// Uses the border resolved in the default state.
final InputBorder border = _border.resolve(<WidgetState>{});
```

```dart
// No syntax error, but if it's a MaterialStateOutlineInputBorder
// then it's the same as an empty OutlineInputBorder() constructor.
final InputBorder border = _border;
``` Prior to this PR, the `.fromMap()` constructor created a temporary `WidgetStateProperty` object using the provided map, and resolved it using an empty set of states to initialize the `Color`'s value. IMO it's kinda pointless to do this work if these objects aren't meant to actually be used as the types they technically inherit from.

We can now do:

```dart
const color = WidgetStateColor.fromMap({
  WidgetState.error:    Colors.red,
  WidgetState.selected: Colors.blue,
  WidgetState.disabled: Colors.grey,
  WidgetState.any:      Colors.black,
});
``` Recently the constructor was changed to extend `_WidgetStateColorTransparent`, so hopefully it's an easier intuition now. Good catch and update! 👍 "
157751,2024-10-28T21:17:16Z,2024-10-28T22:08:56Z,engine-flutter-autoroll,1,0,10,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",262298.0,0,608343.0,0,0,0,0,4478472.150888,,0,10,0,False,['auto-submit[bot]'],"Time to revert pull request flutter/flutter/157751 has elapsed.
          You need to open the revert manually and process as a regular pull request.",,"
https://github.com/flutter/engine/compare/70671baabbba...ed587dcf61fd

2024-10-28 skia-flutter-autoroll@skia.org Roll Dart SDK from 69b50768d733 to c9180e9de9e8 (1 revision) (flutter/engine#56180)
2024-10-28 jonahwilliams@google.com [Impeller] fix initial layout for loadOp load and incorrect usage of host visible textures. (flutter/engine#56148)
2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from 21035cd95b68 to bdd225968dab (1 revision) (flutter/engine#56178)
2024-10-28 chris@bracken.jp iOS/macOS: migrate darwin/common to ARC (flutter/engine#56155)
2024-10-28 98614782+auto-submit[bot]@users.noreply.github.com Reverts ""Pin local_engine mac builds to arm64 (#56172)"" (flutter/engine#56179)
2024-10-28 chris@bracken.jp Migrate PlatformViewIOS to ARC (flutter/engine#55672)
2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from 35ad4e89212f to 21035cd95b68 (1 revision) (flutter/engine#56176)
2024-10-28 aam@google.com Roll buildroot to pick up revert of debugging gen_snapshot prints (flutter/engine#56175)
2024-10-28 zanderso@users.noreply.github.com Pin local_engine mac builds to arm64 (flutter/engine#56172)
2024-10-28 zanderso@users.noreply.github.com Switch some mac_unopt tests from intel to arm hosts (flutter/engine#55882)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158119,2024-11-04T18:31:56Z,2024-11-04T19:29:26Z,victorsanni,1,0,3,2,1,1,1,"['tool', 'warning: land on red to fix tree breakage']",1169.0,0,7750.0,0,0,0,0,4484185.366134,,0,3,0,False,['victorsanni'],"Tracking issue: https://github.com/flutter/flutter/issues/158120If this needs to be disabled it should be disabled using a `skip: true` flag, not deleting it entirely. But it's not clear to me yet that disabling this test is the right thing to do since it isn't clear what the problem is. The same issue might be affecting other tests.","If this needs to be disabled it should be disabled using a `skip: true` flag, not deleting it entirely. But it's not clear to me yet that disabling this test is the right thing to do since it isn't clear what the problem is. The same issue might be affecting other tests.","## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
156257,2024-10-04T23:10:03Z,2024-11-04T20:32:34Z,loic-sharma,4,0,1,12,11,1,1,"['tool', 'framework', 'd: api docs', 'd: examples', 'a: desktop', 'autosubmit']",859861.0,0,2668952.0,0,0,0,0,4484697.892238,,0,1,0,False,"['jmagman', 'loic-sharma']","@loic-sharma is this ready to merge? @jmagman There's a weird build hang issue happening in https://github.com/flutter/packages/pull/7796 that I can reproduce locally. I haven't had a chance to investigate that yet, but I'd like to hold off on landing this until I have a better understanding of what's happening. Apologies for the delay! > Apologies for the delay!

No rush, just checking! The weird hang turned out to be unrelated and was fixed by https://github.com/flutter/flutter/issues/157449. We're now good to merge this!LGTM since all the relevant tests in https://github.com/flutter/packages/pull/7796 are passing.
Thank you!","LGTM since all the relevant tests in https://github.com/flutter/packages/pull/7796 are passing.
Thank you!","We added `use_modular_headers!` to our `Podfile`s as we originally planned to phase out `use_frameworks!` (see https://github.com/flutter/flutter/pull/42204). However, our plans have now changed and we are instead phasing out CocoaPods entirely in favor of Swift Package Manager.

CocoaPods's `use_frameworks!` and `use_modular_headers!` are two different overlapping options that should not be used together. This change removes the `use_modular_headers!` from the macOS `Podfile` and the iOS Swift `Podfile` (the iOS Objective-C template was recently deprecated https://github.com/flutter/flutter/pull/155867).

This change only affects _new_ Flutter apps. This change does not include an automatic migration as that could break existing apps. Instead, users are encouraged to migrate from CocoaPods to Swift Package Manager.

https://github.com/flutter/flutter/issues/156259

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157394,2024-10-22T23:31:49Z,2024-10-23T23:35:11Z,LouiseHsu,1,4,5,26,3,2,1,"['tool', 'autosubmit', 'cp: beta', 'cp: stable']",71561.0,0,1112438.0,0,0,0,0,4484706.415763,,0,5,0,False,['LouiseHsu'],"> Can you test that if the module has plugins that their dSYMs are not also added to App.xcframework? From my [steps to reproduce](https://github.com/flutter/flutter/issues/157359) before the xcframework output, run `flutter pub add camera` or some other plugin.

I tried adding a couple of plugins and the plugin dSYMs did *not* get copied in, with or without this fix. So that's good!Can you test that if the module has plugins that their dSYMs are not also added to App.xcframework?
From my [steps to reproduce](https://github.com/flutter/flutter/issues/157359) before the xcframework output, run `flutter pub add camera` or some other plugin. LGTM","Can you test that if the module has plugins that their dSYMs are not also added to App.xcframework?
From my [steps to reproduce](https://github.com/flutter/flutter/issues/157359) before the xcframework output, run `flutter pub add camera` or some other plugin. LGTM","Fixes https://github.com/flutter/flutter/issues/157359

Prevents Flutter.xcframework.dSYM from being copied into the App.framework folder. I am not 100% positive if there are cases where it's valid to have multiple dSYMs in that folder, so I'm just string matching and filtering out `Flutter.xcframework.dSYM`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.","Instead, test that the _only_ dSYM in this directory is `App.framework.dSYM` to catch the plugin dSYMs sneaking in, too. Can you filter on directories, I'm afraid this will flake if a `.DS_Store` file sneaks in. Something like:
```suggestion
    if (Directory(dsymPath).listSync().whereType<Directory>().length != 1) {
``` oh fair... changed it to prevent sneaky files"
157740,2024-10-28T18:30:15Z,2024-10-28T19:22:05Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['a: text input', 'engine', 'autosubmit']",,0,607564.0,0,0,0,0,4489274.559068,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/23b2c6d3b3b1...70671baabbba

2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from f08fbc465888 to 35ad4e89212f (1 revision) (flutter/engine#56171)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157736,2024-10-28T17:33:14Z,2024-10-28T18:18:08Z,engine-flutter-autoroll,0,0,3,2,1,1,1,"['engine', 'autosubmit']",,0,605431.0,0,0,0,0,4494830.079099,,0,3,0,False,[],,,"
https://github.com/flutter/engine/compare/bf5bfeebf89f...23b2c6d3b3b1

2024-10-28 jonahwilliams@google.com [Impeller] dont increment shared_ptr when tracked object is already tracked. (flutter/engine#56153)
2024-10-28 skia-flutter-autoroll@skia.org Roll Dart SDK from a75848f92210 to 69b50768d733 (2 revisions) (flutter/engine#56168)
2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from 263c3e2ecd30 to f08fbc465888 (1 revision) (flutter/engine#56170)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158027,2024-11-01T22:12:44Z,2024-11-04T16:38:10Z,eyebrowsoffire,1,2,3,63,8,2,1,['autosubmit'],3647.0,0,239127.0,0,0,0,0,4498764.779891,,0,3,0,False,['eyebrowsoffire'],"@ditman 
> Where can we see the benchmark results?

We won't be able to see until postsubmit, since the builder doesn't exist yet. (also `presubmit: false`)LGTM! Where can we see the benchmark results?",LGTM! Where can we see the benchmark results?,This adds benchmarks that run on single threaded skwasm.,"Maybe:

```js
forceSingleThreadedSkwasm: !!forceSt
```

(Is there any difference between not passing the `forceSingleThreadedSkwasm` or making it `false`?) I don't think it makes much of a difference either way, but I was hoping not to modify the config at all for existing benchmarks."
157756,2024-10-28T22:17:28Z,2024-11-04T16:42:06Z,nate-thegrate,7,10,4,118,2,3,2,"['framework', 'f: scrolling', 'autosubmit']",354320.0,0,584686.0,0,0,0,0,4498521.978751,,0,4,0,False,"['nate-thegrate', 'festelo']","Hey, I tried to run the example (with some modifications for easier testing on Windows) and noticed that the scroll position resets when scrolling up, is this expected?

![ezgif-4-2f4e706114](https://github.com/user-attachments/assets/9ee49939-a788-4544-86f4-a8f033792e4a)

Text version of the gif:
* Scroll to ""Featured 11"" (with finger or mouse wheel)
* Switch tab to ""Popular""
* Scroll to ""Popular 6""
* Switch tab to ""Featured""
* Switch tab to ""Popular""
* Scroll up to ""Popular 4"", _so the sliver app bar expands_
* Switch tab to ""Popular""
* Scroll position is 0

<details>
  <summary>Code</summary>

```dart
import 'dart:ui';

import 'package:flutter/material.dart';

void main() {
  runApp(
    MaterialApp(
      scrollBehavior: const MaterialScrollBehavior().copyWith(
        physics: const ClampingScrollPhysics(),
        scrollbars: false,
        dragDevices: {
          PointerDeviceKind.mouse,
          PointerDeviceKind.touch,
          PointerDeviceKind.stylus,
          PointerDeviceKind.unknown
        },
      ),
      debugShowCheckedModeBanner: false,
      home: const Scaffold(
        body: NewsScreen(),
      ),
    ),
  );
}

class NewsScreen extends StatelessWidget {
  const NewsScreen({super.key});

  static const List<String> _tabs = <String>['Featured', 'Popular', 'Latest'];

  static final List<Widget> _tabViews = <Widget>[
    for (final String name in _tabs)
      SafeArea(
        top: false,
        bottom: false,
        child: Builder(builder: (BuildContext context) {
          final handle =
              NestedScrollView.sliverOverlapAbsorberHandleFor(context);

          return NotificationListener<ScrollNotification>(
            onNotification: (ScrollNotification notification) => true,
            child: CustomScrollView(
              key: PageStorageKey<String>(name),
              slivers: <Widget>[
                SliverOverlapInjector(handle: handle),
                SliverPadding(
                  padding: const EdgeInsets.all(8.0),
                  sliver: SliverList(
                    delegate: SliverChildBuilderDelegate(
                      childCount: 30,
                      (BuildContext context, int index) => Container(
                        margin: const EdgeInsets.only(bottom: 8),
                        width: double.infinity,
                        height: 150,
                        color: const Color(0xFFB0A4C8),
                        alignment: Alignment.center,
                        child: Text(
                          '$name $index',
                          style: const TextStyle(fontWeight: FontWeight.w600),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        }),
      ),
  ];

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: _tabs.length,
      child: NestedScrollView(
        headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) =>
            <Widget>[
          SliverOverlapAbsorber(
            handle: NestedScrollView.sliverOverlapAbsorberHandleFor(context),
            sliver: SliverSafeArea(
              top: false,
              sliver: SliverAppBar(
                title: const Text('Tab Demo'),
                floating: true,
                pinned: true,
                snap: true,
                forceElevated: innerBoxIsScrolled,
                bottom: TabBar(
                  tabs: _tabs.map((String name) => Tab(text: name)).toList(),
                ),
              ),
            ),
          ),
        ],
        body: TabBarView(children: _tabViews),
      ),
    );
  }
}
```
</details>
 **_oh no_** Well, I have good news: I copy-pasted your code sample and ran it against my branch, and it's working!

![working tab demo](https://github.com/user-attachments/assets/cc28230e-7ee8-41b8-9b88-d2ebf43cfdc9)

I'm not exactly sure what's causing the discrepancy, but I did verify that the test I added fails on master and passes on this branch, so it's most likely something on your end.

<br>

Also, quick side note—I believe a blank line would fix your code snippet's formatting:

````diff
<details>
  <summary>Code</summary>
+                        
```dart
import 'dart:ui';

```` > Also, quick side note—I believe a blank line would fix your code snippet's formatting:

Yep, already changed it. But TY anyway :)
And for working on such a long-standing issue, too.

> I'm not exactly sure what's causing the discrepancy, but I did verify that the test I added fails on master and passes on this branch, so it's most likely something on your end.

This particular issue may be not related directly to the PR, I'm not fully familiar with the context, sorry for this.
I did clone your branch for testing, but sure it can still be something on my end.
I can't reproduce it just by scrolling the list up, there's definitely another factor involved, but I haven't identified it yet.
However, following in precise the steps I described before always leads to this problem for me.

And I can confirm that your test passes for me too. 

Can you try to run this one?

<details>
  <summary>Code</summary>

```dart
  testWidgets('Maintains scroll position of inactive tab #2', (WidgetTester tester) async {
    await tester.pumpWidget(const example.NestedScrollViewExampleApp());

    final Finder finderItemAny = find.byType(ListTile, skipOffstage: false).first;
    final Finder finderItem11 = find.text('Item 11', skipOffstage: false);
    final Finder finderItem6 = find.text('Item 6', skipOffstage: false);
    final Finder finderItem4 = find.text('Item 4', skipOffstage: false);

    final Finder finderTab1 = find.text('Tab 1');
    final Finder finderTab2 = find.text('Tab 2');

    double getScrollPosition() {
      return Scrollable.of(tester.element(finderItemAny)).position.pixels;
    }

    expect(getScrollPosition(), 0.0);

    await tester.ensureVisible(finderItem11);
    await tester.pumpAndSettle();

    await tester.tap(finderTab2);
    await tester.pumpAndSettle();

    await tester.ensureVisible(finderItem6);
    await tester.pumpAndSettle();

    await tester.tap(finderTab1);
    await tester.pumpAndSettle();

    final tab1Position = getScrollPosition();

    await tester.tap(finderTab2);
    await tester.pumpAndSettle();

    // Without these two lines, the test passes
    await tester.ensureVisible(finderItem4);
    await tester.pumpAndSettle();

    await tester.tap(finderTab1);
    await tester.pumpAndSettle();

    expect(getScrollPosition(), tab1Position);
  });
```
</details>

If it works for you (or if it doesn't work for any other reason than being a bug) - i think we can wrap up this topic.  Thanks for sending that over—I can confirm that the test fails on this branch (and passes without those two lines).

I believe the reason for this is: calling `tester.ensureVisible(finderItem4)` causes it to scroll all the way to the top, i.e. `getScrollPosition()` returns `0`.

On this branch, scrolling one of the tabs up partway (so that the app bar becomes visible) maintains the scroll positions of each tab, but going all the way to the top of the scroll view will reset the scroll positions.

<details> <summary>Code</summary>

```dart
  testWidgets('Maintains scroll position of inactive tab #2', (WidgetTester tester) async {
    await tester.pumpWidget(const example.NestedScrollViewExampleApp());

    final Finder finderItemAny = find.byType(ListTile, skipOffstage: false).first;
    final Finder finderItem11 = find.text('Item 11', skipOffstage: false);
    final Finder finderItem6 = find.text('Item 6', skipOffstage: false);
    final Finder finderItem4 = find.text('Item 4', skipOffstage: false);

    final Finder finderTab1 = find.text('Tab 1');
    final Finder finderTab2 = find.text('Tab 2');

    double getScrollPosition() {
      return Scrollable.of(tester.element(finderItemAny)).position.pixels;
    }

    expect(getScrollPosition(), 0.0);

    await tester.ensureVisible(finderItem11);
    await tester.pumpAndSettle();

    await tester.tap(finderTab2);
    await tester.pumpAndSettle();

    await tester.ensureVisible(finderItem6);
    await tester.pumpAndSettle();

    await tester.tap(finderTab1);
    await tester.pumpAndSettle();

    final double tab1Position = getScrollPosition();

    await tester.tap(finderTab2);
    await tester.pumpAndSettle();
    expect(getScrollPosition(), 416);

    await tester.ensureVisible(finderItem4);
    await tester.pumpAndSettle();
    expect(getScrollPosition(), 0); // passes

    // await tester.tap(finderTab1);
    // await tester.pumpAndSettle();

    // expect(getScrollPosition(), tab1Position);
  });
```

</details>

Overall I feel this PR is a worthwhile change, though whether this is the ideal behavior is probably subjective, and I am still puzzled by the GIF from https://github.com/flutter/flutter/pull/157756#issuecomment-2452765496. > I am still puzzled by the GIF from https://github.com/flutter/flutter/pull/157756#issuecomment-2452765496.

Quick update from my side: 
I can no longer reproduce this bug using swipe gestures. I'm not sure why, but I'm inclined to think you were right and it was some local issue. I'm sorry for taking your time. 
I'm still able to reproduce it when scrolling with the mouse wheel, although I think it might be a separate problem, I couldn't write any automatic tests that can catch it.
 No problem, thanks for letting me know!LGTM! I'm not a scrolling expert, so up to you to seek another reviewer. LGTM! Great PR :+1: 
","LGTM! I'm not a scrolling expert, so up to you to seek another reviewer. LGTM! Great PR :+1: 
","closes #40740

<p align=""center"">
  <img 
    src=""https://github.com/user-attachments/assets/8a48abd0-466b-4e06-90f3-dd05869bac27""
    alt=""NestedScrollController fix""
    height=""720px""
  />
</p>

<details> <summary><h4>Demo source code</h4> (click to expand)</summary>

(this is a slightly more concise version of the code sample from #40740)

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(
    const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(body: NewsScreen()),
    ),
  );
}

class NewsScreen extends StatelessWidget {
  const NewsScreen({super.key});

  static const List<String> _tabs = <String>['Featured', 'Popular', 'Latest'];

  static final List<Widget> _tabViews = <Widget>[
    for (final String name in _tabs)
      SafeArea(
        top: false,
        bottom: false,
        child: Builder(builder: (BuildContext context) {
          final handle = NestedScrollView.sliverOverlapAbsorberHandleFor(context);

          return NotificationListener<ScrollNotification>(
            onNotification: (ScrollNotification notification) => true,
            child: CustomScrollView(
              key: PageStorageKey<String>(name),
              slivers: <Widget>[
                SliverOverlapInjector(handle: handle),
                SliverPadding(
                  padding: const EdgeInsets.all(8.0),
                  sliver: SliverList(
                    delegate: SliverChildBuilderDelegate(
                      childCount: 30,
                      (BuildContext context, int index) => Container(
                        margin: const EdgeInsets.only(bottom: 8),
                        width: double.infinity,
                        height: 150,
                        color: const Color(0xFFB0A4C8),
                        alignment: Alignment.center,
                        child: Text(
                          '$name $index',
                          style: const TextStyle(fontWeight: FontWeight.w600),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        }),
      ),
  ];

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: _tabs.length,
      child: NestedScrollView(
        headerSliverBuilder: (BuildContext context, bool innerBoxIsScrolled) => <Widget>[
          SliverOverlapAbsorber(
            handle: NestedScrollView.sliverOverlapAbsorberHandleFor(context),
            sliver: SliverSafeArea(
              top: false,
              sliver: SliverAppBar(
                title: const Text('Tab Demo'),
                floating: true,
                pinned: true,
                snap: true,
                forceElevated: innerBoxIsScrolled,
                bottom: TabBar(
                  tabs: _tabs.map((String name) => Tab(text: name)).toList(),
                ),
              ),
            ),
          ),
        ],
        body: TabBarView(children: _tabViews),
      ),
    );
  }
}
```

<br>

</details>

<br>

This bug can be traced to a return statement inside `_NestedScrollPosition`:

```dart
double applyClampedDragUpdate(double delta) {
  // ...
  return delta + offset;
}
```

Thanks to some quirks of floating-point arithmetic, `applyClampedDragUpdate` would sometimes return a tiny non-zero value, which ends up ruining one of the scroll coordinator's equality checks.

https://github.com/flutter/flutter/blob/8990ed6538592fc8aee63b0e137b7b52804a030f/packages/flutter/lib/src/widgets/nested_scroll_view.dart#L658-L664","Not sure if it can be used here, maybe you can rely on `precisionErrorTolerance`:

```suggestion
    if (result.abs() < precisionErrorTolerance) {
``` I was hoping there was something like `precisionErrorTolerance`, thank you! I'm wondering why there is a test in examples and not one in lib/src? Imagining an unlikely future where someone throws out examples and the associated tests (because who cares about meagre examples anyways), couldn't this change be regressed? I added the test here so that I could use `NestedScrollViewExampleApp()` instead of configuring the huge widget tree.

But this is a good point—and I think it'd be easy to just import the example to the lib/src test file. I'll go ahead and do that, thanks!
 …well dang, it looks like importing an example into a flutter/test library currently isn't possible.

Moving the test wouldn't guarantee a lack of regressions; for example, https://github.com/flutter/flutter/pull/50831 changed a test's expected output, and then https://github.com/flutter/flutter/pull/149819 attempted to change it back.

Overall, I'm not sure exactly how relocating the test would affect the probability of regressions. It's not something I'm super worried about, though I'd be open to hearing other perspectives. Isn't there a way to reproduce the bug in flutter/test directly? i.e strip the example down to the essentials causing the bug. Yes, though it wouldn't be stripped down by much. My suggestion in that case would be to configure the large widget tree in flutter/test, unfortunately. Just so that in the event that examples/ and packages/flutter are someday separated, the change isn't untested in packages/flutter. If that's not possible I wonder if there are any precedents, would also like to hear what others think. Although I haven't looked into this example too deeply so maybe I am missing some important context. > My suggestion in that case would be to configure the large widget tree in flutter/test, unfortunately. Just so that in the event that examples/ and packages/flutter are someday separated, the change isn't untested in packages/flutter.

Sounds good.

I really appreciate the feedback, have a great Halloween! 👻"
158076,2024-11-03T14:43:43Z,2024-11-03T17:29:24Z,polina-c,3,0,4,449,57,1,1,"['tool', 'warning: land on red to fix tree breakage', 'autosubmit']",12176.0,0,91542.0,0,0,0,0,4500492.115517,,1,4,0,False,"['matanlurey', 'nate-thegrate']","> Approving for [same reason as before](https://github.com/flutter/flutter/pull/158078#pullrequestreview-2411896134) :)

I don't agree with this. It's a weekend, the pull request landed 4 days ago, and the reason for the internal regression is our internal test infrastructure was not working.

The work being reverted is a priority project that requires lots of coordination and should not have been reverted on a weekend without another Googler reviewing it. Let's talk about this Monday.

@johnmccutchan @jtmcdole for visibility, these reverts will probably cost me 1-2 days worth of work relanding that would have been completely trivial to fix in google3.
 Oh shoot, I apologize, thank you for letting me know. > Regressions should be reverted first and questions asked later.

From now on, I'll work with the understanding that this only pertains to while the ""revert"" label can be applied.

This should have been obvious, given that the bot will automatically approve the revert PR during this period but requires a review otherwise.Approving for [same reason as before](https://github.com/flutter/flutter/pull/158078#pullrequestreview-2411896134) :)",Approving for [same reason as before](https://github.com/flutter/flutter/pull/158078#pullrequestreview-2411896134) :),"Reverts flutter/flutter#157879 to unblock flutter roll.

Prerequisite reverts:
https://github.com/flutter/flutter/pull/157934

Reason: b/377107864",
158086,2024-11-04T01:46:15Z,2024-11-04T12:46:29Z,ValentinVignal,0,0,1,8,1,1,1,"['framework', 'autosubmit']",,0,39615.0,0,0,0,0,4512668.085042,,0,1,0,False,[],,,"Closes https://github.com/flutter/flutter/issues/158085

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
156501,2024-10-09T21:51:07Z,2024-10-21T12:31:21Z,IldySilva,5,17,38,167,3,4,2,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",171023.0,0,2216190.0,1,0,0,0,4510201.47248,,1,38,0,False,"['bleroux', 'IldySilva', 'Piinks', 'TahaTesser']","@TahaTesser ,can you take a look please? @bleroux  thank you ,  certainly  i'll pay more attention to that kind of aspects. 👏🏿 (PR Triage): It looks like this change is failing the analyzer check, can you take a look? Thanks! > @bleroux thank you , certainly i'll pay more attention to that kind of aspects. 👏🏿

Hey @IldySilva!
Your motivation to contribute is really great :pray: .
I would just advice that you take more time after a review to be sure you addressed all comments.
Many of my previous comments were suggestions that could be applied as-is but I also pointed out that:
- some tests with long descriptions could be format similarly to my first suggestion.
- several comments were missing a final dot at the end of the sentence.

Those are very very minor, especially compared to the good quality of your contribution (good test descriptions, narrow scope tests, etc) but I think taking care of such details is a practice for your future contributions (and also to participate as a reviewer one day, if you willing too). Please remove the added tests from the `_knownMissingTests` list under the `flutter/dev/bots/check_code_samples.dart` file to fix the CI checks.
```
The following tests have been implemented! Huzzah!:
  examples/api/test/material/material_state/material_state_property.0_test.dart
  examples/api/test/material/material_state/material_state_outlined_border.0_test.dart
However, they now need to be removed from the _knownMissingTests
list in the script /b/s/w/ir/x/w/flutter/dev/bots/check_code_samples.dart.
```Thanks for working on this :pray: 

Some minor comments related to unneeded comments and formatting. Almost ready, see my comment about formatting `testWidgets` lines.

Also, can you rebase, as it will probably fixed the failing ""linux analyze"" CI check. LGTM LGTM!","Thanks for working on this :pray: 

Some minor comments related to unneeded comments and formatting. Almost ready, see my comment about formatting `testWidgets` lines.

Also, can you rebase, as it will probably fixed the failing ""linux analyze"" CI check. LGTM LGTM!","Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for

`examples/api/test/material/bottom_app_bar/bottom_app_bar.1_test.dart` and
`examples/api/test/material/bottom_app_bar/bottom_app_bar.2_test.dart`
## Pre-launch Checklist

This are tests of snippets used in [AutofillGroup class](https://api.flutter.dev/flutter/widgets/AutofillGroup-class.html) 
## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md","typo here ""'Notch'] "" ```suggestion
  testWidgets(
    'BottomAppBarDemo shows FloatingActionButton and responds to toggle',
    (WidgetTester tester) async {
      await tester.pumpWidget(const example.BottomAppBarDemo());

      expect(find.byType(FloatingActionButton), findsOneWidget);

      // Tap the 'Floating Action Button' switch to hide the FAB.
      await tester.tap(find.byType(SwitchListTile).first);
      await tester.pumpAndSettle();

      expect(find.byType(FloatingActionButton), findsNothing);
    },
  );
``` For tests with a long description prefer the format I suggested.
Thank you for applying this format to all the other tests with a long description (you can also use it for all tests if you want). ```suggestion
    // Toggle the 'Notch' switch to remove the notch.
``` ```suggestion
    await tester.pump();
```
Consider removing this comment because it is very generic. ```suggestion
    await tester.pumpAndSettle();
``` ```suggestion
    expect(
      newPosition.dx,
      closeTo(screenSize.width * 0.5, 10), // Center of the screen.
    );
``` ```suggestion
    // Build the app.
```
Please add a dot for other comments that miss one. ```suggestion
    expect(visibleSize.height, equals(80.0));
``` ```suggestion
    // Trigger the SnackBar.
    await tester.tap(find.byTooltip('Open popup menu'));
    await tester.pump();
``` ```suggestion

  testWidgets('SnackBar is shown when Open popup menu is pressed',
```

Seperate each test by an empty line. My point about long test descriptions was about those lines starting with `testWidgets`, you can either format them on a single line such as:

```dart
    testWidgets('Description', (WidgetTester tester) async {
      ...
    });

```

or on multiple lines if the description is very long, using the following format:

```dart
    testWidgets(
      'Very long description',
      (WidgetTester tester) async {
        ...
      },
    );

``` @bleroux single quotes and I think you meant ""was"" and not ""what"" > @bleroux single quotes and I think you meant ""was"" and not ""what""

Good catch :pray: , I updated the comment, especially the code part because it might serve as a reference. @bleroux From what I understand, it's currently the way it is, right? Even when I run dart format, it doesn't change, at least not for the line you mentioned. @IldySilva We are not suppose to use dart format on the Flutter repo (as it often results on non readable code, there are ongoing work on the dart formatter that will solve this). Nonetheless for some tests it could be ok as long as you just apply it to code section (if applied to a whole test file, it will change a lot of existing lines).

In the case I pointed, dart format will give you the right result if you add a comma after the `testWidget` second parameter.

```dart
    testWidgets(
      'Very long description',
      (WidgetTester tester) async {
        ...
      }, // This comma is important to get the right result with dart format
    );

``` ```suggestion
    expect(bottomAppBar.shape, isNull);
```"
157713,2024-10-28T11:36:15Z,2024-10-28T12:21:32Z,engine-flutter-autoroll,0,0,1,4,2,1,1,"['engine', 'autosubmit']",,0,607454.0,0,0,0,0,4514230.29361,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/2522789c4199...bf5bfeebf89f

2024-10-28 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from VJIEKDIuzhhloCBro... to RXUZ9eDc7cS4NpKoh... (flutter/engine#56166)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from VJIEKDIuzhhl to RXUZ9eDc7cS4

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157710,2024-10-28T09:49:16Z,2024-10-28T10:41:31Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,606673.0,0,0,0,0,4521431.140511,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/9226b089d634...2522789c4199

2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from 0e5cf5c5f5a3 to 263c3e2ecd30 (1 revision) (flutter/engine#56164)
2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from dd0158912c76 to 0e5cf5c5f5a3 (2 revisions) (flutter/engine#56163)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
153215,2024-08-10T06:42:20Z,2024-08-10T16:39:05Z,cbracken,19,0,1,171,3,1,1,"['tool', 'autosubmit', 'cp: stable']",2658.0,0,7439646.0,0,0,0,0,4525274.83986,,2,1,0,False,"['jmagman', 'GhassanAlKaraan', 'dawid-niedzwiecki', 'cbracken', 'renefloor', 'lanistor']","I have an alternate version of this patch that unifies the `App.framework.dSYM` and `Flutter.framework.dSYM` copying code, but took this route, which does an `rsync` copy like we do with `Flutter.framework` because `App.framework`/`App.framework.dSYM` are build products that get bundled, whereas `Flutter.framework`/`Flutter.framework.dSYM` are not build products, but rather pre-builts that get copied over. Does Flutter `3.22` merged this commit? I still got this problem.
- Flutter: `3.22.3`
- Xcode: `16.0`

Logs: 
```
The archive did not include a dSYM for the Flutter.framework with the UUIDs [4C4C44DC-5555-3144-A1B8-F18F0C0EE878]. Ensure that the archive's dSYM folder includes a DWARF file for Flutter.framework with the expected UUIDs.
```
<img width=""1031"" alt=""截屏2024-10-03 01 29 28"" src=""https://github.com/user-attachments/assets/20ee955d-2c31-43c0-8f10-d85850b6fb30"">
 > Does Flutter 3.22 merged this commit? I still got this problem.

This fix is in Flutter 3.24 (the current `stable` branch). You can pick it up via `flutter upgrade`. There is no plan to back port to older Flutter releases. https://github.com/flutter/engine/pull/54414#issuecomment-2389372698

There may be a way to do this manually by copying the Flutter dSYMs into your project: https://stackoverflow.com/a/52417617/431116
You can find the dSYMs at <flutter-sdk>/bin/cache/artifacts/engine/ios-release/Flutter.xcframework/ios-arm64/dSYMs/Flutter.framework.dSYM/
Alternatively, it may work if you downgrade to Xcode 15. > > Does Flutter 3.22 merged this commit? I still got this problem.
> 
> This fix is in Flutter 3.24 (the current `stable` branch). You can pick it up via `flutter upgrade`. There is no plan to back port to older Flutter releases.

@cbracken  Thanks a lot, But Flutter `3.24` has a big problem: it force need all dependencies update android compileSdkVersion to `34`, this is unattainable for us, so we have to downgrade to `3.22`.

So will you merge this bugfix to Flutter `3.22`? > So will you merge this bugfix to Flutter `3.22`?

No, we will not be bug fixing to any previously releases.  However, you should have a relatively easy workaround:


> There may be a way to do this manually by copying the Flutter dSYMs into your project: https://stackoverflow.com/a/52417617/431116
> You can find the dSYMs at /bin/cache/artifacts/engine/ios-release/Flutter.xcframework/ios-arm64/dSYMs/Flutter.framework.dSYM/
> Alternatively, it may work if you downgrade to Xcode 15.

 > @cbracken Thanks a lot, But Flutter `3.24` has a big problem: it force need all dependencies update android compileSdkVersion to `34`, this is unattainable for us, so we have to downgrade to `3.22`.

Thanks, but i cannot find `Realm.framework.dSYM`, where to located it? Where is this folder `/bin/cache/artifacts/engine/ios-release`? That StackOverflow link is showing how to embed a random dSYM in your Xcode project, their example is Realm.  Instead of their example, use the Flutter.dSYM (which is what this issue was tracking).  It's located in your Flutter SDK directory at `<flutter-sdk>/bin/cache/artifacts/engine/ios-release` (sorry, my pasting from https://github.com/flutter/engine/pull/54414#issuecomment-2389372698 was bad). > That StackOverflow link is showing how to embed a random dSYM in your Xcode project, their example is Realm. Instead of their example, use the Flutter.dSYM (which is what this issue was tracking). It's located in your Flutter SDK directory at `<flutter-sdk>/bin/cache/artifacts/engine/ios-release` (sorry, my pasting from [flutter/engine#54414 (comment)](https://github.com/flutter/engine/pull/54414#issuecomment-2389372698) was bad).


Thanks, but i cannot find a `dSYMs` folder in `ios-release/Flutter.xcframework/ios-arm64` of flutter folder.

<img width=""1208"" alt=""截屏2024-10-03 11 29 04"" src=""https://github.com/user-attachments/assets/8eb1f87c-93b5-4914-9714-3958449c7085"">
 > > That StackOverflow link is showing how to embed a random dSYM in your Xcode project, their example is Realm. Instead of their example, use the Flutter.dSYM (which is what this issue was tracking). It's located in your Flutter SDK directory at `<flutter-sdk>/bin/cache/artifacts/engine/ios-release` (sorry, my pasting from [flutter/engine#54414 (comment)](https://github.com/flutter/engine/pull/54414#issuecomment-2389372698) was bad).
> 
> Thanks, but i cannot find a `dSYMs` folder in `ios-release/Flutter.xcframework/ios-arm64` of flutter folder.

Okay this is a good point, it doesn't exist on Flutter 3.22, it's only in 3.24 or later, which is the problem!
Follow the instructions at https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios for ""For versions prior to Flutter 3.24"" and download it directly from Google Cloud Storage. > > > That StackOverflow link is showing how to embed a random dSYM in your Xcode project, their example is Realm. Instead of their example, use the Flutter.dSYM (which is what this issue was tracking). It's located in your Flutter SDK directory at `<flutter-sdk>/bin/cache/artifacts/engine/ios-release` (sorry, my pasting from [flutter/engine#54414 (comment)](https://github.com/flutter/engine/pull/54414#issuecomment-2389372698) was bad).
> > 
> > 
> > Thanks, but i cannot find a `dSYMs` folder in `ios-release/Flutter.xcframework/ios-arm64` of flutter folder.
> 
> Okay this is a good point, it doesn't exist on Flutter 3.22, it's only in 3.24 or later, which is the problem! Follow the instructions at https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios for ""For versions prior to Flutter 3.24"" and download it directly from Google Cloud Storage.

I did as your guide, but i still got this problem, it seems that the UUID doesn't match.

<img width=""1477"" alt=""截屏2024-10-03 13 39 41"" src=""https://github.com/user-attachments/assets/4fd9f51e-6c75-4be1-9912-18614cafcdf8"">
<img width=""579"" alt=""截屏2024-10-03 13 40 54"" src=""https://github.com/user-attachments/assets/3dc59c5f-7e79-4f02-b5d1-82a28519b866"">
<img width=""737"" alt=""截屏2024-10-03 13 41 01"" src=""https://github.com/user-attachments/assets/e6e2942a-62d9-41de-82dc-f93c2930345a"">
<img width=""747"" alt=""截屏2024-10-03 13 43 25"" src=""https://github.com/user-attachments/assets/bac312c1-47a4-4791-ad52-a8ce2f8793cb"">
 @lanistor can you file a new issue? We would use it as a request to make https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios better.   Having the same issue here. I can't upgrade the flutter version because this is gonna break my project. But willing to refactor later in time. I'm confused by which fix to apply. Should I downgrade my xcode?

Also can I just ignore the warning for now or it will not let me push the build for distribution? @GhassanAlKaraan I'm not sure why a combo of the instructions at https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios and https://stackoverflow.com/questions/50947279/how-to-include-dsym-file-of-an-embedded-framework-to-an-app-archive/52417617#52417617 aren't working.

> can you file a new issue? We would use it as a request to make https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios better.

 > Having the same issue here. I can't upgrade the flutter version because this is gonna break my project. But willing to refactor later in time. I'm confused by which fix to apply. Should I downgrade my xcode?
> 
> Also can I just ignore the warning for now or it will not let me push the build for distribution?

Ignore the warning works fine for our APP, it can publish normally. > @lanistor can you file a new issue? We would use it as a request to make https://github.com/flutter/engine/blob/main/docs/Crashes.md#ios better.

Well, it seems that just ignoring this issue won't have any impact. I encountered an issue while using the add-to-app method. The iOS app doesn't compile due to ""Multiple commands produce `MYAPP/DerivedData/app/Build/Products/Debug-iphoneos/Flutter.framework.dSYM`"" in Xcode 15 @dawid-niedzwiecki Can you file a new issue that describes what you are seeing and how to reproduce it?  Thank you! @dawid-niedzwiecki and @jmagman We have the same issue. I could reproduce it by taking the multiple-flutters example and changed it from the `cocoapods` setup to the `frameworks` setup following this guide: https://docs.flutter.dev/add-to-app/ios/project-setup#embed-a-flutter-module-in-your-ios-app

I created an issue with more detailed reproduction steps: https://github.com/flutter/flutter/issues/158005LGTM",LGTM,"As of Xcode 16, App Store validation now requires that apps uploaded to the App store bundle dSYM debug information bundles for each Framework they embed.

dSYM bundles are packaged in the Flutter.xcframework shipped in the `ios-release` tools archive as of engine patches:
* https://github.com/flutter/engine/pull/54414
* https://github.com/flutter/engine/pull/54458

This copies the Flutter.framework.dSYM bundle from the tools cache to the app archive produced by `flutter build ipa`.

Issue: https://github.com/flutter/flutter/issues/116493

## Pre-launch Checklist

- [X] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [X] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [X] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [X] I signed the [CLA].
- [X] I listed at least one issue that this PR fixes in the description above.
- [X] I updated/added relevant documentation (doc comments with `///`).
- [X] I added new tests to check the change I am making, or this PR is [test-exempt].
- [X] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [X] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
158069,2024-11-03T07:16:48Z,2024-11-04T07:33:22Z,ValentinVignal,2,1,2,37,2,1,1,"['framework', 'f: scrolling', 'd: api docs', 'd: examples', 'will affect goldens', 'autosubmit']",6324.0,0,87394.0,0,0,0,0,4531459.518056,,0,2,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/158069) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158069 at sha 9f8e8efca5ef985b5e10f6c1db545f870dbd8600_

 Golden file changes are available for triage from new commit, Click [here to view](https://flutter-gold.skia.org/cl/github/158069).



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #158069 at sha 1461b4eeb3604b17b658893ae84eb6006bc9275a_

LGTM! with a small suggestion",LGTM! with a small suggestion,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/scrollbar/raw_scrollbar.1.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","```suggestion
  testWidgets('When thumbVisibility is true, the scrollbar thumb remains visible', (WidgetTester tester) async {
```
"
157702,2024-10-28T06:56:19Z,2024-10-28T07:40:53Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606250.0,0,0,0,0,4532233.287861,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/10e50bd42c42...9226b089d634

2024-10-28 skia-flutter-autoroll@skia.org Roll Skia from cadf2538dcde to dd0158912c76 (3 revisions) (flutter/engine#56162)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158044,2024-11-02T04:36:36Z,2024-11-04T01:47:31Z,ValentinVignal,0,0,1,80,2,1,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",,0,162655.0,0,0,0,0,4552211.844857,,0,1,0,False,[],LGTM!,LGTM!,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/interactive_viewer/interactive_viewer.constrained.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
",
157934,2024-10-31T17:59:37Z,2024-11-01T00:45:08Z,matanlurey,3,13,8,214,3,4,3,"['tool', 'autosubmit']",15567.0,0,252508.0,1,0,0,0,4586979.091196,,0,8,0,False,"['auto-submit[bot]', 'polina-c']","auto label is removed for flutter/flutter/157934, due to - The status or check suite [Linux tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8732527054752806961) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Time to revert pull request flutter/flutter/157934 has elapsed.
          You need to open the revert manually and process as a regular pull request. reason for revert: b/377107864![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/bcd362da-e5e3-4768-85bd-fb78c26ef276) LGTM I have some things I need to intensely review here, but here is some stuff to get started in case that's useful. Otherwise, simply wait for another review from me. LGTM","![LGTM stamp from a Japanese personal seal](https://github.com/user-attachments/assets/bcd362da-e5e3-4768-85bd-fb78c26ef276) LGTM I have some things I need to intensely review here, but here is some stuff to get started in case that's useful. Otherwise, simply wait for another review from me. LGTM","Closes https://github.com/flutter/flutter/issues/157928.
Closes https://github.com/flutter/flutter/issues/157929.

| Condition | Expectation |
| --------- | ------------ |
| `synthetic-packages: true` && `--implicit-pubpsec-resolution` | Generates `flutter_gen` with warning.
| `<no synthetic-packages key>` && `--implicit-pubspec-resolution` | Generates `flutter_gen` with warning.
| `synthetic-packages: false` && `--implicit-pubpsec-resolution` | Does not generate `flutter_gen`.
| `synthetic-packages: true` && `--no-implicit-pubpsec-resolution` | Error.
| `<no synthetic-packages key>` && `--no-implicit-pubspec-resolution` | Does not generate `flutter_gen`.
| `synthetic-packages: false` && `--no-implicit-pubpsec-resolution` | Generates `flutter_gen` with warning.
","Is this formatting change intentional? If so, instead consider

```suggestion
  final File l10nYamlFile = fileSystem.file(
    fileSystem.path.join(environment.projectDir.path, 'l10n.yaml'),
  );
``` Is this formatting change intentional? Is this formatting change intentional? Typo?

```suggestion
      'Cannot generate a synthetic package when --no-implicit-pubspec-resolution is passed.\n'
``` Pretend you are the user reading this. What is ""this value""?  Turbo-nit:

```suggestion
    // Project directory setup for gen_l10n logic.
``` Turbo-nit:
```suggestion
    // Create a blank l10n.yaml file.
``` Done. Turbo-nit
```suggestion
    // Project directory setup for gen_l10n logic.
``` No, but I made it look nicer. No, but I made it look nicer. Clarified. 
```suggestion
  environment.logger.printWarning(
    'Synthetic package output (package:flutter_gen) is deprecated: '
    'https://flutter.dev/to/flutter-gen-deprecation. In a future release, '
    'synthetic-package will default to `false` and will later be removed '
    'entirely.',
  );
```"
157690,2024-10-27T13:16:55Z,2024-10-27T14:05:24Z,engine-flutter-autoroll,0,0,1,4,2,1,1,"['engine', 'autosubmit']",,0,607206.0,0,0,0,0,4594843.913821,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/3162aaad0086...10e50bd42c42

2024-10-27 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from 5osQdhk4W6CcWgjIg... to VJIEKDIuzhhloCBro... (flutter/engine#56154)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from 5osQdhk4W6Cc to VJIEKDIuzhhl

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157879,2024-10-30T19:57:24Z,2024-10-31T10:43:25Z,matanlurey,4,16,7,449,57,3,2,"['tool', 'autosubmit']",13589.0,0,326104.0,0,0,0,0,4592717.037096,,0,7,0,False,"['auto-submit[bot]', 'andrewkolos']","> I'm not extremely happy this needed to change 50+ files

I am not terribly worried about this since we won't have this for more than one release auto label is removed for flutter/flutter/157879, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=157879) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/157879, due to - The status or check suite [Linux tool_integration_tests_5_5](https://cr-buildbucket.appspot.com/build/8732597140306583169) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Time to revert pull request flutter/flutter/157879 has elapsed.
          You need to open the revert manually and process as a regular pull request.LGTM LGTM with nits",LGTM LGTM with nits,"Work towards https://github.com/flutter/flutter/issues/157819. **No behavior changes as a result of this PR**.

Based on a proof of concept by @jonahwilliams (https://github.com/flutter/flutter/pull/157818).

The existence of this flag (which for the time being, defaults to `true`) implies the following:

1. The (legacy, deprecated) `.flutter-plugins` file is not generated:
    https://docs.flutter.dev/release/breaking-changes/flutter-plugins-configuration
    
2. The (legacy, deprecated) `package:flutter_gen` is not synthetically generated:
    https://github.com/flutter/website/pull/11343
    (awaiting website approvers, but owners approve this change)

This change creates `useImplicitPubspecResolution` and plumbs it through as a required variable, parsing it from a `FlutterCommand.globalResults` where able. In tests, I've defaulted the value to `true` 100% of the time - except for places where the value itself is acted on directly, in which case there are true and false test-cases (e.g. localization and i10n based classes and functions).

I'm not extremely happy this needed to change 50+ files, but is sort of a result of how inter-connected many of the elements of the tools are. I believe keeping this as an explicit (flagged) argument will be our best way to ensure the default behavior changes consistently and that tests are running as expected.","Nit: This line break ~~fails~~ feels awkward. If the line comment is too long for all this to fit on one line, consider moving it to the previous line (and adding a blank line after `device`). Do you know if the upcoming changes to `dart format` will automatically add a trailing comma to this argument list? If so, maybe we should add it now. Looks like this PR contains a lot of unintentional, automatically-done formatting changes that blow up the diff and violate some of our current style guide. As one class of examples, look for long declare-and-assign statements that got broken up into two lines.

I know we are going to be running `dart format` over everything soon enough anyway, but I would like all that noise to be bundled in its own PR for the sake of folks running `git blame` in the future. (Assuming this formatting change was intentional) I unformatted. I unformatted. I unformatted. I think using the `isTrue` matcher instead of `true` would give a slightly better failure message if any of these `expect`s were to fail. Unintentional formatting change Unintentional formatting change Unintentional formatting change? I think there are still unintentional formatting changes in this file I think if anything `isFalse`/`isTrue` will possibly be deprecated in the future: https://github.com/dart-lang/test/issues/2358. Done. Done. Done."
157438,2024-10-23T13:10:18Z,2024-11-03T12:19:37Z,thejitenpatel,0,0,1,2,1,2,2,['autosubmit'],,0,947359.0,0,0,0,0,4600689.267052,,0,1,0,False,[],"LGTM

Thanks for the fix!","LGTM

Thanks for the fix!","This PR fixes the typos and spelling error in `CHANGELOG.md` file.

Fixes #157083 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",
157662,2024-10-26T03:26:56Z,2024-10-26T13:37:42Z,engine-flutter-autoroll,2,0,3,2,1,1,1,"['engine', 'will affect goldens', 'autosubmit']",1948.0,0,608352.0,0,0,0,0,4715499.159632,,0,3,0,False,"['auto-submit[bot]', 'flutter-dashboard[bot]']","auto label is removed for flutter/flutter/157662, due to - The status or check suite [Windows tool_integration_tests_2_9](https://cr-buildbucket.appspot.com/build/8733048191320115569) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/157662) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #157662 at sha cf54dbabb6541538c058e5d9e7c9e537d3c7c02c_

",,"
https://github.com/flutter/engine/compare/7c5c5fe5c84d...c9b8ac96f6ce

2024-10-26 skia-flutter-autoroll@skia.org Roll Skia from da6c17329e0b to cadf2538dcde (3 revisions) (flutter/engine#56147)
2024-10-25 30870216+gaaclarke@users.noreply.github.com Removed clamping from dithering (flutter/engine#56140)
2024-10-25 jacksongardner@google.com Reland (x2) Skwasm overlay optimizations (flutter/engine#56067)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157681,2024-10-26T21:28:55Z,2024-10-26T23:04:38Z,engine-flutter-autoroll,1,0,3,4,2,1,1,"['engine', 'autosubmit']",2010.0,0,606486.0,0,0,0,0,4652446.189668,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157681, due to - The status or check suite [Mac tool_tests_general](https://cr-buildbucket.appspot.com/build/8732980116509540625) has failed. Please fix the issues identified (or deflake) before re-applying this label.
- The status or check suite [Mac module_custom_host_app_name_test](https://cr-buildbucket.appspot.com/build/8732980116545897905) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/c9b8ac96f6ce...3162aaad0086

2024-10-26 chris@bracken.jp Migrate FlutterViewController to ARC (flutter/engine#55669)
2024-10-26 skia-flutter-autoroll@skia.org Roll Fuchsia Linux SDK from Y4TdnTpLdkI107K42... to 5osQdhk4W6CcWgjIg... (flutter/engine#56152)
2024-10-26 skia-flutter-autoroll@skia.org Roll Dart SDK from 0257f458e40a to a75848f92210 (2 revisions) (flutter/engine#56150)

Also rolling transitive DEPS:
  fuchsia/sdk/core/linux-amd64 from Y4TdnTpLdkI1 to 5osQdhk4W6Cc

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157989,2024-11-01T10:02:02Z,2024-11-02T03:57:29Z,ValentinVignal,0,1,2,38,2,1,1,"['framework', 'f: scrolling', 'd: api docs', 'd: examples', 'autosubmit']",,0,64527.0,0,0,0,0,4717219.694017,,0,2,0,False,[],LGTM! With one very minor nit.,LGTM! With one very minor nit.,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/scrollbar/raw_scrollbar.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","```suggestion
  testWidgets('There are two scrollbars', (WidgetTester tester) async {
```
Not sure, if there a rule for that, but it is probably better to keep real number for things such as offset, size, etc"
157644,2024-10-25T22:02:57Z,2024-10-25T23:01:12Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,606191.0,0,0,0,0,4737101.354888,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/43e4d9a30666...7c5c5fe5c84d

2024-10-25 jonahwilliams@google.com [Impeller] Lock access to descriptor pool map. (flutter/engine#56113)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158031,2024-11-01T23:33:26Z,2024-11-02T00:22:04Z,matanlurey,1,0,1,32,2,1,1,['autosubmit'],2360.0,0,2918.0,0,0,0,0,4730145.365509,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/158031, due to - The status or check suite [Mac_arm64 build_tests_3_4](https://cr-buildbucket.appspot.com/build/8732428680871356897) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM!",LGTM!,"Closes https://github.com/flutter/flutter/issues/157826.

Like @gmackall I could not find any reference to these, and assume they were boilerplate that was never used (or deleted).",
157637,2024-10-25T20:43:42Z,2024-10-25T21:49:51Z,engine-flutter-autoroll,1,0,1,2,1,1,1,['engine'],2064.0,0,610946.0,0,0,0,0,4737102.869317,,0,1,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157637, due to - The status or check suite [Windows tool_integration_tests_7_9](https://cr-buildbucket.appspot.com/build/8733073558369347953) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/5061358e255f...43e4d9a30666

2024-10-25 skia-flutter-autoroll@skia.org Roll Dart SDK from 3067d697ae26 to 0257f458e40a (4 revisions) (flutter/engine#56135)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158014,2024-11-01T18:25:52Z,2024-11-01T20:00:04Z,loic-sharma,0,0,1,97,1,1,1,"['tool', 'autosubmit']",,0,5652.0,0,0,0,0,4745867.359313,,0,1,0,False,[],,,"Reach peak idiomacy by replacing `expect(file.existsSync(), isTrue)` with `expect(file, exists)`!

Follow up to: https://github.com/flutter/flutter/pull/157971",
157623,2024-10-25T19:00:52Z,2024-10-25T20:31:21Z,engine-flutter-autoroll,0,0,2,2,1,1,1,"['engine', 'autosubmit']",,0,608008.0,0,0,0,0,4746211.410419,,0,2,0,False,[],,,"
https://github.com/flutter/engine/compare/eb867e055790...5061358e255f

2024-10-25 30870216+gaaclarke@users.noreply.github.com renamed TextFrameDispatcher to FirstPassDispatcher (flutter/engine#56098)
2024-10-25 30870216+gaaclarke@users.noreply.github.com Added retry mechanism for pipeline creation (flutter/engine#56071)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
158015,2024-11-01T18:34:05Z,2024-11-01T19:38:19Z,loic-sharma,0,0,1,9,1,1,1,"['framework', 'autosubmit']",,0,3854.0,0,0,0,0,4747173.923038,,0,1,0,False,[],Looking good!,Looking good!,"Updates `basic.dart` to use consistent doc snippets that follows the style from the [documentation on snippets](https://github.com/flutter/flutter/tree/master/dev/snippets#snippet-tool).

Follow-up to: https://github.com/flutter/flutter/pull/157227#discussion_r1807499353

",
157971,2024-11-01T00:16:49Z,2024-11-01T18:15:16Z,loic-sharma,0,2,2,1398,1,2,1,"['tool', 'autosubmit']",,0,64707.0,0,0,0,0,4752157.538954,,0,2,0,False,[],,,"I recommend reviewing with [whitespace changes disabled](https://github.com/flutter/flutter/pull/157971/files?diff=split&w=1).

Changes:

1. Replaces `expect(string.contains('foo'), isTrue)` with `expect(string, contains('foo'))`
2. Replaces `try/finally` with `addTearDown`

Follow-up to: https://github.com/flutter/flutter/pull/157482#discussion_r1813939657","I'd go one step further and use `exists` (it's used elsewhere in `package:flutter_tools`):
https://pub.dev/documentation/file_testing/latest/file_testing/exists-constant.html TIL! The whitespace changes in this one makes this hard to review, I'll send a follow-up to the follow-up 😂 "
158013,2024-11-01T18:19:10Z,2024-11-01T19:20:59Z,matanlurey,0,2,2,6,2,2,1,"['tool', 'autosubmit']",,0,3709.0,1,0,0,0,4748214.715129,,0,2,0,False,[],"LGTM, but there is accidental formatting LGTM. I don't have a strong opinion on whether config items or cli args should or shouldn't be coded into named constants, but consistency is good.","LGTM, but there is accidental formatting LGTM. I don't have a strong opinion on whether config items or cli args should or shouldn't be coded into named constants, but consistency is good.",... for consistency with the rest of the file/features.,"I think this was an accident Yeah it was, fixed."
157613,2024-10-25T16:54:50Z,2024-10-25T18:43:25Z,engine-flutter-autoroll,2,0,3,2,1,1,1,"['engine', 'autosubmit']",2183.0,0,606474.0,0,0,0,0,4755310.975136,,0,3,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157613, due to - The status or check suite [Linux_android_emu_34 external_textures_integration_test](https://cr-buildbucket.appspot.com/build/8733087956186649057) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/157613, due to - The status or check suite [Windows build_tests_1_8](https://cr-buildbucket.appspot.com/build/8733087955762921137) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/38e9be1f74fa...eb867e055790

2024-10-25 30870216+gaaclarke@users.noreply.github.com Faster vulkan buffer tracking (flutter/engine#56099)
2024-10-25 jonahwilliams@google.com [Impeller] Reland: hash less stuff per frame. (flutter/engine#55742)
2024-10-25 skia-flutter-autoroll@skia.org Roll Skia from cc75472dedc2 to da6c17329e0b (3 revisions) (flutter/engine#56132)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157853,2024-10-30T10:00:54Z,2024-11-01T16:40:20Z,fluttergithubbot,0,0,1,1,1,1,1,"['c: flake', 'autosubmit']",,0,196766.0,0,0,0,0,4757855.556957,,0,1,0,False,[],LGTM,LGTM,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux_pixel_7pro service_extensions_test""
}
-->
Issue link: https://github.com/flutter/flutter/issues/157852
",
157605,2024-10-25T15:45:44Z,2024-10-25T16:35:58Z,engine-flutter-autoroll,0,0,2,2,1,1,1,['autosubmit'],,0,607023.0,0,0,0,0,4758908.741747,,0,2,0,False,[],,,"
https://github.com/flutter/packages/compare/a556f0f52825...e0c4f55cd355

2024-10-25 stuartmorgan@google.com [path_parsing] Initial import (flutter/packages#7908)
2024-10-24 stuartmorgan@google.com [video_player] Simplify Pigeon API on Android (flutter/packages#7909)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-packages-flutter-autoroll
Please CC flutter-ecosystem@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157604,2024-10-25T15:38:51Z,2024-10-25T16:39:59Z,engine-flutter-autoroll,1,0,2,2,1,1,1,"['engine', 'autosubmit']",2173.0,0,607433.0,0,0,0,0,4758913.169169,,0,2,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/157604, due to - The status or check suite [Mac_x64 tool_tests_commands](https://cr-buildbucket.appspot.com/build/8733092734951556417) has failed. Please fix the issues identified (or deflake) before re-applying this label.
",,"
https://github.com/flutter/engine/compare/b413d9996c86...38e9be1f74fa

2024-10-25 robert.ancell@canonical.com Clean up comments and names in FlView (flutter/engine#56084)
2024-10-25 robert.ancell@canonical.com Move platform handler from FlView to FlEngine (flutter/engine#56024)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157986,2024-11-01T09:04:06Z,2024-11-01T10:37:59Z,ValentinVignal,0,0,1,81,3,1,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",,0,5633.0,0,0,0,0,4779598.549537,,0,1,0,False,[],LGTM!,LGTM!,"Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/interactive_viewer/interactive_viewer.transformation_controller.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
",
157580,2024-10-25T07:39:50Z,2024-10-25T08:24:40Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,607374.0,0,0,0,0,4787715.150944,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/c4b0184c8783...b413d9996c86

2024-10-25 skia-flutter-autoroll@skia.org Roll Skia from 53c9663c3b83 to cc75472dedc2 (10 revisions) (flutter/engine#56121)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157578,2024-10-25T06:36:53Z,2024-10-25T07:27:26Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,607551.0,0,0,0,0,4791315.289647,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/b1c2ba8c4d52...c4b0184c8783

2024-10-25 flar@google.com [DisplayList] Remove legacy size fields in DLOp records (flutter/engine#56101)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157909,2024-10-31T06:31:36Z,2024-11-01T06:41:14Z,ValentinVignal,0,3,2,126,2,1,1,"['framework', 'd: api docs', 'd: examples', 'autosubmit']",,0,86978.0,0,0,0,0,4793805.950084,,0,2,0,False,[],"LGTM! Great work :+1: 
Some very minor nits","LGTM! Great work :+1: 
Some very minor nits","Contributes to https://github.com/flutter/flutter/issues/130459

It adds a test for
- `examples/api/lib/widgets/notification_listener/notification.0.dart`

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview
[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene
[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/wiki/Chat
[Data Driven Fixes]: https://github.com/flutter/flutter/wiki/Data-driven-Fixes
","```suggestion

```
Extra line ```suggestion

```
Extra line ```suggestion

```
Extra line"
135732,2023-09-29T02:13:09Z,2023-09-29T03:19:12Z,engine-flutter-autoroll,0,0,4,4,2,1,1,"['engine', 'autosubmit']",,0,34482501.0,0,0,0,0,4800991.480478,,0,4,0,False,[],,,"
https://github.com/flutter/engine/compare/485543c6765a...2052515c44f3

2023-09-28 skia-flutter-autoroll@skia.org Roll Fuchsia Mac SDK from 4WW3KRrAbuY7VeGT0... to Ta8wiQnzbBc7fAGeR... (flutter/engine#46387)
2023-09-28 jonahwilliams@google.com [Impeller] revert stencil config changes. (flutter/engine#46386)
2023-09-28 bdero@google.com Bump impeller-cmake to head (flutter/engine#46385)
2023-09-28 skia-flutter-autoroll@skia.org Roll Skia from 33502f9b0c7d to 08485e753e3a (1 revision) (flutter/engine#46384)

Also rolling transitive DEPS:
  fuchsia/sdk/core/mac-amd64 from 4WW3KRrAbuY7 to Ta8wiQnzbBc7

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC jacksongardner@google.com,rmistry@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://bugs.chromium.org/p/skia/issues/entry?template=Autoroller+Bug

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
152477,2024-07-29T09:06:55Z,2024-11-01T04:50:17Z,plammens,8,6,1,31,2,2,2,"['framework', 'autosubmit']",5578563.0,0,8192602.0,0,0,0,0,4800464.547059,,0,1,0,False,"['chunhtai', 'auto-submit[bot]', 'flutter-dashboard[bot]', 'plammens']","(triage) Hi @plammens what is the status of this pr? if it is ready for review, can you convert it to a open pr? > (triage) Hi @plammens what is the status of this pr? if it is ready for review, can you convert it to a open pr?

Sure, if you like the proposed implementation I can go ahead and open it! I'll try to go through the checklist items ASAP.

 It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. @chunhtai Should be ready for review now. looks like there is some ci error

00:11 +315 ~1 -1: /Volumes/Work/s/w/ir/x/w/flutter/packages/flutter/test/foundation/caching_iterable_test.dart: The Caching Iterable: elementAt correctness [E]
  RangeError (index): Invalid value: Not greater than or equal to 0: -1
  dart:core                                               RangeError.checkNotNegative
  package:flutter/src/foundation/basic_types.dart 186:16  CachingIterable.elementAt
  test/foundation/caching_iterable_test.dart 115:21       main.<fn>
  
   > looks like there is some ci error
> 
> 00:11 +315 ~1 -1: /Volumes/Work/s/w/ir/x/w/flutter/packages/flutter/test/foundation/caching_iterable_test.dart: The Caching Iterable: elementAt correctness [E] RangeError (index): Invalid value: Not greater than or equal to 0: -1 dart:core RangeError.checkNotNegative package:flutter/src/foundation/basic_types.dart 186:16 CachingIterable.elementAt test/foundation/caching_iterable_test.dart 115:21 main.

Sorry, I didn't manage to get the tests running locally so I can't test before pushing! Hopefully it's all good now.
 auto label is removed for flutter/flutter/152477, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=152477) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 google test failure doesn't seem related, rerunning to see if it passes
LGTM LGTM, thank you!","LGTM LGTM, thank you!","Add a more efficient override of `Iterable.elementAt` in `CachingIterable`.

Closes #152476

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).  *I'm not sure if I should add a documentation comment as it would override Iterable.elementAt's documentation, but functionally it's the same.*
- [x] I added new tests to check the change I am making, or this PR is [test-exempt]. *I only added a functional test to check the implementation's correctness, because I can't think of a robust way to test the performance aspect, namely the random access.*
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","```suggestion
    RangeError.checkNotNegative(index, ""index"");
    while (_results.length <= index) {
``` can you add a test for elementAt(-1) and make sure it throws I think ""The Caching Iterable"" looks kinda silly, but since it's following a pattern from other tests in this file it's all good 👍 Not really in the scope of this PR, but we should probably migrate to the new API at some point:

```diff
- class CachingIterable<E> extends IterableBase<E> {
+ class CachingIterable<E> with Iterable<E> {
``` Oh wait—we might need to make a tweak here in order for checks to pass:

```suggestion
    expect(() => integers.elementAt(-1), throwsRangeError);
``` Might as well make them match :)

```suggestion
    expect(() => integers.elementAt(5), throwsRangeError);
```"
148426,2024-05-15T20:53:02Z,2024-05-20T23:40:39Z,goderbauer,6,0,2,129,3,1,1,['autosubmit'],1749.0,0,14626944.0,0,0,0,0,4803756.137083,,0,2,0,False,"['goderbauer', 'stuartmorgan']","Looks like just removing that extra dependency is not enough. Now there are other gradle errors. Buried in the output is:

```
┌─ Flutter Fix ───────────────────────────────────────────────────────────────────────────────┐
│ You need to update the lockfile, or disable Gradle dependency locking.                      │
│ To regenerate the lockfiles run: `./gradlew :generateLockfiles` in                          │
│ /b/s/w/ir/x/w/flutter/dev/integration_tests/gradle_deprecated_settings/android/build.gradle │
│ To remove dependency locking, remove the `dependencyLocking` from                           │
│ /b/s/w/ir/x/w/flutter/dev/integration_tests/gradle_deprecated_settings/android/build.gradle │
└─────────────────────────────────────────────────────────────────────────────────────────────┘
``` Thanks, totally missed that in the output. The command fails, though:

```
% ./gradlew :generateLockfiles

Welcome to Gradle 8.3!

Here are the highlights of this release:
 - Faster Java compilation
 - Reduced memory usage
 - Support for running on Java 20

For more details see https://docs.gradle.org/8.3/release-notes.html

Starting a Gradle Daemon, 1 incompatible Daemon could not be reused, use --status for details

> Configure project :app
You are applying Flutter's main Gradle plugin imperatively using the apply script method, which is deprecated and will be removed in a future release. Migrate to applying Gradle plugins with the declarative plugins block: https://flutter.dev/go/flutter-gradle-plugin-apply

w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:107:40: Variable 'agpVersion' initializer is redundant
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:108:40: Variable 'kgpVersion' initializer is redundant
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:143:28: Parameter 'project' is never used
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:152:40: Variable 'agpVersion' initializer is redundant
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:167:55: 'Version' is deprecated. Deprecated in Java
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:195:56: Unnecessary non-null assertion (!!) on a non-null receiver of type Any
w: file:///Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/kotlin/dependency_version_checker.gradle.kts:344:28: The corresponding parameter in the supertype 'Comparable' is named 'other'. This may cause problems when calling this function with named arguments.
Starting a Gradle Daemon, 1 busy and 1 incompatible Daemons could not be reused, use --status for details

FAILURE: Build failed with an exception.

* What went wrong:
A problem occurred configuring root project 'android'.
> Could not open proj generic class cache for build file '/Users/goderbauer/dev/flutter/dev/integration_tests/gradle_deprecated_settings/android/build.gradle' (/Users/goderbauer/.gradle/caches/8.3/scripts/c192y7qa3j8v1de05e2zs4p7).
   > BUG! exception in phase 'semantic analysis' in source unit '_BuildScript_' Unsupported class file major version 66

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

BUILD FAILED in 4s

FAILURE: Build failed with an exception.

* Where:
Script '/Users/goderbauer/dev/flutter/packages/flutter_tools/gradle/src/main/groovy/flutter.groovy' line: 222

* What went wrong:
A problem occurred configuring root project 'android'.
> Could not create task ':generateLockfiles'.
   > Process 'command '/Users/goderbauer/dev/flutter/dev/integration_tests/gradle_deprecated_settings/android/gradlew'' finished with non-zero exit value 1

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

BUILD FAILED in 18s
``` > Unsupported class file major version 66

IIRC that means your Java version isn't in the support range of your Gradle version. This isn't my area of expertise, but it looks from a skim of search results like this mean you are using Java 22, and the Gradle output sounds like it's only supporting 20 at that version.

@reidbaker may have suggestions on how to handle this (other than by installing an old version of Java)? For future archeologists: 

@gmackall helped me out and instructed me to set my JAVA_HOME to the java version that shipped with the engine:

```
export JAVA_HOME=/Users/goderbauer/dev/engine/src/third_party/java/openjdk/Contents/Home
```

With that, the `./gradlew :generateLockfiles` run succeeded in regenerating the lock files. Now 🤞 that everything will pass on CI as well.

Thanks a ton for everyone's help with this one! Note to self: Remember to close https://github.com/flutter/flutter/pull/148245 when this is submitted to restart auto-roller.LGTM",LGTM,Supersedes https://github.com/flutter/flutter/pull/148245,
157572,2024-10-25T01:57:07Z,2024-10-25T02:59:25Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,605649.0,0,0,0,0,4810007.292243,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/29440ed1e225...b1c2ba8c4d52

2024-10-25 chinmaygarde@google.com [Impeller] libImpeller: Respect the paragraph style line height specification. (flutter/engine#56066)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
157569,2024-10-25T00:56:05Z,2024-10-25T01:44:24Z,engine-flutter-autoroll,0,0,1,2,1,1,1,"['engine', 'autosubmit']",,0,605711.0,0,0,0,0,4813607.407505,,0,1,0,False,[],,,"
https://github.com/flutter/engine/compare/88716d804aef...29440ed1e225

2024-10-24 jason-simmons@users.noreply.github.com [web] Do not copy invalid images in the Skia test image collection (flutter/engine#56102)

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/flutter-engine-flutter-autoroll
Please CC codefu@google.com,zra@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",
160554,2024-12-18T23:41:24Z,2024-12-28T01:05:09Z,LongCatIsLooong,2,7,30,381,5,2,1,[],174223.0,0,782628.0,0,0,0,0,52177.662644,,0,30,0,False,"['goderbauer', 'flutter-dashboard[bot]']","This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.

For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

 @LongCatIsLooong looks like some line numbers are off in tests:

```
00:10 +67 ~3 -1: test/analyze_test.dart: analyze.dart - clampDouble [E]
  Expected: '╔═╡ERROR #1╞════════════════════════════════════════════════════════════════════\n'
              '║ packages/flutter/lib/bar.dart:37: input.clamp(0.0, 2)\n'
              '║ packages/flutter/lib/bar.dart:38: input.toDouble().clamp(0, 2)\n'
              '║ packages/flutter/lib/bar.dart:42: nullableInt?.clamp(0, 2.0)\n'
              '║ packages/flutter/lib/bar.dart:43: nullableDouble?.clamp(0, 2)\n'
              '║ packages/flutter/lib/bar.dart:48: nullableInt?.clamp\n'
              '║ packages/flutter/lib/bar.dart:50: nullableDouble?.clamp\n'
              '║ \n'
              '║ For performance reasons, we use a custom ""clampDouble"" function instead of using ""double.clamp"".\n'
              '╚═══════════════════════════════════════════════════════════════════════════════\n'
              ''
    Actual: '╔═╡ERROR #1╞════════════════════════════════════════════════════════════════════\n'
              '║ packages/flutter/lib/bar.dart:44: input.clamp(0.0, 2)\n'
              '║ packages/flutter/lib/bar.dart:45: input.toDouble().clamp(0, 2)\n'
              '║ packages/flutter/lib/bar.dart:49: nullableInt?.clamp(0, 2.0)\n'
              '║ packages/flutter/lib/bar.dart:50: nullableDouble?.clamp(0, 2)\n'
              '║ packages/flutter/lib/bar.dart:55: nullableInt?.clamp\n'
              '║ packages/flutter/lib/bar.dart:57: nullableDouble?.clamp\n'
              '║ \n'
              '║ For performance reasons, we use a custom ""clampDouble"" function instead of using ""double.clamp"".\n'
              '╚═══════════════════════════════════════════════════════════════════════════════\n'
              ''
```

```
00:10 +68 ~3 -2: test/analyze_test.dart: analyze.dart - verifyDeprecations [E]
  Expected: '╔═╡ERROR #1╞════════════════════════════════════════════════════════════════════\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:12: Deprecation notice should be a grammatically correct sentence and start with a capital letter; see style guide: [https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md\n](https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md%5cn)'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:18: Deprecation notice should be a grammatically correct sentence and end with a period; notice appears to be ""Also bad grammar"".\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:23: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:26: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:31: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:50: Deprecation notice does not accurately indicate a beta branch version number; please see https://flutter.dev/docs/development/tools/sdk/releases to find the latest beta build version number.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:56: Deprecation notice does not accurately indicate a beta branch version number; please see https://flutter.dev/docs/development/tools/sdk/releases to find the latest beta build version number.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:79: Deprecation notice does not match required pattern. You might have used double quotes ("") for the string instead of single quotes (\').\n'
              '║ See: [https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes\n](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes%5cn)'
              '╚═══════════════════════════════════════════════════════════════════════════════\n'
              ''
    Actual: '╔═╡ERROR #1╞════════════════════════════════════════════════════════════════════\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:14: Deprecation notice should be a grammatically correct sentence and start with a capital letter; see style guide: [https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md\n](https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md%5cn)'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:20: Deprecation notice should be a grammatically correct sentence and end with a period; notice appears to be ""Also bad grammar"".\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:25: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:28: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:33: Deprecation notice must be an adjacent string.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:52: Deprecation notice does not accurately indicate a beta branch version number; please see https://flutter.dev/docs/development/tools/sdk/releases to find the latest beta build version number.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:58: Deprecation notice does not accurately indicate a beta branch version number; please see https://flutter.dev/docs/development/tools/sdk/releases to find the latest beta build version number.\n'
              '║ test/analyze-test-input/root/packages/foo/deprecation.dart:81: Deprecation notice does not match required pattern. You might have used double quotes ("") for the string instead of single quotes (\').\n'
              '║ See: [https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes\n](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes%5cn)'
              '╚═══════════════════════════════════════════════════════════════════════════════\n'
              ''
```

from https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8727802449131124289/+/u/run_test.dart_for_framework_tests_shard_and_subshard_misc/stdoutLooks like one file is missformated: 

```
Found 1 Dart file which was formatted incorrectly.
To fix, run `dart format dev/bots/utils.dart`
```

https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8727398808005744049/+/u/run_test.dart_for_analyze_shard_and_subshard_None/stdout LGTM

Thank you for fixing this up!","Looks like one file is missformated: 

```
Found 1 Dart file which was formatted incorrectly.
To fix, run `dart format dev/bots/utils.dart`
```

https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8727398808005744049/+/u/run_test.dart_for_analyze_shard_and_subshard_None/stdout LGTM

Thank you for fixing this up!","Additionally:
- Deprecation message analyzer: use AST more instead of regex 
- Deprecation message analyzer: removes some tests since they are in the formatter's jurisdiction now
- update the analyzer test fixture to fix a couple line numbers
- `@_debugOnly` set `multiline` back to false. The source we get back from the `ASTNode` doesn't have any line feed characters.

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","I believe these blank lines are here to group the strings. Any good reason to remove them?  Maybe leave a comment here explaining why format is turned off (e.g. to check that the annotation also work properly if the annotated things goes over multiple lines)? I don't know why my IDE decides to remove them. Restored. Surprised that `test8` (line 44) doesn't produce a warning here. According to `analyze-test-input/root/packages/foo
/deprecation.dart` it ""should fail"". I check this on an older commit that is a couple month old:

https://github.com/flutter/flutter/blob/d755bc222b2861146d64cf0570c4ba37db970918/dev/bots/test/analyze_test.dart
https://github.com/flutter/flutter/blob/d755bc222b2861146d64cf0570c4ba37db970918/dev/bots/test/analyze-test-input/root/packages/foo/deprecation.dart From https://github.com/flutter/flutter/blob/d755bc222b2861146d64cf0570c4ba37db970918/dev/bots/analyze.dart#L635-L639

From the code I think the test case is just mislabeled and it should succeed? I see. Thanks for checking. Can you correct the label of the test case to indicate that it should pass?"
122885,2023-03-17T13:14:56Z,2023-04-28T21:05:21Z,bleroux,5,3,5,72,6,2,1,"['a: tests', 'framework', 'autosubmit']",3.0,0,56313154.0,0,0,0,0,28039.986758,,0,5,0,False,"['bleroux', 'dkwingsmt', 'flutter-dashboard[bot]', 'shinyxhh']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. Yes! As far as I understand, this is exactly I was describing.

Another test I'd suggest is that the engine sends several `KeyData` before `keyboard` gets the chance to initialize itself, and `keyboard` ignores these earlier `KeyData`s, pulls the half-way state, and tracks all `KeyData`s after that. Not sure if it's simple to implement though.

Thank you so much for working on this! @dkwingsmt 
Thanks for your feedback!

Unfortunately, it seems that the current implementation results in many web tests failing on CI (I can't repro those failures locally). The issue is probably related to the asynchronous call that I added. With this call, it is possible that an app (especially tests) tries to send key events before the handlers are set up.
 
```dart
 void _initKeyboard() {
    _keyboard = HardwareKeyboard();
    _keyEventManager = KeyEventManager(_keyboard, RawKeyboard.instance);
    _keyboard.syncKeyboardState().then((_) {
      platformDispatcher.onKeyData = _keyEventManager.handleKeyData;
      SystemChannels.keyEvent.setMessageHandler(_keyEventManager.handleRawKeyMessage);
    });
   // No keys handlers before syncKeyboardState completed.
  }
```

Bringing asynchronicity in `ServiceBinding.initInstances` might be a dead end? I wonder if we should try something similar to `readInitialLifecycleStateFromNativeWindow` (having the engine directly updating a `PlatformDispatcher` field, in our case it would do so for every key pressed state changes while the framework has not read the field).
I am very interested to get your insight on this.
 @dkwingsmt
Here is the change that turned all tests green (especially web ones): https://github.com/flutter/flutter/pull/122885/commits/be642610ecaa5523732f8d3f9c0383c2f9e33806

I have yet to understand why, on CI, if the channel does not exist, `await SystemChannels.keyboard.invokeMapMethod<int, int>( 'getKeyboardState');` does not immediately return null. It always does locally, but on CI it does not for most of the web tests (and sometimes it does not for non web tests). 
 > @dkwingsmt Thanks for your feedback!
> 
> Unfortunately, it seems that the current implementation results in many web tests failing on CI (I can't repro those failures locally). The issue is probably related to the asynchronous call that I added. With this call, it is possible that an app (especially tests) tries to send key events before the handlers are set up.
> 
> ```dart
>  void _initKeyboard() {
>     _keyboard = HardwareKeyboard();
>     _keyEventManager = KeyEventManager(_keyboard, RawKeyboard.instance);
>     _keyboard.syncKeyboardState().then((_) {
>       platformDispatcher.onKeyData = _keyEventManager.handleKeyData;
>       SystemChannels.keyEvent.setMessageHandler(_keyEventManager.handleRawKeyMessage);
>     });
>    // No keys handlers before syncKeyboardState completed.
>   }
> ```
> 
> Bringing asynchronicity in `ServiceBinding.initInstances` might be a dead end? I wonder if we should try something similar to `readInitialLifecycleStateFromNativeWindow` (having the engine directly updating a `PlatformDispatcher` field, in our case it would do so for every key pressed state changes while the framework has not read the field). I am very interested to get your insight on this.

This asynchronous method delays the setMessageHandler of keyeventChannel in release mode. As a result, the setMessageHandler of keyeventChannel invoked by the application side is overwritten. But not happen in debug mode. What is the possible reason for the delay of asynchronous in release mode?Looks good!",Looks good!,"## Description

This PR adds a new channel to query the engine keyboard state.
See https://github.com/flutter/flutter/issues/87391#issuecomment-1228975571 for motivation. 

## Related Issue

Framework side implementation for https://github.com/flutter/flutter/issues/87391.

Once approved the framework will try to query the initial keyboard state from the engine. PRs will be needed on the engine side to answer the framework query.

## Tests

Adds 1 test.","debug print Can you add document for the return value and how to use this channel? This was my last attempt to get more information about the web test failures because I cant' repro those failures locally 😅.
I reverted the commit where I added this debugPrint, I have no clue for the moment on how to tackle those test failures."
160484,2024-12-18T02:26:22Z,2024-12-28T20:38:25Z,matanlurey,4,8,11,980,9,3,2,"['a: tests', 'tool', 'framework', 'f: integration_test']",848515.0,0,929525.0,0,0,0,0,-18217.009027,,3,11,0,False,['auto-submit[bot]'],"auto label is removed for flutter/flutter/160484, due to - The status or check suite [Merge Queue Guard](https://flutter-dashboard.appspot.com) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160484, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=160484) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160484, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=160484) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 auto label is removed for flutter/flutter/160484, due to - The status or check suite [Google testing](http://frob/#/flutter/presubmit?pr=160484) has failed. Please fix the issues identified (or deflake) before re-applying this label.
LGTM",LGTM,"Work towards https://github.com/flutter/flutter/issues/143299.
Work towards https://github.com/flutter/flutter/issues/160043.

---

This PR implements, end-to-end, support for `matchesGoldenFile` when (a) running with `package:integration_test` (b) on a device, such as an Android emulator, Android device, iOS simulator, or iOS device, where the _runner_ of a test file does not have process and local-file system access.

There are multiple parts to this PR; I could make it smaller than 1K lines, but the bulk of that is tests, and it would mean landing PRs that are incomplete and unused, which does not seem useful - so instead here is a quick overview of the PR's contents - questions/feedback welcome, and I am willing to break code out or land incremental refactors if requested.

1. Augmented `flutter_platform.dart` (used for iOS and Android), similar to [`flutter_web_platform.dart`](https://github.com/flutter/flutter/blob/1398dc7eecb696d302e4edb19ad79901e615ed56/packages/flutter_tools/lib/src/test/flutter_web_platform.dart#L117-L128), now creates and uses [`test_golden_comparator.dart`](https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/test/test_golden_comparator.dart) to proxy calls (coming from the VM service protocol) for golden-file updates and comparisons to a `flutter_tester` process. A full explanation of how (or why) it works this way is too hard to include here, but see https://github.com/flutter/flutter/pull/160215 for more details.
1. Added `VmServiceProxyGoldenFileComparator`, which is a currently unused (outside of a single e2e test) comparator that forwards calls to `compare` and `update` to the VM service protocol (of which, the other side of this is implemented above, in `flutter_platform.dart`. The idea is that this comparator would be used automatically when running in an integration test on a device that requires it (similar to how web works today), but that is **not** wired up yet and requires additional work in `flutter_tools`.
1. Added two unit tests (of both the client and server), and a full e2e-test using it to run `matchesGoldenFile`.","nit: `!['compare', 'update'].contains(e.extensionKind)` might read a little better. Are the details of the message/response public API? Not sure why these need to be under `///`. Maybe make them `//`? Are these the only platforms that separate device from host? Consider a more specific error message, e.g. ""integration_test golden testing does not support Fuchsia"". Done. It's not clear to me what is/isn't public API here - for example, another package (flutter_tools) needs to fulfill this API for the feature to work.

I am going to keep it as-is for now. Currently, yes. Done."
160917,2024-12-27T18:38:20Z,2024-12-28T00:48:15Z,matanlurey,2,2,3,17,3,3,1,['tool'],3.0,0,22197.0,0,0,0,0,53194.741422,,0,3,0,False,"['yjbanov', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: dead code removalLGTM",LGTM,"Towards https://github.com/flutter/flutter/issues/160692.

Prior to `flutter_template_images: 4.3.0`, the `app_shared` directory was required.

In 4.3.0 it was forked back out to `app` (https://pub.dev/packages/flutter_template_images/changelog), as the `skeleton` template has been removed, and the `skeleton` template was the (only) reason for `app_shared` (to share code between `app` and `skeleton`).

This is a NOP change tested by existing tests.","I believe you'll have to run `flutter update-packages --force-upgrade` to recompute this file's checksum in line 124. I'd run it with the `--cherry-pick-package/version` option to only bump this package and not everything else. Looks like you can't mix --cherry-pick _and_ --force-upgrade, but just --chery-pick-xxx worked."
160889,2024-12-26T23:16:06Z,2024-12-28T00:21:06Z,chunhtai,3,1,2,4,1,1,1,['engine'],5909.0,0,90301.0,0,0,0,0,54825.068273,,0,2,0,False,"['auto-submit[bot]', 'chunhtai', 'matanlurey']","auto label is removed for flutter/flutter/160889, due to - The status or check suite [Mac_x64 native_ui_tests_macos](https://cr-buildbucket.appspot.com/build/8727445117600671585) has failed. Please fix the issues identified (or deflake) before re-applying this label.
 Hi @mdebbar should i close this pr instead? > Hi @mdebbar should i close this pr instead?

No, he was just trying to get an important tree-fixing PR in first. Re-added to the queue for you.LGTM with nit.",LGTM with nit.,If `gclient` is not run from the root errors occur such as: `Error: client not configured; see 'gclient config'`.,Might as well use a link i.e. `from the [root](../) folder.` to make it extra explicit.
160798,2024-12-23T19:22:27Z,2024-12-28T00:48:15Z,matanlurey,2,11,8,124,1,3,1,['engine'],3.0,0,365150.0,0,0,0,0,53195.535504,,2,8,0,False,"['matanlurey', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. Removed the refactoring so this is 100% a documentation change.![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png)",![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"Closes https://github.com/flutter/flutter/issues/160592.

~Made a few other tiny non-breaking refactors, for example changing `withValues` internally.~","style nit:

```
const c1 = Color.from(....)
const c2 = ... 
``` Thanks, done! Is ""hash syntax"" a common term? I've only heard it referred to as ""hex color"". In fact, this seems to be coming straight out of CSS hex color syntax. Maybe we should say exactly that: CSS hex color syntax? And maybe even link to https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color? s/greeb/green/ Might be worth noting that the returned value is compatible with the default constructor (`Color.new`) but does not guarantee to result in the same color due to imprecisions in numeric conversions. This warning would be more useful on the non-deprecated `toARGB32` method rather than here. In fact, maybe we should turn this dartdoc into a stub that simply points to `toARGB32`? I agree (""hash syntax"" was just wording copied from the original docs).

Changed to ""CSS hex color syntax"" and linked appropriately. Greebo.

Done! Great suggestion, done (albeit done in toARGB32, this is now a stub method as suggested above) Done. Had to revert this :(, filed https://github.com/flutter/flutter/issues/160884."
160876,2024-12-26T20:27:21Z,2024-12-27T22:24:56Z,matanlurey,1,0,1,2,1,1,1,['tool'],3.0,0,93457.0,0,0,0,0,61795.873019,,1,1,0,False,['flutter-dashboard[bot]'],"It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group.Thanks!",Thanks!,"Post-merge feedback from https://github.com/flutter/flutter/pull/160695.

Feel free to suggest other (minor) changes, as the bulk of the work is already complete.",
160882,2024-12-26T22:21:44Z,2024-12-27T21:39:51Z,yjbanov,2,0,1,21,2,1,1,['engine'],3.0,0,83890.0,0,0,0,0,64500.093299,,0,1,0,False,"['matanlurey', 'flutter-dashboard[bot]']","It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption, contact ""@test-exemption-reviewer"" in the #hackers channel in [Discord](https://github.com/flutter/flutter/blob/master/docs/contributing/Chat.md) (don't just cc them here, they won't see it!).

If you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing. The test exemption team is a small volunteer group, so _all_ reviewers should feel empowered to ask for tests, without delegating that responsibility entirely to the test exemption group. test-exempt: 🤷🏼 Lee-gee-tee-m.",Lee-gee-tee-m.,"A few clarifications in the gclient file templates:

* Sort sections such that RBE and standard variants are consistent.
* Add web engine instructions in comments.
* Explain how to use SSH-based GitHub checkouts.",
160191,2024-12-12T19:46:32Z,2024-12-27T21:39:51Z,mdebbar,3,0,8,100,7,1,1,"['tool', 'engine']",603238.0,0,1302802.0,0,0,0,0,64500.629822,,0,8,0,False,"['jtmcdole', 'matanlurey']",Lets make sure to hold off on this till the dart format lands. Wowie! I believe this is the first crosscutting change that can be done in a single PR. Excellent!![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),![lgtm](https://user-images.githubusercontent.com/211513/32384589-a60f0e74-c078-11e7-9bc1-e5b5287aea9d.png),"Now that ""auto"" is not supported anymore, it makes more sense to make this dart define false by default. And there's no need to pass `FLUTTER_WEB_AUTO_DETECT=false` anymore.",
160913,2024-12-27T18:14:34Z,2024-12-27T20:14:40Z,mdebbar,1,0,5,8,1,1,1,"['will affect goldens', 'warning: land on red to fix tree breakage', 'emergency']",5680.0,0,7207.0,0,0,0,0,69615.002457,,0,5,0,False,['flutter-dashboard[bot]'],"Golden file changes have been found for this pull request. Click [here to view and triage](https://flutter-gold.skia.org/cl/github/160913) (e.g. because this is an intentional change).

If you are still iterating on this change and are not ready to resolve the images on the Flutter Gold dashboard, consider marking this PR as a draft pull request above. You will still be able to view image results on the dashboard, commenting will be silenced, and the check will not try to resolve itself until marked ready for review.



For more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/blob/master/docs/contributing/testing/Writing-a-golden-file-test-for-package-flutter.md).

__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/blob/master/docs/contributing/Tree-hygiene.md#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.

_Changes reported for pull request #160913 at sha 51d6f32cedf95fbe1d984c57e0e4d4774fdcb398_

",,Few entries were missed in https://github.com/flutter/flutter/pull/160706 and caused [failures](https://github.com/flutter/flutter/pull/160191/checks?check_run_id=34920131317) when [this](https://github.com/flutter/cocoon/pull/4137) landed.,
160875,2024-12-26T20:17:17Z,2024-12-27T01:20:13Z,goderbauer,0,0,2,232,40,1,1,"['a: tests', 'a: text input', 'platform-ios', 'tool', 'framework', 'f: material design', 'f: scrolling', 'f: cupertino', 'f: gestures', 'a: desktop', 'f: focus']",,0,78958.0,0,0,0,0,76901.565758,,0,2,0,False,[],,,"dart_style 3.0.1 comes with some minor style fixes: https://github.com/dart-lang/dart_style/blob/main/CHANGELOG.md#301

This PR applies this fixes in bulk across the repository. (Otherwise, the next person touching these files would have been the one updating them to the new format by running the formatter).",
153256,2024-08-12T01:06:12Z,2024-09-04T18:25:06Z,Macacoazul01,1,21,15,82,2,4,3,"['framework', 'f: material design', 'autosubmit']",1633639.0,0,11833980.0,0,0,0,0,141345.344123,,0,15,0,False,['Macacoazul01'],"@justinmc the only viable option that i found was with 

`expect(searchBarFinder.hitTestable().tryEvaluate(), false);`

When `enabled: false`, `searchBarFinder.hitTestable().tryEvaluate()` returns false

When `enabled: true`, `searchBarFinder.hitTestable().tryEvaluate()` returns trueLGTM:) Thanks for the contribution! LGTM, w/ small nit. Thanks for the contribution! Maybe it's kind of not ideal that you'll have to pass `enabled: false` to both SearchBar and SearchAnchor, but I guess that's the best we can do with that builder approach. So I think this approach looks good, just some small code and docs comments. Thanks for the PR! LGTM :+1: 

Take a look at getOpacity though, I think it can be private.","LGTM:) Thanks for the contribution! LGTM, w/ small nit. Thanks for the contribution! Maybe it's kind of not ideal that you'll have to pass `enabled: false` to both SearchBar and SearchAnchor, but I guess that's the best we can do with that builder approach. So I think this approach looks good, just some small code and docs comments. Thanks for the PR! LGTM :+1: 

Take a look at getOpacity though, I think it can be private.","Added the same parameter from #137388 to the `SearchAnchor`

This PR will fix: #150331


## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
","nit: We can remove this line to make test look simper.
```suggestion
``` nit:
```suggestion
``` same nit:) same here:) super nit: should mention this is true by default. This double ternary is hard to read. Could you use a `switch`? I know these docs are the same as the other PR for SearchBar, but would you mind changing it there too?

```
/// Whether or not this widget is currently interactive.
///
/// When false, the widget will ignore taps and appear dimmed.
///
/// Defaults to true.
``` Instead of try/catch, could you set warnIfMissed to false? See https://main-api.flutter.dev/flutter/flutter_test/WidgetController/tap.html. the point here is to get the error and not to avoid it, and that is why i used it instead of warnIfMissed  not sure of what you're loking for here. You want the result to be defined outside the widget? If i use warnIfMissed = false, i cant be sure the tap failed  I was thinking something like this, but double check my logic:

```dart
switch ((widgetEnabled, _anchorIsVisible)) {
  (false, false) => _kDisableSearchBarOpacity,
  (false, true) => _kDisableSearchBarOpacity,
  (true, false) => 1.0,
  (true, true) => 0.0,
};
```

Up to you if you think that's any better. Don't use `_` [according to the styleguide](https://github.com/flutter/flutter/blob/master/docs/contributing/Style-guide-for-Flutter-repo.md#summary). There's some concern that the tap could hit the button yet cause some other sort of error, and this test would still pass. Could you use warnIfMissed and then expect that the suggestions aren't visible or the suggestionsBuilder hasn't been called?
 Can you copy these same docs to SearchBar.enabled too? Sorry I know it's not part of your PR but I think it's a good chance to improve these docs. Im really not sure on how to obtain a clear test with warnifmissed as this could mean anything...
Also if the error won't happen, how can i check that the tap was ""blocked"" Everything that i tried to put into suggestionsBuilder wasnt called or changed any variable. @justinmc This trully was the only way that i was able to see a change to check the error, so unless you have a clear code that solves this test im not able to help with this nit.
Some sample of what i tested without success as `tapWorked = true;` was never called:
![image](https://github.com/user-attachments/assets/27039dbf-c50e-494e-8b40-e71acefa345a)
 This should be private. This looks good, thanks for dealing with my nits! I confirmed that this fails on master. done"
